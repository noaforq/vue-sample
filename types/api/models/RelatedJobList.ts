/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SalarySystem } from './SalarySystem';
import {
    SalarySystemFromJSON,
    SalarySystemFromJSONTyped,
    SalarySystemToJSON,
} from './SalarySystem';
import type { SkillLevel } from './SkillLevel';
import {
    SkillLevelFromJSON,
    SkillLevelFromJSONTyped,
    SkillLevelToJSON,
} from './SkillLevel';

/**
 * 
 * @export
 * @interface RelatedJobList
 */
export interface RelatedJobList {
    /**
     * ID
     * @type {number}
     * @memberof RelatedJobList
     */
    id: number;
    /**
     * タイトル
     * @type {string}
     * @memberof RelatedJobList
     */
    title: string;
    /**
     * 
     * @type {SkillLevel}
     * @memberof RelatedJobList
     */
    skillLevel?: SkillLevel | null;
    /**
     * 年収下限
     * @type {number}
     * @memberof RelatedJobList
     */
    salaryMin?: number | null;
    /**
     * 年収上限
     * @type {number}
     * @memberof RelatedJobList
     */
    salaryMax?: number | null;
    /**
     * 
     * @type {SalarySystem}
     * @memberof RelatedJobList
     */
    salarySystem?: SalarySystem | null;
    /**
     * 勤務地
     * @type {Array<string>}
     * @memberof RelatedJobList
     */
    prefectures?: Array<string>;
}

/**
 * Check if a given object implements the RelatedJobList interface.
 */
export function instanceOfRelatedJobList(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "title" in value;

    return isInstance;
}

export function RelatedJobListFromJSON(json: any): RelatedJobList {
    return RelatedJobListFromJSONTyped(json, false);
}

export function RelatedJobListFromJSONTyped(json: any, ignoreDiscriminator: boolean): RelatedJobList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'skillLevel': !exists(json, 'skillLevel') ? undefined : SkillLevelFromJSON(json['skillLevel']),
        'salaryMin': !exists(json, 'salaryMin') ? undefined : json['salaryMin'],
        'salaryMax': !exists(json, 'salaryMax') ? undefined : json['salaryMax'],
        'salarySystem': !exists(json, 'salarySystem') ? undefined : SalarySystemFromJSON(json['salarySystem']),
        'prefectures': !exists(json, 'prefectures') ? undefined : json['prefectures'],
    };
}

export function RelatedJobListToJSON(value?: RelatedJobList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'skillLevel': SkillLevelToJSON(value.skillLevel),
        'salaryMin': value.salaryMin,
        'salaryMax': value.salaryMax,
        'salarySystem': SalarySystemToJSON(value.salarySystem),
        'prefectures': value.prefectures,
    };
}

