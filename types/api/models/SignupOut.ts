/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SignupOut
 */
export interface SignupOut {
    /**
     * ユーザー名
     * @type {string}
     * @memberof SignupOut
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof SignupOut
     */
    accessToken: string;
    /**
     * 
     * @type {string}
     * @memberof SignupOut
     */
    tokenType: SignupOutTokenTypeEnum;
    /**
     * 
     * @type {Date}
     * @memberof SignupOut
     */
    expiresIn: Date;
    /**
     * 
     * @type {string}
     * @memberof SignupOut
     */
    refreshToken: string;
}


/**
 * @export
 */
export const SignupOutTokenTypeEnum = {
    Bearer: 'Bearer'
} as const;
export type SignupOutTokenTypeEnum = typeof SignupOutTokenTypeEnum[keyof typeof SignupOutTokenTypeEnum];


/**
 * Check if a given object implements the SignupOut interface.
 */
export function instanceOfSignupOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "accessToken" in value;
    isInstance = isInstance && "tokenType" in value;
    isInstance = isInstance && "expiresIn" in value;
    isInstance = isInstance && "refreshToken" in value;

    return isInstance;
}

export function SignupOutFromJSON(json: any): SignupOut {
    return SignupOutFromJSONTyped(json, false);
}

export function SignupOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): SignupOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'username': json['username'],
        'accessToken': json['accessToken'],
        'tokenType': json['tokenType'],
        'expiresIn': (new Date(json['expiresIn'])),
        'refreshToken': json['refreshToken'],
    };
}

export function SignupOutToJSON(value?: SignupOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'username': value.username,
        'accessToken': value.accessToken,
        'tokenType': value.tokenType,
        'expiresIn': (value.expiresIn.toISOString()),
        'refreshToken': value.refreshToken,
    };
}

