/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EducationalMaterialType } from './EducationalMaterialType';
import {
    EducationalMaterialTypeFromJSON,
    EducationalMaterialTypeFromJSONTyped,
    EducationalMaterialTypeToJSON,
} from './EducationalMaterialType';

/**
 * 
 * @export
 * @interface EducationalMaterialListForEventDetailOut
 */
export interface EducationalMaterialListForEventDetailOut {
    /**
     * コンテンツID
     * @type {number}
     * @memberof EducationalMaterialListForEventDetailOut
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof EducationalMaterialListForEventDetailOut
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof EducationalMaterialListForEventDetailOut
     */
    createdBy: string;
    /**
     * 
     * @type {string}
     * @memberof EducationalMaterialListForEventDetailOut
     */
    contentCategoryName: string;
    /**
     * 
     * @type {string}
     * @memberof EducationalMaterialListForEventDetailOut
     */
    contentTopicName: string;
    /**
     * 
     * @type {number}
     * @memberof EducationalMaterialListForEventDetailOut
     */
    difficulty: number;
    /**
     * 
     * @type {EducationalMaterialType}
     * @memberof EducationalMaterialListForEventDetailOut
     */
    educationalMaterialType: EducationalMaterialType;
}

/**
 * Check if a given object implements the EducationalMaterialListForEventDetailOut interface.
 */
export function instanceOfEducationalMaterialListForEventDetailOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "createdBy" in value;
    isInstance = isInstance && "contentCategoryName" in value;
    isInstance = isInstance && "contentTopicName" in value;
    isInstance = isInstance && "difficulty" in value;
    isInstance = isInstance && "educationalMaterialType" in value;

    return isInstance;
}

export function EducationalMaterialListForEventDetailOutFromJSON(json: any): EducationalMaterialListForEventDetailOut {
    return EducationalMaterialListForEventDetailOutFromJSONTyped(json, false);
}

export function EducationalMaterialListForEventDetailOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): EducationalMaterialListForEventDetailOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'createdBy': json['createdBy'],
        'contentCategoryName': json['contentCategoryName'],
        'contentTopicName': json['contentTopicName'],
        'difficulty': json['difficulty'],
        'educationalMaterialType': EducationalMaterialTypeFromJSON(json['educationalMaterialType']),
    };
}

export function EducationalMaterialListForEventDetailOutToJSON(value?: EducationalMaterialListForEventDetailOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'createdBy': value.createdBy,
        'contentCategoryName': value.contentCategoryName,
        'contentTopicName': value.contentTopicName,
        'difficulty': value.difficulty,
        'educationalMaterialType': EducationalMaterialTypeToJSON(value.educationalMaterialType),
    };
}

