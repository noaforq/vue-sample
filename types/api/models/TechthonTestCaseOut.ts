/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { HttpMethodType } from './HttpMethodType';
import {
    HttpMethodTypeFromJSON,
    HttpMethodTypeFromJSONTyped,
    HttpMethodTypeToJSON,
} from './HttpMethodType';
import type { RequestBodyParameterOut } from './RequestBodyParameterOut';
import {
    RequestBodyParameterOutFromJSON,
    RequestBodyParameterOutFromJSONTyped,
    RequestBodyParameterOutToJSON,
} from './RequestBodyParameterOut';
import type { TechthonTestCaseHintOut } from './TechthonTestCaseHintOut';
import {
    TechthonTestCaseHintOutFromJSON,
    TechthonTestCaseHintOutFromJSONTyped,
    TechthonTestCaseHintOutToJSON,
} from './TechthonTestCaseHintOut';

/**
 * 
 * @export
 * @interface TechthonTestCaseOut
 */
export interface TechthonTestCaseOut {
    /**
     * 
     * @type {number}
     * @memberof TechthonTestCaseOut
     */
    id: number;
    /**
     * 順番(テストケース番号)
     * @type {number}
     * @memberof TechthonTestCaseOut
     */
    order: number;
    /**
     * タイプ(リクエストという文字列しか存在しません)
     * @type {string}
     * @memberof TechthonTestCaseOut
     */
    type: string;
    /**
     * 
     * @type {HttpMethodType}
     * @memberof TechthonTestCaseOut
     */
    requestMethod: HttpMethodType;
    /**
     * URLパス
     * @type {string}
     * @memberof TechthonTestCaseOut
     */
    urlPath: string;
    /**
     * テストケースの概要
     * @type {string}
     * @memberof TechthonTestCaseOut
     */
    description: string;
    /**
     * 採点時に使用するパラメータ
     * @type {Array<RequestBodyParameterOut>}
     * @memberof TechthonTestCaseOut
     */
    requestParameters: Array<RequestBodyParameterOut> | null;
    /**
     * ヒント
     * @type {Array<TechthonTestCaseHintOut>}
     * @memberof TechthonTestCaseOut
     */
    hints: Array<TechthonTestCaseHintOut> | null;
}

/**
 * Check if a given object implements the TechthonTestCaseOut interface.
 */
export function instanceOfTechthonTestCaseOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "order" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "requestMethod" in value;
    isInstance = isInstance && "urlPath" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "requestParameters" in value;
    isInstance = isInstance && "hints" in value;

    return isInstance;
}

export function TechthonTestCaseOutFromJSON(json: any): TechthonTestCaseOut {
    return TechthonTestCaseOutFromJSONTyped(json, false);
}

export function TechthonTestCaseOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): TechthonTestCaseOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'order': json['order'],
        'type': json['type'],
        'requestMethod': HttpMethodTypeFromJSON(json['requestMethod']),
        'urlPath': json['urlPath'],
        'description': json['description'],
        'requestParameters': (json['requestParameters'] === null ? null : (json['requestParameters'] as Array<any>).map(RequestBodyParameterOutFromJSON)),
        'hints': (json['hints'] === null ? null : (json['hints'] as Array<any>).map(TechthonTestCaseHintOutFromJSON)),
    };
}

export function TechthonTestCaseOutToJSON(value?: TechthonTestCaseOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'order': value.order,
        'type': value.type,
        'requestMethod': HttpMethodTypeToJSON(value.requestMethod),
        'urlPath': value.urlPath,
        'description': value.description,
        'requestParameters': (value.requestParameters === null ? null : (value.requestParameters as Array<any>).map(RequestBodyParameterOutToJSON)),
        'hints': (value.hints === null ? null : (value.hints as Array<any>).map(TechthonTestCaseHintOutToJSON)),
    };
}

