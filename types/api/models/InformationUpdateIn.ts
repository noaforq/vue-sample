/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InformationTarget } from './InformationTarget';
import {
    InformationTargetFromJSON,
    InformationTargetFromJSONTyped,
    InformationTargetToJSON,
} from './InformationTarget';

/**
 * 
 * @export
 * @interface InformationUpdateIn
 */
export interface InformationUpdateIn {
    /**
     * 
     * @type {string}
     * @memberof InformationUpdateIn
     */
    title?: string | null;
    /**
     * 
     * @type {InformationTarget}
     * @memberof InformationUpdateIn
     */
    informationTarget: InformationTarget;
    /**
     * 
     * @type {string}
     * @memberof InformationUpdateIn
     */
    body?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof InformationUpdateIn
     */
    isUpdateInfo?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof InformationUpdateIn
     */
    isPublished?: boolean | null;
}

/**
 * Check if a given object implements the InformationUpdateIn interface.
 */
export function instanceOfInformationUpdateIn(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "informationTarget" in value;

    return isInstance;
}

export function InformationUpdateInFromJSON(json: any): InformationUpdateIn {
    return InformationUpdateInFromJSONTyped(json, false);
}

export function InformationUpdateInFromJSONTyped(json: any, ignoreDiscriminator: boolean): InformationUpdateIn {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': !exists(json, 'title') ? undefined : json['title'],
        'informationTarget': InformationTargetFromJSON(json['informationTarget']),
        'body': !exists(json, 'body') ? undefined : json['body'],
        'isUpdateInfo': !exists(json, 'isUpdateInfo') ? undefined : json['isUpdateInfo'],
        'isPublished': !exists(json, 'isPublished') ? undefined : json['isPublished'],
    };
}

export function InformationUpdateInToJSON(value?: InformationUpdateIn | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'informationTarget': InformationTargetToJSON(value.informationTarget),
        'body': value.body,
        'isUpdateInfo': value.isUpdateInfo,
        'isPublished': value.isPublished,
    };
}

