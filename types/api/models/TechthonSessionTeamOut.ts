/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TechthonSessionTeamOut
 */
export interface TechthonSessionTeamOut {
    /**
     * チームID
     * @type {number}
     * @memberof TechthonSessionTeamOut
     */
    id: number;
    /**
     * チーム名
     * @type {string}
     * @memberof TechthonSessionTeamOut
     */
    teamName: string;
    /**
     * IPアドレス
     * @type {string}
     * @memberof TechthonSessionTeamOut
     */
    ipAddress?: string;
    /**
     * サーバーID(ユーザー名)
     * @type {string}
     * @memberof TechthonSessionTeamOut
     */
    serverId?: string;
    /**
     * パスワード
     * @type {string}
     * @memberof TechthonSessionTeamOut
     */
    password?: string;
}

/**
 * Check if a given object implements the TechthonSessionTeamOut interface.
 */
export function instanceOfTechthonSessionTeamOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "teamName" in value;

    return isInstance;
}

export function TechthonSessionTeamOutFromJSON(json: any): TechthonSessionTeamOut {
    return TechthonSessionTeamOutFromJSONTyped(json, false);
}

export function TechthonSessionTeamOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): TechthonSessionTeamOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'teamName': json['teamName'],
        'ipAddress': !exists(json, 'ipAddress') ? undefined : json['ipAddress'],
        'serverId': !exists(json, 'serverId') ? undefined : json['serverId'],
        'password': !exists(json, 'password') ? undefined : json['password'],
    };
}

export function TechthonSessionTeamOutToJSON(value?: TechthonSessionTeamOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'teamName': value.teamName,
        'ipAddress': value.ipAddress,
        'serverId': value.serverId,
        'password': value.password,
    };
}

