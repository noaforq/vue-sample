/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PgLangChoicesOut } from './PgLangChoicesOut';
import {
    PgLangChoicesOutFromJSON,
    PgLangChoicesOutFromJSONTyped,
    PgLangChoicesOutToJSON,
} from './PgLangChoicesOut';
import type { QuestionAnswerResult } from './QuestionAnswerResult';
import {
    QuestionAnswerResultFromJSON,
    QuestionAnswerResultFromJSONTyped,
    QuestionAnswerResultToJSON,
} from './QuestionAnswerResult';

/**
 * 
 * @export
 * @interface SessionErrorDetail
 */
export interface SessionErrorDetail {
    /**
     * ソースコード
     * @type {string}
     * @memberof SessionErrorDetail
     */
    sourceCode: string;
    /**
     * スコア
     * @type {number}
     * @memberof SessionErrorDetail
     */
    totalScore: number;
    /**
     * 回答日時
     * @type {Date}
     * @memberof SessionErrorDetail
     */
    createdAt: Date;
    /**
     * 
     * @type {QuestionAnswerResult}
     * @memberof SessionErrorDetail
     */
    questionAnswerResult: QuestionAnswerResult;
    /**
     * 
     * @type {PgLangChoicesOut}
     * @memberof SessionErrorDetail
     */
    pgLang: PgLangChoicesOut;
}

/**
 * Check if a given object implements the SessionErrorDetail interface.
 */
export function instanceOfSessionErrorDetail(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "sourceCode" in value;
    isInstance = isInstance && "totalScore" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "questionAnswerResult" in value;
    isInstance = isInstance && "pgLang" in value;

    return isInstance;
}

export function SessionErrorDetailFromJSON(json: any): SessionErrorDetail {
    return SessionErrorDetailFromJSONTyped(json, false);
}

export function SessionErrorDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): SessionErrorDetail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sourceCode': json['sourceCode'],
        'totalScore': json['totalScore'],
        'createdAt': (new Date(json['createdAt'])),
        'questionAnswerResult': QuestionAnswerResultFromJSON(json['questionAnswerResult']),
        'pgLang': PgLangChoicesOutFromJSON(json['pgLang']),
    };
}

export function SessionErrorDetailToJSON(value?: SessionErrorDetail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sourceCode': value.sourceCode,
        'totalScore': value.totalScore,
        'createdAt': (value.createdAt.toISOString()),
        'questionAnswerResult': QuestionAnswerResultToJSON(value.questionAnswerResult),
        'pgLang': PgLangChoicesOutToJSON(value.pgLang),
    };
}

