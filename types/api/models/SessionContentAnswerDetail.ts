/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SessionContentAnswerDetail
 */
export interface SessionContentAnswerDetail {
    /**
     * 順番
     * @type {number}
     * @memberof SessionContentAnswerDetail
     */
    order: number;
    /**
     * 問題ID
     * @type {number}
     * @memberof SessionContentAnswerDetail
     */
    contentId: number;
    /**
     * 問題名
     * @type {string}
     * @memberof SessionContentAnswerDetail
     */
    title: string;
    /**
     * 問題区分名
     * @type {string}
     * @memberof SessionContentAnswerDetail
     */
    contentDivisionLabel: string;
    /**
     * 合否ステータス
     * @type {string}
     * @memberof SessionContentAnswerDetail
     */
    questionResultStatusLabel: string;
    /**
     * スコア
     * @type {number}
     * @memberof SessionContentAnswerDetail
     */
    score: number;
    /**
     * 合格済みか
     * @type {boolean}
     * @memberof SessionContentAnswerDetail
     */
    isPassed: boolean;
}

/**
 * Check if a given object implements the SessionContentAnswerDetail interface.
 */
export function instanceOfSessionContentAnswerDetail(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "order" in value;
    isInstance = isInstance && "contentId" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "contentDivisionLabel" in value;
    isInstance = isInstance && "questionResultStatusLabel" in value;
    isInstance = isInstance && "score" in value;
    isInstance = isInstance && "isPassed" in value;

    return isInstance;
}

export function SessionContentAnswerDetailFromJSON(json: any): SessionContentAnswerDetail {
    return SessionContentAnswerDetailFromJSONTyped(json, false);
}

export function SessionContentAnswerDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): SessionContentAnswerDetail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'order': json['order'],
        'contentId': json['contentId'],
        'title': json['title'],
        'contentDivisionLabel': json['contentDivisionLabel'],
        'questionResultStatusLabel': json['questionResultStatusLabel'],
        'score': json['score'],
        'isPassed': json['isPassed'],
    };
}

export function SessionContentAnswerDetailToJSON(value?: SessionContentAnswerDetail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'order': value.order,
        'contentId': value.contentId,
        'title': value.title,
        'contentDivisionLabel': value.contentDivisionLabel,
        'questionResultStatusLabel': value.questionResultStatusLabel,
        'score': value.score,
        'isPassed': value.isPassed,
    };
}

