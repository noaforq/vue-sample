/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SchoolDepartmentDetailOut
 */
export interface SchoolDepartmentDetailOut {
    /**
     * 
     * @type {number}
     * @memberof SchoolDepartmentDetailOut
     */
    id: number;
    /**
     * 
     * @type {Date}
     * @memberof SchoolDepartmentDetailOut
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof SchoolDepartmentDetailOut
     */
    updatedAt: Date;
    /**
     * 組織名(学部、研究室)
     * @type {string}
     * @memberof SchoolDepartmentDetailOut
     */
    name: string;
    /**
     * 
     * @type {boolean}
     * @memberof SchoolDepartmentDetailOut
     */
    useSecurityOption: boolean;
    /**
     * 
     * @type {string}
     * @memberof SchoolDepartmentDetailOut
     */
    customDomain: string;
    /**
     * アカウント名接頭辞
     * @type {string}
     * @memberof SchoolDepartmentDetailOut
     */
    slug: string;
}

/**
 * Check if a given object implements the SchoolDepartmentDetailOut interface.
 */
export function instanceOfSchoolDepartmentDetailOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "useSecurityOption" in value;
    isInstance = isInstance && "customDomain" in value;
    isInstance = isInstance && "slug" in value;

    return isInstance;
}

export function SchoolDepartmentDetailOutFromJSON(json: any): SchoolDepartmentDetailOut {
    return SchoolDepartmentDetailOutFromJSONTyped(json, false);
}

export function SchoolDepartmentDetailOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): SchoolDepartmentDetailOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'name': json['name'],
        'useSecurityOption': json['useSecurityOption'],
        'customDomain': json['customDomain'],
        'slug': json['slug'],
    };
}

export function SchoolDepartmentDetailOutToJSON(value?: SchoolDepartmentDetailOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
        'name': value.name,
        'useSecurityOption': value.useSecurityOption,
        'customDomain': value.customDomain,
        'slug': value.slug,
    };
}

