/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AppSchemasManageSessionsSessionContentListOutEducationalMaterialOut } from './AppSchemasManageSessionsSessionContentListOutEducationalMaterialOut';
import {
    AppSchemasManageSessionsSessionContentListOutEducationalMaterialOutFromJSON,
    AppSchemasManageSessionsSessionContentListOutEducationalMaterialOutFromJSONTyped,
    AppSchemasManageSessionsSessionContentListOutEducationalMaterialOutToJSON,
} from './AppSchemasManageSessionsSessionContentListOutEducationalMaterialOut';
import type { ContentType } from './ContentType';
import {
    ContentTypeFromJSON,
    ContentTypeFromJSONTyped,
    ContentTypeToJSON,
} from './ContentType';
import type { QuestionContentOut } from './QuestionContentOut';
import {
    QuestionContentOutFromJSON,
    QuestionContentOutFromJSONTyped,
    QuestionContentOutToJSON,
} from './QuestionContentOut';

/**
 * 
 * @export
 * @interface AppSchemasManageSessionsSessionContentListOutContentDetailOut
 */
export interface AppSchemasManageSessionsSessionContentListOutContentDetailOut {
    /**
     * コンテンツID
     * @type {number}
     * @memberof AppSchemasManageSessionsSessionContentListOutContentDetailOut
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof AppSchemasManageSessionsSessionContentListOutContentDetailOut
     */
    contentCategoryName: string;
    /**
     * 
     * @type {string}
     * @memberof AppSchemasManageSessionsSessionContentListOutContentDetailOut
     */
    contentTopicName: string;
    /**
     * 
     * @type {string}
     * @memberof AppSchemasManageSessionsSessionContentListOutContentDetailOut
     */
    contentDivisionLabel: string;
    /**
     * 
     * @type {string}
     * @memberof AppSchemasManageSessionsSessionContentListOutContentDetailOut
     */
    contentTypeLabel: string;
    /**
     * 
     * @type {ContentType}
     * @memberof AppSchemasManageSessionsSessionContentListOutContentDetailOut
     */
    contentType: ContentType;
    /**
     * 
     * @type {Array<string>}
     * @memberof AppSchemasManageSessionsSessionContentListOutContentDetailOut
     */
    contentTagNames?: Array<string> | null;
    /**
     * コンテンツタイトル
     * @type {string}
     * @memberof AppSchemasManageSessionsSessionContentListOutContentDetailOut
     */
    title: string;
    /**
     * 英語コンテンツタイトル
     * @type {string}
     * @memberof AppSchemasManageSessionsSessionContentListOutContentDetailOut
     */
    titleEn: string;
    /**
     * 
     * @type {number}
     * @memberof AppSchemasManageSessionsSessionContentListOutContentDetailOut
     */
    difficulty: number;
    /**
     * 
     * @type {QuestionContentOut}
     * @memberof AppSchemasManageSessionsSessionContentListOutContentDetailOut
     */
    question?: QuestionContentOut | null;
    /**
     * 
     * @type {AppSchemasManageSessionsSessionContentListOutEducationalMaterialOut}
     * @memberof AppSchemasManageSessionsSessionContentListOutContentDetailOut
     */
    educationalMaterial?: AppSchemasManageSessionsSessionContentListOutEducationalMaterialOut | null;
}

/**
 * Check if a given object implements the AppSchemasManageSessionsSessionContentListOutContentDetailOut interface.
 */
export function instanceOfAppSchemasManageSessionsSessionContentListOutContentDetailOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "contentCategoryName" in value;
    isInstance = isInstance && "contentTopicName" in value;
    isInstance = isInstance && "contentDivisionLabel" in value;
    isInstance = isInstance && "contentTypeLabel" in value;
    isInstance = isInstance && "contentType" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "titleEn" in value;
    isInstance = isInstance && "difficulty" in value;

    return isInstance;
}

export function AppSchemasManageSessionsSessionContentListOutContentDetailOutFromJSON(json: any): AppSchemasManageSessionsSessionContentListOutContentDetailOut {
    return AppSchemasManageSessionsSessionContentListOutContentDetailOutFromJSONTyped(json, false);
}

export function AppSchemasManageSessionsSessionContentListOutContentDetailOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppSchemasManageSessionsSessionContentListOutContentDetailOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'contentCategoryName': json['contentCategoryName'],
        'contentTopicName': json['contentTopicName'],
        'contentDivisionLabel': json['contentDivisionLabel'],
        'contentTypeLabel': json['contentTypeLabel'],
        'contentType': ContentTypeFromJSON(json['contentType']),
        'contentTagNames': !exists(json, 'contentTagNames') ? undefined : json['contentTagNames'],
        'title': json['title'],
        'titleEn': json['titleEn'],
        'difficulty': json['difficulty'],
        'question': !exists(json, 'question') ? undefined : QuestionContentOutFromJSON(json['question']),
        'educationalMaterial': !exists(json, 'educationalMaterial') ? undefined : AppSchemasManageSessionsSessionContentListOutEducationalMaterialOutFromJSON(json['educationalMaterial']),
    };
}

export function AppSchemasManageSessionsSessionContentListOutContentDetailOutToJSON(value?: AppSchemasManageSessionsSessionContentListOutContentDetailOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'contentCategoryName': value.contentCategoryName,
        'contentTopicName': value.contentTopicName,
        'contentDivisionLabel': value.contentDivisionLabel,
        'contentTypeLabel': value.contentTypeLabel,
        'contentType': ContentTypeToJSON(value.contentType),
        'contentTagNames': value.contentTagNames,
        'title': value.title,
        'titleEn': value.titleEn,
        'difficulty': value.difficulty,
        'question': QuestionContentOutToJSON(value.question),
        'educationalMaterial': AppSchemasManageSessionsSessionContentListOutEducationalMaterialOutToJSON(value.educationalMaterial),
    };
}

