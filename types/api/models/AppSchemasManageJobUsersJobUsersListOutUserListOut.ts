/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CurrentJob } from './CurrentJob';
import {
    CurrentJobFromJSON,
    CurrentJobFromJSONTyped,
    CurrentJobToJSON,
} from './CurrentJob';
import type { ReferableUserStatus } from './ReferableUserStatus';
import {
    ReferableUserStatusFromJSON,
    ReferableUserStatusFromJSONTyped,
    ReferableUserStatusToJSON,
} from './ReferableUserStatus';

/**
 * 
 * @export
 * @interface AppSchemasManageJobUsersJobUsersListOutUserListOut
 */
export interface AppSchemasManageJobUsersJobUsersListOutUserListOut {
    /**
     * ユーザID
     * @type {number}
     * @memberof AppSchemasManageJobUsersJobUsersListOutUserListOut
     */
    id: number;
    /**
     * チャットルームID
     * @type {number}
     * @memberof AppSchemasManageJobUsersJobUsersListOutUserListOut
     */
    chatRoomId?: number | null;
    /**
     * 
     * @type {ReferableUserStatus}
     * @memberof AppSchemasManageJobUsersJobUsersListOutUserListOut
     */
    userScoutStatus: ReferableUserStatus;
    /**
     * スカウト承諾時間
     * @type {Date}
     * @memberof AppSchemasManageJobUsersJobUsersListOutUserListOut
     */
    acceptedAt?: Date | null;
    /**
     * 本登録時間
     * @type {Date}
     * @memberof AppSchemasManageJobUsersJobUsersListOutUserListOut
     */
    createdAt: Date;
    /**
     * アカウント名
     * @type {string}
     * @memberof AppSchemasManageJobUsersJobUsersListOutUserListOut
     */
    username: string;
    /**
     * 現住所の都道府県名
     * @type {string}
     * @memberof AppSchemasManageJobUsersJobUsersListOutUserListOut
     */
    currentPrefectureCity: string;
    /**
     * 
     * @type {CurrentJob}
     * @memberof AppSchemasManageJobUsersJobUsersListOutUserListOut
     */
    currentJob?: CurrentJob | null;
    /**
     * 最終学歴の学校種類
     * @type {string}
     * @memberof AppSchemasManageJobUsersJobUsersListOutUserListOut
     */
    schoolDivision?: string;
    /**
     * 最終学歴の学校名
     * @type {string}
     * @memberof AppSchemasManageJobUsersJobUsersListOutUserListOut
     */
    schoolName?: string;
    /**
     * 最終学歴の学科名
     * @type {string}
     * @memberof AppSchemasManageJobUsersJobUsersListOutUserListOut
     */
    schoolDepartmentName?: string;
    /**
     * 最終学歴の学部名
     * @type {string}
     * @memberof AppSchemasManageJobUsersJobUsersListOutUserListOut
     */
    schoolFacultyName?: string;
    /**
     * 卒業年
     * @type {Date}
     * @memberof AppSchemasManageJobUsersJobUsersListOutUserListOut
     */
    graduationDate?: Date | null;
    /**
     * ユーザのスキルレベル
     * @type {number}
     * @memberof AppSchemasManageJobUsersJobUsersListOutUserListOut
     */
    userSkillLevel?: number | null;
    /**
     * 希望職種
     * @type {Array<string>}
     * @memberof AppSchemasManageJobUsersJobUsersListOutUserListOut
     */
    desiredOccupationName: Array<string>;
    /**
     * 希望勤務地
     * @type {Array<string>}
     * @memberof AppSchemasManageJobUsersJobUsersListOutUserListOut
     */
    desiredPrefectureName: Array<string>;
    /**
     * メモ
     * @type {string}
     * @memberof AppSchemasManageJobUsersJobUsersListOutUserListOut
     */
    memo?: string;
}

/**
 * Check if a given object implements the AppSchemasManageJobUsersJobUsersListOutUserListOut interface.
 */
export function instanceOfAppSchemasManageJobUsersJobUsersListOutUserListOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "userScoutStatus" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "currentPrefectureCity" in value;
    isInstance = isInstance && "desiredOccupationName" in value;
    isInstance = isInstance && "desiredPrefectureName" in value;

    return isInstance;
}

export function AppSchemasManageJobUsersJobUsersListOutUserListOutFromJSON(json: any): AppSchemasManageJobUsersJobUsersListOutUserListOut {
    return AppSchemasManageJobUsersJobUsersListOutUserListOutFromJSONTyped(json, false);
}

export function AppSchemasManageJobUsersJobUsersListOutUserListOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppSchemasManageJobUsersJobUsersListOutUserListOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'chatRoomId': !exists(json, 'chatRoomId') ? undefined : json['chatRoomId'],
        'userScoutStatus': ReferableUserStatusFromJSON(json['userScoutStatus']),
        'acceptedAt': !exists(json, 'acceptedAt') ? undefined : (json['acceptedAt'] === null ? null : new Date(json['acceptedAt'])),
        'createdAt': (new Date(json['createdAt'])),
        'username': json['username'],
        'currentPrefectureCity': json['currentPrefectureCity'],
        'currentJob': !exists(json, 'currentJob') ? undefined : CurrentJobFromJSON(json['currentJob']),
        'schoolDivision': !exists(json, 'schoolDivision') ? undefined : json['schoolDivision'],
        'schoolName': !exists(json, 'schoolName') ? undefined : json['schoolName'],
        'schoolDepartmentName': !exists(json, 'schoolDepartmentName') ? undefined : json['schoolDepartmentName'],
        'schoolFacultyName': !exists(json, 'schoolFacultyName') ? undefined : json['schoolFacultyName'],
        'graduationDate': !exists(json, 'graduationDate') ? undefined : (json['graduationDate'] === null ? null : new Date(json['graduationDate'])),
        'userSkillLevel': !exists(json, 'userSkillLevel') ? undefined : json['userSkillLevel'],
        'desiredOccupationName': json['desiredOccupationName'],
        'desiredPrefectureName': json['desiredPrefectureName'],
        'memo': !exists(json, 'memo') ? undefined : json['memo'],
    };
}

export function AppSchemasManageJobUsersJobUsersListOutUserListOutToJSON(value?: AppSchemasManageJobUsersJobUsersListOutUserListOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'chatRoomId': value.chatRoomId,
        'userScoutStatus': ReferableUserStatusToJSON(value.userScoutStatus),
        'acceptedAt': value.acceptedAt === undefined ? undefined : (value.acceptedAt === null ? null : value.acceptedAt.toISOString()),
        'createdAt': (value.createdAt.toISOString()),
        'username': value.username,
        'currentPrefectureCity': value.currentPrefectureCity,
        'currentJob': CurrentJobToJSON(value.currentJob),
        'schoolDivision': value.schoolDivision,
        'schoolName': value.schoolName,
        'schoolDepartmentName': value.schoolDepartmentName,
        'schoolFacultyName': value.schoolFacultyName,
        'graduationDate': value.graduationDate === undefined ? undefined : (value.graduationDate === null ? null : value.graduationDate.toISOString().substring(0,10)),
        'userSkillLevel': value.userSkillLevel,
        'desiredOccupationName': value.desiredOccupationName,
        'desiredPrefectureName': value.desiredPrefectureName,
        'memo': value.memo,
    };
}

