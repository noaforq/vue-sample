/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateCompanyUserCsvIn
 */
export interface CreateCompanyUserCsvIn {
    /**
     * 
     * @type {number}
     * @memberof CreateCompanyUserCsvIn
     */
    organizationId: number;
    /**
     * 
     * @type {string}
     * @memberof CreateCompanyUserCsvIn
     */
    csvData: string;
    /**
     * 
     * @type {string}
     * @memberof CreateCompanyUserCsvIn
     */
    mailText?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof CreateCompanyUserCsvIn
     */
    hasScoutPlanPermissions: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CreateCompanyUserCsvIn
     */
    hasSkillEvaluationPlanPermissions: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CreateCompanyUserCsvIn
     */
    hasRecruitPlanPermissions: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CreateCompanyUserCsvIn
     */
    hasEventPlanPermissions: boolean;
}

/**
 * Check if a given object implements the CreateCompanyUserCsvIn interface.
 */
export function instanceOfCreateCompanyUserCsvIn(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "organizationId" in value;
    isInstance = isInstance && "csvData" in value;
    isInstance = isInstance && "hasScoutPlanPermissions" in value;
    isInstance = isInstance && "hasSkillEvaluationPlanPermissions" in value;
    isInstance = isInstance && "hasRecruitPlanPermissions" in value;
    isInstance = isInstance && "hasEventPlanPermissions" in value;

    return isInstance;
}

export function CreateCompanyUserCsvInFromJSON(json: any): CreateCompanyUserCsvIn {
    return CreateCompanyUserCsvInFromJSONTyped(json, false);
}

export function CreateCompanyUserCsvInFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateCompanyUserCsvIn {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'organizationId': json['organizationId'],
        'csvData': json['csvData'],
        'mailText': !exists(json, 'mailText') ? undefined : json['mailText'],
        'hasScoutPlanPermissions': json['hasScoutPlanPermissions'],
        'hasSkillEvaluationPlanPermissions': json['hasSkillEvaluationPlanPermissions'],
        'hasRecruitPlanPermissions': json['hasRecruitPlanPermissions'],
        'hasEventPlanPermissions': json['hasEventPlanPermissions'],
    };
}

export function CreateCompanyUserCsvInToJSON(value?: CreateCompanyUserCsvIn | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'organizationId': value.organizationId,
        'csvData': value.csvData,
        'mailText': value.mailText,
        'hasScoutPlanPermissions': value.hasScoutPlanPermissions,
        'hasSkillEvaluationPlanPermissions': value.hasSkillEvaluationPlanPermissions,
        'hasRecruitPlanPermissions': value.hasRecruitPlanPermissions,
        'hasEventPlanPermissions': value.hasEventPlanPermissions,
    };
}

