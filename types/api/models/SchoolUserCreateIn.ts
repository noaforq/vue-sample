/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SchoolUserType } from './SchoolUserType';
import {
    SchoolUserTypeFromJSON,
    SchoolUserTypeFromJSONTyped,
    SchoolUserTypeToJSON,
} from './SchoolUserType';

/**
 * 
 * @export
 * @interface SchoolUserCreateIn
 */
export interface SchoolUserCreateIn {
    /**
     * 
     * @type {number}
     * @memberof SchoolUserCreateIn
     */
    organizationId: number;
    /**
     * 
     * @type {string}
     * @memberof SchoolUserCreateIn
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof SchoolUserCreateIn
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof SchoolUserCreateIn
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof SchoolUserCreateIn
     */
    password: string;
    /**
     * 
     * @type {string}
     * @memberof SchoolUserCreateIn
     */
    email: string;
    /**
     * 
     * @type {SchoolUserType}
     * @memberof SchoolUserCreateIn
     */
    schoolUserType: SchoolUserType;
}

/**
 * Check if a given object implements the SchoolUserCreateIn interface.
 */
export function instanceOfSchoolUserCreateIn(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "organizationId" in value;
    isInstance = isInstance && "firstName" in value;
    isInstance = isInstance && "lastName" in value;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "password" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "schoolUserType" in value;

    return isInstance;
}

export function SchoolUserCreateInFromJSON(json: any): SchoolUserCreateIn {
    return SchoolUserCreateInFromJSONTyped(json, false);
}

export function SchoolUserCreateInFromJSONTyped(json: any, ignoreDiscriminator: boolean): SchoolUserCreateIn {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'organizationId': json['organizationId'],
        'firstName': json['firstName'],
        'lastName': json['lastName'],
        'username': json['username'],
        'password': json['password'],
        'email': json['email'],
        'schoolUserType': SchoolUserTypeFromJSON(json['schoolUserType']),
    };
}

export function SchoolUserCreateInToJSON(value?: SchoolUserCreateIn | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'organizationId': value.organizationId,
        'firstName': value.firstName,
        'lastName': value.lastName,
        'username': value.username,
        'password': value.password,
        'email': value.email,
        'schoolUserType': SchoolUserTypeToJSON(value.schoolUserType),
    };
}

