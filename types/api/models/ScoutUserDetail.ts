/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CurrentJob } from './CurrentJob';
import {
    CurrentJobFromJSON,
    CurrentJobFromJSONTyped,
    CurrentJobToJSON,
} from './CurrentJob';
import type { PgLangOut } from './PgLangOut';
import {
    PgLangOutFromJSON,
    PgLangOutFromJSONTyped,
    PgLangOutToJSON,
} from './PgLangOut';
import type { SelectionStep } from './SelectionStep';
import {
    SelectionStepFromJSON,
    SelectionStepFromJSONTyped,
    SelectionStepToJSON,
} from './SelectionStep';
import type { SkillLevel } from './SkillLevel';
import {
    SkillLevelFromJSON,
    SkillLevelFromJSONTyped,
    SkillLevelToJSON,
} from './SkillLevel';

/**
 * 
 * @export
 * @interface ScoutUserDetail
 */
export interface ScoutUserDetail {
    /**
     * ユーザー名
     * @type {string}
     * @memberof ScoutUserDetail
     */
    username: string;
    /**
     * 住所
     * @type {string}
     * @memberof ScoutUserDetail
     */
    address: string;
    /**
     * 
     * @type {CurrentJob}
     * @memberof ScoutUserDetail
     */
    currentJob: CurrentJob | null;
    /**
     * 
     * @type {SkillLevel}
     * @memberof ScoutUserDetail
     */
    skillLevel: SkillLevel | null;
    /**
     * 使用言語
     * @type {Array<PgLangOut>}
     * @memberof ScoutUserDetail
     */
    usedPgLangs: Array<PgLangOut>;
    /**
     * 
     * @type {SelectionStep}
     * @memberof ScoutUserDetail
     */
    selectionStatus: SelectionStep;
    /**
     * 紹介日
     * @type {Date}
     * @memberof ScoutUserDetail
     */
    scoutedAt: Date;
}

/**
 * Check if a given object implements the ScoutUserDetail interface.
 */
export function instanceOfScoutUserDetail(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "address" in value;
    isInstance = isInstance && "currentJob" in value;
    isInstance = isInstance && "skillLevel" in value;
    isInstance = isInstance && "usedPgLangs" in value;
    isInstance = isInstance && "selectionStatus" in value;
    isInstance = isInstance && "scoutedAt" in value;

    return isInstance;
}

export function ScoutUserDetailFromJSON(json: any): ScoutUserDetail {
    return ScoutUserDetailFromJSONTyped(json, false);
}

export function ScoutUserDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScoutUserDetail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'username': json['username'],
        'address': json['address'],
        'currentJob': CurrentJobFromJSON(json['currentJob']),
        'skillLevel': SkillLevelFromJSON(json['skillLevel']),
        'usedPgLangs': ((json['usedPgLangs'] as Array<any>).map(PgLangOutFromJSON)),
        'selectionStatus': SelectionStepFromJSON(json['selectionStatus']),
        'scoutedAt': (new Date(json['scoutedAt'])),
    };
}

export function ScoutUserDetailToJSON(value?: ScoutUserDetail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'username': value.username,
        'address': value.address,
        'currentJob': CurrentJobToJSON(value.currentJob),
        'skillLevel': SkillLevelToJSON(value.skillLevel),
        'usedPgLangs': ((value.usedPgLangs as Array<any>).map(PgLangOutToJSON)),
        'selectionStatus': SelectionStepToJSON(value.selectionStatus),
        'scoutedAt': (value.scoutedAt.toISOString().substring(0,10)),
    };
}

