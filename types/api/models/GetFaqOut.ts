/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FaqCategory } from './FaqCategory';
import {
    FaqCategoryFromJSON,
    FaqCategoryFromJSONTyped,
    FaqCategoryToJSON,
} from './FaqCategory';
import type { FaqItem } from './FaqItem';
import {
    FaqItemFromJSON,
    FaqItemFromJSONTyped,
    FaqItemToJSON,
} from './FaqItem';

/**
 * 
 * @export
 * @interface GetFaqOut
 */
export interface GetFaqOut {
    /**
     * 
     * @type {FaqCategory}
     * @memberof GetFaqOut
     */
    faqCategory: FaqCategory;
    /**
     * FAQリスト
     * @type {Array<FaqItem>}
     * @memberof GetFaqOut
     */
    faqs: Array<FaqItem>;
}

/**
 * Check if a given object implements the GetFaqOut interface.
 */
export function instanceOfGetFaqOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "faqCategory" in value;
    isInstance = isInstance && "faqs" in value;

    return isInstance;
}

export function GetFaqOutFromJSON(json: any): GetFaqOut {
    return GetFaqOutFromJSONTyped(json, false);
}

export function GetFaqOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetFaqOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'faqCategory': FaqCategoryFromJSON(json['faqCategory']),
        'faqs': ((json['faqs'] as Array<any>).map(FaqItemFromJSON)),
    };
}

export function GetFaqOutToJSON(value?: GetFaqOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'faqCategory': FaqCategoryToJSON(value.faqCategory),
        'faqs': ((value.faqs as Array<any>).map(FaqItemToJSON)),
    };
}

