/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OriginalCaseResult } from './OriginalCaseResult';
import {
    OriginalCaseResultFromJSON,
    OriginalCaseResultFromJSONTyped,
    OriginalCaseResultToJSON,
} from './OriginalCaseResult';
import type { QuestionAnswerResult } from './QuestionAnswerResult';
import {
    QuestionAnswerResultFromJSON,
    QuestionAnswerResultFromJSONTyped,
    QuestionAnswerResultToJSON,
} from './QuestionAnswerResult';
import type { SampleCaseResult } from './SampleCaseResult';
import {
    SampleCaseResultFromJSON,
    SampleCaseResultFromJSONTyped,
    SampleCaseResultToJSON,
} from './SampleCaseResult';

/**
 * 
 * @export
 * @interface GetQuestionSampleCaseResultsOut
 */
export interface GetQuestionSampleCaseResultsOut {
    /**
     * 
     * @type {QuestionAnswerResult}
     * @memberof GetQuestionSampleCaseResultsOut
     */
    resultStatus: QuestionAnswerResult;
    /**
     * サンプルケース結果
     * @type {Array<SampleCaseResult>}
     * @memberof GetQuestionSampleCaseResultsOut
     */
    sampleCaseResults: Array<SampleCaseResult>;
    /**
     * オリジナルケース結果
     * @type {Array<OriginalCaseResult>}
     * @memberof GetQuestionSampleCaseResultsOut
     */
    originalCaseResults: Array<OriginalCaseResult>;
}

/**
 * Check if a given object implements the GetQuestionSampleCaseResultsOut interface.
 */
export function instanceOfGetQuestionSampleCaseResultsOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "resultStatus" in value;
    isInstance = isInstance && "sampleCaseResults" in value;
    isInstance = isInstance && "originalCaseResults" in value;

    return isInstance;
}

export function GetQuestionSampleCaseResultsOutFromJSON(json: any): GetQuestionSampleCaseResultsOut {
    return GetQuestionSampleCaseResultsOutFromJSONTyped(json, false);
}

export function GetQuestionSampleCaseResultsOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetQuestionSampleCaseResultsOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'resultStatus': QuestionAnswerResultFromJSON(json['resultStatus']),
        'sampleCaseResults': ((json['sampleCaseResults'] as Array<any>).map(SampleCaseResultFromJSON)),
        'originalCaseResults': ((json['originalCaseResults'] as Array<any>).map(OriginalCaseResultFromJSON)),
    };
}

export function GetQuestionSampleCaseResultsOutToJSON(value?: GetQuestionSampleCaseResultsOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'resultStatus': QuestionAnswerResultToJSON(value.resultStatus),
        'sampleCaseResults': ((value.sampleCaseResults as Array<any>).map(SampleCaseResultToJSON)),
        'originalCaseResults': ((value.originalCaseResults as Array<any>).map(OriginalCaseResultToJSON)),
    };
}

