/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TechthonSessionUserOut
 */
export interface TechthonSessionUserOut {
    /**
     * ユーザーID
     * @type {number}
     * @memberof TechthonSessionUserOut
     */
    id: number;
    /**
     * アカウント名
     * @type {string}
     * @memberof TechthonSessionUserOut
     */
    username: string;
    /**
     * 学校名/企業名
     * @type {string}
     * @memberof TechthonSessionUserOut
     */
    organization: string;
    /**
     * 参加日
     * @type {Date}
     * @memberof TechthonSessionUserOut
     */
    joinedAt: Date;
    /**
     * チームID
     * @type {number}
     * @memberof TechthonSessionUserOut
     */
    teamId?: number | null;
    /**
     * チーム名
     * @type {string}
     * @memberof TechthonSessionUserOut
     */
    teamName?: string | null;
}

/**
 * Check if a given object implements the TechthonSessionUserOut interface.
 */
export function instanceOfTechthonSessionUserOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "organization" in value;
    isInstance = isInstance && "joinedAt" in value;

    return isInstance;
}

export function TechthonSessionUserOutFromJSON(json: any): TechthonSessionUserOut {
    return TechthonSessionUserOutFromJSONTyped(json, false);
}

export function TechthonSessionUserOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): TechthonSessionUserOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'username': json['username'],
        'organization': json['organization'],
        'joinedAt': (new Date(json['joinedAt'])),
        'teamId': !exists(json, 'teamId') ? undefined : json['teamId'],
        'teamName': !exists(json, 'teamName') ? undefined : json['teamName'],
    };
}

export function TechthonSessionUserOutToJSON(value?: TechthonSessionUserOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'username': value.username,
        'organization': value.organization,
        'joinedAt': (value.joinedAt.toISOString()),
        'teamId': value.teamId,
        'teamName': value.teamName,
    };
}

