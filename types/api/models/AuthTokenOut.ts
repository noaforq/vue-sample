/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AuthTokenOut
 */
export interface AuthTokenOut {
    /**
     * 
     * @type {string}
     * @memberof AuthTokenOut
     */
    accessToken: string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenOut
     */
    tokenType: AuthTokenOutTokenTypeEnum;
    /**
     * 
     * @type {Date}
     * @memberof AuthTokenOut
     */
    expiresIn: Date;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenOut
     */
    refreshToken: string;
}


/**
 * @export
 */
export const AuthTokenOutTokenTypeEnum = {
    Bearer: 'Bearer'
} as const;
export type AuthTokenOutTokenTypeEnum = typeof AuthTokenOutTokenTypeEnum[keyof typeof AuthTokenOutTokenTypeEnum];


/**
 * Check if a given object implements the AuthTokenOut interface.
 */
export function instanceOfAuthTokenOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "accessToken" in value;
    isInstance = isInstance && "tokenType" in value;
    isInstance = isInstance && "expiresIn" in value;
    isInstance = isInstance && "refreshToken" in value;

    return isInstance;
}

export function AuthTokenOutFromJSON(json: any): AuthTokenOut {
    return AuthTokenOutFromJSONTyped(json, false);
}

export function AuthTokenOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthTokenOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accessToken': json['access_token'],
        'tokenType': json['token_type'],
        'expiresIn': (new Date(json['expires_in'])),
        'refreshToken': json['refresh_token'],
    };
}

export function AuthTokenOutToJSON(value?: AuthTokenOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'access_token': value.accessToken,
        'token_type': value.tokenType,
        'expires_in': (value.expiresIn.toISOString()),
        'refresh_token': value.refreshToken,
    };
}

