/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AppSchemasManageSessionsSessionDetailOutAvailablePgLanguages } from './AppSchemasManageSessionsSessionDetailOutAvailablePgLanguages';
import {
    AppSchemasManageSessionsSessionDetailOutAvailablePgLanguagesFromJSON,
    AppSchemasManageSessionsSessionDetailOutAvailablePgLanguagesFromJSONTyped,
    AppSchemasManageSessionsSessionDetailOutAvailablePgLanguagesToJSON,
} from './AppSchemasManageSessionsSessionDetailOutAvailablePgLanguages';
import type { EventSponsorObjectOut } from './EventSponsorObjectOut';
import {
    EventSponsorObjectOutFromJSON,
    EventSponsorObjectOutFromJSONTyped,
    EventSponsorObjectOutToJSON,
} from './EventSponsorObjectOut';
import type { SessionTermOut } from './SessionTermOut';
import {
    SessionTermOutFromJSON,
    SessionTermOutFromJSONTyped,
    SessionTermOutToJSON,
} from './SessionTermOut';
import type { SessionType } from './SessionType';
import {
    SessionTypeFromJSON,
    SessionTypeFromJSONTyped,
    SessionTypeToJSON,
} from './SessionType';

/**
 * 
 * @export
 * @interface AppSchemasManageSessionsSessionDetailOutSessionDetailOut
 */
export interface AppSchemasManageSessionsSessionDetailOutSessionDetailOut {
    /**
     * セッションID
     * @type {number}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    id: number;
    /**
     * セッション名
     * @type {string}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    sessionName: string;
    /**
     * イベントID
     * @type {number}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    eventId: number;
    /**
     * イベント名
     * @type {string}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    eventName: string;
    /**
     * イベントテーマ
     * @type {string}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    eventTheme: string;
    /**
     * セッション開始日時
     * @type {Date}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    startsAt: Date;
    /**
     * セッション終了日時
     * @type {Date}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    endsAt: Date;
    /**
     * 
     * @type {SessionType}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    sessionType?: SessionType | null;
    /**
     * 参加人数
     * @type {number}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    sessionUserCount: number;
    /**
     * セッションコード
     * @type {string}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    sessionCode: string;
    /**
     * パスワード
     * @type {string}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    password: string;
    /**
     * 開催場所
     * @type {string}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    location: string;
    /**
     * 練習用セッションか
     * @type {boolean}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    isPracticeSession: boolean | null;
    /**
     * 公開中かどうか
     * @type {boolean}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    isActive: boolean | null;
    /**
     * 問題数
     * @type {number}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    sessionContentCount: number;
    /**
     * 制限対象の卒業年度(最小値)
     * @type {number}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    minGraduationYearOfRestriction: number | null;
    /**
     * 制限対象の卒業年度(最大値)
     * @type {number}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    maxGraduationYearOfRestriction: number | null;
    /**
     * 組織ID
     * @type {number}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    eventHostId: number;
    /**
     * 主催者
     * @type {string}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    eventHostName: string;
    /**
     * 
     * @type {Array<EventSponsorObjectOut>}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    eventSponsors: Array<EventSponsorObjectOut>;
    /**
     * 
     * @type {Array<AppSchemasManageSessionsSessionDetailOutAvailablePgLanguages>}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    availablePgLangs: Array<AppSchemasManageSessionsSessionDetailOutAvailablePgLanguages>;
    /**
     * 
     * @type {SessionTermOut}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    sessionTerm?: SessionTermOut | null;
    /**
     * スレッド未読数
     * @type {number}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    unreadCount: number;
    /**
     * ランダムセッションか
     * @type {boolean}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    isRandomSession: boolean | null;
    /**
     * 小テストセッションか
     * @type {boolean}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    isShortTestSession: boolean | null;
    /**
     * パスワード付きセッションか
     * @type {boolean}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    isLockedSession: boolean | null;
    /**
     * ランキング実名表示
     * @type {boolean}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    showRealNameInRanking: boolean | null;
    /**
     * ランキング学校/会社表示
     * @type {boolean}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    showOrganizationInRanking: boolean | null;
    /**
     * ランキング学科・学部/部署表示
     * @type {boolean}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    showDepartmentInRanking: boolean | null;
    /**
     * ランキング補足情報表示
     * @type {boolean}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    showInfoInRanking: boolean | null;
    /**
     * ランキング学籍番号表示
     * @type {boolean}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    showStudentIdInRanking: boolean | null;
    /**
     * ユーザー向けランキング表示有無
     * @type {boolean}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    showRankingForUser: boolean | null;
    /**
     * ユーザーに問題ごとの挑戦状況を表示するか
     * @type {boolean}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    showChallengeStatus: boolean | null;
    /**
     * 作成者
     * @type {string}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    createdBy: string;
    /**
     * 最終更新者
     * @type {string}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    updatedBy: string;
    /**
     * 最終更新日
     * @type {Date}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    updatedAt: Date;
    /**
     * 作成日
     * @type {Date}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    createdAt: Date;
    /**
     * 求人紹介規約に同意させるか
     * @type {boolean}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    isAgreeRecruitRule: boolean | null;
    /**
     * 試験時間(分)
     * @type {number}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    timeLimit: number | null;
    /**
     * ランダム出題数
     * @type {number}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    numOfQuestionsInRandom: number | null;
    /**
     * 何位までランキング表示するか
     * @type {number}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    maxNumOfRanking: number;
    /**
     * GoogleForm編集ページURL
     * @type {string}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    editGoogleFormLink: string;
    /**
     * アンケート説明文
     * @type {string}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    interviewDescription: string;
    /**
     * GoogleForm回答ページURL
     * @type {string}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    answerGoogleFormLink: string;
    /**
     * アンケートを表示有無
     * @type {boolean}
     * @memberof AppSchemasManageSessionsSessionDetailOutSessionDetailOut
     */
    hasInterview: boolean | null;
}

/**
 * Check if a given object implements the AppSchemasManageSessionsSessionDetailOutSessionDetailOut interface.
 */
export function instanceOfAppSchemasManageSessionsSessionDetailOutSessionDetailOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "sessionName" in value;
    isInstance = isInstance && "eventId" in value;
    isInstance = isInstance && "eventName" in value;
    isInstance = isInstance && "eventTheme" in value;
    isInstance = isInstance && "startsAt" in value;
    isInstance = isInstance && "endsAt" in value;
    isInstance = isInstance && "sessionUserCount" in value;
    isInstance = isInstance && "sessionCode" in value;
    isInstance = isInstance && "password" in value;
    isInstance = isInstance && "location" in value;
    isInstance = isInstance && "isPracticeSession" in value;
    isInstance = isInstance && "isActive" in value;
    isInstance = isInstance && "sessionContentCount" in value;
    isInstance = isInstance && "minGraduationYearOfRestriction" in value;
    isInstance = isInstance && "maxGraduationYearOfRestriction" in value;
    isInstance = isInstance && "eventHostId" in value;
    isInstance = isInstance && "eventHostName" in value;
    isInstance = isInstance && "eventSponsors" in value;
    isInstance = isInstance && "availablePgLangs" in value;
    isInstance = isInstance && "unreadCount" in value;
    isInstance = isInstance && "isRandomSession" in value;
    isInstance = isInstance && "isShortTestSession" in value;
    isInstance = isInstance && "isLockedSession" in value;
    isInstance = isInstance && "showRealNameInRanking" in value;
    isInstance = isInstance && "showOrganizationInRanking" in value;
    isInstance = isInstance && "showDepartmentInRanking" in value;
    isInstance = isInstance && "showInfoInRanking" in value;
    isInstance = isInstance && "showStudentIdInRanking" in value;
    isInstance = isInstance && "showRankingForUser" in value;
    isInstance = isInstance && "showChallengeStatus" in value;
    isInstance = isInstance && "createdBy" in value;
    isInstance = isInstance && "updatedBy" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "isAgreeRecruitRule" in value;
    isInstance = isInstance && "timeLimit" in value;
    isInstance = isInstance && "numOfQuestionsInRandom" in value;
    isInstance = isInstance && "maxNumOfRanking" in value;
    isInstance = isInstance && "editGoogleFormLink" in value;
    isInstance = isInstance && "interviewDescription" in value;
    isInstance = isInstance && "answerGoogleFormLink" in value;
    isInstance = isInstance && "hasInterview" in value;

    return isInstance;
}

export function AppSchemasManageSessionsSessionDetailOutSessionDetailOutFromJSON(json: any): AppSchemasManageSessionsSessionDetailOutSessionDetailOut {
    return AppSchemasManageSessionsSessionDetailOutSessionDetailOutFromJSONTyped(json, false);
}

export function AppSchemasManageSessionsSessionDetailOutSessionDetailOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppSchemasManageSessionsSessionDetailOutSessionDetailOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'sessionName': json['sessionName'],
        'eventId': json['eventId'],
        'eventName': json['eventName'],
        'eventTheme': json['eventTheme'],
        'startsAt': (new Date(json['startsAt'])),
        'endsAt': (new Date(json['endsAt'])),
        'sessionType': !exists(json, 'sessionType') ? undefined : SessionTypeFromJSON(json['sessionType']),
        'sessionUserCount': json['sessionUserCount'],
        'sessionCode': json['sessionCode'],
        'password': json['password'],
        'location': json['location'],
        'isPracticeSession': json['isPracticeSession'],
        'isActive': json['isActive'],
        'sessionContentCount': json['sessionContentCount'],
        'minGraduationYearOfRestriction': json['minGraduationYearOfRestriction'],
        'maxGraduationYearOfRestriction': json['maxGraduationYearOfRestriction'],
        'eventHostId': json['eventHostId'],
        'eventHostName': json['eventHostName'],
        'eventSponsors': ((json['eventSponsors'] as Array<any>).map(EventSponsorObjectOutFromJSON)),
        'availablePgLangs': ((json['availablePgLangs'] as Array<any>).map(AppSchemasManageSessionsSessionDetailOutAvailablePgLanguagesFromJSON)),
        'sessionTerm': !exists(json, 'sessionTerm') ? undefined : SessionTermOutFromJSON(json['sessionTerm']),
        'unreadCount': json['unreadCount'],
        'isRandomSession': json['isRandomSession'],
        'isShortTestSession': json['isShortTestSession'],
        'isLockedSession': json['isLockedSession'],
        'showRealNameInRanking': json['showRealNameInRanking'],
        'showOrganizationInRanking': json['showOrganizationInRanking'],
        'showDepartmentInRanking': json['showDepartmentInRanking'],
        'showInfoInRanking': json['showInfoInRanking'],
        'showStudentIdInRanking': json['showStudentIdInRanking'],
        'showRankingForUser': json['showRankingForUser'],
        'showChallengeStatus': json['showChallengeStatus'],
        'createdBy': json['createdBy'],
        'updatedBy': json['updatedBy'],
        'updatedAt': (new Date(json['updatedAt'])),
        'createdAt': (new Date(json['createdAt'])),
        'isAgreeRecruitRule': json['isAgreeRecruitRule'],
        'timeLimit': json['timeLimit'],
        'numOfQuestionsInRandom': json['numOfQuestionsInRandom'],
        'maxNumOfRanking': json['maxNumOfRanking'],
        'editGoogleFormLink': json['editGoogleFormLink'],
        'interviewDescription': json['interviewDescription'],
        'answerGoogleFormLink': json['answerGoogleFormLink'],
        'hasInterview': json['hasInterview'],
    };
}

export function AppSchemasManageSessionsSessionDetailOutSessionDetailOutToJSON(value?: AppSchemasManageSessionsSessionDetailOutSessionDetailOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'sessionName': value.sessionName,
        'eventId': value.eventId,
        'eventName': value.eventName,
        'eventTheme': value.eventTheme,
        'startsAt': (value.startsAt.toISOString()),
        'endsAt': (value.endsAt.toISOString()),
        'sessionType': SessionTypeToJSON(value.sessionType),
        'sessionUserCount': value.sessionUserCount,
        'sessionCode': value.sessionCode,
        'password': value.password,
        'location': value.location,
        'isPracticeSession': value.isPracticeSession,
        'isActive': value.isActive,
        'sessionContentCount': value.sessionContentCount,
        'minGraduationYearOfRestriction': value.minGraduationYearOfRestriction,
        'maxGraduationYearOfRestriction': value.maxGraduationYearOfRestriction,
        'eventHostId': value.eventHostId,
        'eventHostName': value.eventHostName,
        'eventSponsors': ((value.eventSponsors as Array<any>).map(EventSponsorObjectOutToJSON)),
        'availablePgLangs': ((value.availablePgLangs as Array<any>).map(AppSchemasManageSessionsSessionDetailOutAvailablePgLanguagesToJSON)),
        'sessionTerm': SessionTermOutToJSON(value.sessionTerm),
        'unreadCount': value.unreadCount,
        'isRandomSession': value.isRandomSession,
        'isShortTestSession': value.isShortTestSession,
        'isLockedSession': value.isLockedSession,
        'showRealNameInRanking': value.showRealNameInRanking,
        'showOrganizationInRanking': value.showOrganizationInRanking,
        'showDepartmentInRanking': value.showDepartmentInRanking,
        'showInfoInRanking': value.showInfoInRanking,
        'showStudentIdInRanking': value.showStudentIdInRanking,
        'showRankingForUser': value.showRankingForUser,
        'showChallengeStatus': value.showChallengeStatus,
        'createdBy': value.createdBy,
        'updatedBy': value.updatedBy,
        'updatedAt': (value.updatedAt.toISOString()),
        'createdAt': (value.createdAt.toISOString()),
        'isAgreeRecruitRule': value.isAgreeRecruitRule,
        'timeLimit': value.timeLimit,
        'numOfQuestionsInRandom': value.numOfQuestionsInRandom,
        'maxNumOfRanking': value.maxNumOfRanking,
        'editGoogleFormLink': value.editGoogleFormLink,
        'interviewDescription': value.interviewDescription,
        'answerGoogleFormLink': value.answerGoogleFormLink,
        'hasInterview': value.hasInterview,
    };
}

