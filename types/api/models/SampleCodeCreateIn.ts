/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SampleCodeCreateIn
 */
export interface SampleCodeCreateIn {
    /**
     * 
     * @type {number}
     * @memberof SampleCodeCreateIn
     */
    pgLangId: number;
    /**
     * 
     * @type {string}
     * @memberof SampleCodeCreateIn
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof SampleCodeCreateIn
     */
    sourceCode: string;
    /**
     * 
     * @type {string}
     * @memberof SampleCodeCreateIn
     */
    stdin: string;
    /**
     * 
     * @type {string}
     * @memberof SampleCodeCreateIn
     */
    stdout: string;
    /**
     * 
     * @type {number}
     * @memberof SampleCodeCreateIn
     */
    order: number;
}

/**
 * Check if a given object implements the SampleCodeCreateIn interface.
 */
export function instanceOfSampleCodeCreateIn(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "pgLangId" in value;
    isInstance = isInstance && "sourceCode" in value;
    isInstance = isInstance && "stdin" in value;
    isInstance = isInstance && "stdout" in value;
    isInstance = isInstance && "order" in value;

    return isInstance;
}

export function SampleCodeCreateInFromJSON(json: any): SampleCodeCreateIn {
    return SampleCodeCreateInFromJSONTyped(json, false);
}

export function SampleCodeCreateInFromJSONTyped(json: any, ignoreDiscriminator: boolean): SampleCodeCreateIn {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pgLangId': json['pgLangId'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'sourceCode': json['sourceCode'],
        'stdin': json['stdin'],
        'stdout': json['stdout'],
        'order': json['order'],
    };
}

export function SampleCodeCreateInToJSON(value?: SampleCodeCreateIn | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'pgLangId': value.pgLangId,
        'title': value.title,
        'sourceCode': value.sourceCode,
        'stdin': value.stdin,
        'stdout': value.stdout,
        'order': value.order,
    };
}

