/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CurrentJob } from './CurrentJob';
import {
    CurrentJobFromJSON,
    CurrentJobFromJSONTyped,
    CurrentJobToJSON,
} from './CurrentJob';
import type { JobHuntingType } from './JobHuntingType';
import {
    JobHuntingTypeFromJSON,
    JobHuntingTypeFromJSONTyped,
    JobHuntingTypeToJSON,
} from './JobHuntingType';

/**
 * 
 * @export
 * @interface PortfolioDetailOut
 */
export interface PortfolioDetailOut {
    /**
     * 
     * @type {number}
     * @memberof PortfolioDetailOut
     */
    id: number;
    /**
     * 
     * @type {Date}
     * @memberof PortfolioDetailOut
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof PortfolioDetailOut
     */
    updatedAt: Date;
    /**
     * アカウント名／氏名
     * @type {string}
     * @memberof PortfolioDetailOut
     */
    name: string;
    /**
     * 生年月日
     * @type {Date}
     * @memberof PortfolioDetailOut
     */
    birthday?: Date | null;
    /**
     * 
     * @type {CurrentJob}
     * @memberof PortfolioDetailOut
     */
    currentJob: CurrentJob | null;
    /**
     * 住所
     * @type {string}
     * @memberof PortfolioDetailOut
     */
    address: string;
    /**
     * 学校名／企業名
     * @type {string}
     * @memberof PortfolioDetailOut
     */
    orgName?: string | null;
    /**
     * 学部名／部門・所属・役職
     * @type {string}
     * @memberof PortfolioDetailOut
     */
    departmentOrPosition?: string | null;
    /**
     * 卒業年度
     * @type {Date}
     * @memberof PortfolioDetailOut
     */
    graduationDate: Date | null;
    /**
     * 希望業種
     * @type {Array<string>}
     * @memberof PortfolioDetailOut
     */
    idealIndustryGroup?: Array<string>;
    /**
     * 希望職種
     * @type {Array<string>}
     * @memberof PortfolioDetailOut
     */
    idealOccupation?: Array<string>;
    /**
     * 希望勤務地
     * @type {Array<string>}
     * @memberof PortfolioDetailOut
     */
    idealLocation?: Array<string>;
    /**
     * 
     * @type {JobHuntingType}
     * @memberof PortfolioDetailOut
     */
    jobHuntingType?: JobHuntingType | null;
    /**
     * 自己PR
     * @type {string}
     * @memberof PortfolioDetailOut
     */
    selfPr?: string | null;
    /**
     * 成果物タイトル
     * @type {string}
     * @memberof PortfolioDetailOut
     */
    productTitle?: string | null;
    /**
     * 成果物URL
     * @type {string}
     * @memberof PortfolioDetailOut
     */
    productUrl?: string | null;
    /**
     * 成果物ソースコードURL
     * @type {string}
     * @memberof PortfolioDetailOut
     */
    productSourceCodeUrl?: string | null;
    /**
     * 成果物関連画像
     * @type {string}
     * @memberof PortfolioDetailOut
     */
    productImage?: string | null;
    /**
     * 成果物説明
     * @type {string}
     * @memberof PortfolioDetailOut
     */
    productDescription?: string | null;
    /**
     * 資格取得
     * @type {string}
     * @memberof PortfolioDetailOut
     */
    qualification?: string | null;
    /**
     * 英語力
     * @type {string}
     * @memberof PortfolioDetailOut
     */
    englishLevel?: string | null;
    /**
     * 担当者からの一言
     * @type {string}
     * @memberof PortfolioDetailOut
     */
    overview?: string | null;
    /**
     * スカウト承諾済フラグ
     * @type {boolean}
     * @memberof PortfolioDetailOut
     */
    isScoutAcceptable: boolean;
}

/**
 * Check if a given object implements the PortfolioDetailOut interface.
 */
export function instanceOfPortfolioDetailOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "currentJob" in value;
    isInstance = isInstance && "address" in value;
    isInstance = isInstance && "graduationDate" in value;
    isInstance = isInstance && "isScoutAcceptable" in value;

    return isInstance;
}

export function PortfolioDetailOutFromJSON(json: any): PortfolioDetailOut {
    return PortfolioDetailOutFromJSONTyped(json, false);
}

export function PortfolioDetailOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): PortfolioDetailOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'name': json['name'],
        'birthday': !exists(json, 'birthday') ? undefined : (json['birthday'] === null ? null : new Date(json['birthday'])),
        'currentJob': CurrentJobFromJSON(json['currentJob']),
        'address': json['address'],
        'orgName': !exists(json, 'orgName') ? undefined : json['orgName'],
        'departmentOrPosition': !exists(json, 'departmentOrPosition') ? undefined : json['departmentOrPosition'],
        'graduationDate': (json['graduationDate'] === null ? null : new Date(json['graduationDate'])),
        'idealIndustryGroup': !exists(json, 'idealIndustryGroup') ? undefined : json['idealIndustryGroup'],
        'idealOccupation': !exists(json, 'idealOccupation') ? undefined : json['idealOccupation'],
        'idealLocation': !exists(json, 'idealLocation') ? undefined : json['idealLocation'],
        'jobHuntingType': !exists(json, 'jobHuntingType') ? undefined : JobHuntingTypeFromJSON(json['jobHuntingType']),
        'selfPr': !exists(json, 'selfPr') ? undefined : json['selfPr'],
        'productTitle': !exists(json, 'productTitle') ? undefined : json['productTitle'],
        'productUrl': !exists(json, 'productUrl') ? undefined : json['productUrl'],
        'productSourceCodeUrl': !exists(json, 'productSourceCodeUrl') ? undefined : json['productSourceCodeUrl'],
        'productImage': !exists(json, 'productImage') ? undefined : json['productImage'],
        'productDescription': !exists(json, 'productDescription') ? undefined : json['productDescription'],
        'qualification': !exists(json, 'qualification') ? undefined : json['qualification'],
        'englishLevel': !exists(json, 'englishLevel') ? undefined : json['englishLevel'],
        'overview': !exists(json, 'overview') ? undefined : json['overview'],
        'isScoutAcceptable': json['isScoutAcceptable'],
    };
}

export function PortfolioDetailOutToJSON(value?: PortfolioDetailOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
        'name': value.name,
        'birthday': value.birthday === undefined ? undefined : (value.birthday === null ? null : value.birthday.toISOString().substring(0,10)),
        'currentJob': CurrentJobToJSON(value.currentJob),
        'address': value.address,
        'orgName': value.orgName,
        'departmentOrPosition': value.departmentOrPosition,
        'graduationDate': (value.graduationDate === null ? null : value.graduationDate.toISOString().substring(0,10)),
        'idealIndustryGroup': value.idealIndustryGroup,
        'idealOccupation': value.idealOccupation,
        'idealLocation': value.idealLocation,
        'jobHuntingType': JobHuntingTypeToJSON(value.jobHuntingType),
        'selfPr': value.selfPr,
        'productTitle': value.productTitle,
        'productUrl': value.productUrl,
        'productSourceCodeUrl': value.productSourceCodeUrl,
        'productImage': value.productImage,
        'productDescription': value.productDescription,
        'qualification': value.qualification,
        'englishLevel': value.englishLevel,
        'overview': value.overview,
        'isScoutAcceptable': value.isScoutAcceptable,
    };
}

