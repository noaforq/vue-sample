/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CurrentJob } from './CurrentJob';
import {
    CurrentJobFromJSON,
    CurrentJobFromJSONTyped,
    CurrentJobToJSON,
} from './CurrentJob';
import type { MajorCourse } from './MajorCourse';
import {
    MajorCourseFromJSON,
    MajorCourseFromJSONTyped,
    MajorCourseToJSON,
} from './MajorCourse';
import type { TechFulSchoolDivision } from './TechFulSchoolDivision';
import {
    TechFulSchoolDivisionFromJSON,
    TechFulSchoolDivisionFromJSONTyped,
    TechFulSchoolDivisionToJSON,
} from './TechFulSchoolDivision';
import type { WorkExperienceIn } from './WorkExperienceIn';
import {
    WorkExperienceInFromJSON,
    WorkExperienceInFromJSONTyped,
    WorkExperienceInToJSON,
} from './WorkExperienceIn';

/**
 * 
 * @export
 * @interface UserCareerIn
 */
export interface UserCareerIn {
    /**
     * 
     * @type {CurrentJob}
     * @memberof UserCareerIn
     */
    currentJob: CurrentJob;
    /**
     * 
     * @type {TechFulSchoolDivision}
     * @memberof UserCareerIn
     */
    schoolDivisionId?: TechFulSchoolDivision | null;
    /**
     * 学校名
     * @type {string}
     * @memberof UserCareerIn
     */
    schoolName?: string | null;
    /**
     * 学校マスタID
     * @type {number}
     * @memberof UserCareerIn
     */
    schoolMasterId?: number | null;
    /**
     * 学部名
     * @type {string}
     * @memberof UserCareerIn
     */
    schoolFacultyName?: string | null;
    /**
     * 学部マスタID
     * @type {number}
     * @memberof UserCareerIn
     */
    schoolFacultyMasterId?: number | null;
    /**
     * 学科名
     * @type {string}
     * @memberof UserCareerIn
     */
    schoolDepartmentName?: string | null;
    /**
     * 学科マスタID
     * @type {number}
     * @memberof UserCareerIn
     */
    schoolDepartmentMasterId?: number | null;
    /**
     * 卒業予定・卒業年月
     * @type {Date}
     * @memberof UserCareerIn
     */
    graduationDate: Date;
    /**
     * 学籍番号
     * @type {string}
     * @memberof UserCareerIn
     */
    studentNumber?: string | null;
    /**
     * 補足情報
     * @type {string}
     * @memberof UserCareerIn
     */
    extraInfo?: string | null;
    /**
     * 
     * @type {MajorCourse}
     * @memberof UserCareerIn
     */
    majorCourse?: MajorCourse | null;
    /**
     * 
     * @type {Array<WorkExperienceIn>}
     * @memberof UserCareerIn
     */
    workExperiences: Array<WorkExperienceIn>;
}

/**
 * Check if a given object implements the UserCareerIn interface.
 */
export function instanceOfUserCareerIn(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "currentJob" in value;
    isInstance = isInstance && "graduationDate" in value;
    isInstance = isInstance && "workExperiences" in value;

    return isInstance;
}

export function UserCareerInFromJSON(json: any): UserCareerIn {
    return UserCareerInFromJSONTyped(json, false);
}

export function UserCareerInFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserCareerIn {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'currentJob': CurrentJobFromJSON(json['currentJob']),
        'schoolDivisionId': !exists(json, 'schoolDivisionId') ? undefined : TechFulSchoolDivisionFromJSON(json['schoolDivisionId']),
        'schoolName': !exists(json, 'schoolName') ? undefined : json['schoolName'],
        'schoolMasterId': !exists(json, 'schoolMasterId') ? undefined : json['schoolMasterId'],
        'schoolFacultyName': !exists(json, 'schoolFacultyName') ? undefined : json['schoolFacultyName'],
        'schoolFacultyMasterId': !exists(json, 'schoolFacultyMasterId') ? undefined : json['schoolFacultyMasterId'],
        'schoolDepartmentName': !exists(json, 'schoolDepartmentName') ? undefined : json['schoolDepartmentName'],
        'schoolDepartmentMasterId': !exists(json, 'schoolDepartmentMasterId') ? undefined : json['schoolDepartmentMasterId'],
        'graduationDate': (new Date(json['graduationDate'])),
        'studentNumber': !exists(json, 'studentNumber') ? undefined : json['studentNumber'],
        'extraInfo': !exists(json, 'extraInfo') ? undefined : json['extraInfo'],
        'majorCourse': !exists(json, 'majorCourse') ? undefined : MajorCourseFromJSON(json['majorCourse']),
        'workExperiences': ((json['workExperiences'] as Array<any>).map(WorkExperienceInFromJSON)),
    };
}

export function UserCareerInToJSON(value?: UserCareerIn | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'currentJob': CurrentJobToJSON(value.currentJob),
        'schoolDivisionId': TechFulSchoolDivisionToJSON(value.schoolDivisionId),
        'schoolName': value.schoolName,
        'schoolMasterId': value.schoolMasterId,
        'schoolFacultyName': value.schoolFacultyName,
        'schoolFacultyMasterId': value.schoolFacultyMasterId,
        'schoolDepartmentName': value.schoolDepartmentName,
        'schoolDepartmentMasterId': value.schoolDepartmentMasterId,
        'graduationDate': (value.graduationDate.toISOString().substring(0,10)),
        'studentNumber': value.studentNumber,
        'extraInfo': value.extraInfo,
        'majorCourse': MajorCourseToJSON(value.majorCourse),
        'workExperiences': ((value.workExperiences as Array<any>).map(WorkExperienceInToJSON)),
    };
}

