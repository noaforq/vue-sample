/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AppSchemasGeneralSelectionsGeneralGetSelectionsOrganizationDetail } from './AppSchemasGeneralSelectionsGeneralGetSelectionsOrganizationDetail';
import {
    AppSchemasGeneralSelectionsGeneralGetSelectionsOrganizationDetailFromJSON,
    AppSchemasGeneralSelectionsGeneralGetSelectionsOrganizationDetailFromJSONTyped,
    AppSchemasGeneralSelectionsGeneralGetSelectionsOrganizationDetailToJSON,
} from './AppSchemasGeneralSelectionsGeneralGetSelectionsOrganizationDetail';
import type { Job } from './Job';
import {
    JobFromJSON,
    JobFromJSONTyped,
    JobToJSON,
} from './Job';

/**
 * 
 * @export
 * @interface SelectionDetailOut
 */
export interface SelectionDetailOut {
    /**
     * ID
     * @type {number}
     * @memberof SelectionDetailOut
     */
    id: number;
    /**
     * ChatRoomID
     * @type {number}
     * @memberof SelectionDetailOut
     */
    chatRoomId: number;
    /**
     * 
     * @type {Job}
     * @memberof SelectionDetailOut
     */
    job: Job | null;
    /**
     * 
     * @type {AppSchemasGeneralSelectionsGeneralGetSelectionsOrganizationDetail}
     * @memberof SelectionDetailOut
     */
    organization: AppSchemasGeneralSelectionsGeneralGetSelectionsOrganizationDetail;
    /**
     * 選考タイプ
     * @type {number}
     * @memberof SelectionDetailOut
     */
    selectionType: number;
    /**
     * 選考ステップ
     * @type {number}
     * @memberof SelectionDetailOut
     */
    selectionStep: number;
    /**
     * 選考終了時の選考ステップ
     * @type {number}
     * @memberof SelectionDetailOut
     */
    selectionStepWhenFinished: number | null;
    /**
     * 選考開始予定日時
     * @type {Date}
     * @memberof SelectionDetailOut
     */
    startsAt: Date | null;
    /**
     * 選考終了予定日時
     * @type {Date}
     * @memberof SelectionDetailOut
     */
    endsAt: Date | null;
    /**
     * メモ
     * @type {string}
     * @memberof SelectionDetailOut
     */
    memo: string;
    /**
     * 作成日時
     * @type {Date}
     * @memberof SelectionDetailOut
     */
    createdAt: Date;
    /**
     * 更新日時
     * @type {Date}
     * @memberof SelectionDetailOut
     */
    updatedAt: Date;
    /**
     * 最終チャット日
     * @type {Date}
     * @memberof SelectionDetailOut
     */
    latestChatDate?: Date | null;
    /**
     * お気に入りか
     * @type {boolean}
     * @memberof SelectionDetailOut
     */
    isFavorite: boolean;
}

/**
 * Check if a given object implements the SelectionDetailOut interface.
 */
export function instanceOfSelectionDetailOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "chatRoomId" in value;
    isInstance = isInstance && "job" in value;
    isInstance = isInstance && "organization" in value;
    isInstance = isInstance && "selectionType" in value;
    isInstance = isInstance && "selectionStep" in value;
    isInstance = isInstance && "selectionStepWhenFinished" in value;
    isInstance = isInstance && "startsAt" in value;
    isInstance = isInstance && "endsAt" in value;
    isInstance = isInstance && "memo" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "isFavorite" in value;

    return isInstance;
}

export function SelectionDetailOutFromJSON(json: any): SelectionDetailOut {
    return SelectionDetailOutFromJSONTyped(json, false);
}

export function SelectionDetailOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): SelectionDetailOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'chatRoomId': json['chatRoomId'],
        'job': JobFromJSON(json['job']),
        'organization': AppSchemasGeneralSelectionsGeneralGetSelectionsOrganizationDetailFromJSON(json['organization']),
        'selectionType': json['selectionType'],
        'selectionStep': json['selectionStep'],
        'selectionStepWhenFinished': json['selectionStepWhenFinished'],
        'startsAt': (json['startsAt'] === null ? null : new Date(json['startsAt'])),
        'endsAt': (json['endsAt'] === null ? null : new Date(json['endsAt'])),
        'memo': json['memo'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'latestChatDate': !exists(json, 'latestChatDate') ? undefined : (json['latestChatDate'] === null ? null : new Date(json['latestChatDate'])),
        'isFavorite': json['isFavorite'],
    };
}

export function SelectionDetailOutToJSON(value?: SelectionDetailOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'chatRoomId': value.chatRoomId,
        'job': JobToJSON(value.job),
        'organization': AppSchemasGeneralSelectionsGeneralGetSelectionsOrganizationDetailToJSON(value.organization),
        'selectionType': value.selectionType,
        'selectionStep': value.selectionStep,
        'selectionStepWhenFinished': value.selectionStepWhenFinished,
        'startsAt': (value.startsAt === null ? null : value.startsAt.toISOString()),
        'endsAt': (value.endsAt === null ? null : value.endsAt.toISOString()),
        'memo': value.memo,
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
        'latestChatDate': value.latestChatDate === undefined ? undefined : (value.latestChatDate === null ? null : value.latestChatDate.toISOString()),
        'isFavorite': value.isFavorite,
    };
}

