/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GeneralSessionRankingBaseOut
 */
export interface GeneralSessionRankingBaseOut {
    /**
     * 順位
     * @type {number}
     * @memberof GeneralSessionRankingBaseOut
     */
    order: number;
    /**
     * 表示名
     * @type {string}
     * @memberof GeneralSessionRankingBaseOut
     */
    displayName: string;
    /**
     * スコア
     * @type {number}
     * @memberof GeneralSessionRankingBaseOut
     */
    score: number;
    /**
     * 高難易度の問題に解答しているか
     * @type {boolean}
     * @memberof GeneralSessionRankingBaseOut
     */
    isHardQuestion: boolean;
    /**
     * 居住している都道府県
     * @type {string}
     * @memberof GeneralSessionRankingBaseOut
     */
    prefecture?: string | null;
    /**
     * 合格問題数
     * @type {number}
     * @memberof GeneralSessionRankingBaseOut
     */
    totalPass?: number | null;
    /**
     * 合計解答時間
     * @type {number}
     * @memberof GeneralSessionRankingBaseOut
     */
    elapsedTimeToTotalPass?: number | null;
}

/**
 * Check if a given object implements the GeneralSessionRankingBaseOut interface.
 */
export function instanceOfGeneralSessionRankingBaseOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "order" in value;
    isInstance = isInstance && "displayName" in value;
    isInstance = isInstance && "score" in value;
    isInstance = isInstance && "isHardQuestion" in value;

    return isInstance;
}

export function GeneralSessionRankingBaseOutFromJSON(json: any): GeneralSessionRankingBaseOut {
    return GeneralSessionRankingBaseOutFromJSONTyped(json, false);
}

export function GeneralSessionRankingBaseOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): GeneralSessionRankingBaseOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'order': json['order'],
        'displayName': json['displayName'],
        'score': json['score'],
        'isHardQuestion': json['isHardQuestion'],
        'prefecture': !exists(json, 'prefecture') ? undefined : json['prefecture'],
        'totalPass': !exists(json, 'totalPass') ? undefined : json['totalPass'],
        'elapsedTimeToTotalPass': !exists(json, 'elapsedTimeToTotalPass') ? undefined : json['elapsedTimeToTotalPass'],
    };
}

export function GeneralSessionRankingBaseOutToJSON(value?: GeneralSessionRankingBaseOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'order': value.order,
        'displayName': value.displayName,
        'score': value.score,
        'isHardQuestion': value.isHardQuestion,
        'prefecture': value.prefecture,
        'totalPass': value.totalPass,
        'elapsedTimeToTotalPass': value.elapsedTimeToTotalPass,
    };
}

