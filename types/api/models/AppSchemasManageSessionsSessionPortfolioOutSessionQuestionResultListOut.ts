/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Pglang } from './Pglang';
import {
    PglangFromJSON,
    PglangFromJSONTyped,
    PglangToJSON,
} from './Pglang';

/**
 * 問題成績
 * @export
 * @interface AppSchemasManageSessionsSessionPortfolioOutSessionQuestionResultListOut
 */
export interface AppSchemasManageSessionsSessionPortfolioOutSessionQuestionResultListOut {
    /**
     * 問題成績ID
     * @type {number}
     * @memberof AppSchemasManageSessionsSessionPortfolioOutSessionQuestionResultListOut
     */
    questionResultId: number;
    /**
     * 問題名
     * @type {string}
     * @memberof AppSchemasManageSessionsSessionPortfolioOutSessionQuestionResultListOut
     */
    questionTitle: string;
    /**
     * 難易度
     * @type {number}
     * @memberof AppSchemasManageSessionsSessionPortfolioOutSessionQuestionResultListOut
     */
    difficulty: number;
    /**
     * 
     * @type {Pglang}
     * @memberof AppSchemasManageSessionsSessionPortfolioOutSessionQuestionResultListOut
     */
    pgLang?: Pglang | null;
    /**
     * 提出回数
     * @type {number}
     * @memberof AppSchemasManageSessionsSessionPortfolioOutSessionQuestionResultListOut
     */
    submitCount: number;
    /**
     * エラー回数
     * @type {number}
     * @memberof AppSchemasManageSessionsSessionPortfolioOutSessionQuestionResultListOut
     */
    failedCount: number;
    /**
     * コード
     * @type {number}
     * @memberof AppSchemasManageSessionsSessionPortfolioOutSessionQuestionResultListOut
     */
    sorcecode: number;
    /**
     * 目標時間内に合格か
     * @type {boolean}
     * @memberof AppSchemasManageSessionsSessionPortfolioOutSessionQuestionResultListOut
     */
    isPassedInTime: boolean;
    /**
     * ケース正解率
     * @type {number}
     * @memberof AppSchemasManageSessionsSessionPortfolioOutSessionQuestionResultListOut
     */
    casePassedPercent: number;
    /**
     * スコア
     * @type {number}
     * @memberof AppSchemasManageSessionsSessionPortfolioOutSessionQuestionResultListOut
     */
    score: number | null;
}

/**
 * Check if a given object implements the AppSchemasManageSessionsSessionPortfolioOutSessionQuestionResultListOut interface.
 */
export function instanceOfAppSchemasManageSessionsSessionPortfolioOutSessionQuestionResultListOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "questionResultId" in value;
    isInstance = isInstance && "questionTitle" in value;
    isInstance = isInstance && "difficulty" in value;
    isInstance = isInstance && "submitCount" in value;
    isInstance = isInstance && "failedCount" in value;
    isInstance = isInstance && "sorcecode" in value;
    isInstance = isInstance && "isPassedInTime" in value;
    isInstance = isInstance && "casePassedPercent" in value;
    isInstance = isInstance && "score" in value;

    return isInstance;
}

export function AppSchemasManageSessionsSessionPortfolioOutSessionQuestionResultListOutFromJSON(json: any): AppSchemasManageSessionsSessionPortfolioOutSessionQuestionResultListOut {
    return AppSchemasManageSessionsSessionPortfolioOutSessionQuestionResultListOutFromJSONTyped(json, false);
}

export function AppSchemasManageSessionsSessionPortfolioOutSessionQuestionResultListOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppSchemasManageSessionsSessionPortfolioOutSessionQuestionResultListOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'questionResultId': json['questionResultId'],
        'questionTitle': json['questionTitle'],
        'difficulty': json['difficulty'],
        'pgLang': !exists(json, 'pgLang') ? undefined : PglangFromJSON(json['pgLang']),
        'submitCount': json['submitCount'],
        'failedCount': json['failedCount'],
        'sorcecode': json['sorcecode'],
        'isPassedInTime': json['isPassedInTime'],
        'casePassedPercent': json['casePassedPercent'],
        'score': json['score'],
    };
}

export function AppSchemasManageSessionsSessionPortfolioOutSessionQuestionResultListOutToJSON(value?: AppSchemasManageSessionsSessionPortfolioOutSessionQuestionResultListOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'questionResultId': value.questionResultId,
        'questionTitle': value.questionTitle,
        'difficulty': value.difficulty,
        'pgLang': PglangToJSON(value.pgLang),
        'submitCount': value.submitCount,
        'failedCount': value.failedCount,
        'sorcecode': value.sorcecode,
        'isPassedInTime': value.isPassedInTime,
        'casePassedPercent': value.casePassedPercent,
        'score': value.score,
    };
}

