/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AppSchemasManageSelectionsSelectionListOutUserPreferredPgLanguageListOut } from './AppSchemasManageSelectionsSelectionListOutUserPreferredPgLanguageListOut';
import {
    AppSchemasManageSelectionsSelectionListOutUserPreferredPgLanguageListOutFromJSON,
    AppSchemasManageSelectionsSelectionListOutUserPreferredPgLanguageListOutFromJSONTyped,
    AppSchemasManageSelectionsSelectionListOutUserPreferredPgLanguageListOutToJSON,
} from './AppSchemasManageSelectionsSelectionListOutUserPreferredPgLanguageListOut';
import type { EmploymentStatus } from './EmploymentStatus';
import {
    EmploymentStatusFromJSON,
    EmploymentStatusFromJSONTyped,
    EmploymentStatusToJSON,
} from './EmploymentStatus';
import type { JobSelectionType } from './JobSelectionType';
import {
    JobSelectionTypeFromJSON,
    JobSelectionTypeFromJSONTyped,
    JobSelectionTypeToJSON,
} from './JobSelectionType';
import type { SelectionStep } from './SelectionStep';
import {
    SelectionStepFromJSON,
    SelectionStepFromJSONTyped,
    SelectionStepToJSON,
} from './SelectionStep';
import type { SelectionType } from './SelectionType';
import {
    SelectionTypeFromJSON,
    SelectionTypeFromJSONTyped,
    SelectionTypeToJSON,
} from './SelectionType';
import type { SkillLevel } from './SkillLevel';
import {
    SkillLevelFromJSON,
    SkillLevelFromJSONTyped,
    SkillLevelToJSON,
} from './SkillLevel';

/**
 * 
 * @export
 * @interface SelectionList
 */
export interface SelectionList {
    /**
     * 選考情報ID
     * @type {number}
     * @memberof SelectionList
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof SelectionList
     */
    chatRoomId: number;
    /**
     * 
     * @type {SelectionType}
     * @memberof SelectionList
     */
    selectionType: SelectionType;
    /**
     * 
     * @type {SelectionStep}
     * @memberof SelectionList
     */
    selectionStep?: SelectionStep | null;
    /**
     * 
     * @type {SelectionStep}
     * @memberof SelectionList
     */
    selectionStepWhenFinished?: SelectionStep | null;
    /**
     * 選考開始予定日時
     * @type {Date}
     * @memberof SelectionList
     */
    startsAt: Date | null;
    /**
     * 選考終了予定日時
     * @type {Date}
     * @memberof SelectionList
     */
    endsAt: Date | null;
    /**
     * メモ
     * @type {string}
     * @memberof SelectionList
     */
    memo: string;
    /**
     * お気に入り選考か
     * @type {boolean}
     * @memberof SelectionList
     */
    isFavorite: boolean;
    /**
     * 
     * @type {Date}
     * @memberof SelectionList
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof SelectionList
     */
    updatedAt: Date;
    /**
     * 
     * @type {number}
     * @memberof SelectionList
     */
    userId: number;
    /**
     * 
     * @type {string}
     * @memberof SelectionList
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof SelectionList
     */
    realName: string | null;
    /**
     * 出身都道府県
     * @type {string}
     * @memberof SelectionList
     */
    prefectureName: string | null;
    /**
     * 年齢
     * @type {number}
     * @memberof SelectionList
     */
    age: number | null;
    /**
     * 卒業年度
     * @type {Date}
     * @memberof SelectionList
     */
    graduationDate: Date | null;
    /**
     * 
     * @type {SkillLevel}
     * @memberof SelectionList
     */
    skillLevel: SkillLevel | null;
    /**
     * 
     * @type {Array<AppSchemasManageSelectionsSelectionListOutUserPreferredPgLanguageListOut>}
     * @memberof SelectionList
     */
    preferredPgLangs: Array<AppSchemasManageSelectionsSelectionListOutUserPreferredPgLanguageListOut>;
    /**
     * 
     * @type {number}
     * @memberof SelectionList
     */
    organizationId: number;
    /**
     * 企業名
     * @type {string}
     * @memberof SelectionList
     */
    organizationName: string;
    /**
     * 
     * @type {number}
     * @memberof SelectionList
     */
    jobId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof SelectionList
     */
    jobTitle: string;
    /**
     * 
     * @type {EmploymentStatus}
     * @memberof SelectionList
     */
    employmentStatus?: EmploymentStatus | null;
    /**
     * 
     * @type {JobSelectionType}
     * @memberof SelectionList
     */
    jobSelectionType?: JobSelectionType | null;
}

/**
 * Check if a given object implements the SelectionList interface.
 */
export function instanceOfSelectionList(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "chatRoomId" in value;
    isInstance = isInstance && "selectionType" in value;
    isInstance = isInstance && "startsAt" in value;
    isInstance = isInstance && "endsAt" in value;
    isInstance = isInstance && "memo" in value;
    isInstance = isInstance && "isFavorite" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "userId" in value;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "realName" in value;
    isInstance = isInstance && "prefectureName" in value;
    isInstance = isInstance && "age" in value;
    isInstance = isInstance && "graduationDate" in value;
    isInstance = isInstance && "skillLevel" in value;
    isInstance = isInstance && "preferredPgLangs" in value;
    isInstance = isInstance && "organizationId" in value;
    isInstance = isInstance && "organizationName" in value;
    isInstance = isInstance && "jobTitle" in value;

    return isInstance;
}

export function SelectionListFromJSON(json: any): SelectionList {
    return SelectionListFromJSONTyped(json, false);
}

export function SelectionListFromJSONTyped(json: any, ignoreDiscriminator: boolean): SelectionList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'chatRoomId': json['chatRoomId'],
        'selectionType': SelectionTypeFromJSON(json['selectionType']),
        'selectionStep': !exists(json, 'selectionStep') ? undefined : SelectionStepFromJSON(json['selectionStep']),
        'selectionStepWhenFinished': !exists(json, 'selectionStepWhenFinished') ? undefined : SelectionStepFromJSON(json['selectionStepWhenFinished']),
        'startsAt': (json['startsAt'] === null ? null : new Date(json['startsAt'])),
        'endsAt': (json['endsAt'] === null ? null : new Date(json['endsAt'])),
        'memo': json['memo'],
        'isFavorite': json['isFavorite'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'userId': json['userId'],
        'username': json['username'],
        'realName': json['realName'],
        'prefectureName': json['prefectureName'],
        'age': json['age'],
        'graduationDate': (json['graduationDate'] === null ? null : new Date(json['graduationDate'])),
        'skillLevel': SkillLevelFromJSON(json['skillLevel']),
        'preferredPgLangs': ((json['preferredPgLangs'] as Array<any>).map(AppSchemasManageSelectionsSelectionListOutUserPreferredPgLanguageListOutFromJSON)),
        'organizationId': json['organizationId'],
        'organizationName': json['organizationName'],
        'jobId': !exists(json, 'jobId') ? undefined : json['jobId'],
        'jobTitle': json['jobTitle'],
        'employmentStatus': !exists(json, 'employmentStatus') ? undefined : EmploymentStatusFromJSON(json['employmentStatus']),
        'jobSelectionType': !exists(json, 'jobSelectionType') ? undefined : JobSelectionTypeFromJSON(json['jobSelectionType']),
    };
}

export function SelectionListToJSON(value?: SelectionList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'chatRoomId': value.chatRoomId,
        'selectionType': SelectionTypeToJSON(value.selectionType),
        'selectionStep': SelectionStepToJSON(value.selectionStep),
        'selectionStepWhenFinished': SelectionStepToJSON(value.selectionStepWhenFinished),
        'startsAt': (value.startsAt === null ? null : value.startsAt.toISOString()),
        'endsAt': (value.endsAt === null ? null : value.endsAt.toISOString()),
        'memo': value.memo,
        'isFavorite': value.isFavorite,
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
        'userId': value.userId,
        'username': value.username,
        'realName': value.realName,
        'prefectureName': value.prefectureName,
        'age': value.age,
        'graduationDate': (value.graduationDate === null ? null : value.graduationDate.toISOString().substring(0,10)),
        'skillLevel': SkillLevelToJSON(value.skillLevel),
        'preferredPgLangs': ((value.preferredPgLangs as Array<any>).map(AppSchemasManageSelectionsSelectionListOutUserPreferredPgLanguageListOutToJSON)),
        'organizationId': value.organizationId,
        'organizationName': value.organizationName,
        'jobId': value.jobId,
        'jobTitle': value.jobTitle,
        'employmentStatus': EmploymentStatusToJSON(value.employmentStatus),
        'jobSelectionType': JobSelectionTypeToJSON(value.jobSelectionType),
    };
}

