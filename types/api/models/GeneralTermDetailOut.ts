/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PersonalIdInfoTermDetailOut } from './PersonalIdInfoTermDetailOut';
import {
    PersonalIdInfoTermDetailOutFromJSON,
    PersonalIdInfoTermDetailOutFromJSONTyped,
    PersonalIdInfoTermDetailOutToJSON,
} from './PersonalIdInfoTermDetailOut';
import type { TermOfUseDetailOut } from './TermOfUseDetailOut';
import {
    TermOfUseDetailOutFromJSON,
    TermOfUseDetailOutFromJSONTyped,
    TermOfUseDetailOutToJSON,
} from './TermOfUseDetailOut';

/**
 * 
 * @export
 * @interface GeneralTermDetailOut
 */
export interface GeneralTermDetailOut {
    /**
     * 
     * @type {PersonalIdInfoTermDetailOut}
     * @memberof GeneralTermDetailOut
     */
    hrPersonalIdInfo: PersonalIdInfoTermDetailOut;
    /**
     * 
     * @type {TermOfUseDetailOut}
     * @memberof GeneralTermDetailOut
     */
    hrTermOfUse: TermOfUseDetailOut;
}

/**
 * Check if a given object implements the GeneralTermDetailOut interface.
 */
export function instanceOfGeneralTermDetailOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "hrPersonalIdInfo" in value;
    isInstance = isInstance && "hrTermOfUse" in value;

    return isInstance;
}

export function GeneralTermDetailOutFromJSON(json: any): GeneralTermDetailOut {
    return GeneralTermDetailOutFromJSONTyped(json, false);
}

export function GeneralTermDetailOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): GeneralTermDetailOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hrPersonalIdInfo': PersonalIdInfoTermDetailOutFromJSON(json['hrPersonalIdInfo']),
        'hrTermOfUse': TermOfUseDetailOutFromJSON(json['hrTermOfUse']),
    };
}

export function GeneralTermDetailOutToJSON(value?: GeneralTermDetailOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hrPersonalIdInfo': PersonalIdInfoTermDetailOutToJSON(value.hrPersonalIdInfo),
        'hrTermOfUse': TermOfUseDetailOutToJSON(value.hrTermOfUse),
    };
}

