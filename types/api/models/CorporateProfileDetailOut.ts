/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CompanyOfficeDetailOut } from './CompanyOfficeDetailOut';
import {
    CompanyOfficeDetailOutFromJSON,
    CompanyOfficeDetailOutFromJSONTyped,
    CompanyOfficeDetailOutToJSON,
} from './CompanyOfficeDetailOut';

/**
 * 
 * @export
 * @interface CorporateProfileDetailOut
 */
export interface CorporateProfileDetailOut {
    /**
     * 
     * @type {number}
     * @memberof CorporateProfileDetailOut
     */
    id: number;
    /**
     * 企業名
     * @type {string}
     * @memberof CorporateProfileDetailOut
     */
    name: string;
    /**
     * 企業正式名称
     * @type {string}
     * @memberof CorporateProfileDetailOut
     */
    formalName: string;
    /**
     * 企業ロゴ
     * @type {string}
     * @memberof CorporateProfileDetailOut
     */
    logo: string;
    /**
     * 企業イメージ
     * @type {string}
     * @memberof CorporateProfileDetailOut
     */
    image: string;
    /**
     * 企業HPのURL
     * @type {string}
     * @memberof CorporateProfileDetailOut
     */
    url: string;
    /**
     * 企業メールアドレス
     * @type {string}
     * @memberof CorporateProfileDetailOut
     */
    email: string;
    /**
     * 企業紹介文(会社概要)
     * @type {string}
     * @memberof CorporateProfileDetailOut
     */
    description: string;
    /**
     * 事業内容
     * @type {string}
     * @memberof CorporateProfileDetailOut
     */
    businessDetails: string;
    /**
     * 企業理念
     * @type {string}
     * @memberof CorporateProfileDetailOut
     */
    philosophy: string;
    /**
     * 採用実績
     * @type {string}
     * @memberof CorporateProfileDetailOut
     */
    recruitmentRecord: string;
    /**
     * 企業住所
     * @type {string}
     * @memberof CorporateProfileDetailOut
     */
    address: string;
    /**
     * 会社設立日
     * @type {string}
     * @memberof CorporateProfileDetailOut
     */
    establishmentDate: string;
    /**
     * 会社資本金
     * @type {string}
     * @memberof CorporateProfileDetailOut
     */
    capitalStock: string;
    /**
     * 従業員数
     * @type {string}
     * @memberof CorporateProfileDetailOut
     */
    numOfEmployees: string;
    /**
     * 従業員平均年齢
     * @type {string}
     * @memberof CorporateProfileDetailOut
     */
    averageAge: string;
    /**
     * 売上
     * @type {string}
     * @memberof CorporateProfileDetailOut
     */
    sales: string;
    /**
     * 代表者名
     * @type {string}
     * @memberof CorporateProfileDetailOut
     */
    representative: string;
    /**
     * 主要株主
     * @type {string}
     * @memberof CorporateProfileDetailOut
     */
    majorShareholder: string;
    /**
     * 
     * @type {Array<CompanyOfficeDetailOut>}
     * @memberof CorporateProfileDetailOut
     */
    companyOffices: Array<CompanyOfficeDetailOut>;
}

/**
 * Check if a given object implements the CorporateProfileDetailOut interface.
 */
export function instanceOfCorporateProfileDetailOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "formalName" in value;
    isInstance = isInstance && "logo" in value;
    isInstance = isInstance && "image" in value;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "businessDetails" in value;
    isInstance = isInstance && "philosophy" in value;
    isInstance = isInstance && "recruitmentRecord" in value;
    isInstance = isInstance && "address" in value;
    isInstance = isInstance && "establishmentDate" in value;
    isInstance = isInstance && "capitalStock" in value;
    isInstance = isInstance && "numOfEmployees" in value;
    isInstance = isInstance && "averageAge" in value;
    isInstance = isInstance && "sales" in value;
    isInstance = isInstance && "representative" in value;
    isInstance = isInstance && "majorShareholder" in value;
    isInstance = isInstance && "companyOffices" in value;

    return isInstance;
}

export function CorporateProfileDetailOutFromJSON(json: any): CorporateProfileDetailOut {
    return CorporateProfileDetailOutFromJSONTyped(json, false);
}

export function CorporateProfileDetailOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): CorporateProfileDetailOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'formalName': json['formalName'],
        'logo': json['logo'],
        'image': json['image'],
        'url': json['url'],
        'email': json['email'],
        'description': json['description'],
        'businessDetails': json['businessDetails'],
        'philosophy': json['philosophy'],
        'recruitmentRecord': json['recruitmentRecord'],
        'address': json['address'],
        'establishmentDate': json['establishmentDate'],
        'capitalStock': json['capitalStock'],
        'numOfEmployees': json['numOfEmployees'],
        'averageAge': json['averageAge'],
        'sales': json['sales'],
        'representative': json['representative'],
        'majorShareholder': json['majorShareholder'],
        'companyOffices': ((json['companyOffices'] as Array<any>).map(CompanyOfficeDetailOutFromJSON)),
    };
}

export function CorporateProfileDetailOutToJSON(value?: CorporateProfileDetailOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'formalName': value.formalName,
        'logo': value.logo,
        'image': value.image,
        'url': value.url,
        'email': value.email,
        'description': value.description,
        'businessDetails': value.businessDetails,
        'philosophy': value.philosophy,
        'recruitmentRecord': value.recruitmentRecord,
        'address': value.address,
        'establishmentDate': value.establishmentDate,
        'capitalStock': value.capitalStock,
        'numOfEmployees': value.numOfEmployees,
        'averageAge': value.averageAge,
        'sales': value.sales,
        'representative': value.representative,
        'majorShareholder': value.majorShareholder,
        'companyOffices': ((value.companyOffices as Array<any>).map(CompanyOfficeDetailOutToJSON)),
    };
}

