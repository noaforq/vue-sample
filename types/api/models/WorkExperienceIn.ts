/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WorkExperienceIn
 */
export interface WorkExperienceIn {
    /**
     * 企業名
     * @type {string}
     * @memberof WorkExperienceIn
     */
    companyName?: string | null;
    /**
     * 部門･所属･役割
     * @type {string}
     * @memberof WorkExperienceIn
     */
    department?: string | null;
    /**
     * 職種
     * @type {string}
     * @memberof WorkExperienceIn
     */
    occupation?: string | null;
    /**
     * 在籍期間from(年月のみ使用)
     * @type {Date}
     * @memberof WorkExperienceIn
     */
    enrollmentPeriodFrom?: Date | null;
    /**
     * 在籍期間to(年月のみ使用)
     * @type {Date}
     * @memberof WorkExperienceIn
     */
    enrollmentPeriodTo?: Date | null;
    /**
     * 概要・PR
     * @type {string}
     * @memberof WorkExperienceIn
     */
    description?: string | null;
}

/**
 * Check if a given object implements the WorkExperienceIn interface.
 */
export function instanceOfWorkExperienceIn(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function WorkExperienceInFromJSON(json: any): WorkExperienceIn {
    return WorkExperienceInFromJSONTyped(json, false);
}

export function WorkExperienceInFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkExperienceIn {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'companyName': !exists(json, 'companyName') ? undefined : json['companyName'],
        'department': !exists(json, 'department') ? undefined : json['department'],
        'occupation': !exists(json, 'occupation') ? undefined : json['occupation'],
        'enrollmentPeriodFrom': !exists(json, 'enrollmentPeriodFrom') ? undefined : (json['enrollmentPeriodFrom'] === null ? null : new Date(json['enrollmentPeriodFrom'])),
        'enrollmentPeriodTo': !exists(json, 'enrollmentPeriodTo') ? undefined : (json['enrollmentPeriodTo'] === null ? null : new Date(json['enrollmentPeriodTo'])),
        'description': !exists(json, 'description') ? undefined : json['description'],
    };
}

export function WorkExperienceInToJSON(value?: WorkExperienceIn | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'companyName': value.companyName,
        'department': value.department,
        'occupation': value.occupation,
        'enrollmentPeriodFrom': value.enrollmentPeriodFrom === undefined ? undefined : (value.enrollmentPeriodFrom === null ? null : value.enrollmentPeriodFrom.toISOString().substring(0,10)),
        'enrollmentPeriodTo': value.enrollmentPeriodTo === undefined ? undefined : (value.enrollmentPeriodTo === null ? null : value.enrollmentPeriodTo.toISOString().substring(0,10)),
        'description': value.description,
    };
}

