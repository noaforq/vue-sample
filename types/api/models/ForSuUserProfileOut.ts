/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CurrentJob } from './CurrentJob';
import {
    CurrentJobFromJSON,
    CurrentJobFromJSONTyped,
    CurrentJobToJSON,
} from './CurrentJob';

/**
 * 
 * @export
 * @interface ForSuUserProfileOut
 */
export interface ForSuUserProfileOut {
    /**
     * ユーザー名
     * @type {string}
     * @memberof ForSuUserProfileOut
     */
    username: string;
    /**
     * メールアドレス
     * @type {string}
     * @memberof ForSuUserProfileOut
     */
    email: string;
    /**
     * 性
     * @type {string}
     * @memberof ForSuUserProfileOut
     */
    lastName: string;
    /**
     * 名
     * @type {string}
     * @memberof ForSuUserProfileOut
     */
    firstName: string;
    /**
     * 学校名
     * @type {string}
     * @memberof ForSuUserProfileOut
     */
    schoolName: string | null;
    /**
     * 学部名
     * @type {string}
     * @memberof ForSuUserProfileOut
     */
    schoolFacultyName: string | null;
    /**
     * 学科名
     * @type {string}
     * @memberof ForSuUserProfileOut
     */
    schoolDepartmentName: string | null;
    /**
     * 表示名
     * @type {string}
     * @memberof ForSuUserProfileOut
     */
    displayName: string;
    /**
     * 補足情報
     * @type {string}
     * @memberof ForSuUserProfileOut
     */
    extraInfo: string;
    /**
     * 卒業年月日
     * @type {Date}
     * @memberof ForSuUserProfileOut
     */
    graduationDate: Date | null;
    /**
     * 都道府県ID
     * @type {number}
     * @memberof ForSuUserProfileOut
     */
    prefectureId: number | null;
    /**
     * 生年月日
     * @type {Date}
     * @memberof ForSuUserProfileOut
     */
    birthday: Date | null;
    /**
     * よく使うプログラミング言語ID
     * @type {number}
     * @memberof ForSuUserProfileOut
     */
    mostUsedPgLangId: number | null;
    /**
     * 
     * @type {CurrentJob}
     * @memberof ForSuUserProfileOut
     */
    currentJob: CurrentJob | null;
    /**
     * メール配信を希望するか
     * @type {boolean}
     * @memberof ForSuUserProfileOut
     */
    receiveEmails: boolean;
}

/**
 * Check if a given object implements the ForSuUserProfileOut interface.
 */
export function instanceOfForSuUserProfileOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "lastName" in value;
    isInstance = isInstance && "firstName" in value;
    isInstance = isInstance && "schoolName" in value;
    isInstance = isInstance && "schoolFacultyName" in value;
    isInstance = isInstance && "schoolDepartmentName" in value;
    isInstance = isInstance && "displayName" in value;
    isInstance = isInstance && "extraInfo" in value;
    isInstance = isInstance && "graduationDate" in value;
    isInstance = isInstance && "prefectureId" in value;
    isInstance = isInstance && "birthday" in value;
    isInstance = isInstance && "mostUsedPgLangId" in value;
    isInstance = isInstance && "currentJob" in value;
    isInstance = isInstance && "receiveEmails" in value;

    return isInstance;
}

export function ForSuUserProfileOutFromJSON(json: any): ForSuUserProfileOut {
    return ForSuUserProfileOutFromJSONTyped(json, false);
}

export function ForSuUserProfileOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): ForSuUserProfileOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'username': json['username'],
        'email': json['email'],
        'lastName': json['lastName'],
        'firstName': json['firstName'],
        'schoolName': json['schoolName'],
        'schoolFacultyName': json['schoolFacultyName'],
        'schoolDepartmentName': json['schoolDepartmentName'],
        'displayName': json['displayName'],
        'extraInfo': json['extraInfo'],
        'graduationDate': (json['graduationDate'] === null ? null : new Date(json['graduationDate'])),
        'prefectureId': json['prefectureId'],
        'birthday': (json['birthday'] === null ? null : new Date(json['birthday'])),
        'mostUsedPgLangId': json['mostUsedPgLangId'],
        'currentJob': CurrentJobFromJSON(json['currentJob']),
        'receiveEmails': json['receiveEmails'],
    };
}

export function ForSuUserProfileOutToJSON(value?: ForSuUserProfileOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'username': value.username,
        'email': value.email,
        'lastName': value.lastName,
        'firstName': value.firstName,
        'schoolName': value.schoolName,
        'schoolFacultyName': value.schoolFacultyName,
        'schoolDepartmentName': value.schoolDepartmentName,
        'displayName': value.displayName,
        'extraInfo': value.extraInfo,
        'graduationDate': (value.graduationDate === null ? null : value.graduationDate.toISOString().substring(0,10)),
        'prefectureId': value.prefectureId,
        'birthday': (value.birthday === null ? null : value.birthday.toISOString().substring(0,10)),
        'mostUsedPgLangId': value.mostUsedPgLangId,
        'currentJob': CurrentJobToJSON(value.currentJob),
        'receiveEmails': value.receiveEmails,
    };
}

