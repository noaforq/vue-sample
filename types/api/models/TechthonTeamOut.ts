/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TechthonTeamOut
 */
export interface TechthonTeamOut {
    /**
     * チームID
     * @type {number}
     * @memberof TechthonTeamOut
     */
    teamId: number;
    /**
     * チーム名
     * @type {string}
     * @memberof TechthonTeamOut
     */
    teamName: string;
    /**
     * IPアドレス
     * @type {string}
     * @memberof TechthonTeamOut
     */
    ipAddress?: string;
    /**
     * サーバーID(ユーザーID)
     * @type {string}
     * @memberof TechthonTeamOut
     */
    serverId?: string;
    /**
     * パスワード
     * @type {string}
     * @memberof TechthonTeamOut
     */
    password?: string;
    /**
     * メンバー
     * @type {Array<string>}
     * @memberof TechthonTeamOut
     */
    member?: Array<string>;
}

/**
 * Check if a given object implements the TechthonTeamOut interface.
 */
export function instanceOfTechthonTeamOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "teamId" in value;
    isInstance = isInstance && "teamName" in value;

    return isInstance;
}

export function TechthonTeamOutFromJSON(json: any): TechthonTeamOut {
    return TechthonTeamOutFromJSONTyped(json, false);
}

export function TechthonTeamOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): TechthonTeamOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'teamId': json['teamId'],
        'teamName': json['teamName'],
        'ipAddress': !exists(json, 'ipAddress') ? undefined : json['ipAddress'],
        'serverId': !exists(json, 'serverId') ? undefined : json['serverId'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'member': !exists(json, 'member') ? undefined : json['member'],
    };
}

export function TechthonTeamOutToJSON(value?: TechthonTeamOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'teamId': value.teamId,
        'teamName': value.teamName,
        'ipAddress': value.ipAddress,
        'serverId': value.serverId,
        'password': value.password,
        'member': value.member,
    };
}

