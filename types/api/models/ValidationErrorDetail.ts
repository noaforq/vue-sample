/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LocInner } from './LocInner';
import {
    LocInnerFromJSON,
    LocInnerFromJSONTyped,
    LocInnerToJSON,
} from './LocInner';

/**
 * 
 * @export
 * @interface ValidationErrorDetail
 */
export interface ValidationErrorDetail {
    /**
     * 
     * @type {Array<LocInner>}
     * @memberof ValidationErrorDetail
     */
    loc: Array<LocInner>;
    /**
     * 
     * @type {string}
     * @memberof ValidationErrorDetail
     */
    msg: string;
    /**
     * 
     * @type {string}
     * @memberof ValidationErrorDetail
     */
    type: string;
}

/**
 * Check if a given object implements the ValidationErrorDetail interface.
 */
export function instanceOfValidationErrorDetail(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "loc" in value;
    isInstance = isInstance && "msg" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function ValidationErrorDetailFromJSON(json: any): ValidationErrorDetail {
    return ValidationErrorDetailFromJSONTyped(json, false);
}

export function ValidationErrorDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidationErrorDetail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'loc': ((json['loc'] as Array<any>).map(LocInnerFromJSON)),
        'msg': json['msg'],
        'type': json['type'],
    };
}

export function ValidationErrorDetailToJSON(value?: ValidationErrorDetail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'loc': ((value.loc as Array<any>).map(LocInnerToJSON)),
        'msg': value.msg,
        'type': value.type,
    };
}

