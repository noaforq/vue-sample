/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Email } from './Email';
import {
    EmailFromJSON,
    EmailFromJSONTyped,
    EmailToJSON,
} from './Email';

/**
 * 
 * @export
 * @interface StaffListOut
 */
export interface StaffListOut {
    /**
     * 
     * @type {number}
     * @memberof StaffListOut
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof StaffListOut
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof StaffListOut
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof StaffListOut
     */
    username: string;
    /**
     * 
     * @type {Email}
     * @memberof StaffListOut
     */
    email: Email;
    /**
     * 
     * @type {number}
     * @memberof StaffListOut
     */
    userType: number;
    /**
     * 
     * @type {Date}
     * @memberof StaffListOut
     */
    lastLogin?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof StaffListOut
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof StaffListOut
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the StaffListOut interface.
 */
export function instanceOfStaffListOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "firstName" in value;
    isInstance = isInstance && "lastName" in value;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "userType" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function StaffListOutFromJSON(json: any): StaffListOut {
    return StaffListOutFromJSONTyped(json, false);
}

export function StaffListOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): StaffListOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'firstName': json['firstName'],
        'lastName': json['lastName'],
        'username': json['username'],
        'email': EmailFromJSON(json['email']),
        'userType': json['userType'],
        'lastLogin': !exists(json, 'lastLogin') ? undefined : (json['lastLogin'] === null ? null : new Date(json['lastLogin'])),
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function StaffListOutToJSON(value?: StaffListOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'firstName': value.firstName,
        'lastName': value.lastName,
        'username': value.username,
        'email': EmailToJSON(value.email),
        'userType': value.userType,
        'lastLogin': value.lastLogin === undefined ? undefined : (value.lastLogin === null ? null : value.lastLogin.toISOString()),
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
    };
}

