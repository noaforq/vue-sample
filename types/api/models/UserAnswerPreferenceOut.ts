/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProgrammingLanguageStats } from './ProgrammingLanguageStats';
import {
    ProgrammingLanguageStatsFromJSON,
    ProgrammingLanguageStatsFromJSONTyped,
    ProgrammingLanguageStatsToJSON,
} from './ProgrammingLanguageStats';
import type { SkillLevel } from './SkillLevel';
import {
    SkillLevelFromJSON,
    SkillLevelFromJSONTyped,
    SkillLevelToJSON,
} from './SkillLevel';

/**
 * 解答傾向
 * @export
 * @interface UserAnswerPreferenceOut
 */
export interface UserAnswerPreferenceOut {
    /**
     * 挑戦数
     * @type {number}
     * @memberof UserAnswerPreferenceOut
     */
    challengedTimes: number;
    /**
     * 解答数
     * @type {number}
     * @memberof UserAnswerPreferenceOut
     */
    answeredCount: number;
    /**
     * 正答数
     * @type {number}
     * @memberof UserAnswerPreferenceOut
     */
    correctCount: number;
    /**
     * 最高難易度
     * @type {number}
     * @memberof UserAnswerPreferenceOut
     */
    highestDifficulty: number;
    /**
     * 言語別回答数
     * @type {Array<ProgrammingLanguageStats>}
     * @memberof UserAnswerPreferenceOut
     */
    programmingLanguageStats?: Array<ProgrammingLanguageStats>;
    /**
     * 管理者かどうか
     * @type {boolean}
     * @memberof UserAnswerPreferenceOut
     */
    isAdmin?: boolean;
    /**
     * 全体平均正答数
     * @type {number}
     * @memberof UserAnswerPreferenceOut
     */
    averageCorrectCount?: number | null;
    /**
     * 全体平均難易度
     * @type {number}
     * @memberof UserAnswerPreferenceOut
     */
    averageDifficulty?: number | null;
    /**
     * 
     * @type {SkillLevel}
     * @memberof UserAnswerPreferenceOut
     */
    skillLevel?: SkillLevel | null;
    /**
     * 最高難易度(プロ問題)
     * @type {number}
     * @memberof UserAnswerPreferenceOut
     */
    highestProDifficulty?: number | null;
    /**
     * 合格数(プロ問題)
     * @type {number}
     * @memberof UserAnswerPreferenceOut
     */
    proPassedCount?: number | null;
}

/**
 * Check if a given object implements the UserAnswerPreferenceOut interface.
 */
export function instanceOfUserAnswerPreferenceOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "challengedTimes" in value;
    isInstance = isInstance && "answeredCount" in value;
    isInstance = isInstance && "correctCount" in value;
    isInstance = isInstance && "highestDifficulty" in value;

    return isInstance;
}

export function UserAnswerPreferenceOutFromJSON(json: any): UserAnswerPreferenceOut {
    return UserAnswerPreferenceOutFromJSONTyped(json, false);
}

export function UserAnswerPreferenceOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserAnswerPreferenceOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'challengedTimes': json['challengedTimes'],
        'answeredCount': json['answeredCount'],
        'correctCount': json['correctCount'],
        'highestDifficulty': json['highestDifficulty'],
        'programmingLanguageStats': !exists(json, 'programmingLanguageStats') ? undefined : ((json['programmingLanguageStats'] as Array<any>).map(ProgrammingLanguageStatsFromJSON)),
        'isAdmin': !exists(json, 'isAdmin') ? undefined : json['isAdmin'],
        'averageCorrectCount': !exists(json, 'averageCorrectCount') ? undefined : json['averageCorrectCount'],
        'averageDifficulty': !exists(json, 'averageDifficulty') ? undefined : json['averageDifficulty'],
        'skillLevel': !exists(json, 'skillLevel') ? undefined : SkillLevelFromJSON(json['skillLevel']),
        'highestProDifficulty': !exists(json, 'highestProDifficulty') ? undefined : json['highestProDifficulty'],
        'proPassedCount': !exists(json, 'proPassedCount') ? undefined : json['proPassedCount'],
    };
}

export function UserAnswerPreferenceOutToJSON(value?: UserAnswerPreferenceOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'challengedTimes': value.challengedTimes,
        'answeredCount': value.answeredCount,
        'correctCount': value.correctCount,
        'highestDifficulty': value.highestDifficulty,
        'programmingLanguageStats': value.programmingLanguageStats === undefined ? undefined : ((value.programmingLanguageStats as Array<any>).map(ProgrammingLanguageStatsToJSON)),
        'isAdmin': value.isAdmin,
        'averageCorrectCount': value.averageCorrectCount,
        'averageDifficulty': value.averageDifficulty,
        'skillLevel': SkillLevelToJSON(value.skillLevel),
        'highestProDifficulty': value.highestProDifficulty,
        'proPassedCount': value.proPassedCount,
    };
}

