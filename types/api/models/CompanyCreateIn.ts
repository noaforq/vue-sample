/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CompanyIndustryCreateIn } from './CompanyIndustryCreateIn';
import {
    CompanyIndustryCreateInFromJSON,
    CompanyIndustryCreateInFromJSONTyped,
    CompanyIndustryCreateInToJSON,
} from './CompanyIndustryCreateIn';
import type { CompanyPlanStatus } from './CompanyPlanStatus';
import {
    CompanyPlanStatusFromJSON,
    CompanyPlanStatusFromJSONTyped,
    CompanyPlanStatusToJSON,
} from './CompanyPlanStatus';
import type { CompanyPlanStatusNoTrial } from './CompanyPlanStatusNoTrial';
import {
    CompanyPlanStatusNoTrialFromJSON,
    CompanyPlanStatusNoTrialFromJSONTyped,
    CompanyPlanStatusNoTrialToJSON,
} from './CompanyPlanStatusNoTrial';

/**
 * 
 * @export
 * @interface CompanyCreateIn
 */
export interface CompanyCreateIn {
    /**
     * 
     * @type {string}
     * @memberof CompanyCreateIn
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CompanyCreateIn
     */
    formalName?: string;
    /**
     * ファイルアップロードAPIで取得(dir:company)
     * @type {string}
     * @memberof CompanyCreateIn
     */
    logo?: string;
    /**
     * HPのURL
     * @type {string}
     * @memberof CompanyCreateIn
     */
    url?: string;
    /**
     * 
     * @type {string}
     * @memberof CompanyCreateIn
     */
    email: string;
    /**
     * 
     * @type {CompanyPlanStatus}
     * @memberof CompanyCreateIn
     */
    scoutPlanStatus: CompanyPlanStatus;
    /**
     * 
     * @type {CompanyPlanStatus}
     * @memberof CompanyCreateIn
     */
    skillEvaluationPlanStatus: CompanyPlanStatus;
    /**
     * 
     * @type {CompanyPlanStatusNoTrial}
     * @memberof CompanyCreateIn
     */
    recruitPlanStatus: CompanyPlanStatusNoTrial;
    /**
     * 
     * @type {CompanyPlanStatusNoTrial}
     * @memberof CompanyCreateIn
     */
    eventPlanStatus: CompanyPlanStatusNoTrial;
    /**
     * 
     * @type {Date}
     * @memberof CompanyCreateIn
     */
    scoutPlanExpiresDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof CompanyCreateIn
     */
    skillEvaluationPlanExpiresDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof CompanyCreateIn
     */
    recruitPlanExpiresDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof CompanyCreateIn
     */
    eventPlanExpiresDate?: Date | null;
    /**
     * 
     * @type {Array<CompanyIndustryCreateIn>}
     * @memberof CompanyCreateIn
     */
    companyIndustry: Array<CompanyIndustryCreateIn>;
}

/**
 * Check if a given object implements the CompanyCreateIn interface.
 */
export function instanceOfCompanyCreateIn(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "scoutPlanStatus" in value;
    isInstance = isInstance && "skillEvaluationPlanStatus" in value;
    isInstance = isInstance && "recruitPlanStatus" in value;
    isInstance = isInstance && "eventPlanStatus" in value;
    isInstance = isInstance && "companyIndustry" in value;

    return isInstance;
}

export function CompanyCreateInFromJSON(json: any): CompanyCreateIn {
    return CompanyCreateInFromJSONTyped(json, false);
}

export function CompanyCreateInFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompanyCreateIn {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'formalName': !exists(json, 'formalName') ? undefined : json['formalName'],
        'logo': !exists(json, 'logo') ? undefined : json['logo'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'email': json['email'],
        'scoutPlanStatus': CompanyPlanStatusFromJSON(json['scoutPlanStatus']),
        'skillEvaluationPlanStatus': CompanyPlanStatusFromJSON(json['skillEvaluationPlanStatus']),
        'recruitPlanStatus': CompanyPlanStatusNoTrialFromJSON(json['recruitPlanStatus']),
        'eventPlanStatus': CompanyPlanStatusNoTrialFromJSON(json['eventPlanStatus']),
        'scoutPlanExpiresDate': !exists(json, 'scoutPlanExpiresDate') ? undefined : (json['scoutPlanExpiresDate'] === null ? null : new Date(json['scoutPlanExpiresDate'])),
        'skillEvaluationPlanExpiresDate': !exists(json, 'skillEvaluationPlanExpiresDate') ? undefined : (json['skillEvaluationPlanExpiresDate'] === null ? null : new Date(json['skillEvaluationPlanExpiresDate'])),
        'recruitPlanExpiresDate': !exists(json, 'recruitPlanExpiresDate') ? undefined : (json['recruitPlanExpiresDate'] === null ? null : new Date(json['recruitPlanExpiresDate'])),
        'eventPlanExpiresDate': !exists(json, 'eventPlanExpiresDate') ? undefined : (json['eventPlanExpiresDate'] === null ? null : new Date(json['eventPlanExpiresDate'])),
        'companyIndustry': ((json['companyIndustry'] as Array<any>).map(CompanyIndustryCreateInFromJSON)),
    };
}

export function CompanyCreateInToJSON(value?: CompanyCreateIn | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'formalName': value.formalName,
        'logo': value.logo,
        'url': value.url,
        'email': value.email,
        'scoutPlanStatus': CompanyPlanStatusToJSON(value.scoutPlanStatus),
        'skillEvaluationPlanStatus': CompanyPlanStatusToJSON(value.skillEvaluationPlanStatus),
        'recruitPlanStatus': CompanyPlanStatusNoTrialToJSON(value.recruitPlanStatus),
        'eventPlanStatus': CompanyPlanStatusNoTrialToJSON(value.eventPlanStatus),
        'scoutPlanExpiresDate': value.scoutPlanExpiresDate === undefined ? undefined : (value.scoutPlanExpiresDate === null ? null : value.scoutPlanExpiresDate.toISOString().substring(0,10)),
        'skillEvaluationPlanExpiresDate': value.skillEvaluationPlanExpiresDate === undefined ? undefined : (value.skillEvaluationPlanExpiresDate === null ? null : value.skillEvaluationPlanExpiresDate.toISOString().substring(0,10)),
        'recruitPlanExpiresDate': value.recruitPlanExpiresDate === undefined ? undefined : (value.recruitPlanExpiresDate === null ? null : value.recruitPlanExpiresDate.toISOString().substring(0,10)),
        'eventPlanExpiresDate': value.eventPlanExpiresDate === undefined ? undefined : (value.eventPlanExpiresDate === null ? null : value.eventPlanExpiresDate.toISOString().substring(0,10)),
        'companyIndustry': ((value.companyIndustry as Array<any>).map(CompanyIndustryCreateInToJSON)),
    };
}

