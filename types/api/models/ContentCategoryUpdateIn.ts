/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ContentCategoryType } from './ContentCategoryType';
import {
    ContentCategoryTypeFromJSON,
    ContentCategoryTypeFromJSONTyped,
    ContentCategoryTypeToJSON,
} from './ContentCategoryType';

/**
 * 
 * @export
 * @interface ContentCategoryUpdateIn
 */
export interface ContentCategoryUpdateIn {
    /**
     * 
     * @type {string}
     * @memberof ContentCategoryUpdateIn
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ContentCategoryUpdateIn
     */
    nameEn?: string | null;
    /**
     * 
     * @type {ContentCategoryType}
     * @memberof ContentCategoryUpdateIn
     */
    contentCategoryType?: ContentCategoryType | null;
    /**
     * 
     * @type {number}
     * @memberof ContentCategoryUpdateIn
     */
    order?: number | null;
}

/**
 * Check if a given object implements the ContentCategoryUpdateIn interface.
 */
export function instanceOfContentCategoryUpdateIn(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ContentCategoryUpdateInFromJSON(json: any): ContentCategoryUpdateIn {
    return ContentCategoryUpdateInFromJSONTyped(json, false);
}

export function ContentCategoryUpdateInFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContentCategoryUpdateIn {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'nameEn': !exists(json, 'nameEn') ? undefined : json['nameEn'],
        'contentCategoryType': !exists(json, 'contentCategoryType') ? undefined : ContentCategoryTypeFromJSON(json['contentCategoryType']),
        'order': !exists(json, 'order') ? undefined : json['order'],
    };
}

export function ContentCategoryUpdateInToJSON(value?: ContentCategoryUpdateIn | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'nameEn': value.nameEn,
        'contentCategoryType': ContentCategoryTypeToJSON(value.contentCategoryType),
        'order': value.order,
    };
}

