/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CompanyDetailConditionOut } from './CompanyDetailConditionOut';
import {
    CompanyDetailConditionOutFromJSON,
    CompanyDetailConditionOutFromJSONTyped,
    CompanyDetailConditionOutToJSON,
} from './CompanyDetailConditionOut';
import type { CompanyIndustryOut } from './CompanyIndustryOut';
import {
    CompanyIndustryOutFromJSON,
    CompanyIndustryOutFromJSONTyped,
    CompanyIndustryOutToJSON,
} from './CompanyIndustryOut';
import type { CompanyPlanStatus } from './CompanyPlanStatus';
import {
    CompanyPlanStatusFromJSON,
    CompanyPlanStatusFromJSONTyped,
    CompanyPlanStatusToJSON,
} from './CompanyPlanStatus';
import type { CompanyPlanStatusNoTrial } from './CompanyPlanStatusNoTrial';
import {
    CompanyPlanStatusNoTrialFromJSON,
    CompanyPlanStatusNoTrialFromJSONTyped,
    CompanyPlanStatusNoTrialToJSON,
} from './CompanyPlanStatusNoTrial';

/**
 * 
 * @export
 * @interface CompanyDetailOut
 */
export interface CompanyDetailOut {
    /**
     * 
     * @type {number}
     * @memberof CompanyDetailOut
     */
    id: number;
    /**
     * 
     * @type {Date}
     * @memberof CompanyDetailOut
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof CompanyDetailOut
     */
    updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof CompanyDetailOut
     */
    createdBy: string;
    /**
     * 
     * @type {string}
     * @memberof CompanyDetailOut
     */
    updatedBy: string;
    /**
     * 
     * @type {string}
     * @memberof CompanyDetailOut
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CompanyDetailOut
     */
    formalName: string;
    /**
     * 
     * @type {string}
     * @memberof CompanyDetailOut
     */
    logo: string;
    /**
     * 
     * @type {string}
     * @memberof CompanyDetailOut
     */
    image: string;
    /**
     * 
     * @type {string}
     * @memberof CompanyDetailOut
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof CompanyDetailOut
     */
    email: string;
    /**
     * 
     * @type {Date}
     * @memberof CompanyDetailOut
     */
    lastLogin: Date | null;
    /**
     * 企業紹介文
     * @type {string}
     * @memberof CompanyDetailOut
     */
    description: string;
    /**
     * 事業内容
     * @type {string}
     * @memberof CompanyDetailOut
     */
    businessDetails: string;
    /**
     * 企業住所
     * @type {string}
     * @memberof CompanyDetailOut
     */
    address: string;
    /**
     * 会社設立日
     * @type {string}
     * @memberof CompanyDetailOut
     */
    establishmentDate: string;
    /**
     * 会社資本金
     * @type {string}
     * @memberof CompanyDetailOut
     */
    capitalStock: string;
    /**
     * 従業員数
     * @type {string}
     * @memberof CompanyDetailOut
     */
    numOfEmployees: string;
    /**
     * 従業員平均年齢
     * @type {string}
     * @memberof CompanyDetailOut
     */
    averageAge: string;
    /**
     * 
     * @type {CompanyPlanStatus}
     * @memberof CompanyDetailOut
     */
    scoutPlanStatus: CompanyPlanStatus;
    /**
     * 
     * @type {CompanyPlanStatus}
     * @memberof CompanyDetailOut
     */
    skillEvaluationPlanStatus: CompanyPlanStatus;
    /**
     * 
     * @type {CompanyPlanStatusNoTrial}
     * @memberof CompanyDetailOut
     */
    recruitPlanStatus: CompanyPlanStatusNoTrial;
    /**
     * 
     * @type {CompanyPlanStatusNoTrial}
     * @memberof CompanyDetailOut
     */
    eventPlanStatus: CompanyPlanStatusNoTrial;
    /**
     * スカウトプラン期限
     * @type {Date}
     * @memberof CompanyDetailOut
     */
    scoutPlanExpiresDate: Date | null;
    /**
     * スキル評価プラン期限
     * @type {Date}
     * @memberof CompanyDetailOut
     */
    skillEvaluationPlanExpiresDate: Date | null;
    /**
     * 人材紹介プラン期限
     * @type {Date}
     * @memberof CompanyDetailOut
     */
    recruitPlanExpiresDate: Date | null;
    /**
     * イベントプラン期限
     * @type {Date}
     * @memberof CompanyDetailOut
     */
    eventPlanExpiresDate: Date | null;
    /**
     * 
     * @type {CompanyDetailConditionOut}
     * @memberof CompanyDetailOut
     */
    companyConditions: CompanyDetailConditionOut;
    /**
     * 
     * @type {Array<CompanyIndustryOut>}
     * @memberof CompanyDetailOut
     */
    companyIndustries: Array<CompanyIndustryOut>;
}

/**
 * Check if a given object implements the CompanyDetailOut interface.
 */
export function instanceOfCompanyDetailOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "createdBy" in value;
    isInstance = isInstance && "updatedBy" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "formalName" in value;
    isInstance = isInstance && "logo" in value;
    isInstance = isInstance && "image" in value;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "lastLogin" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "businessDetails" in value;
    isInstance = isInstance && "address" in value;
    isInstance = isInstance && "establishmentDate" in value;
    isInstance = isInstance && "capitalStock" in value;
    isInstance = isInstance && "numOfEmployees" in value;
    isInstance = isInstance && "averageAge" in value;
    isInstance = isInstance && "scoutPlanStatus" in value;
    isInstance = isInstance && "skillEvaluationPlanStatus" in value;
    isInstance = isInstance && "recruitPlanStatus" in value;
    isInstance = isInstance && "eventPlanStatus" in value;
    isInstance = isInstance && "scoutPlanExpiresDate" in value;
    isInstance = isInstance && "skillEvaluationPlanExpiresDate" in value;
    isInstance = isInstance && "recruitPlanExpiresDate" in value;
    isInstance = isInstance && "eventPlanExpiresDate" in value;
    isInstance = isInstance && "companyConditions" in value;
    isInstance = isInstance && "companyIndustries" in value;

    return isInstance;
}

export function CompanyDetailOutFromJSON(json: any): CompanyDetailOut {
    return CompanyDetailOutFromJSONTyped(json, false);
}

export function CompanyDetailOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompanyDetailOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'createdBy': json['createdBy'],
        'updatedBy': json['updatedBy'],
        'name': json['name'],
        'formalName': json['formalName'],
        'logo': json['logo'],
        'image': json['image'],
        'url': json['url'],
        'email': json['email'],
        'lastLogin': (json['lastLogin'] === null ? null : new Date(json['lastLogin'])),
        'description': json['description'],
        'businessDetails': json['businessDetails'],
        'address': json['address'],
        'establishmentDate': json['establishmentDate'],
        'capitalStock': json['capitalStock'],
        'numOfEmployees': json['numOfEmployees'],
        'averageAge': json['averageAge'],
        'scoutPlanStatus': CompanyPlanStatusFromJSON(json['scoutPlanStatus']),
        'skillEvaluationPlanStatus': CompanyPlanStatusFromJSON(json['skillEvaluationPlanStatus']),
        'recruitPlanStatus': CompanyPlanStatusNoTrialFromJSON(json['recruitPlanStatus']),
        'eventPlanStatus': CompanyPlanStatusNoTrialFromJSON(json['eventPlanStatus']),
        'scoutPlanExpiresDate': (json['scoutPlanExpiresDate'] === null ? null : new Date(json['scoutPlanExpiresDate'])),
        'skillEvaluationPlanExpiresDate': (json['skillEvaluationPlanExpiresDate'] === null ? null : new Date(json['skillEvaluationPlanExpiresDate'])),
        'recruitPlanExpiresDate': (json['recruitPlanExpiresDate'] === null ? null : new Date(json['recruitPlanExpiresDate'])),
        'eventPlanExpiresDate': (json['eventPlanExpiresDate'] === null ? null : new Date(json['eventPlanExpiresDate'])),
        'companyConditions': CompanyDetailConditionOutFromJSON(json['companyConditions']),
        'companyIndustries': ((json['companyIndustries'] as Array<any>).map(CompanyIndustryOutFromJSON)),
    };
}

export function CompanyDetailOutToJSON(value?: CompanyDetailOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
        'createdBy': value.createdBy,
        'updatedBy': value.updatedBy,
        'name': value.name,
        'formalName': value.formalName,
        'logo': value.logo,
        'image': value.image,
        'url': value.url,
        'email': value.email,
        'lastLogin': (value.lastLogin === null ? null : value.lastLogin.toISOString()),
        'description': value.description,
        'businessDetails': value.businessDetails,
        'address': value.address,
        'establishmentDate': value.establishmentDate,
        'capitalStock': value.capitalStock,
        'numOfEmployees': value.numOfEmployees,
        'averageAge': value.averageAge,
        'scoutPlanStatus': CompanyPlanStatusToJSON(value.scoutPlanStatus),
        'skillEvaluationPlanStatus': CompanyPlanStatusToJSON(value.skillEvaluationPlanStatus),
        'recruitPlanStatus': CompanyPlanStatusNoTrialToJSON(value.recruitPlanStatus),
        'eventPlanStatus': CompanyPlanStatusNoTrialToJSON(value.eventPlanStatus),
        'scoutPlanExpiresDate': (value.scoutPlanExpiresDate === null ? null : value.scoutPlanExpiresDate.toISOString().substring(0,10)),
        'skillEvaluationPlanExpiresDate': (value.skillEvaluationPlanExpiresDate === null ? null : value.skillEvaluationPlanExpiresDate.toISOString().substring(0,10)),
        'recruitPlanExpiresDate': (value.recruitPlanExpiresDate === null ? null : value.recruitPlanExpiresDate.toISOString().substring(0,10)),
        'eventPlanExpiresDate': (value.eventPlanExpiresDate === null ? null : value.eventPlanExpiresDate.toISOString().substring(0,10)),
        'companyConditions': CompanyDetailConditionOutToJSON(value.companyConditions),
        'companyIndustries': ((value.companyIndustries as Array<any>).map(CompanyIndustryOutToJSON)),
    };
}

