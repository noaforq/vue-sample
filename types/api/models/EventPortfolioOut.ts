/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EventPortfolioQuestionResultListOut } from './EventPortfolioQuestionResultListOut';
import {
    EventPortfolioQuestionResultListOutFromJSON,
    EventPortfolioQuestionResultListOutFromJSONTyped,
    EventPortfolioQuestionResultListOutToJSON,
} from './EventPortfolioQuestionResultListOut';
import type { EventPortfolioSessionListOut } from './EventPortfolioSessionListOut';
import {
    EventPortfolioSessionListOutFromJSON,
    EventPortfolioSessionListOutFromJSONTyped,
    EventPortfolioSessionListOutToJSON,
} from './EventPortfolioSessionListOut';

/**
 * 
 * @export
 * @interface EventPortfolioOut
 */
export interface EventPortfolioOut {
    /**
     * ユーザーID
     * @type {number}
     * @memberof EventPortfolioOut
     */
    userId: number;
    /**
     * ユーザーアイコンURL
     * @type {string}
     * @memberof EventPortfolioOut
     */
    icon: string;
    /**
     * アカウント名
     * @type {string}
     * @memberof EventPortfolioOut
     */
    username: string;
    /**
     * 合格問題数
     * @type {number}
     * @memberof EventPortfolioOut
     */
    passedQuestionCount: number;
    /**
     * 挑戦問題数
     * @type {number}
     * @memberof EventPortfolioOut
     */
    challengedQuestionCount: number;
    /**
     * セッション一覧
     * @type {Array<EventPortfolioSessionListOut>}
     * @memberof EventPortfolioOut
     */
    sessionList: Array<EventPortfolioSessionListOut>;
    /**
     * 問題解答成績一覧
     * @type {Array<EventPortfolioQuestionResultListOut>}
     * @memberof EventPortfolioOut
     */
    questionResultList: Array<EventPortfolioQuestionResultListOut>;
}

/**
 * Check if a given object implements the EventPortfolioOut interface.
 */
export function instanceOfEventPortfolioOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "userId" in value;
    isInstance = isInstance && "icon" in value;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "passedQuestionCount" in value;
    isInstance = isInstance && "challengedQuestionCount" in value;
    isInstance = isInstance && "sessionList" in value;
    isInstance = isInstance && "questionResultList" in value;

    return isInstance;
}

export function EventPortfolioOutFromJSON(json: any): EventPortfolioOut {
    return EventPortfolioOutFromJSONTyped(json, false);
}

export function EventPortfolioOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventPortfolioOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'userId': json['userId'],
        'icon': json['icon'],
        'username': json['username'],
        'passedQuestionCount': json['passedQuestionCount'],
        'challengedQuestionCount': json['challengedQuestionCount'],
        'sessionList': ((json['sessionList'] as Array<any>).map(EventPortfolioSessionListOutFromJSON)),
        'questionResultList': ((json['questionResultList'] as Array<any>).map(EventPortfolioQuestionResultListOutFromJSON)),
    };
}

export function EventPortfolioOutToJSON(value?: EventPortfolioOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'userId': value.userId,
        'icon': value.icon,
        'username': value.username,
        'passedQuestionCount': value.passedQuestionCount,
        'challengedQuestionCount': value.challengedQuestionCount,
        'sessionList': ((value.sessionList as Array<any>).map(EventPortfolioSessionListOutToJSON)),
        'questionResultList': ((value.questionResultList as Array<any>).map(EventPortfolioQuestionResultListOutToJSON)),
    };
}

