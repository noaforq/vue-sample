/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ForSuUserListOut
 */
export interface ForSuUserListOut {
    /**
     * ユーザID
     * @type {number}
     * @memberof ForSuUserListOut
     */
    id: number;
    /**
     * アカウント名
     * @type {string}
     * @memberof ForSuUserListOut
     */
    username: string;
    /**
     * ユーザー名(表示名)
     * @type {string}
     * @memberof ForSuUserListOut
     */
    displayName: string;
    /**
     * メールアドレス
     * @type {string}
     * @memberof ForSuUserListOut
     */
    email: string;
    /**
     * 姓
     * @type {string}
     * @memberof ForSuUserListOut
     */
    lastName: string;
    /**
     * 名
     * @type {string}
     * @memberof ForSuUserListOut
     */
    firstName: string;
    /**
     * 組織名
     * @type {string}
     * @memberof ForSuUserListOut
     */
    organizationName: string;
    /**
     * 最終ログイン日時
     * @type {Date}
     * @memberof ForSuUserListOut
     */
    lastLogin: Date;
}

/**
 * Check if a given object implements the ForSuUserListOut interface.
 */
export function instanceOfForSuUserListOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "displayName" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "lastName" in value;
    isInstance = isInstance && "firstName" in value;
    isInstance = isInstance && "organizationName" in value;
    isInstance = isInstance && "lastLogin" in value;

    return isInstance;
}

export function ForSuUserListOutFromJSON(json: any): ForSuUserListOut {
    return ForSuUserListOutFromJSONTyped(json, false);
}

export function ForSuUserListOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): ForSuUserListOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'username': json['username'],
        'displayName': json['displayName'],
        'email': json['email'],
        'lastName': json['lastName'],
        'firstName': json['firstName'],
        'organizationName': json['organizationName'],
        'lastLogin': (new Date(json['lastLogin'])),
    };
}

export function ForSuUserListOutToJSON(value?: ForSuUserListOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'username': value.username,
        'displayName': value.displayName,
        'email': value.email,
        'lastName': value.lastName,
        'firstName': value.firstName,
        'organizationName': value.organizationName,
        'lastLogin': (value.lastLogin.toISOString()),
    };
}

