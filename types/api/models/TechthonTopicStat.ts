/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TechthonPhaseStat } from './TechthonPhaseStat';
import {
    TechthonPhaseStatFromJSON,
    TechthonPhaseStatFromJSONTyped,
    TechthonPhaseStatToJSON,
} from './TechthonPhaseStat';

/**
 * Techthon成績(第三者)
 * @export
 * @interface TechthonTopicStat
 */
export interface TechthonTopicStat {
    /**
     * ContentTopic.id
     * @type {number}
     * @memberof TechthonTopicStat
     */
    id: number;
    /**
     * トピック名
     * @type {string}
     * @memberof TechthonTopicStat
     */
    name: string;
    /**
     * フェーズ別成績
     * @type {Array<TechthonPhaseStat>}
     * @memberof TechthonTopicStat
     */
    phases: Array<TechthonPhaseStat>;
    /**
     * techthon評価
     * @type {string}
     * @memberof TechthonTopicStat
     */
    skillAssessment?: string;
}

/**
 * Check if a given object implements the TechthonTopicStat interface.
 */
export function instanceOfTechthonTopicStat(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "phases" in value;

    return isInstance;
}

export function TechthonTopicStatFromJSON(json: any): TechthonTopicStat {
    return TechthonTopicStatFromJSONTyped(json, false);
}

export function TechthonTopicStatFromJSONTyped(json: any, ignoreDiscriminator: boolean): TechthonTopicStat {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'phases': ((json['phases'] as Array<any>).map(TechthonPhaseStatFromJSON)),
        'skillAssessment': !exists(json, 'skillAssessment') ? undefined : json['skillAssessment'],
    };
}

export function TechthonTopicStatToJSON(value?: TechthonTopicStat | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'phases': ((value.phases as Array<any>).map(TechthonPhaseStatToJSON)),
        'skillAssessment': value.skillAssessment,
    };
}

