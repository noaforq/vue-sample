/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProgrammingProblemTopicStat } from './ProgrammingProblemTopicStat';
import {
    ProgrammingProblemTopicStatFromJSON,
    ProgrammingProblemTopicStatFromJSONTyped,
    ProgrammingProblemTopicStatToJSON,
} from './ProgrammingProblemTopicStat';

/**
 * 
 * @export
 * @interface ProgrammingProblemCategoryStat
 */
export interface ProgrammingProblemCategoryStat {
    /**
     * QuestionCategory.id
     * @type {number}
     * @memberof ProgrammingProblemCategoryStat
     */
    id: number;
    /**
     * カテゴリ名
     * @type {string}
     * @memberof ProgrammingProblemCategoryStat
     */
    name: string;
    /**
     * トピック別解答状況
     * @type {Array<ProgrammingProblemTopicStat>}
     * @memberof ProgrammingProblemCategoryStat
     */
    topics?: Array<ProgrammingProblemTopicStat> | null;
    /**
     * 該当カテゴリ解答数
     * @type {number}
     * @memberof ProgrammingProblemCategoryStat
     */
    passedCount: number;
    /**
     * 該当カテゴリ合格した最高難易度
     * @type {number}
     * @memberof ProgrammingProblemCategoryStat
     */
    highestDifficulty: number;
    /**
     * カテゴリ内問題数
     * @type {number}
     * @memberof ProgrammingProblemCategoryStat
     */
    questionCount?: number | null;
    /**
     * 管理者かどうか
     * @type {boolean}
     * @memberof ProgrammingProblemCategoryStat
     */
    isAdmin?: boolean;
    /**
     * 全体平均解答数
     * @type {number}
     * @memberof ProgrammingProblemCategoryStat
     */
    averagePassedCount?: number | null;
    /**
     * 全体平均難易度
     * @type {number}
     * @memberof ProgrammingProblemCategoryStat
     */
    averageHighestDifficulty?: number | null;
}

/**
 * Check if a given object implements the ProgrammingProblemCategoryStat interface.
 */
export function instanceOfProgrammingProblemCategoryStat(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "passedCount" in value;
    isInstance = isInstance && "highestDifficulty" in value;

    return isInstance;
}

export function ProgrammingProblemCategoryStatFromJSON(json: any): ProgrammingProblemCategoryStat {
    return ProgrammingProblemCategoryStatFromJSONTyped(json, false);
}

export function ProgrammingProblemCategoryStatFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProgrammingProblemCategoryStat {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'topics': !exists(json, 'topics') ? undefined : (json['topics'] === null ? null : (json['topics'] as Array<any>).map(ProgrammingProblemTopicStatFromJSON)),
        'passedCount': json['passedCount'],
        'highestDifficulty': json['highestDifficulty'],
        'questionCount': !exists(json, 'questionCount') ? undefined : json['questionCount'],
        'isAdmin': !exists(json, 'isAdmin') ? undefined : json['isAdmin'],
        'averagePassedCount': !exists(json, 'averagePassedCount') ? undefined : json['averagePassedCount'],
        'averageHighestDifficulty': !exists(json, 'averageHighestDifficulty') ? undefined : json['averageHighestDifficulty'],
    };
}

export function ProgrammingProblemCategoryStatToJSON(value?: ProgrammingProblemCategoryStat | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'topics': value.topics === undefined ? undefined : (value.topics === null ? null : (value.topics as Array<any>).map(ProgrammingProblemTopicStatToJSON)),
        'passedCount': value.passedCount,
        'highestDifficulty': value.highestDifficulty,
        'questionCount': value.questionCount,
        'isAdmin': value.isAdmin,
        'averagePassedCount': value.averagePassedCount,
        'averageHighestDifficulty': value.averageHighestDifficulty,
    };
}

