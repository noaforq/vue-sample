/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProJudgeStatus } from './ProJudgeStatus';
import {
    ProJudgeStatusFromJSON,
    ProJudgeStatusFromJSONTyped,
    ProJudgeStatusToJSON,
} from './ProJudgeStatus';

/**
 * 
 * @export
 * @interface ManageProQuestionSubmissionHistoryOut
 */
export interface ManageProQuestionSubmissionHistoryOut {
    /**
     * PRO問題提出結果ID
     * @type {number}
     * @memberof ManageProQuestionSubmissionHistoryOut
     */
    id: number;
    /**
     * ユーザー名
     * @type {string}
     * @memberof ManageProQuestionSubmissionHistoryOut
     */
    username: string;
    /**
     * 提出ファイル名
     * @type {Array<string>}
     * @memberof ManageProQuestionSubmissionHistoryOut
     */
    submitFileNames: Array<string>;
    /**
     * スコア(精度)
     * @type {number}
     * @memberof ManageProQuestionSubmissionHistoryOut
     */
    accuracy: number;
    /**
     * 
     * @type {ProJudgeStatus}
     * @memberof ManageProQuestionSubmissionHistoryOut
     */
    judgeStatus: ProJudgeStatus;
    /**
     * エラーメッセージ
     * @type {string}
     * @memberof ManageProQuestionSubmissionHistoryOut
     */
    errorMessage?: string;
    /**
     * 提出日時
     * @type {Date}
     * @memberof ManageProQuestionSubmissionHistoryOut
     */
    createdAt: Date;
    /**
     * 提出コメント
     * @type {string}
     * @memberof ManageProQuestionSubmissionHistoryOut
     */
    extraInfo?: string;
    /**
     * 有効な提出かどうか
     * @type {boolean}
     * @memberof ManageProQuestionSubmissionHistoryOut
     */
    isValid: boolean;
}

/**
 * Check if a given object implements the ManageProQuestionSubmissionHistoryOut interface.
 */
export function instanceOfManageProQuestionSubmissionHistoryOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "submitFileNames" in value;
    isInstance = isInstance && "accuracy" in value;
    isInstance = isInstance && "judgeStatus" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "isValid" in value;

    return isInstance;
}

export function ManageProQuestionSubmissionHistoryOutFromJSON(json: any): ManageProQuestionSubmissionHistoryOut {
    return ManageProQuestionSubmissionHistoryOutFromJSONTyped(json, false);
}

export function ManageProQuestionSubmissionHistoryOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): ManageProQuestionSubmissionHistoryOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'username': json['username'],
        'submitFileNames': json['submitFileNames'],
        'accuracy': json['accuracy'],
        'judgeStatus': ProJudgeStatusFromJSON(json['judgeStatus']),
        'errorMessage': !exists(json, 'errorMessage') ? undefined : json['errorMessage'],
        'createdAt': (new Date(json['createdAt'])),
        'extraInfo': !exists(json, 'extraInfo') ? undefined : json['extraInfo'],
        'isValid': json['isValid'],
    };
}

export function ManageProQuestionSubmissionHistoryOutToJSON(value?: ManageProQuestionSubmissionHistoryOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'username': value.username,
        'submitFileNames': value.submitFileNames,
        'accuracy': value.accuracy,
        'judgeStatus': ProJudgeStatusToJSON(value.judgeStatus),
        'errorMessage': value.errorMessage,
        'createdAt': (value.createdAt.toISOString()),
        'extraInfo': value.extraInfo,
        'isValid': value.isValid,
    };
}

