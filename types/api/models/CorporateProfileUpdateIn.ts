/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CompanyOfficeUpdateIn } from './CompanyOfficeUpdateIn';
import {
    CompanyOfficeUpdateInFromJSON,
    CompanyOfficeUpdateInFromJSONTyped,
    CompanyOfficeUpdateInToJSON,
} from './CompanyOfficeUpdateIn';

/**
 * 
 * @export
 * @interface CorporateProfileUpdateIn
 */
export interface CorporateProfileUpdateIn {
    /**
     * 企業名
     * @type {string}
     * @memberof CorporateProfileUpdateIn
     */
    name?: string | null;
    /**
     * 企業正式名称
     * @type {string}
     * @memberof CorporateProfileUpdateIn
     */
    formalName?: string | null;
    /**
     * 企業ロゴ
     * @type {string}
     * @memberof CorporateProfileUpdateIn
     */
    logo?: string | null;
    /**
     * 企業イメージ
     * @type {string}
     * @memberof CorporateProfileUpdateIn
     */
    image?: string | null;
    /**
     * 企業HPのURL
     * @type {string}
     * @memberof CorporateProfileUpdateIn
     */
    url?: string | null;
    /**
     * 企業メールアドレス
     * @type {string}
     * @memberof CorporateProfileUpdateIn
     */
    email?: string | null;
    /**
     * 企業紹介文(会社概要)
     * @type {string}
     * @memberof CorporateProfileUpdateIn
     */
    description?: string | null;
    /**
     * 事業内容
     * @type {string}
     * @memberof CorporateProfileUpdateIn
     */
    businessDetails?: string | null;
    /**
     * 企業理念
     * @type {string}
     * @memberof CorporateProfileUpdateIn
     */
    philosophy?: string | null;
    /**
     * 採用実績
     * @type {string}
     * @memberof CorporateProfileUpdateIn
     */
    recruitmentRecord?: string | null;
    /**
     * 企業住所
     * @type {string}
     * @memberof CorporateProfileUpdateIn
     */
    address?: string | null;
    /**
     * 会社設立日
     * @type {string}
     * @memberof CorporateProfileUpdateIn
     */
    establishmentDate?: string | null;
    /**
     * 会社資本金
     * @type {string}
     * @memberof CorporateProfileUpdateIn
     */
    capitalStock?: string | null;
    /**
     * 従業員数
     * @type {string}
     * @memberof CorporateProfileUpdateIn
     */
    numOfEmployees?: string | null;
    /**
     * 従業員平均年齢
     * @type {string}
     * @memberof CorporateProfileUpdateIn
     */
    averageAge?: string | null;
    /**
     * 売上
     * @type {string}
     * @memberof CorporateProfileUpdateIn
     */
    sales?: string | null;
    /**
     * 代表者名
     * @type {string}
     * @memberof CorporateProfileUpdateIn
     */
    representative?: string | null;
    /**
     * 主要株主
     * @type {string}
     * @memberof CorporateProfileUpdateIn
     */
    majorShareholder?: string | null;
    /**
     * 
     * @type {Array<CompanyOfficeUpdateIn>}
     * @memberof CorporateProfileUpdateIn
     */
    companyOffices: Array<CompanyOfficeUpdateIn>;
}

/**
 * Check if a given object implements the CorporateProfileUpdateIn interface.
 */
export function instanceOfCorporateProfileUpdateIn(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "companyOffices" in value;

    return isInstance;
}

export function CorporateProfileUpdateInFromJSON(json: any): CorporateProfileUpdateIn {
    return CorporateProfileUpdateInFromJSONTyped(json, false);
}

export function CorporateProfileUpdateInFromJSONTyped(json: any, ignoreDiscriminator: boolean): CorporateProfileUpdateIn {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'formalName': !exists(json, 'formalName') ? undefined : json['formalName'],
        'logo': !exists(json, 'logo') ? undefined : json['logo'],
        'image': !exists(json, 'image') ? undefined : json['image'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'businessDetails': !exists(json, 'businessDetails') ? undefined : json['businessDetails'],
        'philosophy': !exists(json, 'philosophy') ? undefined : json['philosophy'],
        'recruitmentRecord': !exists(json, 'recruitmentRecord') ? undefined : json['recruitmentRecord'],
        'address': !exists(json, 'address') ? undefined : json['address'],
        'establishmentDate': !exists(json, 'establishmentDate') ? undefined : json['establishmentDate'],
        'capitalStock': !exists(json, 'capitalStock') ? undefined : json['capitalStock'],
        'numOfEmployees': !exists(json, 'numOfEmployees') ? undefined : json['numOfEmployees'],
        'averageAge': !exists(json, 'averageAge') ? undefined : json['averageAge'],
        'sales': !exists(json, 'sales') ? undefined : json['sales'],
        'representative': !exists(json, 'representative') ? undefined : json['representative'],
        'majorShareholder': !exists(json, 'majorShareholder') ? undefined : json['majorShareholder'],
        'companyOffices': ((json['companyOffices'] as Array<any>).map(CompanyOfficeUpdateInFromJSON)),
    };
}

export function CorporateProfileUpdateInToJSON(value?: CorporateProfileUpdateIn | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'formalName': value.formalName,
        'logo': value.logo,
        'image': value.image,
        'url': value.url,
        'email': value.email,
        'description': value.description,
        'businessDetails': value.businessDetails,
        'philosophy': value.philosophy,
        'recruitmentRecord': value.recruitmentRecord,
        'address': value.address,
        'establishmentDate': value.establishmentDate,
        'capitalStock': value.capitalStock,
        'numOfEmployees': value.numOfEmployees,
        'averageAge': value.averageAge,
        'sales': value.sales,
        'representative': value.representative,
        'majorShareholder': value.majorShareholder,
        'companyOffices': ((value.companyOffices as Array<any>).map(CompanyOfficeUpdateInToJSON)),
    };
}

