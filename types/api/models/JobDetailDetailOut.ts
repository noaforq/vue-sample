/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AppSchemasGeneralJobsJobDetailOutFrameworkDetail } from './AppSchemasGeneralJobsJobDetailOutFrameworkDetail';
import {
    AppSchemasGeneralJobsJobDetailOutFrameworkDetailFromJSON,
    AppSchemasGeneralJobsJobDetailOutFrameworkDetailFromJSONTyped,
    AppSchemasGeneralJobsJobDetailOutFrameworkDetailToJSON,
} from './AppSchemasGeneralJobsJobDetailOutFrameworkDetail';
import type { AppSchemasGeneralJobsJobDetailOutJobFeatureDetail } from './AppSchemasGeneralJobsJobDetailOutJobFeatureDetail';
import {
    AppSchemasGeneralJobsJobDetailOutJobFeatureDetailFromJSON,
    AppSchemasGeneralJobsJobDetailOutJobFeatureDetailFromJSONTyped,
    AppSchemasGeneralJobsJobDetailOutJobFeatureDetailToJSON,
} from './AppSchemasGeneralJobsJobDetailOutJobFeatureDetail';
import type { AppSchemasGeneralJobsJobDetailOutOrganizationDetail } from './AppSchemasGeneralJobsJobDetailOutOrganizationDetail';
import {
    AppSchemasGeneralJobsJobDetailOutOrganizationDetailFromJSON,
    AppSchemasGeneralJobsJobDetailOutOrganizationDetailFromJSONTyped,
    AppSchemasGeneralJobsJobDetailOutOrganizationDetailToJSON,
} from './AppSchemasGeneralJobsJobDetailOutOrganizationDetail';
import type { AppSchemasGeneralJobsJobDetailOutPgLangDetail } from './AppSchemasGeneralJobsJobDetailOutPgLangDetail';
import {
    AppSchemasGeneralJobsJobDetailOutPgLangDetailFromJSON,
    AppSchemasGeneralJobsJobDetailOutPgLangDetailFromJSONTyped,
    AppSchemasGeneralJobsJobDetailOutPgLangDetailToJSON,
} from './AppSchemasGeneralJobsJobDetailOutPgLangDetail';
import type { AppSchemasGeneralJobsJobDetailOutPrefectureDtail } from './AppSchemasGeneralJobsJobDetailOutPrefectureDtail';
import {
    AppSchemasGeneralJobsJobDetailOutPrefectureDtailFromJSON,
    AppSchemasGeneralJobsJobDetailOutPrefectureDtailFromJSONTyped,
    AppSchemasGeneralJobsJobDetailOutPrefectureDtailToJSON,
} from './AppSchemasGeneralJobsJobDetailOutPrefectureDtail';
import type { EmploymentManagementStatusDetail } from './EmploymentManagementStatusDetail';
import {
    EmploymentManagementStatusDetailFromJSON,
    EmploymentManagementStatusDetailFromJSONTyped,
    EmploymentManagementStatusDetailToJSON,
} from './EmploymentManagementStatusDetail';
import type { EmploymentStatus } from './EmploymentStatus';
import {
    EmploymentStatusFromJSON,
    EmploymentStatusFromJSONTyped,
    EmploymentStatusToJSON,
} from './EmploymentStatus';
import type { JobContentDetail } from './JobContentDetail';
import {
    JobContentDetailFromJSON,
    JobContentDetailFromJSONTyped,
    JobContentDetailToJSON,
} from './JobContentDetail';
import type { Occupation } from './Occupation';
import {
    OccupationFromJSON,
    OccupationFromJSONTyped,
    OccupationToJSON,
} from './Occupation';
import type { RecruitmentAndHiringStatusDetail } from './RecruitmentAndHiringStatusDetail';
import {
    RecruitmentAndHiringStatusDetailFromJSON,
    RecruitmentAndHiringStatusDetailFromJSONTyped,
    RecruitmentAndHiringStatusDetailToJSON,
} from './RecruitmentAndHiringStatusDetail';
import type { SelectionFlowsDetail } from './SelectionFlowsDetail';
import {
    SelectionFlowsDetailFromJSON,
    SelectionFlowsDetailFromJSONTyped,
    SelectionFlowsDetailToJSON,
} from './SelectionFlowsDetail';
import type { VocationalAbilityStatusDetail } from './VocationalAbilityStatusDetail';
import {
    VocationalAbilityStatusDetailFromJSON,
    VocationalAbilityStatusDetailFromJSONTyped,
    VocationalAbilityStatusDetailToJSON,
} from './VocationalAbilityStatusDetail';
import type { WorkingHourDetail } from './WorkingHourDetail';
import {
    WorkingHourDetailFromJSON,
    WorkingHourDetailFromJSONTyped,
    WorkingHourDetailToJSON,
} from './WorkingHourDetail';

/**
 * 
 * @export
 * @interface JobDetailDetailOut
 */
export interface JobDetailDetailOut {
    /**
     * ID
     * @type {number}
     * @memberof JobDetailDetailOut
     */
    id: number;
    /**
     * 
     * @type {AppSchemasGeneralJobsJobDetailOutOrganizationDetail}
     * @memberof JobDetailDetailOut
     */
    organization: AppSchemasGeneralJobsJobDetailOutOrganizationDetail;
    /**
     * 選考種別
     * @type {number}
     * @memberof JobDetailDetailOut
     */
    selectionType: number;
    /**
     * 掲載開始日
     * @type {Date}
     * @memberof JobDetailDetailOut
     */
    postingStartsAt: Date | null;
    /**
     * 掲載終了日
     * @type {Date}
     * @memberof JobDetailDetailOut
     */
    postingEndsAt: Date | null;
    /**
     * スキルレベル
     * @type {number}
     * @memberof JobDetailDetailOut
     */
    skillLevel: number | null;
    /**
     * 採用人数
     * @type {number}
     * @memberof JobDetailDetailOut
     */
    recruitmentNumbers: number | null;
    /**
     * 集合場所における受動喫煙防止の取り組み
     * @type {number}
     * @memberof JobDetailDetailOut
     */
    passiveSmokingInitiative: number | null;
    /**
     * 
     * @type {EmploymentStatus}
     * @memberof JobDetailDetailOut
     */
    employmentStatus: EmploymentStatus | null;
    /**
     * フレームワーク
     * @type {Array<AppSchemasGeneralJobsJobDetailOutFrameworkDetail>}
     * @memberof JobDetailDetailOut
     */
    frameworks: Array<AppSchemasGeneralJobsJobDetailOutFrameworkDetail> | null;
    /**
     * 卒業年度開始年
     * @type {number}
     * @memberof JobDetailDetailOut
     */
    graduationYearFrom: number | null;
    /**
     * 卒業年度終了年
     * @type {number}
     * @memberof JobDetailDetailOut
     */
    graduationYearTo: number | null;
    /**
     * 給与形態
     * @type {number}
     * @memberof JobDetailDetailOut
     */
    salarySystem: number | null;
    /**
     * 下限給与額
     * @type {number}
     * @memberof JobDetailDetailOut
     */
    salaryMin: number | null;
    /**
     * 上限給与額
     * @type {number}
     * @memberof JobDetailDetailOut
     */
    salaryMax: number | null;
    /**
     * 給与補足
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    salaryMemo: string;
    /**
     * 勤務時間補足
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    workingHourMemo: string;
    /**
     * 求人タイトル
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    title: string;
    /**
     * 求人トップ画像
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    jobImage: string;
    /**
     * 仕事内容
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    jobContent: string;
    /**
     * 求人特徴
     * @type {Array<AppSchemasGeneralJobsJobDetailOutJobFeatureDetail>}
     * @memberof JobDetailDetailOut
     */
    jobFeatures: Array<AppSchemasGeneralJobsJobDetailOutJobFeatureDetail> | null;
    /**
     * 対象となる方
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    target: string;
    /**
     * 勤務地
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    workLocation: string;
    /**
     * 契約期間
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    contractPeriod: string;
    /**
     * 試用期間
     * @type {number}
     * @memberof JobDetailDetailOut
     */
    probation: number;
    /**
     * 昇給
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    salaryIncrease: string;
    /**
     * 賞与
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    bonus: string;
    /**
     * 時間外勤務があるか
     * @type {boolean}
     * @memberof JobDetailDetailOut
     */
    hasOvertimeWorking: boolean;
    /**
     * 時間外勤務詳細
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    overtimeWorkingDetail: string;
    /**
     * 開発言語
     * @type {Array<AppSchemasGeneralJobsJobDetailOutPgLangDetail>}
     * @memberof JobDetailDetailOut
     */
    pgLangs: Array<AppSchemasGeneralJobsJobDetailOutPgLangDetail> | null;
    /**
     * 都道府県
     * @type {Array<AppSchemasGeneralJobsJobDetailOutPrefectureDtail>}
     * @memberof JobDetailDetailOut
     */
    prefectures: Array<AppSchemasGeneralJobsJobDetailOutPrefectureDtail> | null;
    /**
     * 休日・休暇
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    holiday: string;
    /**
     * 社会保険
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    socialInsurance: string;
    /**
     * 福利厚生
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    benefit: string;
    /**
     * 研修制度
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    trainingSystem: string;
    /**
     * 選考方法
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    selectionMethod: string;
    /**
     * 提出書類
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    submittedDocument: string;
    /**
     * 問い合わせ先
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    contact: string;
    /**
     * 企業PR
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    companyPr: string;
    /**
     * 作成日時
     * @type {Date}
     * @memberof JobDetailDetailOut
     */
    createdAt: Date;
    /**
     * 作成者
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    createdBy: string;
    /**
     * 更新日時
     * @type {Date}
     * @memberof JobDetailDetailOut
     */
    updatedAt: Date;
    /**
     * 更新者
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    updatedBy: string;
    /**
     * お気に入り済みかどうか
     * @type {boolean}
     * @memberof JobDetailDetailOut
     */
    isFavorite: boolean;
    /**
     * 
     * @type {Occupation}
     * @memberof JobDetailDetailOut
     */
    occupation: Occupation | null;
    /**
     * 勤務時間
     * @type {Array<WorkingHourDetail>}
     * @memberof JobDetailDetailOut
     */
    workingHours: Array<WorkingHourDetail> | null;
    /**
     * 選考フロー
     * @type {Array<SelectionFlowsDetail>}
     * @memberof JobDetailDetailOut
     */
    selectionFlows: Array<SelectionFlowsDetail> | null;
    /**
     * 募集採用に関する状況詳細
     * @type {Array<RecruitmentAndHiringStatusDetail>}
     * @memberof JobDetailDetailOut
     */
    recruitmentAndHiringStatuses: Array<RecruitmentAndHiringStatusDetail> | null;
    /**
     * 職業能力開発・向上に関する状況詳細
     * @type {Array<VocationalAbilityStatusDetail>}
     * @memberof JobDetailDetailOut
     */
    vocationalAbilityStatuses: Array<VocationalAbilityStatusDetail> | null;
    /**
     * 企業における雇用管理に関する状況
     * @type {Array<EmploymentManagementStatusDetail>}
     * @memberof JobDetailDetailOut
     */
    employmentManagementStatuses: Array<EmploymentManagementStatusDetail> | null;
    /**
     * 求人オリジナルコンテンツ
     * @type {Array<JobContentDetail>}
     * @memberof JobDetailDetailOut
     */
    jobContents: Array<JobContentDetail> | null;
    /**
     * 応募済みかどうか
     * @type {boolean}
     * @memberof JobDetailDetailOut
     */
    isApplied: boolean;
    /**
     * スキルラベル
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    skillLevelLabel: string;
    /**
     * 選考種別ラベル
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    selectionTypeLabel: string;
    /**
     * 集合場所における受動喫煙防止の取り組みラベル
     * @type {string}
     * @memberof JobDetailDetailOut
     */
    passiveSmokingInitiativeLabel: string;
}

/**
 * Check if a given object implements the JobDetailDetailOut interface.
 */
export function instanceOfJobDetailDetailOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "organization" in value;
    isInstance = isInstance && "selectionType" in value;
    isInstance = isInstance && "postingStartsAt" in value;
    isInstance = isInstance && "postingEndsAt" in value;
    isInstance = isInstance && "skillLevel" in value;
    isInstance = isInstance && "recruitmentNumbers" in value;
    isInstance = isInstance && "passiveSmokingInitiative" in value;
    isInstance = isInstance && "employmentStatus" in value;
    isInstance = isInstance && "frameworks" in value;
    isInstance = isInstance && "graduationYearFrom" in value;
    isInstance = isInstance && "graduationYearTo" in value;
    isInstance = isInstance && "salarySystem" in value;
    isInstance = isInstance && "salaryMin" in value;
    isInstance = isInstance && "salaryMax" in value;
    isInstance = isInstance && "salaryMemo" in value;
    isInstance = isInstance && "workingHourMemo" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "jobImage" in value;
    isInstance = isInstance && "jobContent" in value;
    isInstance = isInstance && "jobFeatures" in value;
    isInstance = isInstance && "target" in value;
    isInstance = isInstance && "workLocation" in value;
    isInstance = isInstance && "contractPeriod" in value;
    isInstance = isInstance && "probation" in value;
    isInstance = isInstance && "salaryIncrease" in value;
    isInstance = isInstance && "bonus" in value;
    isInstance = isInstance && "hasOvertimeWorking" in value;
    isInstance = isInstance && "overtimeWorkingDetail" in value;
    isInstance = isInstance && "pgLangs" in value;
    isInstance = isInstance && "prefectures" in value;
    isInstance = isInstance && "holiday" in value;
    isInstance = isInstance && "socialInsurance" in value;
    isInstance = isInstance && "benefit" in value;
    isInstance = isInstance && "trainingSystem" in value;
    isInstance = isInstance && "selectionMethod" in value;
    isInstance = isInstance && "submittedDocument" in value;
    isInstance = isInstance && "contact" in value;
    isInstance = isInstance && "companyPr" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "createdBy" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "updatedBy" in value;
    isInstance = isInstance && "isFavorite" in value;
    isInstance = isInstance && "occupation" in value;
    isInstance = isInstance && "workingHours" in value;
    isInstance = isInstance && "selectionFlows" in value;
    isInstance = isInstance && "recruitmentAndHiringStatuses" in value;
    isInstance = isInstance && "vocationalAbilityStatuses" in value;
    isInstance = isInstance && "employmentManagementStatuses" in value;
    isInstance = isInstance && "jobContents" in value;
    isInstance = isInstance && "isApplied" in value;
    isInstance = isInstance && "skillLevelLabel" in value;
    isInstance = isInstance && "selectionTypeLabel" in value;
    isInstance = isInstance && "passiveSmokingInitiativeLabel" in value;

    return isInstance;
}

export function JobDetailDetailOutFromJSON(json: any): JobDetailDetailOut {
    return JobDetailDetailOutFromJSONTyped(json, false);
}

export function JobDetailDetailOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): JobDetailDetailOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'organization': AppSchemasGeneralJobsJobDetailOutOrganizationDetailFromJSON(json['organization']),
        'selectionType': json['selectionType'],
        'postingStartsAt': (json['postingStartsAt'] === null ? null : new Date(json['postingStartsAt'])),
        'postingEndsAt': (json['postingEndsAt'] === null ? null : new Date(json['postingEndsAt'])),
        'skillLevel': json['skillLevel'],
        'recruitmentNumbers': json['recruitmentNumbers'],
        'passiveSmokingInitiative': json['passiveSmokingInitiative'],
        'employmentStatus': EmploymentStatusFromJSON(json['employmentStatus']),
        'frameworks': (json['frameworks'] === null ? null : (json['frameworks'] as Array<any>).map(AppSchemasGeneralJobsJobDetailOutFrameworkDetailFromJSON)),
        'graduationYearFrom': json['graduationYearFrom'],
        'graduationYearTo': json['graduationYearTo'],
        'salarySystem': json['salarySystem'],
        'salaryMin': json['salaryMin'],
        'salaryMax': json['salaryMax'],
        'salaryMemo': json['salaryMemo'],
        'workingHourMemo': json['workingHourMemo'],
        'title': json['title'],
        'jobImage': json['jobImage'],
        'jobContent': json['jobContent'],
        'jobFeatures': (json['jobFeatures'] === null ? null : (json['jobFeatures'] as Array<any>).map(AppSchemasGeneralJobsJobDetailOutJobFeatureDetailFromJSON)),
        'target': json['target'],
        'workLocation': json['workLocation'],
        'contractPeriod': json['contractPeriod'],
        'probation': json['probation'],
        'salaryIncrease': json['salaryIncrease'],
        'bonus': json['bonus'],
        'hasOvertimeWorking': json['hasOvertimeWorking'],
        'overtimeWorkingDetail': json['overtimeWorkingDetail'],
        'pgLangs': (json['pgLangs'] === null ? null : (json['pgLangs'] as Array<any>).map(AppSchemasGeneralJobsJobDetailOutPgLangDetailFromJSON)),
        'prefectures': (json['prefectures'] === null ? null : (json['prefectures'] as Array<any>).map(AppSchemasGeneralJobsJobDetailOutPrefectureDtailFromJSON)),
        'holiday': json['holiday'],
        'socialInsurance': json['socialInsurance'],
        'benefit': json['benefit'],
        'trainingSystem': json['trainingSystem'],
        'selectionMethod': json['selectionMethod'],
        'submittedDocument': json['submittedDocument'],
        'contact': json['contact'],
        'companyPr': json['companyPr'],
        'createdAt': (new Date(json['createdAt'])),
        'createdBy': json['createdBy'],
        'updatedAt': (new Date(json['updatedAt'])),
        'updatedBy': json['updatedBy'],
        'isFavorite': json['isFavorite'],
        'occupation': OccupationFromJSON(json['occupation']),
        'workingHours': (json['workingHours'] === null ? null : (json['workingHours'] as Array<any>).map(WorkingHourDetailFromJSON)),
        'selectionFlows': (json['selectionFlows'] === null ? null : (json['selectionFlows'] as Array<any>).map(SelectionFlowsDetailFromJSON)),
        'recruitmentAndHiringStatuses': (json['recruitmentAndHiringStatuses'] === null ? null : (json['recruitmentAndHiringStatuses'] as Array<any>).map(RecruitmentAndHiringStatusDetailFromJSON)),
        'vocationalAbilityStatuses': (json['vocationalAbilityStatuses'] === null ? null : (json['vocationalAbilityStatuses'] as Array<any>).map(VocationalAbilityStatusDetailFromJSON)),
        'employmentManagementStatuses': (json['employmentManagementStatuses'] === null ? null : (json['employmentManagementStatuses'] as Array<any>).map(EmploymentManagementStatusDetailFromJSON)),
        'jobContents': (json['jobContents'] === null ? null : (json['jobContents'] as Array<any>).map(JobContentDetailFromJSON)),
        'isApplied': json['isApplied'],
        'skillLevelLabel': json['skillLevelLabel'],
        'selectionTypeLabel': json['selectionTypeLabel'],
        'passiveSmokingInitiativeLabel': json['passiveSmokingInitiativeLabel'],
    };
}

export function JobDetailDetailOutToJSON(value?: JobDetailDetailOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'organization': AppSchemasGeneralJobsJobDetailOutOrganizationDetailToJSON(value.organization),
        'selectionType': value.selectionType,
        'postingStartsAt': (value.postingStartsAt === null ? null : value.postingStartsAt.toISOString().substring(0,10)),
        'postingEndsAt': (value.postingEndsAt === null ? null : value.postingEndsAt.toISOString().substring(0,10)),
        'skillLevel': value.skillLevel,
        'recruitmentNumbers': value.recruitmentNumbers,
        'passiveSmokingInitiative': value.passiveSmokingInitiative,
        'employmentStatus': EmploymentStatusToJSON(value.employmentStatus),
        'frameworks': (value.frameworks === null ? null : (value.frameworks as Array<any>).map(AppSchemasGeneralJobsJobDetailOutFrameworkDetailToJSON)),
        'graduationYearFrom': value.graduationYearFrom,
        'graduationYearTo': value.graduationYearTo,
        'salarySystem': value.salarySystem,
        'salaryMin': value.salaryMin,
        'salaryMax': value.salaryMax,
        'salaryMemo': value.salaryMemo,
        'workingHourMemo': value.workingHourMemo,
        'title': value.title,
        'jobImage': value.jobImage,
        'jobContent': value.jobContent,
        'jobFeatures': (value.jobFeatures === null ? null : (value.jobFeatures as Array<any>).map(AppSchemasGeneralJobsJobDetailOutJobFeatureDetailToJSON)),
        'target': value.target,
        'workLocation': value.workLocation,
        'contractPeriod': value.contractPeriod,
        'probation': value.probation,
        'salaryIncrease': value.salaryIncrease,
        'bonus': value.bonus,
        'hasOvertimeWorking': value.hasOvertimeWorking,
        'overtimeWorkingDetail': value.overtimeWorkingDetail,
        'pgLangs': (value.pgLangs === null ? null : (value.pgLangs as Array<any>).map(AppSchemasGeneralJobsJobDetailOutPgLangDetailToJSON)),
        'prefectures': (value.prefectures === null ? null : (value.prefectures as Array<any>).map(AppSchemasGeneralJobsJobDetailOutPrefectureDtailToJSON)),
        'holiday': value.holiday,
        'socialInsurance': value.socialInsurance,
        'benefit': value.benefit,
        'trainingSystem': value.trainingSystem,
        'selectionMethod': value.selectionMethod,
        'submittedDocument': value.submittedDocument,
        'contact': value.contact,
        'companyPr': value.companyPr,
        'createdAt': (value.createdAt.toISOString()),
        'createdBy': value.createdBy,
        'updatedAt': (value.updatedAt.toISOString()),
        'updatedBy': value.updatedBy,
        'isFavorite': value.isFavorite,
        'occupation': OccupationToJSON(value.occupation),
        'workingHours': (value.workingHours === null ? null : (value.workingHours as Array<any>).map(WorkingHourDetailToJSON)),
        'selectionFlows': (value.selectionFlows === null ? null : (value.selectionFlows as Array<any>).map(SelectionFlowsDetailToJSON)),
        'recruitmentAndHiringStatuses': (value.recruitmentAndHiringStatuses === null ? null : (value.recruitmentAndHiringStatuses as Array<any>).map(RecruitmentAndHiringStatusDetailToJSON)),
        'vocationalAbilityStatuses': (value.vocationalAbilityStatuses === null ? null : (value.vocationalAbilityStatuses as Array<any>).map(VocationalAbilityStatusDetailToJSON)),
        'employmentManagementStatuses': (value.employmentManagementStatuses === null ? null : (value.employmentManagementStatuses as Array<any>).map(EmploymentManagementStatusDetailToJSON)),
        'jobContents': (value.jobContents === null ? null : (value.jobContents as Array<any>).map(JobContentDetailToJSON)),
        'isApplied': value.isApplied,
        'skillLevelLabel': value.skillLevelLabel,
        'selectionTypeLabel': value.selectionTypeLabel,
        'passiveSmokingInitiativeLabel': value.passiveSmokingInitiativeLabel,
    };
}

