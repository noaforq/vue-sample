/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PgLangOut } from './PgLangOut';
import {
    PgLangOutFromJSON,
    PgLangOutFromJSONTyped,
    PgLangOutToJSON,
} from './PgLangOut';
import type { ScoutUserDetail } from './ScoutUserDetail';
import {
    ScoutUserDetailFromJSON,
    ScoutUserDetailFromJSONTyped,
    ScoutUserDetailToJSON,
} from './ScoutUserDetail';
import type { SkillLevel } from './SkillLevel';
import {
    SkillLevelFromJSON,
    SkillLevelFromJSONTyped,
    SkillLevelToJSON,
} from './SkillLevel';

/**
 * 
 * @export
 * @interface JobScoutUserListOut
 */
export interface JobScoutUserListOut {
    /**
     * 企業名
     * @type {string}
     * @memberof JobScoutUserListOut
     */
    companyName: string;
    /**
     * 職種名
     * @type {string}
     * @memberof JobScoutUserListOut
     */
    occupationName: string;
    /**
     * 求人名
     * @type {string}
     * @memberof JobScoutUserListOut
     */
    jobTitle: string;
    /**
     * 勤務地
     * @type {string}
     * @memberof JobScoutUserListOut
     */
    workLocation: string;
    /**
     * 
     * @type {SkillLevel}
     * @memberof JobScoutUserListOut
     */
    neededLevel: SkillLevel | null;
    /**
     * 必要言語
     * @type {Array<PgLangOut>}
     * @memberof JobScoutUserListOut
     */
    neededPgLangs: Array<PgLangOut>;
    /**
     * 紹介ユーザーリスト
     * @type {Array<ScoutUserDetail>}
     * @memberof JobScoutUserListOut
     */
    scoutUserList: Array<ScoutUserDetail>;
}

/**
 * Check if a given object implements the JobScoutUserListOut interface.
 */
export function instanceOfJobScoutUserListOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "companyName" in value;
    isInstance = isInstance && "occupationName" in value;
    isInstance = isInstance && "jobTitle" in value;
    isInstance = isInstance && "workLocation" in value;
    isInstance = isInstance && "neededLevel" in value;
    isInstance = isInstance && "neededPgLangs" in value;
    isInstance = isInstance && "scoutUserList" in value;

    return isInstance;
}

export function JobScoutUserListOutFromJSON(json: any): JobScoutUserListOut {
    return JobScoutUserListOutFromJSONTyped(json, false);
}

export function JobScoutUserListOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): JobScoutUserListOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'companyName': json['companyName'],
        'occupationName': json['occupationName'],
        'jobTitle': json['jobTitle'],
        'workLocation': json['workLocation'],
        'neededLevel': SkillLevelFromJSON(json['neededLevel']),
        'neededPgLangs': ((json['neededPgLangs'] as Array<any>).map(PgLangOutFromJSON)),
        'scoutUserList': ((json['scoutUserList'] as Array<any>).map(ScoutUserDetailFromJSON)),
    };
}

export function JobScoutUserListOutToJSON(value?: JobScoutUserListOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'companyName': value.companyName,
        'occupationName': value.occupationName,
        'jobTitle': value.jobTitle,
        'workLocation': value.workLocation,
        'neededLevel': SkillLevelToJSON(value.neededLevel),
        'neededPgLangs': ((value.neededPgLangs as Array<any>).map(PgLangOutToJSON)),
        'scoutUserList': ((value.scoutUserList as Array<any>).map(ScoutUserDetailToJSON)),
    };
}

