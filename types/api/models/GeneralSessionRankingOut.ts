/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GeneralSessionRankingBaseOut } from './GeneralSessionRankingBaseOut';
import {
    GeneralSessionRankingBaseOutFromJSON,
    GeneralSessionRankingBaseOutFromJSONTyped,
    GeneralSessionRankingBaseOutToJSON,
} from './GeneralSessionRankingBaseOut';

/**
 * 
 * @export
 * @interface GeneralSessionRankingOut
 */
export interface GeneralSessionRankingOut {
    /**
     * ユーザID
     * @type {number}
     * @memberof GeneralSessionRankingOut
     */
    userId: number;
    /**
     * 順位
     * @type {number}
     * @memberof GeneralSessionRankingOut
     */
    order: number;
    /**
     * セッション参加人数
     * @type {number}
     * @memberof GeneralSessionRankingOut
     */
    userCount: number;
    /**
     * limitで指定された人数の必要情報
     * @type {Array<GeneralSessionRankingBaseOut>}
     * @memberof GeneralSessionRankingOut
     */
    rankingList: Array<GeneralSessionRankingBaseOut>;
}

/**
 * Check if a given object implements the GeneralSessionRankingOut interface.
 */
export function instanceOfGeneralSessionRankingOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "userId" in value;
    isInstance = isInstance && "order" in value;
    isInstance = isInstance && "userCount" in value;
    isInstance = isInstance && "rankingList" in value;

    return isInstance;
}

export function GeneralSessionRankingOutFromJSON(json: any): GeneralSessionRankingOut {
    return GeneralSessionRankingOutFromJSONTyped(json, false);
}

export function GeneralSessionRankingOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): GeneralSessionRankingOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'userId': json['userId'],
        'order': json['order'],
        'userCount': json['userCount'],
        'rankingList': ((json['rankingList'] as Array<any>).map(GeneralSessionRankingBaseOutFromJSON)),
    };
}

export function GeneralSessionRankingOutToJSON(value?: GeneralSessionRankingOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'userId': value.userId,
        'order': value.order,
        'userCount': value.userCount,
        'rankingList': ((value.rankingList as Array<any>).map(GeneralSessionRankingBaseOutToJSON)),
    };
}

