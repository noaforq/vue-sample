/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ContentCategoryType } from './ContentCategoryType';
import {
    ContentCategoryTypeFromJSON,
    ContentCategoryTypeFromJSONTyped,
    ContentCategoryTypeToJSON,
} from './ContentCategoryType';

/**
 * 
 * @export
 * @interface ContentCategoryChoicesOut
 */
export interface ContentCategoryChoicesOut {
    /**
     * 
     * @type {number}
     * @memberof ContentCategoryChoicesOut
     */
    id: number;
    /**
     * 
     * @type {ContentCategoryType}
     * @memberof ContentCategoryChoicesOut
     */
    contentCategoryType: ContentCategoryType;
    /**
     * 
     * @type {string}
     * @memberof ContentCategoryChoicesOut
     */
    nameLc: string;
}

/**
 * Check if a given object implements the ContentCategoryChoicesOut interface.
 */
export function instanceOfContentCategoryChoicesOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "contentCategoryType" in value;
    isInstance = isInstance && "nameLc" in value;

    return isInstance;
}

export function ContentCategoryChoicesOutFromJSON(json: any): ContentCategoryChoicesOut {
    return ContentCategoryChoicesOutFromJSONTyped(json, false);
}

export function ContentCategoryChoicesOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContentCategoryChoicesOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'contentCategoryType': ContentCategoryTypeFromJSON(json['contentCategoryType']),
        'nameLc': json['nameLc'],
    };
}

export function ContentCategoryChoicesOutToJSON(value?: ContentCategoryChoicesOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'contentCategoryType': ContentCategoryTypeToJSON(value.contentCategoryType),
        'nameLc': value.nameLc,
    };
}

