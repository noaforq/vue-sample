/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetEventUsersListOut
 */
export interface GetEventUsersListOut {
    /**
     * ユーザーID
     * @type {number}
     * @memberof GetEventUsersListOut
     */
    userId: number;
    /**
     * ユーザー名
     * @type {string}
     * @memberof GetEventUsersListOut
     */
    username: string;
    /**
     * 名前(SU, ST, 学校)
     * @type {string}
     * @memberof GetEventUsersListOut
     */
    fullName?: string | null;
    /**
     * 補足(主催企業、学校)
     * @type {string}
     * @memberof GetEventUsersListOut
     */
    extraInfo?: string | null;
    /**
     * 都道府県(SU, ST, 学校, 主催、共催)
     * @type {string}
     * @memberof GetEventUsersListOut
     */
    prefecture?: string | null;
    /**
     * 卒業予定・卒業年月(SU, ST, 学校)
     * @type {Date}
     * @memberof GetEventUsersListOut
     */
    graduationDate?: Date | null;
    /**
     * 所属
     * @type {string}
     * @memberof GetEventUsersListOut
     */
    organizationName?: string | null;
    /**
     * 参加日
     * @type {Date}
     * @memberof GetEventUsersListOut
     */
    joinedAt?: Date | null;
}

/**
 * Check if a given object implements the GetEventUsersListOut interface.
 */
export function instanceOfGetEventUsersListOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "userId" in value;
    isInstance = isInstance && "username" in value;

    return isInstance;
}

export function GetEventUsersListOutFromJSON(json: any): GetEventUsersListOut {
    return GetEventUsersListOutFromJSONTyped(json, false);
}

export function GetEventUsersListOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetEventUsersListOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'userId': json['userId'],
        'username': json['username'],
        'fullName': !exists(json, 'fullName') ? undefined : json['fullName'],
        'extraInfo': !exists(json, 'extraInfo') ? undefined : json['extraInfo'],
        'prefecture': !exists(json, 'prefecture') ? undefined : json['prefecture'],
        'graduationDate': !exists(json, 'graduationDate') ? undefined : (json['graduationDate'] === null ? null : new Date(json['graduationDate'])),
        'organizationName': !exists(json, 'organizationName') ? undefined : json['organizationName'],
        'joinedAt': !exists(json, 'joinedAt') ? undefined : (json['joinedAt'] === null ? null : new Date(json['joinedAt'])),
    };
}

export function GetEventUsersListOutToJSON(value?: GetEventUsersListOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'userId': value.userId,
        'username': value.username,
        'fullName': value.fullName,
        'extraInfo': value.extraInfo,
        'prefecture': value.prefecture,
        'graduationDate': value.graduationDate === undefined ? undefined : (value.graduationDate === null ? null : value.graduationDate.toISOString().substring(0,10)),
        'organizationName': value.organizationName,
        'joinedAt': value.joinedAt === undefined ? undefined : (value.joinedAt === null ? null : value.joinedAt.toISOString().substring(0,10)),
    };
}

