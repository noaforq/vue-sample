/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EventThreadDetailOut
 */
export interface EventThreadDetailOut {
    /**
     * スレッドID
     * @type {number}
     * @memberof EventThreadDetailOut
     */
    id: number;
    /**
     * イベントID
     * @type {number}
     * @memberof EventThreadDetailOut
     */
    eventId: number;
    /**
     * 本文
     * @type {string}
     * @memberof EventThreadDetailOut
     */
    body: string;
    /**
     * 
     * @type {Date}
     * @memberof EventThreadDetailOut
     */
    createdAt: Date;
    /**
     * 作成者
     * @type {string}
     * @memberof EventThreadDetailOut
     */
    createdBy: string;
    /**
     * 
     * @type {Date}
     * @memberof EventThreadDetailOut
     */
    updatedAt: Date;
    /**
     * 更新者
     * @type {string}
     * @memberof EventThreadDetailOut
     */
    updatedBy: string;
}

/**
 * Check if a given object implements the EventThreadDetailOut interface.
 */
export function instanceOfEventThreadDetailOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "eventId" in value;
    isInstance = isInstance && "body" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "createdBy" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "updatedBy" in value;

    return isInstance;
}

export function EventThreadDetailOutFromJSON(json: any): EventThreadDetailOut {
    return EventThreadDetailOutFromJSONTyped(json, false);
}

export function EventThreadDetailOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventThreadDetailOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'eventId': json['eventId'],
        'body': json['body'],
        'createdAt': (new Date(json['createdAt'])),
        'createdBy': json['createdBy'],
        'updatedAt': (new Date(json['updatedAt'])),
        'updatedBy': json['updatedBy'],
    };
}

export function EventThreadDetailOutToJSON(value?: EventThreadDetailOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'eventId': value.eventId,
        'body': value.body,
        'createdAt': (value.createdAt.toISOString()),
        'createdBy': value.createdBy,
        'updatedAt': (value.updatedAt.toISOString()),
        'updatedBy': value.updatedBy,
    };
}

