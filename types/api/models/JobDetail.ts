/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AppSchemasGeneralSelectionsGeneralGetSelectionsFrameworkDetail } from './AppSchemasGeneralSelectionsGeneralGetSelectionsFrameworkDetail';
import {
    AppSchemasGeneralSelectionsGeneralGetSelectionsFrameworkDetailFromJSON,
    AppSchemasGeneralSelectionsGeneralGetSelectionsFrameworkDetailFromJSONTyped,
    AppSchemasGeneralSelectionsGeneralGetSelectionsFrameworkDetailToJSON,
} from './AppSchemasGeneralSelectionsGeneralGetSelectionsFrameworkDetail';
import type { AppSchemasGeneralSelectionsGeneralGetSelectionsJobFeatureDetail } from './AppSchemasGeneralSelectionsGeneralGetSelectionsJobFeatureDetail';
import {
    AppSchemasGeneralSelectionsGeneralGetSelectionsJobFeatureDetailFromJSON,
    AppSchemasGeneralSelectionsGeneralGetSelectionsJobFeatureDetailFromJSONTyped,
    AppSchemasGeneralSelectionsGeneralGetSelectionsJobFeatureDetailToJSON,
} from './AppSchemasGeneralSelectionsGeneralGetSelectionsJobFeatureDetail';
import type { AppSchemasGeneralSelectionsGeneralGetSelectionsPgLangDetail } from './AppSchemasGeneralSelectionsGeneralGetSelectionsPgLangDetail';
import {
    AppSchemasGeneralSelectionsGeneralGetSelectionsPgLangDetailFromJSON,
    AppSchemasGeneralSelectionsGeneralGetSelectionsPgLangDetailFromJSONTyped,
    AppSchemasGeneralSelectionsGeneralGetSelectionsPgLangDetailToJSON,
} from './AppSchemasGeneralSelectionsGeneralGetSelectionsPgLangDetail';
import type { AppSchemasGeneralSelectionsGeneralGetSelectionsPrefectureDtail } from './AppSchemasGeneralSelectionsGeneralGetSelectionsPrefectureDtail';
import {
    AppSchemasGeneralSelectionsGeneralGetSelectionsPrefectureDtailFromJSON,
    AppSchemasGeneralSelectionsGeneralGetSelectionsPrefectureDtailFromJSONTyped,
    AppSchemasGeneralSelectionsGeneralGetSelectionsPrefectureDtailToJSON,
} from './AppSchemasGeneralSelectionsGeneralGetSelectionsPrefectureDtail';

/**
 * 
 * @export
 * @interface JobDetail
 */
export interface JobDetail {
    /**
     * ID
     * @type {number}
     * @memberof JobDetail
     */
    id: number;
    /**
     * 選考種別
     * @type {number}
     * @memberof JobDetail
     */
    selectionType: number;
    /**
     * 掲載開始日
     * @type {Date}
     * @memberof JobDetail
     */
    postingStartsAt: Date | null;
    /**
     * 掲載終了日
     * @type {Date}
     * @memberof JobDetail
     */
    postingEndsAt: Date | null;
    /**
     * スキルレベル
     * @type {number}
     * @memberof JobDetail
     */
    skillLevel: number | null;
    /**
     * 採用人数
     * @type {number}
     * @memberof JobDetail
     */
    recruitmentNumbers: number | null;
    /**
     * 集合場所における受動喫煙防止の取り組み
     * @type {number}
     * @memberof JobDetail
     */
    passiveSmokingInitiative: number | null;
    /**
     * 雇用形態
     * @type {number}
     * @memberof JobDetail
     */
    employmentStatus: number | null;
    /**
     * フレームワーク
     * @type {Array<AppSchemasGeneralSelectionsGeneralGetSelectionsFrameworkDetail>}
     * @memberof JobDetail
     */
    frameworks: Array<AppSchemasGeneralSelectionsGeneralGetSelectionsFrameworkDetail> | null;
    /**
     * 卒業年度開始年
     * @type {number}
     * @memberof JobDetail
     */
    graduationYearFrom: number | null;
    /**
     * 卒業年度終了年
     * @type {number}
     * @memberof JobDetail
     */
    graduationYearTo: number | null;
    /**
     * 給与形態
     * @type {number}
     * @memberof JobDetail
     */
    salarySystem: number | null;
    /**
     * 下限給与額
     * @type {number}
     * @memberof JobDetail
     */
    salaryMin: number | null;
    /**
     * 上限給与額
     * @type {number}
     * @memberof JobDetail
     */
    salaryMax: number | null;
    /**
     * 給与補足
     * @type {string}
     * @memberof JobDetail
     */
    salaryMemo: string;
    /**
     * 勤務時間補足
     * @type {string}
     * @memberof JobDetail
     */
    workingHourMemo: string;
    /**
     * 求人タイトル
     * @type {string}
     * @memberof JobDetail
     */
    title: string;
    /**
     * 求人トップ画像
     * @type {string}
     * @memberof JobDetail
     */
    jobImage: string;
    /**
     * 仕事内容
     * @type {string}
     * @memberof JobDetail
     */
    jobContent: string;
    /**
     * 求人特徴
     * @type {Array<AppSchemasGeneralSelectionsGeneralGetSelectionsJobFeatureDetail>}
     * @memberof JobDetail
     */
    jobFeatures: Array<AppSchemasGeneralSelectionsGeneralGetSelectionsJobFeatureDetail> | null;
    /**
     * 対象となる方
     * @type {string}
     * @memberof JobDetail
     */
    target: string;
    /**
     * 勤務地
     * @type {string}
     * @memberof JobDetail
     */
    workLocation: string;
    /**
     * 契約期間
     * @type {string}
     * @memberof JobDetail
     */
    contractPeriod: string;
    /**
     * 試用期間
     * @type {number}
     * @memberof JobDetail
     */
    probation: number;
    /**
     * 昇給
     * @type {string}
     * @memberof JobDetail
     */
    salaryIncrease: string;
    /**
     * 賞与
     * @type {string}
     * @memberof JobDetail
     */
    bonus: string;
    /**
     * 時間外勤務があるか
     * @type {boolean}
     * @memberof JobDetail
     */
    hasOvertimeWorking: boolean;
    /**
     * 時間外勤務詳細
     * @type {string}
     * @memberof JobDetail
     */
    overtimeWorkingDetail: string;
    /**
     * 開発言語
     * @type {Array<AppSchemasGeneralSelectionsGeneralGetSelectionsPgLangDetail>}
     * @memberof JobDetail
     */
    pgLangs: Array<AppSchemasGeneralSelectionsGeneralGetSelectionsPgLangDetail> | null;
    /**
     * 都道府県
     * @type {Array<AppSchemasGeneralSelectionsGeneralGetSelectionsPrefectureDtail>}
     * @memberof JobDetail
     */
    prefectures: Array<AppSchemasGeneralSelectionsGeneralGetSelectionsPrefectureDtail> | null;
    /**
     * 休日・休暇
     * @type {string}
     * @memberof JobDetail
     */
    holiday: string;
    /**
     * 社会保険
     * @type {string}
     * @memberof JobDetail
     */
    socialInsurance: string;
    /**
     * 福利厚生
     * @type {string}
     * @memberof JobDetail
     */
    benefit: string;
    /**
     * 研修制度
     * @type {string}
     * @memberof JobDetail
     */
    trainingSystem: string;
    /**
     * 選考方法
     * @type {string}
     * @memberof JobDetail
     */
    selectionMethod: string;
    /**
     * 提出書類
     * @type {string}
     * @memberof JobDetail
     */
    submittedDocument: string;
    /**
     * 問い合わせ先
     * @type {string}
     * @memberof JobDetail
     */
    contact: string;
    /**
     * 企業PR
     * @type {string}
     * @memberof JobDetail
     */
    companyPr: string;
    /**
     * 作成日時
     * @type {Date}
     * @memberof JobDetail
     */
    createdAt: Date;
    /**
     * 作成者
     * @type {string}
     * @memberof JobDetail
     */
    createdBy: string;
    /**
     * 更新日時
     * @type {Date}
     * @memberof JobDetail
     */
    updatedAt: Date;
    /**
     * 更新者
     * @type {string}
     * @memberof JobDetail
     */
    updatedBy: string;
}

/**
 * Check if a given object implements the JobDetail interface.
 */
export function instanceOfJobDetail(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "selectionType" in value;
    isInstance = isInstance && "postingStartsAt" in value;
    isInstance = isInstance && "postingEndsAt" in value;
    isInstance = isInstance && "skillLevel" in value;
    isInstance = isInstance && "recruitmentNumbers" in value;
    isInstance = isInstance && "passiveSmokingInitiative" in value;
    isInstance = isInstance && "employmentStatus" in value;
    isInstance = isInstance && "frameworks" in value;
    isInstance = isInstance && "graduationYearFrom" in value;
    isInstance = isInstance && "graduationYearTo" in value;
    isInstance = isInstance && "salarySystem" in value;
    isInstance = isInstance && "salaryMin" in value;
    isInstance = isInstance && "salaryMax" in value;
    isInstance = isInstance && "salaryMemo" in value;
    isInstance = isInstance && "workingHourMemo" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "jobImage" in value;
    isInstance = isInstance && "jobContent" in value;
    isInstance = isInstance && "jobFeatures" in value;
    isInstance = isInstance && "target" in value;
    isInstance = isInstance && "workLocation" in value;
    isInstance = isInstance && "contractPeriod" in value;
    isInstance = isInstance && "probation" in value;
    isInstance = isInstance && "salaryIncrease" in value;
    isInstance = isInstance && "bonus" in value;
    isInstance = isInstance && "hasOvertimeWorking" in value;
    isInstance = isInstance && "overtimeWorkingDetail" in value;
    isInstance = isInstance && "pgLangs" in value;
    isInstance = isInstance && "prefectures" in value;
    isInstance = isInstance && "holiday" in value;
    isInstance = isInstance && "socialInsurance" in value;
    isInstance = isInstance && "benefit" in value;
    isInstance = isInstance && "trainingSystem" in value;
    isInstance = isInstance && "selectionMethod" in value;
    isInstance = isInstance && "submittedDocument" in value;
    isInstance = isInstance && "contact" in value;
    isInstance = isInstance && "companyPr" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "createdBy" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "updatedBy" in value;

    return isInstance;
}

export function JobDetailFromJSON(json: any): JobDetail {
    return JobDetailFromJSONTyped(json, false);
}

export function JobDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): JobDetail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'selectionType': json['selectionType'],
        'postingStartsAt': (json['postingStartsAt'] === null ? null : new Date(json['postingStartsAt'])),
        'postingEndsAt': (json['postingEndsAt'] === null ? null : new Date(json['postingEndsAt'])),
        'skillLevel': json['skillLevel'],
        'recruitmentNumbers': json['recruitmentNumbers'],
        'passiveSmokingInitiative': json['passiveSmokingInitiative'],
        'employmentStatus': json['employmentStatus'],
        'frameworks': (json['frameworks'] === null ? null : (json['frameworks'] as Array<any>).map(AppSchemasGeneralSelectionsGeneralGetSelectionsFrameworkDetailFromJSON)),
        'graduationYearFrom': json['graduationYearFrom'],
        'graduationYearTo': json['graduationYearTo'],
        'salarySystem': json['salarySystem'],
        'salaryMin': json['salaryMin'],
        'salaryMax': json['salaryMax'],
        'salaryMemo': json['salaryMemo'],
        'workingHourMemo': json['workingHourMemo'],
        'title': json['title'],
        'jobImage': json['jobImage'],
        'jobContent': json['jobContent'],
        'jobFeatures': (json['jobFeatures'] === null ? null : (json['jobFeatures'] as Array<any>).map(AppSchemasGeneralSelectionsGeneralGetSelectionsJobFeatureDetailFromJSON)),
        'target': json['target'],
        'workLocation': json['workLocation'],
        'contractPeriod': json['contractPeriod'],
        'probation': json['probation'],
        'salaryIncrease': json['salaryIncrease'],
        'bonus': json['bonus'],
        'hasOvertimeWorking': json['hasOvertimeWorking'],
        'overtimeWorkingDetail': json['overtimeWorkingDetail'],
        'pgLangs': (json['pgLangs'] === null ? null : (json['pgLangs'] as Array<any>).map(AppSchemasGeneralSelectionsGeneralGetSelectionsPgLangDetailFromJSON)),
        'prefectures': (json['prefectures'] === null ? null : (json['prefectures'] as Array<any>).map(AppSchemasGeneralSelectionsGeneralGetSelectionsPrefectureDtailFromJSON)),
        'holiday': json['holiday'],
        'socialInsurance': json['socialInsurance'],
        'benefit': json['benefit'],
        'trainingSystem': json['trainingSystem'],
        'selectionMethod': json['selectionMethod'],
        'submittedDocument': json['submittedDocument'],
        'contact': json['contact'],
        'companyPr': json['companyPr'],
        'createdAt': (new Date(json['createdAt'])),
        'createdBy': json['createdBy'],
        'updatedAt': (new Date(json['updatedAt'])),
        'updatedBy': json['updatedBy'],
    };
}

export function JobDetailToJSON(value?: JobDetail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'selectionType': value.selectionType,
        'postingStartsAt': (value.postingStartsAt === null ? null : value.postingStartsAt.toISOString().substring(0,10)),
        'postingEndsAt': (value.postingEndsAt === null ? null : value.postingEndsAt.toISOString().substring(0,10)),
        'skillLevel': value.skillLevel,
        'recruitmentNumbers': value.recruitmentNumbers,
        'passiveSmokingInitiative': value.passiveSmokingInitiative,
        'employmentStatus': value.employmentStatus,
        'frameworks': (value.frameworks === null ? null : (value.frameworks as Array<any>).map(AppSchemasGeneralSelectionsGeneralGetSelectionsFrameworkDetailToJSON)),
        'graduationYearFrom': value.graduationYearFrom,
        'graduationYearTo': value.graduationYearTo,
        'salarySystem': value.salarySystem,
        'salaryMin': value.salaryMin,
        'salaryMax': value.salaryMax,
        'salaryMemo': value.salaryMemo,
        'workingHourMemo': value.workingHourMemo,
        'title': value.title,
        'jobImage': value.jobImage,
        'jobContent': value.jobContent,
        'jobFeatures': (value.jobFeatures === null ? null : (value.jobFeatures as Array<any>).map(AppSchemasGeneralSelectionsGeneralGetSelectionsJobFeatureDetailToJSON)),
        'target': value.target,
        'workLocation': value.workLocation,
        'contractPeriod': value.contractPeriod,
        'probation': value.probation,
        'salaryIncrease': value.salaryIncrease,
        'bonus': value.bonus,
        'hasOvertimeWorking': value.hasOvertimeWorking,
        'overtimeWorkingDetail': value.overtimeWorkingDetail,
        'pgLangs': (value.pgLangs === null ? null : (value.pgLangs as Array<any>).map(AppSchemasGeneralSelectionsGeneralGetSelectionsPgLangDetailToJSON)),
        'prefectures': (value.prefectures === null ? null : (value.prefectures as Array<any>).map(AppSchemasGeneralSelectionsGeneralGetSelectionsPrefectureDtailToJSON)),
        'holiday': value.holiday,
        'socialInsurance': value.socialInsurance,
        'benefit': value.benefit,
        'trainingSystem': value.trainingSystem,
        'selectionMethod': value.selectionMethod,
        'submittedDocument': value.submittedDocument,
        'contact': value.contact,
        'companyPr': value.companyPr,
        'createdAt': (value.createdAt.toISOString()),
        'createdBy': value.createdBy,
        'updatedAt': (value.updatedAt.toISOString()),
        'updatedBy': value.updatedBy,
    };
}

