/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SchoolType } from './SchoolType';
import {
    SchoolTypeFromJSON,
    SchoolTypeFromJSONTyped,
    SchoolTypeToJSON,
} from './SchoolType';

/**
 * 
 * @export
 * @interface SchoolUpdateIn
 */
export interface SchoolUpdateIn {
    /**
     * 
     * @type {string}
     * @memberof SchoolUpdateIn
     */
    name?: string | null;
    /**
     * 
     * @type {SchoolType}
     * @memberof SchoolUpdateIn
     */
    schoolType?: SchoolType | null;
    /**
     * 
     * @type {string}
     * @memberof SchoolUpdateIn
     */
    image?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SchoolUpdateIn
     */
    hp?: string | null;
}

/**
 * Check if a given object implements the SchoolUpdateIn interface.
 */
export function instanceOfSchoolUpdateIn(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SchoolUpdateInFromJSON(json: any): SchoolUpdateIn {
    return SchoolUpdateInFromJSONTyped(json, false);
}

export function SchoolUpdateInFromJSONTyped(json: any, ignoreDiscriminator: boolean): SchoolUpdateIn {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'schoolType': !exists(json, 'schoolType') ? undefined : SchoolTypeFromJSON(json['schoolType']),
        'image': !exists(json, 'image') ? undefined : json['image'],
        'hp': !exists(json, 'hp') ? undefined : json['hp'],
    };
}

export function SchoolUpdateInToJSON(value?: SchoolUpdateIn | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'schoolType': SchoolTypeToJSON(value.schoolType),
        'image': value.image,
        'hp': value.hp,
    };
}

