/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface JobListOut
 */
export interface JobListOut {
    /**
     * 求人ID
     * @type {number}
     * @memberof JobListOut
     */
    jobId?: number | null;
    /**
     * 公開済みか
     * @type {boolean}
     * @memberof JobListOut
     */
    isPublished: boolean;
    /**
     * タイトル
     * @type {string}
     * @memberof JobListOut
     */
    title: string;
    /**
     * 勤務場所
     * @type {Array<string>}
     * @memberof JobListOut
     */
    prefectures?: Array<string>;
    /**
     * スキルレベルラベル
     * @type {string}
     * @memberof JobListOut
     */
    skillLevelLabel?: string;
    /**
     * 雇用形態ラベル
     * @type {string}
     * @memberof JobListOut
     */
    employmentStatusLabel?: string;
    /**
     * 作成日
     * @type {Date}
     * @memberof JobListOut
     */
    createdAt: Date;
    /**
     * 更新日
     * @type {Date}
     * @memberof JobListOut
     */
    updatedAt: Date;
    /**
     * 応募数
     * @type {number}
     * @memberof JobListOut
     */
    applicationCount: number;
    /**
     * 閲覧数
     * @type {number}
     * @memberof JobListOut
     */
    viewCount: number;
}

/**
 * Check if a given object implements the JobListOut interface.
 */
export function instanceOfJobListOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "isPublished" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "applicationCount" in value;
    isInstance = isInstance && "viewCount" in value;

    return isInstance;
}

export function JobListOutFromJSON(json: any): JobListOut {
    return JobListOutFromJSONTyped(json, false);
}

export function JobListOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): JobListOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'jobId': !exists(json, 'jobId') ? undefined : json['jobId'],
        'isPublished': json['isPublished'],
        'title': json['title'],
        'prefectures': !exists(json, 'prefectures') ? undefined : json['prefectures'],
        'skillLevelLabel': !exists(json, 'skillLevelLabel') ? undefined : json['skillLevelLabel'],
        'employmentStatusLabel': !exists(json, 'employmentStatusLabel') ? undefined : json['employmentStatusLabel'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'applicationCount': json['applicationCount'],
        'viewCount': json['viewCount'],
    };
}

export function JobListOutToJSON(value?: JobListOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'jobId': value.jobId,
        'isPublished': value.isPublished,
        'title': value.title,
        'prefectures': value.prefectures,
        'skillLevelLabel': value.skillLevelLabel,
        'employmentStatusLabel': value.employmentStatusLabel,
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
        'applicationCount': value.applicationCount,
        'viewCount': value.viewCount,
    };
}

