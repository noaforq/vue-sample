/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BugCodeOut
 */
export interface BugCodeOut {
    /**
     * pg言語ID
     * @type {number}
     * @memberof BugCodeOut
     */
    pgLangId?: number | null;
    /**
     * 言語名
     * @type {string}
     * @memberof BugCodeOut
     */
    name?: string | null;
    /**
     * モナコ名
     * @type {string}
     * @memberof BugCodeOut
     */
    monacoName?: string | null;
    /**
     * ソースコード
     * @type {string}
     * @memberof BugCodeOut
     */
    sourceCode?: string | null;
}

/**
 * Check if a given object implements the BugCodeOut interface.
 */
export function instanceOfBugCodeOut(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BugCodeOutFromJSON(json: any): BugCodeOut {
    return BugCodeOutFromJSONTyped(json, false);
}

export function BugCodeOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): BugCodeOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pgLangId': !exists(json, 'pgLangId') ? undefined : json['pgLangId'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'monacoName': !exists(json, 'monacoName') ? undefined : json['monacoName'],
        'sourceCode': !exists(json, 'sourceCode') ? undefined : json['sourceCode'],
    };
}

export function BugCodeOutToJSON(value?: BugCodeOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'pgLangId': value.pgLangId,
        'name': value.name,
        'monacoName': value.monacoName,
        'sourceCode': value.sourceCode,
    };
}

