/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SessionUserResultListOut
 */
export interface SessionUserResultListOut {
    /**
     * ユーザーID
     * @type {number}
     * @memberof SessionUserResultListOut
     */
    userId: number;
    /**
     * ユーザーアカウント名
     * @type {string}
     * @memberof SessionUserResultListOut
     */
    username: string;
    /**
     * 挑戦数
     * @type {number}
     * @memberof SessionUserResultListOut
     */
    trialCount: number;
    /**
     * 合格数
     * @type {number}
     * @memberof SessionUserResultListOut
     */
    passedCount: number;
    /**
     * スコア
     * @type {number}
     * @memberof SessionUserResultListOut
     */
    score: number;
    /**
     * 順位
     * @type {number}
     * @memberof SessionUserResultListOut
     */
    order: number;
    /**
     * ユーザー表示名
     * @type {string}
     * @memberof SessionUserResultListOut
     */
    userDisplayName?: string | null;
    /**
     * ユーザー本名
     * @type {string}
     * @memberof SessionUserResultListOut
     */
    userRealName?: string | null;
    /**
     * 出身都道府県名
     * @type {string}
     * @memberof SessionUserResultListOut
     */
    prefecture?: string | null;
    /**
     * 補足情報
     * @type {string}
     * @memberof SessionUserResultListOut
     */
    extraInfo?: string | null;
}

/**
 * Check if a given object implements the SessionUserResultListOut interface.
 */
export function instanceOfSessionUserResultListOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "userId" in value;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "trialCount" in value;
    isInstance = isInstance && "passedCount" in value;
    isInstance = isInstance && "score" in value;
    isInstance = isInstance && "order" in value;

    return isInstance;
}

export function SessionUserResultListOutFromJSON(json: any): SessionUserResultListOut {
    return SessionUserResultListOutFromJSONTyped(json, false);
}

export function SessionUserResultListOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): SessionUserResultListOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'userId': json['userId'],
        'username': json['username'],
        'trialCount': json['trialCount'],
        'passedCount': json['passedCount'],
        'score': json['score'],
        'order': json['order'],
        'userDisplayName': !exists(json, 'userDisplayName') ? undefined : json['userDisplayName'],
        'userRealName': !exists(json, 'userRealName') ? undefined : json['userRealName'],
        'prefecture': !exists(json, 'prefecture') ? undefined : json['prefecture'],
        'extraInfo': !exists(json, 'extraInfo') ? undefined : json['extraInfo'],
    };
}

export function SessionUserResultListOutToJSON(value?: SessionUserResultListOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'userId': value.userId,
        'username': value.username,
        'trialCount': value.trialCount,
        'passedCount': value.passedCount,
        'score': value.score,
        'order': value.order,
        'userDisplayName': value.userDisplayName,
        'userRealName': value.userRealName,
        'prefecture': value.prefecture,
        'extraInfo': value.extraInfo,
    };
}

