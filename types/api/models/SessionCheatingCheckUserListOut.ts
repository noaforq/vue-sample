/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AnswerlistInner } from './AnswerlistInner';
import {
    AnswerlistInnerFromJSON,
    AnswerlistInnerFromJSONTyped,
    AnswerlistInnerToJSON,
} from './AnswerlistInner';

/**
 * 不正チェックスキーマ
 * @export
 * @interface SessionCheatingCheckUserListOut
 */
export interface SessionCheatingCheckUserListOut {
    /**
     * 
     * @type {Array<AnswerlistInner>}
     * @memberof SessionCheatingCheckUserListOut
     */
    answerList: Array<AnswerlistInner>;
    /**
     * 検出数カウント
     * @type {number}
     * @memberof SessionCheatingCheckUserListOut
     */
    count: number;
}

/**
 * Check if a given object implements the SessionCheatingCheckUserListOut interface.
 */
export function instanceOfSessionCheatingCheckUserListOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "answerList" in value;
    isInstance = isInstance && "count" in value;

    return isInstance;
}

export function SessionCheatingCheckUserListOutFromJSON(json: any): SessionCheatingCheckUserListOut {
    return SessionCheatingCheckUserListOutFromJSONTyped(json, false);
}

export function SessionCheatingCheckUserListOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): SessionCheatingCheckUserListOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'answerList': ((json['answerList'] as Array<any>).map(AnswerlistInnerFromJSON)),
        'count': json['count'],
    };
}

export function SessionCheatingCheckUserListOutToJSON(value?: SessionCheatingCheckUserListOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'answerList': ((value.answerList as Array<any>).map(AnswerlistInnerToJSON)),
        'count': value.count,
    };
}

