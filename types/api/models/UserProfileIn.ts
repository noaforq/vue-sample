/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { JobChangingStatus } from './JobChangingStatus';
import {
    JobChangingStatusFromJSON,
    JobChangingStatusFromJSONTyped,
    JobChangingStatusToJSON,
} from './JobChangingStatus';
import type { JobHuntingStatus } from './JobHuntingStatus';
import {
    JobHuntingStatusFromJSON,
    JobHuntingStatusFromJSONTyped,
    JobHuntingStatusToJSON,
} from './JobHuntingStatus';
import type { JobHuntingType } from './JobHuntingType';
import {
    JobHuntingTypeFromJSON,
    JobHuntingTypeFromJSONTyped,
    JobHuntingTypeToJSON,
} from './JobHuntingType';
import type { PhoneNumberType } from './PhoneNumberType';
import {
    PhoneNumberTypeFromJSON,
    PhoneNumberTypeFromJSONTyped,
    PhoneNumberTypeToJSON,
} from './PhoneNumberType';

/**
 * 
 * @export
 * @interface UserProfileIn
 */
export interface UserProfileIn {
    /**
     * 表示名
     * @type {string}
     * @memberof UserProfileIn
     */
    displayName: string;
    /**
     * サブメールアドレス
     * @type {string}
     * @memberof UserProfileIn
     */
    subEmail?: string;
    /**
     * 
     * @type {PhoneNumberType}
     * @memberof UserProfileIn
     */
    phoneNumberType?: PhoneNumberType | null;
    /**
     * 電話番号
     * @type {string}
     * @memberof UserProfileIn
     */
    phoneNumber?: string | null;
    /**
     * アイコンURL
     * @type {string}
     * @memberof UserProfileIn
     */
    icon?: string;
    /**
     * 姓
     * @type {string}
     * @memberof UserProfileIn
     */
    lastName: string;
    /**
     * 名
     * @type {string}
     * @memberof UserProfileIn
     */
    firstName: string;
    /**
     * 姓カナ
     * @type {string}
     * @memberof UserProfileIn
     */
    lastNameKana: string;
    /**
     * 名カナ
     * @type {string}
     * @memberof UserProfileIn
     */
    firstNameKana: string;
    /**
     * 都道府県
     * @type {number}
     * @memberof UserProfileIn
     */
    prefectureId: number;
    /**
     * 生年月日
     * @type {Date}
     * @memberof UserProfileIn
     */
    birthday: Date;
    /**
     * 郵便番号
     * @type {string}
     * @memberof UserProfileIn
     */
    currentPostalCode?: string | null;
    /**
     * 現住所都道府県･市区町村
     * @type {string}
     * @memberof UserProfileIn
     */
    currentPrefectureCity?: string | null;
    /**
     * 現住所市区町村以降の住所
     * @type {string}
     * @memberof UserProfileIn
     */
    currentAddress1?: string | null;
    /**
     * 現住所建物名･部屋番号
     * @type {string}
     * @memberof UserProfileIn
     */
    currentAddress2?: string | null;
    /**
     * 休暇中連絡先は現住所と同じか
     * @type {boolean}
     * @memberof UserProfileIn
     */
    isSameContactOnVacation?: boolean;
    /**
     * 休暇中郵便番号
     * @type {string}
     * @memberof UserProfileIn
     */
    postalCodeOnVacation?: string | null;
    /**
     * 休暇中都道府県･市区町村
     * @type {string}
     * @memberof UserProfileIn
     */
    prefectureCityOnVacation?: string | null;
    /**
     * 休暇中市区町村以降の住所
     * @type {string}
     * @memberof UserProfileIn
     */
    address1OnVacation?: string | null;
    /**
     * 休暇中建物名･部屋番号
     * @type {string}
     * @memberof UserProfileIn
     */
    address2OnVacation?: string | null;
    /**
     * スカウトを受け取るか
     * @type {boolean}
     * @memberof UserProfileIn
     */
    receiveScouts?: boolean;
    /**
     * メール配信を希望するか
     * @type {boolean}
     * @memberof UserProfileIn
     */
    receiveEmails?: boolean;
    /**
     * 
     * @type {JobHuntingType}
     * @memberof UserProfileIn
     */
    jobHuntingType: JobHuntingType;
    /**
     * 
     * @type {JobHuntingStatus}
     * @memberof UserProfileIn
     */
    jobHuntingStatus?: JobHuntingStatus | null;
    /**
     * 
     * @type {JobChangingStatus}
     * @memberof UserProfileIn
     */
    jobChangingStatus?: JobChangingStatus | null;
    /**
     * 希望業種ID
     * @type {Array<number>}
     * @memberof UserProfileIn
     */
    desiredIndustryIds: Array<number>;
    /**
     * 希望職種ID
     * @type {Array<number>}
     * @memberof UserProfileIn
     */
    desiredOccupationIds: Array<number>;
    /**
     * 希望勤務地ID
     * @type {Array<number>}
     * @memberof UserProfileIn
     */
    desiredPrefectureIds: Array<number>;
    /**
     * 希望志向性ID
     * @type {Array<number>}
     * @memberof UserProfileIn
     */
    desiredIntentionalityIds: Array<number>;
    /**
     * 希望企業規模ID
     * @type {Array<number>}
     * @memberof UserProfileIn
     */
    desiredCompanyScaleIds: Array<number>;
}

/**
 * Check if a given object implements the UserProfileIn interface.
 */
export function instanceOfUserProfileIn(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "displayName" in value;
    isInstance = isInstance && "lastName" in value;
    isInstance = isInstance && "firstName" in value;
    isInstance = isInstance && "lastNameKana" in value;
    isInstance = isInstance && "firstNameKana" in value;
    isInstance = isInstance && "prefectureId" in value;
    isInstance = isInstance && "birthday" in value;
    isInstance = isInstance && "jobHuntingType" in value;
    isInstance = isInstance && "desiredIndustryIds" in value;
    isInstance = isInstance && "desiredOccupationIds" in value;
    isInstance = isInstance && "desiredPrefectureIds" in value;
    isInstance = isInstance && "desiredIntentionalityIds" in value;
    isInstance = isInstance && "desiredCompanyScaleIds" in value;

    return isInstance;
}

export function UserProfileInFromJSON(json: any): UserProfileIn {
    return UserProfileInFromJSONTyped(json, false);
}

export function UserProfileInFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserProfileIn {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'displayName': json['displayName'],
        'subEmail': !exists(json, 'subEmail') ? undefined : json['subEmail'],
        'phoneNumberType': !exists(json, 'phoneNumberType') ? undefined : PhoneNumberTypeFromJSON(json['phoneNumberType']),
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
        'icon': !exists(json, 'icon') ? undefined : json['icon'],
        'lastName': json['lastName'],
        'firstName': json['firstName'],
        'lastNameKana': json['lastNameKana'],
        'firstNameKana': json['firstNameKana'],
        'prefectureId': json['prefectureId'],
        'birthday': (new Date(json['birthday'])),
        'currentPostalCode': !exists(json, 'currentPostalCode') ? undefined : json['currentPostalCode'],
        'currentPrefectureCity': !exists(json, 'currentPrefectureCity') ? undefined : json['currentPrefectureCity'],
        'currentAddress1': !exists(json, 'currentAddress1') ? undefined : json['currentAddress1'],
        'currentAddress2': !exists(json, 'currentAddress2') ? undefined : json['currentAddress2'],
        'isSameContactOnVacation': !exists(json, 'isSameContactOnVacation') ? undefined : json['isSameContactOnVacation'],
        'postalCodeOnVacation': !exists(json, 'postalCodeOnVacation') ? undefined : json['postalCodeOnVacation'],
        'prefectureCityOnVacation': !exists(json, 'prefectureCityOnVacation') ? undefined : json['prefectureCityOnVacation'],
        'address1OnVacation': !exists(json, 'address1OnVacation') ? undefined : json['address1OnVacation'],
        'address2OnVacation': !exists(json, 'address2OnVacation') ? undefined : json['address2OnVacation'],
        'receiveScouts': !exists(json, 'receiveScouts') ? undefined : json['receiveScouts'],
        'receiveEmails': !exists(json, 'receiveEmails') ? undefined : json['receiveEmails'],
        'jobHuntingType': JobHuntingTypeFromJSON(json['jobHuntingType']),
        'jobHuntingStatus': !exists(json, 'jobHuntingStatus') ? undefined : JobHuntingStatusFromJSON(json['jobHuntingStatus']),
        'jobChangingStatus': !exists(json, 'jobChangingStatus') ? undefined : JobChangingStatusFromJSON(json['jobChangingStatus']),
        'desiredIndustryIds': json['desiredIndustryIds'],
        'desiredOccupationIds': json['desiredOccupationIds'],
        'desiredPrefectureIds': json['desiredPrefectureIds'],
        'desiredIntentionalityIds': json['desiredIntentionalityIds'],
        'desiredCompanyScaleIds': json['desiredCompanyScaleIds'],
    };
}

export function UserProfileInToJSON(value?: UserProfileIn | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'displayName': value.displayName,
        'subEmail': value.subEmail,
        'phoneNumberType': PhoneNumberTypeToJSON(value.phoneNumberType),
        'phoneNumber': value.phoneNumber,
        'icon': value.icon,
        'lastName': value.lastName,
        'firstName': value.firstName,
        'lastNameKana': value.lastNameKana,
        'firstNameKana': value.firstNameKana,
        'prefectureId': value.prefectureId,
        'birthday': (value.birthday.toISOString().substring(0,10)),
        'currentPostalCode': value.currentPostalCode,
        'currentPrefectureCity': value.currentPrefectureCity,
        'currentAddress1': value.currentAddress1,
        'currentAddress2': value.currentAddress2,
        'isSameContactOnVacation': value.isSameContactOnVacation,
        'postalCodeOnVacation': value.postalCodeOnVacation,
        'prefectureCityOnVacation': value.prefectureCityOnVacation,
        'address1OnVacation': value.address1OnVacation,
        'address2OnVacation': value.address2OnVacation,
        'receiveScouts': value.receiveScouts,
        'receiveEmails': value.receiveEmails,
        'jobHuntingType': JobHuntingTypeToJSON(value.jobHuntingType),
        'jobHuntingStatus': JobHuntingStatusToJSON(value.jobHuntingStatus),
        'jobChangingStatus': JobChangingStatusToJSON(value.jobChangingStatus),
        'desiredIndustryIds': value.desiredIndustryIds,
        'desiredOccupationIds': value.desiredOccupationIds,
        'desiredPrefectureIds': value.desiredPrefectureIds,
        'desiredIntentionalityIds': value.desiredIntentionalityIds,
        'desiredCompanyScaleIds': value.desiredCompanyScaleIds,
    };
}

