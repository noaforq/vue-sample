/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CompanyConditionOut
 */
export interface CompanyConditionOut {
    /**
     * スカウト可能か
     * @type {boolean}
     * @memberof CompanyConditionOut
     */
    canScout: boolean;
    /**
     * スカウト上限
     * @type {number}
     * @memberof CompanyConditionOut
     */
    scoutLimit: number;
    /**
     * セッション参加可能数
     * @type {number}
     * @memberof CompanyConditionOut
     */
    sessionJoinLimit: number;
    /**
     * 発行可能スキルチェックアカウント数
     * @type {number}
     * @memberof CompanyConditionOut
     */
    skillCheckAccountLimit: number;
    /**
     * セッション開催可能回数
     * @type {number}
     * @memberof CompanyConditionOut
     */
    sessionLimit: number;
    /**
     * スキルチェックアカウント接頭辞
     * @type {string}
     * @memberof CompanyConditionOut
     */
    skillCheckAccountPrefix: string;
    /**
     * 学校イベント協賛可能回数
     * @type {number}
     * @memberof CompanyConditionOut
     */
    schoolEventLimit: number;
    /**
     * 企業公開イベント開催可能回数
     * @type {number}
     * @memberof CompanyConditionOut
     */
    companyEventLimit: number;
}

/**
 * Check if a given object implements the CompanyConditionOut interface.
 */
export function instanceOfCompanyConditionOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "canScout" in value;
    isInstance = isInstance && "scoutLimit" in value;
    isInstance = isInstance && "sessionJoinLimit" in value;
    isInstance = isInstance && "skillCheckAccountLimit" in value;
    isInstance = isInstance && "sessionLimit" in value;
    isInstance = isInstance && "skillCheckAccountPrefix" in value;
    isInstance = isInstance && "schoolEventLimit" in value;
    isInstance = isInstance && "companyEventLimit" in value;

    return isInstance;
}

export function CompanyConditionOutFromJSON(json: any): CompanyConditionOut {
    return CompanyConditionOutFromJSONTyped(json, false);
}

export function CompanyConditionOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompanyConditionOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'canScout': json['canScout'],
        'scoutLimit': json['scoutLimit'],
        'sessionJoinLimit': json['sessionJoinLimit'],
        'skillCheckAccountLimit': json['skillCheckAccountLimit'],
        'sessionLimit': json['sessionLimit'],
        'skillCheckAccountPrefix': json['skillCheckAccountPrefix'],
        'schoolEventLimit': json['schoolEventLimit'],
        'companyEventLimit': json['companyEventLimit'],
    };
}

export function CompanyConditionOutToJSON(value?: CompanyConditionOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'canScout': value.canScout,
        'scoutLimit': value.scoutLimit,
        'sessionJoinLimit': value.sessionJoinLimit,
        'skillCheckAccountLimit': value.skillCheckAccountLimit,
        'sessionLimit': value.sessionLimit,
        'skillCheckAccountPrefix': value.skillCheckAccountPrefix,
        'schoolEventLimit': value.schoolEventLimit,
        'companyEventLimit': value.companyEventLimit,
    };
}

