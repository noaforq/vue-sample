/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProSkillLevel } from './ProSkillLevel';
import {
    ProSkillLevelFromJSON,
    ProSkillLevelFromJSONTyped,
    ProSkillLevelToJSON,
} from './ProSkillLevel';

/**
 * 
 * @export
 * @interface ProSessionContentListOut
 */
export interface ProSessionContentListOut {
    /**
     * 問題タイトル
     * @type {string}
     * @memberof ProSessionContentListOut
     */
    questionTitle: string;
    /**
     * トピック名
     * @type {string}
     * @memberof ProSessionContentListOut
     */
    contentTopic: string;
    /**
     * 
     * @type {ProSkillLevel}
     * @memberof ProSessionContentListOut
     */
    proSkillLevel?: ProSkillLevel | null;
}

/**
 * Check if a given object implements the ProSessionContentListOut interface.
 */
export function instanceOfProSessionContentListOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "questionTitle" in value;
    isInstance = isInstance && "contentTopic" in value;

    return isInstance;
}

export function ProSessionContentListOutFromJSON(json: any): ProSessionContentListOut {
    return ProSessionContentListOutFromJSONTyped(json, false);
}

export function ProSessionContentListOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProSessionContentListOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'questionTitle': json['questionTitle'],
        'contentTopic': json['contentTopic'],
        'proSkillLevel': !exists(json, 'proSkillLevel') ? undefined : ProSkillLevelFromJSON(json['proSkillLevel']),
    };
}

export function ProSessionContentListOutToJSON(value?: ProSessionContentListOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'questionTitle': value.questionTitle,
        'contentTopic': value.contentTopic,
        'proSkillLevel': ProSkillLevelToJSON(value.proSkillLevel),
    };
}

