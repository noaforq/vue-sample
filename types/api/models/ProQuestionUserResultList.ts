/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * ユーザー毎の成績一覧(PRO問題成績詳細)
 * @export
 * @interface ProQuestionUserResultList
 */
export interface ProQuestionUserResultList {
    /**
     * 参加者ユーザーID
     * @type {number}
     * @memberof ProQuestionUserResultList
     */
    id: number;
    /**
     * 参加者アカウント名
     * @type {string}
     * @memberof ProQuestionUserResultList
     */
    userName: string;
    /**
     * 合格したか
     * @type {boolean}
     * @memberof ProQuestionUserResultList
     */
    isPassed: boolean;
    /**
     * スコア
     * @type {number}
     * @memberof ProQuestionUserResultList
     */
    score: number;
    /**
     * 解答時間
     * @type {Date}
     * @memberof ProQuestionUserResultList
     */
    answerPassedTime: Date;
    /**
     * 提出回数
     * @type {number}
     * @memberof ProQuestionUserResultList
     */
    submitCount: number;
    /**
     * エラー回数
     * @type {number}
     * @memberof ProQuestionUserResultList
     */
    failedCount: number;
    /**
     * 参加者本名
     * @type {string}
     * @memberof ProQuestionUserResultList
     */
    userRealName: string | null;
    /**
     * 参加者表示名
     * @type {string}
     * @memberof ProQuestionUserResultList
     */
    displayName: string | null;
    /**
     * 学籍番号
     * @type {string}
     * @memberof ProQuestionUserResultList
     */
    studentNumber: string | null;
    /**
     * 補足情報
     * @type {string}
     * @memberof ProQuestionUserResultList
     */
    extraInfo: string | null;
}

/**
 * Check if a given object implements the ProQuestionUserResultList interface.
 */
export function instanceOfProQuestionUserResultList(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "userName" in value;
    isInstance = isInstance && "isPassed" in value;
    isInstance = isInstance && "score" in value;
    isInstance = isInstance && "answerPassedTime" in value;
    isInstance = isInstance && "submitCount" in value;
    isInstance = isInstance && "failedCount" in value;
    isInstance = isInstance && "userRealName" in value;
    isInstance = isInstance && "displayName" in value;
    isInstance = isInstance && "studentNumber" in value;
    isInstance = isInstance && "extraInfo" in value;

    return isInstance;
}

export function ProQuestionUserResultListFromJSON(json: any): ProQuestionUserResultList {
    return ProQuestionUserResultListFromJSONTyped(json, false);
}

export function ProQuestionUserResultListFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProQuestionUserResultList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'userName': json['userName'],
        'isPassed': json['isPassed'],
        'score': json['score'],
        'answerPassedTime': (new Date(json['answerPassedTime'])),
        'submitCount': json['submitCount'],
        'failedCount': json['failedCount'],
        'userRealName': json['userRealName'],
        'displayName': json['displayName'],
        'studentNumber': json['studentNumber'],
        'extraInfo': json['extraInfo'],
    };
}

export function ProQuestionUserResultListToJSON(value?: ProQuestionUserResultList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'userName': value.userName,
        'isPassed': value.isPassed,
        'score': value.score,
        'answerPassedTime': (value.answerPassedTime.toISOString()),
        'submitCount': value.submitCount,
        'failedCount': value.failedCount,
        'userRealName': value.userRealName,
        'displayName': value.displayName,
        'studentNumber': value.studentNumber,
        'extraInfo': value.extraInfo,
    };
}

