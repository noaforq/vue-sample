/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { JobDraftStatus } from './JobDraftStatus';
import {
    JobDraftStatusFromJSON,
    JobDraftStatusFromJSONTyped,
    JobDraftStatusToJSON,
} from './JobDraftStatus';

/**
 * 
 * @export
 * @interface JobDraftListOut
 */
export interface JobDraftListOut {
    /**
     * 求人ID
     * @type {number}
     * @memberof JobDraftListOut
     */
    jobId?: number | null;
    /**
     * 求人下書ID
     * @type {number}
     * @memberof JobDraftListOut
     */
    jobDraftId: number;
    /**
     * 
     * @type {JobDraftStatus}
     * @memberof JobDraftListOut
     */
    jobDraftStatus: JobDraftStatus;
    /**
     * 下書状況ラベル
     * @type {string}
     * @memberof JobDraftListOut
     */
    jobDraftStatusLabel: string;
    /**
     * タイトル
     * @type {string}
     * @memberof JobDraftListOut
     */
    title: string;
    /**
     * 勤務場所
     * @type {Array<string>}
     * @memberof JobDraftListOut
     */
    prefectures?: Array<string>;
    /**
     * スキルレベルラベル
     * @type {string}
     * @memberof JobDraftListOut
     */
    skillLevelLabel?: string;
    /**
     * 雇用形態ラベル
     * @type {string}
     * @memberof JobDraftListOut
     */
    employmentStatusLabel?: string;
    /**
     * 作成日
     * @type {Date}
     * @memberof JobDraftListOut
     */
    createdAt: Date;
    /**
     * 更新日
     * @type {Date}
     * @memberof JobDraftListOut
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the JobDraftListOut interface.
 */
export function instanceOfJobDraftListOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "jobDraftId" in value;
    isInstance = isInstance && "jobDraftStatus" in value;
    isInstance = isInstance && "jobDraftStatusLabel" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function JobDraftListOutFromJSON(json: any): JobDraftListOut {
    return JobDraftListOutFromJSONTyped(json, false);
}

export function JobDraftListOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): JobDraftListOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'jobId': !exists(json, 'jobId') ? undefined : json['jobId'],
        'jobDraftId': json['jobDraftId'],
        'jobDraftStatus': JobDraftStatusFromJSON(json['jobDraftStatus']),
        'jobDraftStatusLabel': json['jobDraftStatusLabel'],
        'title': json['title'],
        'prefectures': !exists(json, 'prefectures') ? undefined : json['prefectures'],
        'skillLevelLabel': !exists(json, 'skillLevelLabel') ? undefined : json['skillLevelLabel'],
        'employmentStatusLabel': !exists(json, 'employmentStatusLabel') ? undefined : json['employmentStatusLabel'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function JobDraftListOutToJSON(value?: JobDraftListOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'jobId': value.jobId,
        'jobDraftId': value.jobDraftId,
        'jobDraftStatus': JobDraftStatusToJSON(value.jobDraftStatus),
        'jobDraftStatusLabel': value.jobDraftStatusLabel,
        'title': value.title,
        'prefectures': value.prefectures,
        'skillLevelLabel': value.skillLevelLabel,
        'employmentStatusLabel': value.employmentStatusLabel,
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
    };
}

