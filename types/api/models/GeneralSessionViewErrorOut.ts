/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GeneralSessionViewErrorOut
 */
export interface GeneralSessionViewErrorOut {
    /**
     * セッション名
     * @type {string}
     * @memberof GeneralSessionViewErrorOut
     */
    sessionName: string;
    /**
     * 一般ユーザ/スキルチェックユーザが通常/スキルチェックセッションを閲覧できるか
     * @type {boolean}
     * @memberof GeneralSessionViewErrorOut
     */
    hasViewPermission?: boolean;
    /**
     * セッション参加者か
     * @type {boolean}
     * @memberof GeneralSessionViewErrorOut
     */
    isSessionUser?: boolean;
    /**
     * PW認証済み
     * @type {boolean}
     * @memberof GeneralSessionViewErrorOut
     */
    isVerifiedSessionPassword?: boolean;
    /**
     * 卒業年度制限を満たしているか
     * @type {boolean}
     * @memberof GeneralSessionViewErrorOut
     */
    isVerifiedGraduationYearRestriction?: boolean;
    /**
     * 卒業年度制限min
     * @type {number}
     * @memberof GeneralSessionViewErrorOut
     */
    graduationYearRestrictionMin: number | null;
    /**
     * 卒業年度制限max
     * @type {number}
     * @memberof GeneralSessionViewErrorOut
     */
    graduationYearRestrictionMax: number | null;
    /**
     * 最新のセッション規約に同意済みか
     * @type {boolean}
     * @memberof GeneralSessionViewErrorOut
     */
    isAgreedSessionTerm?: boolean;
    /**
     * 最新の求人利用規約に同意済みか
     * @type {boolean}
     * @memberof GeneralSessionViewErrorOut
     */
    isAgreedHrTerms?: boolean;
}

/**
 * Check if a given object implements the GeneralSessionViewErrorOut interface.
 */
export function instanceOfGeneralSessionViewErrorOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "sessionName" in value;
    isInstance = isInstance && "graduationYearRestrictionMin" in value;
    isInstance = isInstance && "graduationYearRestrictionMax" in value;

    return isInstance;
}

export function GeneralSessionViewErrorOutFromJSON(json: any): GeneralSessionViewErrorOut {
    return GeneralSessionViewErrorOutFromJSONTyped(json, false);
}

export function GeneralSessionViewErrorOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): GeneralSessionViewErrorOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sessionName': json['sessionName'],
        'hasViewPermission': !exists(json, 'hasViewPermission') ? undefined : json['hasViewPermission'],
        'isSessionUser': !exists(json, 'isSessionUser') ? undefined : json['isSessionUser'],
        'isVerifiedSessionPassword': !exists(json, 'isVerifiedSessionPassword') ? undefined : json['isVerifiedSessionPassword'],
        'isVerifiedGraduationYearRestriction': !exists(json, 'isVerifiedGraduationYearRestriction') ? undefined : json['isVerifiedGraduationYearRestriction'],
        'graduationYearRestrictionMin': json['graduationYearRestrictionMin'],
        'graduationYearRestrictionMax': json['graduationYearRestrictionMax'],
        'isAgreedSessionTerm': !exists(json, 'isAgreedSessionTerm') ? undefined : json['isAgreedSessionTerm'],
        'isAgreedHrTerms': !exists(json, 'isAgreedHrTerms') ? undefined : json['isAgreedHrTerms'],
    };
}

export function GeneralSessionViewErrorOutToJSON(value?: GeneralSessionViewErrorOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sessionName': value.sessionName,
        'hasViewPermission': value.hasViewPermission,
        'isSessionUser': value.isSessionUser,
        'isVerifiedSessionPassword': value.isVerifiedSessionPassword,
        'isVerifiedGraduationYearRestriction': value.isVerifiedGraduationYearRestriction,
        'graduationYearRestrictionMin': value.graduationYearRestrictionMin,
        'graduationYearRestrictionMax': value.graduationYearRestrictionMax,
        'isAgreedSessionTerm': value.isAgreedSessionTerm,
        'isAgreedHrTerms': value.isAgreedHrTerms,
    };
}

