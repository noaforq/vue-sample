/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CurrentJob } from './CurrentJob';
import {
    CurrentJobFromJSON,
    CurrentJobFromJSONTyped,
    CurrentJobToJSON,
} from './CurrentJob';
import type { WorkExperienceOut } from './WorkExperienceOut';
import {
    WorkExperienceOutFromJSON,
    WorkExperienceOutFromJSONTyped,
    WorkExperienceOutToJSON,
} from './WorkExperienceOut';

/**
 * 
 * @export
 * @interface UserCareerOut
 */
export interface UserCareerOut {
    /**
     * 
     * @type {CurrentJob}
     * @memberof UserCareerOut
     */
    currentJob?: CurrentJob | null;
    /**
     * 学校区分名
     * @type {string}
     * @memberof UserCareerOut
     */
    schoolDivisionName?: string | null;
    /**
     * 学校名
     * @type {string}
     * @memberof UserCareerOut
     */
    schoolName?: string | null;
    /**
     * 学校詳細
     * @type {string}
     * @memberof UserCareerOut
     */
    schoolMasterDetail?: string | null;
    /**
     * 学部名
     * @type {string}
     * @memberof UserCareerOut
     */
    schoolFacultyName?: string | null;
    /**
     * 学部詳細
     * @type {string}
     * @memberof UserCareerOut
     */
    schoolFacultyMasterDetail?: string | null;
    /**
     * 学科名
     * @type {string}
     * @memberof UserCareerOut
     */
    schoolDepartmentName?: string | null;
    /**
     * 学科詳細
     * @type {string}
     * @memberof UserCareerOut
     */
    schoolDepartmentMasterDetail?: string | null;
    /**
     * 卒業予定・卒業年月
     * @type {Date}
     * @memberof UserCareerOut
     */
    graduationDate?: Date | null;
    /**
     * 学籍番号
     * @type {string}
     * @memberof UserCareerOut
     */
    studentNumber?: string | null;
    /**
     * 補足情報
     * @type {string}
     * @memberof UserCareerOut
     */
    extraInfo?: string | null;
    /**
     * 専攻の種類(文理区分)
     * @type {number}
     * @memberof UserCareerOut
     */
    majorCourse?: number | null;
    /**
     * 
     * @type {Array<WorkExperienceOut>}
     * @memberof UserCareerOut
     */
    workExperiences?: Array<WorkExperienceOut> | null;
}

/**
 * Check if a given object implements the UserCareerOut interface.
 */
export function instanceOfUserCareerOut(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserCareerOutFromJSON(json: any): UserCareerOut {
    return UserCareerOutFromJSONTyped(json, false);
}

export function UserCareerOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserCareerOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'currentJob': !exists(json, 'currentJob') ? undefined : CurrentJobFromJSON(json['currentJob']),
        'schoolDivisionName': !exists(json, 'schoolDivisionName') ? undefined : json['schoolDivisionName'],
        'schoolName': !exists(json, 'schoolName') ? undefined : json['schoolName'],
        'schoolMasterDetail': !exists(json, 'schoolMasterDetail') ? undefined : json['schoolMasterDetail'],
        'schoolFacultyName': !exists(json, 'schoolFacultyName') ? undefined : json['schoolFacultyName'],
        'schoolFacultyMasterDetail': !exists(json, 'schoolFacultyMasterDetail') ? undefined : json['schoolFacultyMasterDetail'],
        'schoolDepartmentName': !exists(json, 'schoolDepartmentName') ? undefined : json['schoolDepartmentName'],
        'schoolDepartmentMasterDetail': !exists(json, 'schoolDepartmentMasterDetail') ? undefined : json['schoolDepartmentMasterDetail'],
        'graduationDate': !exists(json, 'graduationDate') ? undefined : (json['graduationDate'] === null ? null : new Date(json['graduationDate'])),
        'studentNumber': !exists(json, 'studentNumber') ? undefined : json['studentNumber'],
        'extraInfo': !exists(json, 'extraInfo') ? undefined : json['extraInfo'],
        'majorCourse': !exists(json, 'majorCourse') ? undefined : json['majorCourse'],
        'workExperiences': !exists(json, 'workExperiences') ? undefined : (json['workExperiences'] === null ? null : (json['workExperiences'] as Array<any>).map(WorkExperienceOutFromJSON)),
    };
}

export function UserCareerOutToJSON(value?: UserCareerOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'currentJob': CurrentJobToJSON(value.currentJob),
        'schoolDivisionName': value.schoolDivisionName,
        'schoolName': value.schoolName,
        'schoolMasterDetail': value.schoolMasterDetail,
        'schoolFacultyName': value.schoolFacultyName,
        'schoolFacultyMasterDetail': value.schoolFacultyMasterDetail,
        'schoolDepartmentName': value.schoolDepartmentName,
        'schoolDepartmentMasterDetail': value.schoolDepartmentMasterDetail,
        'graduationDate': value.graduationDate === undefined ? undefined : (value.graduationDate === null ? null : value.graduationDate.toISOString().substring(0,10)),
        'studentNumber': value.studentNumber,
        'extraInfo': value.extraInfo,
        'majorCourse': value.majorCourse,
        'workExperiences': value.workExperiences === undefined ? undefined : (value.workExperiences === null ? null : (value.workExperiences as Array<any>).map(WorkExperienceOutToJSON)),
    };
}

