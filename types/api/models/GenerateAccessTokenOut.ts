/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GenerateAccessTokenOut
 */
export interface GenerateAccessTokenOut {
    /**
     * id
     * @type {number}
     * @memberof GenerateAccessTokenOut
     */
    id: number;
    /**
     * 有効期限のタイムスタンプ
     * @type {number}
     * @memberof GenerateAccessTokenOut
     */
    expiresAt: number;
    /**
     * アクセス認証トークン
     * @type {string}
     * @memberof GenerateAccessTokenOut
     */
    token: string;
}

/**
 * Check if a given object implements the GenerateAccessTokenOut interface.
 */
export function instanceOfGenerateAccessTokenOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "expiresAt" in value;
    isInstance = isInstance && "token" in value;

    return isInstance;
}

export function GenerateAccessTokenOutFromJSON(json: any): GenerateAccessTokenOut {
    return GenerateAccessTokenOutFromJSONTyped(json, false);
}

export function GenerateAccessTokenOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): GenerateAccessTokenOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'expiresAt': json['expiresAt'],
        'token': json['token'],
    };
}

export function GenerateAccessTokenOutToJSON(value?: GenerateAccessTokenOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'expiresAt': value.expiresAt,
        'token': value.token,
    };
}

