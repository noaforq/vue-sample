/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LearningQuestion } from './LearningQuestion';
import {
    LearningQuestionFromJSON,
    LearningQuestionFromJSONTyped,
    LearningQuestionToJSON,
} from './LearningQuestion';

/**
 * 
 * @export
 * @interface GeneralQuestionLearningListOut
 */
export interface GeneralQuestionLearningListOut {
    /**
     * トピック名
     * @type {string}
     * @memberof GeneralQuestionLearningListOut
     */
    topic: string;
    /**
     * 問題
     * @type {Array<LearningQuestion>}
     * @memberof GeneralQuestionLearningListOut
     */
    questions: Array<LearningQuestion>;
}

/**
 * Check if a given object implements the GeneralQuestionLearningListOut interface.
 */
export function instanceOfGeneralQuestionLearningListOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "topic" in value;
    isInstance = isInstance && "questions" in value;

    return isInstance;
}

export function GeneralQuestionLearningListOutFromJSON(json: any): GeneralQuestionLearningListOut {
    return GeneralQuestionLearningListOutFromJSONTyped(json, false);
}

export function GeneralQuestionLearningListOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): GeneralQuestionLearningListOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'topic': json['topic'],
        'questions': ((json['questions'] as Array<any>).map(LearningQuestionFromJSON)),
    };
}

export function GeneralQuestionLearningListOutToJSON(value?: GeneralQuestionLearningListOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'topic': value.topic,
        'questions': ((value.questions as Array<any>).map(LearningQuestionToJSON)),
    };
}

