/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiError,
  CompanyMemberListOut,
  CorporateProfileDetailOut,
  ValidationError,
} from '../models/index';
import {
    ApiErrorFromJSON,
    ApiErrorToJSON,
    CompanyMemberListOutFromJSON,
    CompanyMemberListOutToJSON,
    CorporateProfileDetailOutFromJSON,
    CorporateProfileDetailOutToJSON,
    ValidationErrorFromJSON,
    ValidationErrorToJSON,
} from '../models/index';

export interface GetGeneralCompanyMemberListRequest {
    organizationId: number;
}

export interface GetGeneralCorporateProfileRequest {
    organizationId: number;
}

/**
 * 
 */
export class GeneralCorporateProfileApi extends runtime.BaseAPI {

    /**
     * 先輩社員情報を一覧取得(一般ユーザー側) - 必要権限: [GENERAL_USER] - 並び順: ID昇順 - 処理内容     - CompanyMemberテーブルから該当社員のデータを取得 - 例外処理     - 該当しないorganization_id or 削除済み企業の場合NotFound - 対象テーブル     - Organization     - Company     - CompanyMember - 抽出条件     - Organization.organization_type: COMPANY     - Organization.is_deleted: False
     * 先輩社員情報を一覧取得(一般ユーザー側)
     */
    async getGeneralCompanyMemberListRaw(requestParameters: GetGeneralCompanyMemberListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<CompanyMemberListOut>>> {
        if (requestParameters.organizationId === null || requestParameters.organizationId === undefined) {
            throw new runtime.RequiredError('organizationId','Required parameter requestParameters.organizationId was null or undefined when calling getGeneralCompanyMemberList.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/general/corporate_profile/{organization_id}/company_members`.replace(`{${"organization_id"}}`, encodeURIComponent(String(requestParameters.organizationId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CompanyMemberListOutFromJSON));
    }

    /**
     * 先輩社員情報を一覧取得(一般ユーザー側) - 必要権限: [GENERAL_USER] - 並び順: ID昇順 - 処理内容     - CompanyMemberテーブルから該当社員のデータを取得 - 例外処理     - 該当しないorganization_id or 削除済み企業の場合NotFound - 対象テーブル     - Organization     - Company     - CompanyMember - 抽出条件     - Organization.organization_type: COMPANY     - Organization.is_deleted: False
     * 先輩社員情報を一覧取得(一般ユーザー側)
     */
    async getGeneralCompanyMemberList(requestParameters: GetGeneralCompanyMemberListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<CompanyMemberListOut>> {
        const response = await this.getGeneralCompanyMemberListRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 一般ユーザー側企業情報取得 - 必要権限: [GENERAL_USER] - 処理内容     - Companyテーブルからデータを取得 - 例外処理     - 該当しないorganization_id or 削除済み企業の場合NotFound - 対象テーブル     - Company     - Organization     - CompanyOffice -  抽出条件     - Organization         - OrganizationType: COMPANY         - is_deleted: False
     * 一般ユーザー側企業情報取得
     */
    async getGeneralCorporateProfileRaw(requestParameters: GetGeneralCorporateProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CorporateProfileDetailOut>> {
        if (requestParameters.organizationId === null || requestParameters.organizationId === undefined) {
            throw new runtime.RequiredError('organizationId','Required parameter requestParameters.organizationId was null or undefined when calling getGeneralCorporateProfile.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/general/corporate_profile/{organization_id}`.replace(`{${"organization_id"}}`, encodeURIComponent(String(requestParameters.organizationId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CorporateProfileDetailOutFromJSON(jsonValue));
    }

    /**
     * 一般ユーザー側企業情報取得 - 必要権限: [GENERAL_USER] - 処理内容     - Companyテーブルからデータを取得 - 例外処理     - 該当しないorganization_id or 削除済み企業の場合NotFound - 対象テーブル     - Company     - Organization     - CompanyOffice -  抽出条件     - Organization         - OrganizationType: COMPANY         - is_deleted: False
     * 一般ユーザー側企業情報取得
     */
    async getGeneralCorporateProfile(requestParameters: GetGeneralCorporateProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CorporateProfileDetailOut> {
        const response = await this.getGeneralCorporateProfileRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
