/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiError,
  GetHeatmapSampleCaseListOut,
  HeatmapCellGroupByCategory,
  ProgrammingProblemCategoryStat,
  QuestionResultTypeForDashboard,
  ValidationError,
} from '../models/index';
import {
    ApiErrorFromJSON,
    ApiErrorToJSON,
    GetHeatmapSampleCaseListOutFromJSON,
    GetHeatmapSampleCaseListOutToJSON,
    HeatmapCellGroupByCategoryFromJSON,
    HeatmapCellGroupByCategoryToJSON,
    ProgrammingProblemCategoryStatFromJSON,
    ProgrammingProblemCategoryStatToJSON,
    QuestionResultTypeForDashboardFromJSON,
    QuestionResultTypeForDashboardToJSON,
    ValidationErrorFromJSON,
    ValidationErrorToJSON,
} from '../models/index';

export interface GetHeatmapListForDashboardRequest {
    questionResultType: QuestionResultTypeForDashboard;
}

export interface GetHeatmapSampleCaseDetailRequest {
    heatmapCaseId: number;
}

/**
 * 
 */
export class GeneralPortfoliosApi extends runtime.BaseAPI {

    /**
     * 一般ユーザーダッシュボード問題解答ヒートマップ取得 - 必要権限: [GENERAL_USER] - 並び順:     - カテゴリはContentCategory.orderの昇順     - トピックはContentTopic.orderの昇順 - 取得条件:     - QuestionResult.user_id == user.id     - QuestionResult.question_result_type == question_result_type     - QuestionResult.question_result_status == QuestionResultStatus.PASS     - Content.is_deleted == False
     * 一般ユーザーダッシュボード問題解答ヒートマップ取得
     */
    async getHeatmapListForDashboardRaw(requestParameters: GetHeatmapListForDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ProgrammingProblemCategoryStat>>> {
        if (requestParameters.questionResultType === null || requestParameters.questionResultType === undefined) {
            throw new runtime.RequiredError('questionResultType','Required parameter requestParameters.questionResultType was null or undefined when calling getHeatmapListForDashboard.');
        }

        const queryParameters: any = {};

        if (requestParameters.questionResultType !== undefined) {
            queryParameters['question_result_type'] = requestParameters.questionResultType;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/general/portfolios/dashboard-heatmap`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ProgrammingProblemCategoryStatFromJSON));
    }

    /**
     * 一般ユーザーダッシュボード問題解答ヒートマップ取得 - 必要権限: [GENERAL_USER] - 並び順:     - カテゴリはContentCategory.orderの昇順     - トピックはContentTopic.orderの昇順 - 取得条件:     - QuestionResult.user_id == user.id     - QuestionResult.question_result_type == question_result_type     - QuestionResult.question_result_status == QuestionResultStatus.PASS     - Content.is_deleted == False
     * 一般ユーザーダッシュボード問題解答ヒートマップ取得
     */
    async getHeatmapListForDashboard(requestParameters: GetHeatmapListForDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ProgrammingProblemCategoryStat>> {
        const response = await this.getHeatmapListForDashboardRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * ヒートマップサンプルケース詳細取得 - 必要権限: [GENERAL_USER] - データ取得可能条件:     - is_published=True - 並び順:     - category_id昇順     - topic_id昇順
     * ヒートマップサンプルケース詳細取得
     */
    async getHeatmapSampleCaseDetailRaw(requestParameters: GetHeatmapSampleCaseDetailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<HeatmapCellGroupByCategory>>> {
        if (requestParameters.heatmapCaseId === null || requestParameters.heatmapCaseId === undefined) {
            throw new runtime.RequiredError('heatmapCaseId','Required parameter requestParameters.heatmapCaseId was null or undefined when calling getHeatmapSampleCaseDetail.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/general/portfolios/heatmap-cases/{heatmap_case_id}`.replace(`{${"heatmap_case_id"}}`, encodeURIComponent(String(requestParameters.heatmapCaseId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(HeatmapCellGroupByCategoryFromJSON));
    }

    /**
     * ヒートマップサンプルケース詳細取得 - 必要権限: [GENERAL_USER] - データ取得可能条件:     - is_published=True - 並び順:     - category_id昇順     - topic_id昇順
     * ヒートマップサンプルケース詳細取得
     */
    async getHeatmapSampleCaseDetail(requestParameters: GetHeatmapSampleCaseDetailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<HeatmapCellGroupByCategory>> {
        const response = await this.getHeatmapSampleCaseDetailRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * ヒートマップサンプルケース一覧取得 - 必要権限: [GENERAL_USER] - データ取得条件:     - is_published=True     - ユーザーと紐づいているですが、ユーザーが削除されたとしても取得できるようにする - 並び順:     - SkillHeatmapCase.order降順
     * ヒートマップサンプルケース一覧取得
     */
    async getHeatmapSampleCaseListRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GetHeatmapSampleCaseListOut>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/general/portfolios/heatmap-cases`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(GetHeatmapSampleCaseListOutFromJSON));
    }

    /**
     * ヒートマップサンプルケース一覧取得 - 必要権限: [GENERAL_USER] - データ取得条件:     - is_published=True     - ユーザーと紐づいているですが、ユーザーが削除されたとしても取得できるようにする - 並び順:     - SkillHeatmapCase.order降順
     * ヒートマップサンプルケース一覧取得
     */
    async getHeatmapSampleCaseList(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GetHeatmapSampleCaseListOut>> {
        const response = await this.getHeatmapSampleCaseListRaw(initOverrides);
        return await response.value();
    }

}
