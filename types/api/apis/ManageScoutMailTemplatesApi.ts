/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiError,
  ScoutMailTemplateCreateIn,
  ScoutMailTemplateDetailOut,
  ScoutMailTemplateListOut,
  ScoutMailTemplateUpdateIn,
  ValidationError,
} from '../models/index';
import {
    ApiErrorFromJSON,
    ApiErrorToJSON,
    ScoutMailTemplateCreateInFromJSON,
    ScoutMailTemplateCreateInToJSON,
    ScoutMailTemplateDetailOutFromJSON,
    ScoutMailTemplateDetailOutToJSON,
    ScoutMailTemplateListOutFromJSON,
    ScoutMailTemplateListOutToJSON,
    ScoutMailTemplateUpdateInFromJSON,
    ScoutMailTemplateUpdateInToJSON,
    ValidationErrorFromJSON,
    ValidationErrorToJSON,
} from '../models/index';

export interface CreateScoutMailTemplateRequest {
    scoutMailTemplateCreateIn: ScoutMailTemplateCreateIn;
}

export interface DeleteScoutMailTemplateRequest {
    scoutMailTemplateId: number;
}

export interface GetScoutMailTemplateRequest {
    scoutMailTemplateId: number;
}

export interface UpdateScoutMailTemplateRequest {
    scoutMailTemplateId: number;
    scoutMailTemplateUpdateIn: ScoutMailTemplateUpdateIn;
}

/**
 * 
 */
export class ManageScoutMailTemplatesApi extends runtime.BaseAPI {

    /**
     * スカウトメールテンプレートを作成 - 必要権限: [ASSETS_EDIT] - ログインユーザー企業のデータとして作成
     * スカウトメールテンプレート作成
     */
    async createScoutMailTemplateRaw(requestParameters: CreateScoutMailTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ScoutMailTemplateDetailOut>> {
        if (requestParameters.scoutMailTemplateCreateIn === null || requestParameters.scoutMailTemplateCreateIn === undefined) {
            throw new runtime.RequiredError('scoutMailTemplateCreateIn','Required parameter requestParameters.scoutMailTemplateCreateIn was null or undefined when calling createScoutMailTemplate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/manage/scout-mail-templates`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ScoutMailTemplateCreateInToJSON(requestParameters.scoutMailTemplateCreateIn),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ScoutMailTemplateDetailOutFromJSON(jsonValue));
    }

    /**
     * スカウトメールテンプレートを作成 - 必要権限: [ASSETS_EDIT] - ログインユーザー企業のデータとして作成
     * スカウトメールテンプレート作成
     */
    async createScoutMailTemplate(requestParameters: CreateScoutMailTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ScoutMailTemplateDetailOut> {
        const response = await this.createScoutMailTemplateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * スカウトメールテンプレートを削除 - 必要権限: [ASSETS_EDIT] - ログインユーザー企業のデータのみ削除可
     * スカウトメールテンプレート削除
     */
    async deleteScoutMailTemplateRaw(requestParameters: DeleteScoutMailTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.scoutMailTemplateId === null || requestParameters.scoutMailTemplateId === undefined) {
            throw new runtime.RequiredError('scoutMailTemplateId','Required parameter requestParameters.scoutMailTemplateId was null or undefined when calling deleteScoutMailTemplate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/manage/scout-mail-templates/{scout_mail_template_id}`.replace(`{${"scout_mail_template_id"}}`, encodeURIComponent(String(requestParameters.scoutMailTemplateId))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * スカウトメールテンプレートを削除 - 必要権限: [ASSETS_EDIT] - ログインユーザー企業のデータのみ削除可
     * スカウトメールテンプレート削除
     */
    async deleteScoutMailTemplate(requestParameters: DeleteScoutMailTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteScoutMailTemplateRaw(requestParameters, initOverrides);
    }

    /**
     * スカウトメールテンプレート詳細を取得 - 必要権限: [ASSETS_EDIT] - ログインユーザー企業のデータのみ取得可
     * スカウトメールテンプレート詳細取得
     */
    async getScoutMailTemplateRaw(requestParameters: GetScoutMailTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ScoutMailTemplateDetailOut>> {
        if (requestParameters.scoutMailTemplateId === null || requestParameters.scoutMailTemplateId === undefined) {
            throw new runtime.RequiredError('scoutMailTemplateId','Required parameter requestParameters.scoutMailTemplateId was null or undefined when calling getScoutMailTemplate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/manage/scout-mail-templates/{scout_mail_template_id}`.replace(`{${"scout_mail_template_id"}}`, encodeURIComponent(String(requestParameters.scoutMailTemplateId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ScoutMailTemplateDetailOutFromJSON(jsonValue));
    }

    /**
     * スカウトメールテンプレート詳細を取得 - 必要権限: [ASSETS_EDIT] - ログインユーザー企業のデータのみ取得可
     * スカウトメールテンプレート詳細取得
     */
    async getScoutMailTemplate(requestParameters: GetScoutMailTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ScoutMailTemplateDetailOut> {
        const response = await this.getScoutMailTemplateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * スカウトメールテンプレート一覧を取得 - 必要権限: [ASSETS_EDIT] - 並び順: id降順 - ログインユーザー企業のデータのみ取得可
     * スカウトメールテンプレート一覧取得
     */
    async getScoutMailTemplateListRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ScoutMailTemplateListOut>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/manage/scout-mail-templates`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ScoutMailTemplateListOutFromJSON));
    }

    /**
     * スカウトメールテンプレート一覧を取得 - 必要権限: [ASSETS_EDIT] - 並び順: id降順 - ログインユーザー企業のデータのみ取得可
     * スカウトメールテンプレート一覧取得
     */
    async getScoutMailTemplateList(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ScoutMailTemplateListOut>> {
        const response = await this.getScoutMailTemplateListRaw(initOverrides);
        return await response.value();
    }

    /**
     * スカウトメールテンプレートを更新 - 必要権限: [ASSETS_EDIT] - ログインユーザー企業のデータのみ更新可
     * スカウトメールテンプレート更新
     */
    async updateScoutMailTemplateRaw(requestParameters: UpdateScoutMailTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ScoutMailTemplateDetailOut>> {
        if (requestParameters.scoutMailTemplateId === null || requestParameters.scoutMailTemplateId === undefined) {
            throw new runtime.RequiredError('scoutMailTemplateId','Required parameter requestParameters.scoutMailTemplateId was null or undefined when calling updateScoutMailTemplate.');
        }

        if (requestParameters.scoutMailTemplateUpdateIn === null || requestParameters.scoutMailTemplateUpdateIn === undefined) {
            throw new runtime.RequiredError('scoutMailTemplateUpdateIn','Required parameter requestParameters.scoutMailTemplateUpdateIn was null or undefined when calling updateScoutMailTemplate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/manage/scout-mail-templates/{scout_mail_template_id}`.replace(`{${"scout_mail_template_id"}}`, encodeURIComponent(String(requestParameters.scoutMailTemplateId))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: ScoutMailTemplateUpdateInToJSON(requestParameters.scoutMailTemplateUpdateIn),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ScoutMailTemplateDetailOutFromJSON(jsonValue));
    }

    /**
     * スカウトメールテンプレートを更新 - 必要権限: [ASSETS_EDIT] - ログインユーザー企業のデータのみ更新可
     * スカウトメールテンプレート更新
     */
    async updateScoutMailTemplate(requestParameters: UpdateScoutMailTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ScoutMailTemplateDetailOut> {
        const response = await this.updateScoutMailTemplateRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
