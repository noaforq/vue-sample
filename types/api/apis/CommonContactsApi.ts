/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiError,
  CommonContactsIn,
  ValidationError,
} from '../models/index';
import {
    ApiErrorFromJSON,
    ApiErrorToJSON,
    CommonContactsInFromJSON,
    CommonContactsInToJSON,
    ValidationErrorFromJSON,
    ValidationErrorToJSON,
} from '../models/index';

export interface SendContactsRequest {
    commonContactsIn: CommonContactsIn;
}

/**
 * 
 */
export class CommonContactsApi extends runtime.BaseAPI {

    /**
     * お問い合わせ内容を送信 - レスポンス:     - - 処理内容:     - 一般ユーザーの場合         - Contactテーブルの該当項目を追加             - contact_type -> GENERAL             - organization_id -> なし             - user_id -> ユーザーID             - name -> 空文字             - email -> ユーザーに紐づくメールアドレス             - title -> \"TechFUL内でユーザーからのお問い合わせがありました。\"で固定             - body -> 送られてきた問い合わせ内容     - 企業・学校の場合         - Contactテーブルに該当する項目を追加             - name email title bodyは送られてきた内容     - 送られてきた内容を444管理のメールアドレスに送信 - 補足:     - 一般ユーザと企業・学校で送られてくる内容が異なる         - 一般: 問い合わせ内容のみ         - 企業・学校: 本名・メールアドレス・件名・問い合わせ内容     - メールの宛先や文面は「通知の方法確認(23/2/17)」スプレッドシートを確認
     * お問い合わせ送信
     */
    async sendContactsRaw(requestParameters: SendContactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.commonContactsIn === null || requestParameters.commonContactsIn === undefined) {
            throw new runtime.RequiredError('commonContactsIn','Required parameter requestParameters.commonContactsIn was null or undefined when calling sendContacts.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/common/contacts`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CommonContactsInToJSON(requestParameters.commonContactsIn),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * お問い合わせ内容を送信 - レスポンス:     - - 処理内容:     - 一般ユーザーの場合         - Contactテーブルの該当項目を追加             - contact_type -> GENERAL             - organization_id -> なし             - user_id -> ユーザーID             - name -> 空文字             - email -> ユーザーに紐づくメールアドレス             - title -> \"TechFUL内でユーザーからのお問い合わせがありました。\"で固定             - body -> 送られてきた問い合わせ内容     - 企業・学校の場合         - Contactテーブルに該当する項目を追加             - name email title bodyは送られてきた内容     - 送られてきた内容を444管理のメールアドレスに送信 - 補足:     - 一般ユーザと企業・学校で送られてくる内容が異なる         - 一般: 問い合わせ内容のみ         - 企業・学校: 本名・メールアドレス・件名・問い合わせ内容     - メールの宛先や文面は「通知の方法確認(23/2/17)」スプレッドシートを確認
     * お問い合わせ送信
     */
    async sendContacts(requestParameters: SendContactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.sendContactsRaw(requestParameters, initOverrides);
    }

}
