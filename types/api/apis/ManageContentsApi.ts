/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiError,
  ValidationError,
} from '../models/index';
import {
    ApiErrorFromJSON,
    ApiErrorToJSON,
    ValidationErrorFromJSON,
    ValidationErrorToJSON,
} from '../models/index';

export interface CreateFavoriteOrganizationContentRequest {
    contentId: number;
}

export interface DeleteFavoriteOrganizationContentRequest {
    contentId: number;
}

/**
 * 
 */
export class ManageContentsApi extends runtime.BaseAPI {

    /**
     * お気に入り自組織コンテンツを作成する - 必要権限: [PROBLEM_VIEW] [MATERIAL_VIEW] - 実行条件: 条件不一致の場合、NotFound(404)を返す     - 削除済みコンテンツは実行不可     - 非公開コンテンツは自組織コンテンツのみ実行可能     - 組織お気に入りコンテンツに含まれていないコンテンツのみ実行可能
     * お気に入り自組織コンテンツを作成する
     */
    async createFavoriteOrganizationContentRaw(requestParameters: CreateFavoriteOrganizationContentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.contentId === null || requestParameters.contentId === undefined) {
            throw new runtime.RequiredError('contentId','Required parameter requestParameters.contentId was null or undefined when calling createFavoriteOrganizationContent.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/manage/contents/{content_id}/favorites`.replace(`{${"content_id"}}`, encodeURIComponent(String(requestParameters.contentId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * お気に入り自組織コンテンツを作成する - 必要権限: [PROBLEM_VIEW] [MATERIAL_VIEW] - 実行条件: 条件不一致の場合、NotFound(404)を返す     - 削除済みコンテンツは実行不可     - 非公開コンテンツは自組織コンテンツのみ実行可能     - 組織お気に入りコンテンツに含まれていないコンテンツのみ実行可能
     * お気に入り自組織コンテンツを作成する
     */
    async createFavoriteOrganizationContent(requestParameters: CreateFavoriteOrganizationContentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.createFavoriteOrganizationContentRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * お気に入り自組織コンテンツを物理削除する - 必要権限: [PROBLEM_VIEW] [MATERIAL_VIEW] - 実行条件: 条件不一致の場合、NotFound(404)を返す     - 削除済みコンテンツは実行不可     - 非公開コンテンツは自組織コンテンツのみ実行可能     - 組織お気に入りコンテンツに含まれているのみ実行可能
     * お気に入り自組織コンテンツを削除する
     */
    async deleteFavoriteOrganizationContentRaw(requestParameters: DeleteFavoriteOrganizationContentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.contentId === null || requestParameters.contentId === undefined) {
            throw new runtime.RequiredError('contentId','Required parameter requestParameters.contentId was null or undefined when calling deleteFavoriteOrganizationContent.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/manage/contents/{content_id}/favorites`.replace(`{${"content_id"}}`, encodeURIComponent(String(requestParameters.contentId))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * お気に入り自組織コンテンツを物理削除する - 必要権限: [PROBLEM_VIEW] [MATERIAL_VIEW] - 実行条件: 条件不一致の場合、NotFound(404)を返す     - 削除済みコンテンツは実行不可     - 非公開コンテンツは自組織コンテンツのみ実行可能     - 組織お気に入りコンテンツに含まれているのみ実行可能
     * お気に入り自組織コンテンツを削除する
     */
    async deleteFavoriteOrganizationContent(requestParameters: DeleteFavoriteOrganizationContentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteFavoriteOrganizationContentRaw(requestParameters, initOverrides);
    }

}
