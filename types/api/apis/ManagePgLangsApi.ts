/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiError,
  PgLangCreateIn,
  PgLangDetailOut,
  PgLangListOut,
  PgLangUpdateIn,
  ValidationError,
} from '../models/index';
import {
    ApiErrorFromJSON,
    ApiErrorToJSON,
    PgLangCreateInFromJSON,
    PgLangCreateInToJSON,
    PgLangDetailOutFromJSON,
    PgLangDetailOutToJSON,
    PgLangListOutFromJSON,
    PgLangListOutToJSON,
    PgLangUpdateInFromJSON,
    PgLangUpdateInToJSON,
    ValidationErrorFromJSON,
    ValidationErrorToJSON,
} from '../models/index';

export interface CreatePgLangRequest {
    pgLangCreateIn: PgLangCreateIn;
}

export interface DeletePgLangRequest {
    pgLangId: number;
}

export interface GetPgLangRequest {
    pgLangId: number;
}

export interface UpdatePgLangRequest {
    pgLangId: number;
    pgLangUpdateIn: PgLangUpdateIn;
}

/**
 * 
 */
export class ManagePgLangsApi extends runtime.BaseAPI {

    /**
     * PG言語を作成 - 必要権限: [ASSETS_EDIT]
     * PG言語作成
     */
    async createPgLangRaw(requestParameters: CreatePgLangRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PgLangDetailOut>> {
        if (requestParameters.pgLangCreateIn === null || requestParameters.pgLangCreateIn === undefined) {
            throw new runtime.RequiredError('pgLangCreateIn','Required parameter requestParameters.pgLangCreateIn was null or undefined when calling createPgLang.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/manage/pg-langs`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PgLangCreateInToJSON(requestParameters.pgLangCreateIn),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PgLangDetailOutFromJSON(jsonValue));
    }

    /**
     * PG言語を作成 - 必要権限: [ASSETS_EDIT]
     * PG言語作成
     */
    async createPgLang(requestParameters: CreatePgLangRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PgLangDetailOut> {
        const response = await this.createPgLangRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * PG言語を削除 - 必要権限: [ASSETS_EDIT]
     * PG言語削除
     */
    async deletePgLangRaw(requestParameters: DeletePgLangRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.pgLangId === null || requestParameters.pgLangId === undefined) {
            throw new runtime.RequiredError('pgLangId','Required parameter requestParameters.pgLangId was null or undefined when calling deletePgLang.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/manage/pg-langs/{pg_lang_id}`.replace(`{${"pg_lang_id"}}`, encodeURIComponent(String(requestParameters.pgLangId))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * PG言語を削除 - 必要権限: [ASSETS_EDIT]
     * PG言語削除
     */
    async deletePgLang(requestParameters: DeletePgLangRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deletePgLangRaw(requestParameters, initOverrides);
    }

    /**
     * PG言語詳細を取得 - 必要権限: [ASSETS_EDIT]
     * PG言語詳細取得
     */
    async getPgLangRaw(requestParameters: GetPgLangRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PgLangDetailOut>> {
        if (requestParameters.pgLangId === null || requestParameters.pgLangId === undefined) {
            throw new runtime.RequiredError('pgLangId','Required parameter requestParameters.pgLangId was null or undefined when calling getPgLang.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/manage/pg-langs/{pg_lang_id}`.replace(`{${"pg_lang_id"}}`, encodeURIComponent(String(requestParameters.pgLangId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PgLangDetailOutFromJSON(jsonValue));
    }

    /**
     * PG言語詳細を取得 - 必要権限: [ASSETS_EDIT]
     * PG言語詳細取得
     */
    async getPgLang(requestParameters: GetPgLangRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PgLangDetailOut> {
        const response = await this.getPgLangRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * PG言語一覧を取得 - 必要権限: [ASSETS_EDIT] - 並び順: id降順
     * PG言語一覧取得
     */
    async getPgLangListRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PgLangListOut>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/manage/pg-langs`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(PgLangListOutFromJSON));
    }

    /**
     * PG言語一覧を取得 - 必要権限: [ASSETS_EDIT] - 並び順: id降順
     * PG言語一覧取得
     */
    async getPgLangList(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PgLangListOut>> {
        const response = await this.getPgLangListRaw(initOverrides);
        return await response.value();
    }

    /**
     * PG言語を更新 - 必要権限: [ASSETS_EDIT]
     * PG言語更新
     */
    async updatePgLangRaw(requestParameters: UpdatePgLangRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PgLangDetailOut>> {
        if (requestParameters.pgLangId === null || requestParameters.pgLangId === undefined) {
            throw new runtime.RequiredError('pgLangId','Required parameter requestParameters.pgLangId was null or undefined when calling updatePgLang.');
        }

        if (requestParameters.pgLangUpdateIn === null || requestParameters.pgLangUpdateIn === undefined) {
            throw new runtime.RequiredError('pgLangUpdateIn','Required parameter requestParameters.pgLangUpdateIn was null or undefined when calling updatePgLang.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/manage/pg-langs/{pg_lang_id}`.replace(`{${"pg_lang_id"}}`, encodeURIComponent(String(requestParameters.pgLangId))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: PgLangUpdateInToJSON(requestParameters.pgLangUpdateIn),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PgLangDetailOutFromJSON(jsonValue));
    }

    /**
     * PG言語を更新 - 必要権限: [ASSETS_EDIT]
     * PG言語更新
     */
    async updatePgLang(requestParameters: UpdatePgLangRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PgLangDetailOut> {
        const response = await this.updatePgLangRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
