/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiError,
  StaffCreateIn,
  StaffDetailOut,
  StaffListOut,
  ValidationError,
} from '../models/index';
import {
    ApiErrorFromJSON,
    ApiErrorToJSON,
    StaffCreateInFromJSON,
    StaffCreateInToJSON,
    StaffDetailOutFromJSON,
    StaffDetailOutToJSON,
    StaffListOutFromJSON,
    StaffListOutToJSON,
    ValidationErrorFromJSON,
    ValidationErrorToJSON,
} from '../models/index';

export interface CreateStaffRequest {
    staffCreateIn: StaffCreateIn;
}

export interface DeleteStaffRequest {
    staffId: number;
}

/**
 * 
 */
export class ManageStaffsApi extends runtime.BaseAPI {

    /**
     * 社員アカウント作成 - 必要権限: [OWN_ADMIN_EDIT] - ログインユーザー所属組織のスタッフアカウントを作成する - 登録データ補足情報     - user_type: UserType.STAFF     - staff_type: StaffType.GENERAL     - created_by: ログインユーザーのlast_name + first_name
     * 社員アカウント作成
     */
    async createStaffRaw(requestParameters: CreateStaffRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StaffDetailOut>> {
        if (requestParameters.staffCreateIn === null || requestParameters.staffCreateIn === undefined) {
            throw new runtime.RequiredError('staffCreateIn','Required parameter requestParameters.staffCreateIn was null or undefined when calling createStaff.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/manage/staffs`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: StaffCreateInToJSON(requestParameters.staffCreateIn),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => StaffDetailOutFromJSON(jsonValue));
    }

    /**
     * 社員アカウント作成 - 必要権限: [OWN_ADMIN_EDIT] - ログインユーザー所属組織のスタッフアカウントを作成する - 登録データ補足情報     - user_type: UserType.STAFF     - staff_type: StaffType.GENERAL     - created_by: ログインユーザーのlast_name + first_name
     * 社員アカウント作成
     */
    async createStaff(requestParameters: CreateStaffRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StaffDetailOut> {
        const response = await this.createStaffRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 社員アカウント論理削除 - 必要権限: [OWN_ADMIN_EDIT] - is_deleted=Falseのスタッフのみ削除可能 - ログインユーザー所属組織のスタッフのみ削除可能
     * 社員アカウント削除
     */
    async deleteStaffRaw(requestParameters: DeleteStaffRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.staffId === null || requestParameters.staffId === undefined) {
            throw new runtime.RequiredError('staffId','Required parameter requestParameters.staffId was null or undefined when calling deleteStaff.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/manage/staffs/{staff_id}`.replace(`{${"staff_id"}}`, encodeURIComponent(String(requestParameters.staffId))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * 社員アカウント論理削除 - 必要権限: [OWN_ADMIN_EDIT] - is_deleted=Falseのスタッフのみ削除可能 - ログインユーザー所属組織のスタッフのみ削除可能
     * 社員アカウント削除
     */
    async deleteStaff(requestParameters: DeleteStaffRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteStaffRaw(requestParameters, initOverrides);
    }

    /**
     * 社員アカウント一覧 - 必要権限: [OWN_ADMIN_VIEW] - ログインユーザー所属組織のスタッフを取得 - is_deleted=Falseのスタッフのみ取得 - 並び順: id昇順
     * 社員アカウント一覧
     */
    async getStaffListRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<StaffListOut>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/manage/staffs`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(StaffListOutFromJSON));
    }

    /**
     * 社員アカウント一覧 - 必要権限: [OWN_ADMIN_VIEW] - ログインユーザー所属組織のスタッフを取得 - is_deleted=Falseのスタッフのみ取得 - 並び順: id昇順
     * 社員アカウント一覧
     */
    async getStaffList(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<StaffListOut>> {
        const response = await this.getStaffListRaw(initOverrides);
        return await response.value();
    }

}
