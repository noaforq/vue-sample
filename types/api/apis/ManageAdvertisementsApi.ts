/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AdvertisementBannerCreateIn,
  AdvertisementBannerDetailOut,
  AdvertisementCreateIn,
  AdvertisementDetailOut,
  AdvertisementUpdateIn,
  ApiError,
  ValidationError,
} from '../models/index';
import {
    AdvertisementBannerCreateInFromJSON,
    AdvertisementBannerCreateInToJSON,
    AdvertisementBannerDetailOutFromJSON,
    AdvertisementBannerDetailOutToJSON,
    AdvertisementCreateInFromJSON,
    AdvertisementCreateInToJSON,
    AdvertisementDetailOutFromJSON,
    AdvertisementDetailOutToJSON,
    AdvertisementUpdateInFromJSON,
    AdvertisementUpdateInToJSON,
    ApiErrorFromJSON,
    ApiErrorToJSON,
    ValidationErrorFromJSON,
    ValidationErrorToJSON,
} from '../models/index';

export interface CreateAdvertisementRequest {
    advertisementCreateIn: AdvertisementCreateIn;
}

export interface DeleteAdvertisementRequest {
    advertisementId: number;
}

export interface DeleteAdvertisementBannerRequest {
    advertisementId: number;
}

export interface GetAdvertisementRequest {
    advertisementId: number;
}

export interface RegisterAdvertisementBannerRequest {
    advertisementId: number;
    advertisementBannerCreateIn: AdvertisementBannerCreateIn;
}

export interface UpdateAdvertisementRequest {
    advertisementId: number;
    advertisementUpdateIn: AdvertisementUpdateIn;
}

/**
 * 
 */
export class ManageAdvertisementsApi extends runtime.BaseAPI {

    /**
     * 広告作成 - 必要権限: [ADVERTISEMENT_EDIT] - 登録データ補足情報   -
     * 広告作成
     */
    async createAdvertisementRaw(requestParameters: CreateAdvertisementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdvertisementDetailOut>> {
        if (requestParameters.advertisementCreateIn === null || requestParameters.advertisementCreateIn === undefined) {
            throw new runtime.RequiredError('advertisementCreateIn','Required parameter requestParameters.advertisementCreateIn was null or undefined when calling createAdvertisement.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/manage/advertisements`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AdvertisementCreateInToJSON(requestParameters.advertisementCreateIn),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AdvertisementDetailOutFromJSON(jsonValue));
    }

    /**
     * 広告作成 - 必要権限: [ADVERTISEMENT_EDIT] - 登録データ補足情報   -
     * 広告作成
     */
    async createAdvertisement(requestParameters: CreateAdvertisementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdvertisementDetailOut> {
        const response = await this.createAdvertisementRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 広告削除 - 必要権限: [ADVERTISEMENT_EDIT] - Advertisementを削除する
     * 広告削除
     */
    async deleteAdvertisementRaw(requestParameters: DeleteAdvertisementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.advertisementId === null || requestParameters.advertisementId === undefined) {
            throw new runtime.RequiredError('advertisementId','Required parameter requestParameters.advertisementId was null or undefined when calling deleteAdvertisement.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/manage/advertisements/{advertisement_id}`.replace(`{${"advertisement_id"}}`, encodeURIComponent(String(requestParameters.advertisementId))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * 広告削除 - 必要権限: [ADVERTISEMENT_EDIT] - Advertisementを削除する
     * 広告削除
     */
    async deleteAdvertisement(requestParameters: DeleteAdvertisementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteAdvertisementRaw(requestParameters, initOverrides);
    }

    /**
     * 広告画像削除 - 必要権限: [ADVERTISEMENT_EDIT] - クラウドストレージ内の該当ファイルを削除する - Advertisementのimage1_336x280を空にする
     * 広告画像削除
     */
    async deleteAdvertisementBannerRaw(requestParameters: DeleteAdvertisementBannerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.advertisementId === null || requestParameters.advertisementId === undefined) {
            throw new runtime.RequiredError('advertisementId','Required parameter requestParameters.advertisementId was null or undefined when calling deleteAdvertisementBanner.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/manage/advertisements/{advertisement_id}/banners`.replace(`{${"advertisement_id"}}`, encodeURIComponent(String(requestParameters.advertisementId))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * 広告画像削除 - 必要権限: [ADVERTISEMENT_EDIT] - クラウドストレージ内の該当ファイルを削除する - Advertisementのimage1_336x280を空にする
     * 広告画像削除
     */
    async deleteAdvertisementBanner(requestParameters: DeleteAdvertisementBannerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.deleteAdvertisementBannerRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 広告詳細取得 - 必要権限: [ADVERTISEMENT_VIEW] - 以下のデータのみ取得   - id: advertisement_id   - is_deleted: False
     * 広告詳細取得
     */
    async getAdvertisementRaw(requestParameters: GetAdvertisementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdvertisementDetailOut>> {
        if (requestParameters.advertisementId === null || requestParameters.advertisementId === undefined) {
            throw new runtime.RequiredError('advertisementId','Required parameter requestParameters.advertisementId was null or undefined when calling getAdvertisement.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/manage/advertisements/{advertisement_id}`.replace(`{${"advertisement_id"}}`, encodeURIComponent(String(requestParameters.advertisementId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AdvertisementDetailOutFromJSON(jsonValue));
    }

    /**
     * 広告詳細取得 - 必要権限: [ADVERTISEMENT_VIEW] - 以下のデータのみ取得   - id: advertisement_id   - is_deleted: False
     * 広告詳細取得
     */
    async getAdvertisement(requestParameters: GetAdvertisementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdvertisementDetailOut> {
        const response = await this.getAdvertisementRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 広告一覧取得 - 必要権限: [ADVERTISEMENT_VIEW] - 並び順: id降順 - 以下のデータのみ取得   - is_deleted: False
     * 広告一覧取得
     */
    async getAdvertisementListRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<AdvertisementDetailOut>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/manage/advertisements`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(AdvertisementDetailOutFromJSON));
    }

    /**
     * 広告一覧取得 - 必要権限: [ADVERTISEMENT_VIEW] - 並び順: id降順 - 以下のデータのみ取得   - is_deleted: False
     * 広告一覧取得
     */
    async getAdvertisementList(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<AdvertisementDetailOut>> {
        const response = await this.getAdvertisementListRaw(initOverrides);
        return await response.value();
    }

    /**
     * 広告画像登録 - 必要権限: [ADVERTISEMENT_EDIT] - 登録データ補足情報   - Advertisement.is_deleted = False
     * 広告画像登録
     */
    async registerAdvertisementBannerRaw(requestParameters: RegisterAdvertisementBannerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdvertisementBannerDetailOut>> {
        if (requestParameters.advertisementId === null || requestParameters.advertisementId === undefined) {
            throw new runtime.RequiredError('advertisementId','Required parameter requestParameters.advertisementId was null or undefined when calling registerAdvertisementBanner.');
        }

        if (requestParameters.advertisementBannerCreateIn === null || requestParameters.advertisementBannerCreateIn === undefined) {
            throw new runtime.RequiredError('advertisementBannerCreateIn','Required parameter requestParameters.advertisementBannerCreateIn was null or undefined when calling registerAdvertisementBanner.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/manage/advertisements/{advertisement_id}/banners`.replace(`{${"advertisement_id"}}`, encodeURIComponent(String(requestParameters.advertisementId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AdvertisementBannerCreateInToJSON(requestParameters.advertisementBannerCreateIn),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AdvertisementBannerDetailOutFromJSON(jsonValue));
    }

    /**
     * 広告画像登録 - 必要権限: [ADVERTISEMENT_EDIT] - 登録データ補足情報   - Advertisement.is_deleted = False
     * 広告画像登録
     */
    async registerAdvertisementBanner(requestParameters: RegisterAdvertisementBannerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdvertisementBannerDetailOut> {
        const response = await this.registerAdvertisementBannerRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 広告更新 - 必要権限: [ADVERTISEMENT_EDIT] - is_deleted=Falseのみ更新可能 - 登録データ補足情報   - 広告名(管理用): 入力値(テキストボックス)   - URL: 入力値: 入力値(テキストボックス)   - 掲載開始日時: 入力値(テキストボックス(カレンダー))   - 掲載終了日時: 入力値(テキストボックス(カレンダー))   - 公開フラグ: 入力値(チェックボックス)
     * 広告更新
     */
    async updateAdvertisementRaw(requestParameters: UpdateAdvertisementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdvertisementDetailOut>> {
        if (requestParameters.advertisementId === null || requestParameters.advertisementId === undefined) {
            throw new runtime.RequiredError('advertisementId','Required parameter requestParameters.advertisementId was null or undefined when calling updateAdvertisement.');
        }

        if (requestParameters.advertisementUpdateIn === null || requestParameters.advertisementUpdateIn === undefined) {
            throw new runtime.RequiredError('advertisementUpdateIn','Required parameter requestParameters.advertisementUpdateIn was null or undefined when calling updateAdvertisement.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/manage/advertisements/{advertisement_id}`.replace(`{${"advertisement_id"}}`, encodeURIComponent(String(requestParameters.advertisementId))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: AdvertisementUpdateInToJSON(requestParameters.advertisementUpdateIn),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AdvertisementDetailOutFromJSON(jsonValue));
    }

    /**
     * 広告更新 - 必要権限: [ADVERTISEMENT_EDIT] - is_deleted=Falseのみ更新可能 - 登録データ補足情報   - 広告名(管理用): 入力値(テキストボックス)   - URL: 入力値: 入力値(テキストボックス)   - 掲載開始日時: 入力値(テキストボックス(カレンダー))   - 掲載終了日時: 入力値(テキストボックス(カレンダー))   - 公開フラグ: 入力値(チェックボックス)
     * 広告更新
     */
    async updateAdvertisement(requestParameters: UpdateAdvertisementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdvertisementDetailOut> {
        const response = await this.updateAdvertisementRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
