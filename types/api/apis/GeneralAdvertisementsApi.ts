/* tslint:disable */
/* eslint-disable */
/**
 * TechFUL API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiError,
  RandomAdvertisementDetailOut,
  RandomAdvertisementUrlDetailOut,
  ValidationError,
} from '../models/index';
import {
    ApiErrorFromJSON,
    ApiErrorToJSON,
    RandomAdvertisementDetailOutFromJSON,
    RandomAdvertisementDetailOutToJSON,
    RandomAdvertisementUrlDetailOutFromJSON,
    RandomAdvertisementUrlDetailOutToJSON,
    ValidationErrorFromJSON,
    ValidationErrorToJSON,
} from '../models/index';

export interface GetRandomAdvertisementsRequest {
    now?: Date;
    limit?: number;
    size?: string;
}

export interface GetRandomAdvertisementsUrlRequest {
    advertisementId: number;
}

/**
 * 
 */
export class GeneralAdvertisementsApi extends runtime.BaseAPI {

    /**
     * 広告ランダム取得 - 必要権限: [Pm.GENERAL_USER] - 実行条件:   - is_published = True(公開中)   - is_deleted = False(削除されていない)   - 取得する広告画像がnullでない   - start <= now <= end   - nowが未指定の場合は、nowにAPI呼び出し時の現在時刻を設定   - size(広告サイズ)で指定されたサイズの画像を取得     - Advertisementモデルのimage_336_280かimage_120_600かimage_600_120かimage_1250_170を     - RandomAdvertisementDetailOutのimageに設定し返却   - limitで取得する上限を指定 - 並び順: ランダム - API補足情報   - 広告表示時: 当API   - 広告クリック時: 表示する広告のURL取得とクリックを計測するAPI
     * 広告ランダム取得
     */
    async getRandomAdvertisementsRaw(requestParameters: GetRandomAdvertisementsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<RandomAdvertisementDetailOut>>> {
        const queryParameters: any = {};

        if (requestParameters.now !== undefined) {
            queryParameters['now'] = (requestParameters.now as any).toISOString();
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.size !== undefined) {
            queryParameters['size'] = requestParameters.size;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/general/advertisements/banners`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(RandomAdvertisementDetailOutFromJSON));
    }

    /**
     * 広告ランダム取得 - 必要権限: [Pm.GENERAL_USER] - 実行条件:   - is_published = True(公開中)   - is_deleted = False(削除されていない)   - 取得する広告画像がnullでない   - start <= now <= end   - nowが未指定の場合は、nowにAPI呼び出し時の現在時刻を設定   - size(広告サイズ)で指定されたサイズの画像を取得     - Advertisementモデルのimage_336_280かimage_120_600かimage_600_120かimage_1250_170を     - RandomAdvertisementDetailOutのimageに設定し返却   - limitで取得する上限を指定 - 並び順: ランダム - API補足情報   - 広告表示時: 当API   - 広告クリック時: 表示する広告のURL取得とクリックを計測するAPI
     * 広告ランダム取得
     */
    async getRandomAdvertisements(requestParameters: GetRandomAdvertisementsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<RandomAdvertisementDetailOut>> {
        const response = await this.getRandomAdvertisementsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 広告クリック計測&URL返却 - 必要権限: [Pm.GENERAL_USER] - 概要:   - 広告クリック時に呼ばれるAPI   - クリック履歴テーブルにレコードを作成   - クリックしたURLを取得し、返却 - 実行処理:   - AdvertisementViewedHistory(広告閲覧履歴)にレコード追加     - advertisement_id=advertisement_id     - user_id=user.id   - Advertisementからデータ抽出     - id=advertisement_id     - is_published=True     - is_deleted=False   - 取得できなかった場合404 NOT_FOUND   - Advertisement.urlを返却
     * 広告クリック計測&URL返却
     */
    async getRandomAdvertisementsUrlRaw(requestParameters: GetRandomAdvertisementsUrlRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RandomAdvertisementUrlDetailOut>> {
        if (requestParameters.advertisementId === null || requestParameters.advertisementId === undefined) {
            throw new runtime.RequiredError('advertisementId','Required parameter requestParameters.advertisementId was null or undefined when calling getRandomAdvertisementsUrl.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/general/advertisements/banners/{advertisement_id}`.replace(`{${"advertisement_id"}}`, encodeURIComponent(String(requestParameters.advertisementId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RandomAdvertisementUrlDetailOutFromJSON(jsonValue));
    }

    /**
     * 広告クリック計測&URL返却 - 必要権限: [Pm.GENERAL_USER] - 概要:   - 広告クリック時に呼ばれるAPI   - クリック履歴テーブルにレコードを作成   - クリックしたURLを取得し、返却 - 実行処理:   - AdvertisementViewedHistory(広告閲覧履歴)にレコード追加     - advertisement_id=advertisement_id     - user_id=user.id   - Advertisementからデータ抽出     - id=advertisement_id     - is_published=True     - is_deleted=False   - 取得できなかった場合404 NOT_FOUND   - Advertisement.urlを返却
     * 広告クリック計測&URL返却
     */
    async getRandomAdvertisementsUrl(requestParameters: GetRandomAdvertisementsUrlRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RandomAdvertisementUrlDetailOut> {
        const response = await this.getRandomAdvertisementsUrlRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
