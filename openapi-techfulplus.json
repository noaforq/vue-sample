{
  "openapi": "3.0.2",
  "info": {
    "title": "TechFUL API",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:8000",
      "description": "api"
    },
    {
      "url": "http://127.0.0.1:4010",
      "description": "mock"
    }
  ],
  "paths": {
    "/general/contents/{content_id}/favorites": {
      "post": {
        "tags": [
          "general/contents"
        ],
        "summary": "お気に入り自組織コンテンツを作成する",
        "description": "お気に入り自組織コンテンツを作成する\n- 必要権限: [PROBLEM_VIEW] [MATERIAL_VIEW]\n- 実行条件: 条件不一致の場合、NotFound(404)を返す\n    - 削除済みコンテンツは実行不可\n    - 非公開コンテンツは実行不可\n    - ユーザーお気に入りコンテンツに含まれていないコンテンツのみ実行可能",
        "operationId": "createFavoriteUserContent",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "general/contents"
        ],
        "summary": "お気に入り自組織コンテンツを削除する",
        "description": "お気に入り自組織コンテンツを物理削除する\n- 必要権限: [PROBLEM_VIEW] [MATERIAL_VIEW]\n- 実行条件: 条件不一致の場合、NotFound(404)を返す\n    - 削除済みコンテンツは実行不可\n    - 非公開コンテンツは実行不可\n    - ユーザーお気に入りコンテンツに含まれているのみ実行可能",
        "operationId": "deleteFavoriteUserContent",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/selections": {
      "get": {
        "tags": [
          "general/selections"
        ],
        "summary": "選考管理一覧取得",
        "operationId": "generalGetSelections",
        "parameters": [
          {
            "description": "企業名",
            "required": false,
            "schema": {
              "title": "Host Name",
              "type": "string",
              "description": "企業名"
            },
            "name": "host_name",
            "in": "query"
          },
          {
            "description": "選考ステップ（整数カンマ区切り）",
            "required": false,
            "schema": {
              "title": "Steps",
              "type": "string",
              "description": "選考ステップ（整数カンマ区切り）"
            },
            "name": "steps",
            "in": "query"
          },
          {
            "description": "リミット",
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "minimum": 0.0,
              "type": "integer",
              "description": "リミット",
              "default": 50
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "オフセット",
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "description": "オフセット",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectionsOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/selections/acception/{selection_id}": {
      "put": {
        "tags": [
          "general/selections"
        ],
        "summary": "スカウトを受諾する",
        "operationId": "generalGetSelectionsAcception",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Selection Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "selection_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "条件を満たしていないため実行不可: CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED": {
                    "value": {
                      "errorCode": "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
                      "message": "条件を満たしていないため実行不可",
                      "detail": "Cannot be executed because the required conditions are not satisfied."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/selections/rejection/{selection_id}": {
      "put": {
        "tags": [
          "general/selections"
        ],
        "summary": "スカウトを辞退する",
        "operationId": "generalGetSelectionsRejection",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Selection Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "selection_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "条件を満たしていないため実行不可: CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED": {
                    "value": {
                      "errorCode": "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
                      "message": "条件を満たしていないため実行不可",
                      "detail": "Cannot be executed because the required conditions are not satisfied."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/portfolios/dashboard-heatmap": {
      "get": {
        "tags": [
          "general/portfolios"
        ],
        "summary": "一般ユーザーダッシュボード問題解答ヒートマップ取得",
        "description": "一般ユーザーダッシュボード問題解答ヒートマップ取得\n- 必要権限: [GENERAL_USER]\n- 並び順:\n    - カテゴリはContentCategory.orderの昇順\n    - トピックはContentTopic.orderの昇順\n- 取得条件:\n    - QuestionResult.user_id == user.id\n    - QuestionResult.question_result_type == question_result_type\n    - QuestionResult.question_result_status == QuestionResultStatus.PASS\n    - Content.is_deleted == False",
        "operationId": "getHeatmapListForDashboard",
        "parameters": [
          {
            "description": "コンテンツ区分",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/QuestionResultTypeForDashboard"
                }
              ],
              "description": "コンテンツ区分"
            },
            "name": "question_result_type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Heatmap List For Dashboard General Portfolios Dashboard Heatmap Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgrammingProblemCategoryStat"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "パラメータが不正: PARAMETER_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PARAMETER_ERROR": {
                    "value": {
                      "errorCode": "PARAMETER_ERROR",
                      "message": "指定されたパラメータは不正です",
                      "detail": "Parameter error"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/portfolios/heatmap-cases": {
      "get": {
        "tags": [
          "general/portfolios"
        ],
        "summary": "ヒートマップサンプルケース一覧取得",
        "description": "ヒートマップサンプルケース一覧取得\n- 必要権限: [GENERAL_USER]\n- データ取得条件:\n    - is_published=True\n    - ユーザーと紐づいているですが、ユーザーが削除されたとしても取得できるようにする\n- 並び順:\n    - SkillHeatmapCase.order降順",
        "operationId": "getHeatmapSampleCaseList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Heatmap Sample Case List General Portfolios Heatmap Cases Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetHeatmapSampleCaseListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/portfolios/heatmap-cases/{heatmap_case_id}": {
      "get": {
        "tags": [
          "general/portfolios"
        ],
        "summary": "ヒートマップサンプルケース詳細取得",
        "description": "ヒートマップサンプルケース詳細取得\n- 必要権限: [GENERAL_USER]\n- データ取得可能条件:\n    - is_published=True\n- 並び順:\n    - category_id昇順\n    - topic_id昇順",
        "operationId": "getHeatmapSampleCaseDetail",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "ID",
              "type": "integer"
            },
            "name": "heatmap_case_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Heatmap Sample Case Detail General Portfolios Heatmap Cases  Heatmap Case Id  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HeatmapCellGroupByCategory"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions": {
      "get": {
        "tags": [
          "general/sessions"
        ],
        "summary": "一般ユーザー用セッション一覧を取得",
        "description": "セッション一覧を取得\n- 必要権限: [GENERAL_USER] [SKILL_CHECK_USER]\n- 並び順:開始日時の昇順\n- レスポンスデータ補足情報\n    - is_active: セッションが一時停止中か\n    - sessions\n        - session_user_count: セッション参加ユーザーの合計\n        - session_status\n        　- 開催予定: セッション開始日時 > 現在日時\n        　- 開催中: セッション開始日時 <= 現在日時 <= セッション終了日時\n        　- 終了: 現在日時 > セッション終了日時\n- 取得可能条件\n    - is_deleted = False\n    - event_idなしの場合NotFound",
        "operationId": "getGeneralSessionList",
        "parameters": [
          {
            "description": "イベントID",
            "required": false,
            "schema": {
              "title": "Event Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "イベントID"
            },
            "name": "event_id",
            "in": "query"
          },
          {
            "description": "開催中のイベントのみ表示",
            "required": false,
            "schema": {
              "title": "Is In Progress",
              "type": "boolean",
              "description": "開催中のイベントのみ表示",
              "default": false
            },
            "name": "is_in_progress",
            "in": "query"
          },
          {
            "description": "ピックアップ中のイベント",
            "required": false,
            "schema": {
              "title": "Is Picked Up",
              "type": "boolean",
              "description": "ピックアップ中のイベント",
              "default": false
            },
            "name": "is_picked_up",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "minimum": 0.0,
              "type": "integer"
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get General Session List General Sessions Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneralSessionListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions/certificate-exam/{session_id}/timer/start": {
      "patch": {
        "tags": [
          "general/sessions"
        ],
        "summary": "検定試験タイマースタート",
        "description": "検定試験タイマースタート\n- 必要権限: [GENERAL_USER]\n- 実行可能条件:\n    - 参加者\n    - 検定試験\n    - 未設定・解答開始前・再開待ち\n- ユーザーステータス：未設定・解答開始前\n    - user_start_at: 現在時刻\n    - user_end_at: 削除する（設定なし）\n    - statusを解答中に変更\n- ユーザーステータス：再開待ち\n    - user_start_at: 現在時刻 - (user_end_at - user_start_at)\n    - user_end_at: 削除する\n    - statusを解答中に変更",
        "operationId": "startCertificateExamTimer",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateExamTimerOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions/certificate-exam/{session_id}/timer/stop": {
      "patch": {
        "tags": [
          "general/sessions"
        ],
        "summary": "検定試験タイマーストップ",
        "description": "検定試験タイマーストップ\n- 必要権限: [GENERAL_USER]\n- 実行可能条件:\n    - 参加者\n    - 検定試験\n    - 解答中\n- 処理内容:\n    - statusを終了に変更\n    - user_end_atを現在時刻に設定",
        "operationId": "stopCertificateExamTimer",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateExamTimerOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions/hr-terms": {
      "get": {
        "tags": [
          "general/sessions"
        ],
        "summary": "人材紹介規約を取得",
        "description": "人材紹介規約を取得\n- 必要権限: [GENERAL_USER]\n- 下記の最新版規約を取得する\n    - TermType.HR_PERSONAL_ID_INFO_TERM :\"人材紹介 個人情報規約\"\n    - TermType.HR_TERM_OF_USE :\"人材紹介 利用規約\"",
        "operationId": "getGeneralHrTerm",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralTermDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "general/sessions"
        ],
        "summary": "人材紹介規約を同意",
        "description": "人材紹介規約を同意\n- 必要権限: [GENERAL_USER]\n- 実行条件:\n    - TermTypeが下記のみ実行する\n        - TermType.HR_PERSONAL_ID_INFO_TERM :\"人材紹介 個人情報規約\"\n        - TermType.HR_TERM_OF_USE :\"人材紹介 利用規約\"",
        "operationId": "agreeGeneralHrTerm",
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions/{session_code}": {
      "get": {
        "tags": [
          "general/sessions"
        ],
        "summary": "一般ユーザ用セッション詳細情報取得",
        "description": "一般ユーザ/スキルチェックユーザー用セッション詳細情報取得\n- 必要権限: [GENERAL_USER] [SKILL_CHECK_USER]\n- 取得可能条件\n    - ユーザーがSessionUserに登録されている(セッションに参加している)\n- Response:\n    - 下記条件に該当しないか確認する\n            - セッション参加済みユーザーでない(SessionUserモデルにUserIDが存在しない)\n            - 卒業年度が対象の卒業年度内でない\n            - 最新の人材紹介規約の同意していない\n            - PWを入力して参加していない\n            - 最新のセッション規約の同意していない\n            - 一般ユーザがスキルチェックセッションにアクセスする\n            - スキルチェックユーザがスキルチェックセッション以外にアクセスする\n    - 404: NotFound\n        - is_deleted = True\n        - 存在しないsession_code\nTODO:API実行時間が15〜20sかかる",
        "operationId": "getGeneralSessionDetail",
        "parameters": [
          {
            "description": "セッションコード",
            "required": true,
            "schema": {
              "title": "Session Code",
              "type": "string",
              "description": "セッションコード"
            },
            "name": "session_code",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralSessionDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions/{session_code}/entry": {
      "put": {
        "tags": [
          "general/sessions"
        ],
        "summary": "セッション参加",
        "description": "セッション参加\n- 必要権限: [GENERAL_USER] [Pm.SKILL_CHECK_USER]\n- RequestBody:なし\n- ResponseBody:なし\n- 実行条件:\n    - SessionUserにuser.idが存在しない場合(PW入力・各種規約同意が要求されなかった場合)\n        - SessionUserを登録する",
        "operationId": "entrySession",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Code",
              "type": "string"
            },
            "name": "session_code",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions/{session_code}/password": {
      "put": {
        "tags": [
          "general/sessions"
        ],
        "summary": "入力パスワードを検証する",
        "description": "入力パスワードを検証する\n- 必要権限: [GENERAL_USER]\n- Response:\n    - 成功: HTTP_204_NO_CONTENT\n    - 失敗:\n        - NotFound\n            - Sessionが削除されている\n        - CannotBeExecutedConditionsNotSatisfied\n            - PW付きセッションではない\n        - PermissionDenied\n            - PW不一致\n- 処理内容:\n    1. セッション条件確認\n        - Session.is_deleted = False\n            - 不一致の場合: NotFoundを返す\n        - Session.is_locked_session = True (PW入力必要)\n            - 不一致の場合: CannotBeExecutedConditionsNotSatisfiedを返す\n    2. PW認証\n        - 不一致の場合:\n            - PermissionDeniedを返す\n    3. 認証成功\n        - SessionUserにuser.idが存在する場合:\n            - SessionUser.is_password_verified = Trueに更新する\n        - SessionUserにuser.idが存在しない場合:\n            - 新規登録する",
        "operationId": "verifySessionPassword",
        "parameters": [
          {
            "description": "セッションコード",
            "required": true,
            "schema": {
              "title": "Session Code",
              "type": "string",
              "description": "セッションコード"
            },
            "name": "session_code",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionPasswordVerificationIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "条件を満たしていないため実行不可: CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED": {
                    "value": {
                      "errorCode": "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
                      "message": "条件を満たしていないため実行不可",
                      "detail": "Cannot be executed because the required conditions are not satisfied."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions/{session_code}/terms": {
      "get": {
        "tags": [
          "general/sessions"
        ],
        "summary": "セッション規約を取得(一般用)",
        "description": "セッション規約を取得(一般用)\n- 必要権限: [GENERAL_USER] [SKILL_CHECK_USER]\n- 実行条件\n    - Session.is_deleted=False\n    - セッション規約が存在すること(紐づいていること)\n        - ないときはDataDoesNotExistを返す",
        "operationId": "getGeneralSessionTerm",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Code",
              "type": "string"
            },
            "name": "session_code",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralSessionTermDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "general/sessions"
        ],
        "summary": "セッション規約を同意",
        "description": "セッション規約を同意\n- RequestBody:なし\n- ResponseBody:なし\n- 必要権限: [GENERAL_USER] [SKILL_CHECK_USER]\n- 最新バージョンのセッション規約に同意した状態のSessionUserを作成する\n- 実行条件:\n    - Session.is_deleted=False\n    - セッション規約が存在すること(紐づいていること)\n        - ないときはDataDoesNotExistを返す\n    - SessionUserにuser.idがない場合: 新規登録する\n        - 登録データ\n            - セッションID\n            - ユーザーID\n            - セッションユーザステータス: SessionUserStatus.BEFORE_ANSWERING\n            - 最後に同意した規約ID(SessionTerm.id)\n            - 最後に同意した規約Version(SessionTerm.version)\n            - 開始日時:None\n            - 終了日時:None\n    - SessionUserにuser.idがある場合: 更新する\n        - 最後に同意した規約ID(SessionTerm.id)\n        - 最後に同意した規約Version(SessionTerm.version)",
        "operationId": "agreeGeneralSessionTerm",
        "parameters": [
          {
            "description": "セッションコード",
            "required": true,
            "schema": {
              "title": "Session Code",
              "type": "string",
              "description": "セッションコード"
            },
            "name": "session_code",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions/{session_id}/answer_status": {
      "get": {
        "tags": [
          "general/sessions"
        ],
        "summary": "セッション解答状況取得",
        "description": "セッション解答状況一覧取得\n- 必要権限：[GENERAL_USER]\n    - 一般ユーザーのみ実行可能\n- session_idに紐づくセッションコンテンツへのログインユーザーの解答状況を取得\n- ”未解答”ステータス(QuestionResult.question_result_status.UNANSWERED)の問題は表示しない\n- session_idのセッションが削除済み、存在しない場合NotFound",
        "operationId": "getSessionAnswerStatus",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionAnswerStatusOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions/{session_id}/contents": {
      "get": {
        "tags": [
          "general/sessions"
        ],
        "summary": "一般ユーザー用セッションコンテンツ一覧取得",
        "description": "一般ユーザー用セッションコンテンツ一覧取得\n- 必要権限: [GENERAL_USER]\n- 並び順: order昇順\n- session_idのセッションが削除済み、存在しない場合NotFound",
        "operationId": "getGeneralSessionContentList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get General Session Content List General Sessions  Session Id  Contents Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/app__schemas__general__sessions__general_session_content_list_out__SessionContentListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions/{session_id}/question/{content_id}/blank/execute": {
      "post": {
        "tags": [
          "general/sessions"
        ],
        "summary": "セッション空欄問題採点実行",
        "description": "セッション空欄問題採点実行\n- セッションで使用される空欄問題\n- 必要権限: [GENERAL_USER]\n- レスポンス:\n    - 採点結果とQuestionの解答と各空欄の採点結果\n- 処理内容:\n    - session_idのSessionレコードが削除済みか、存在しない場合エラー(NotFound)\n    - SessionUserに(session_id, user_id)が存在しない場合はエラー(PermissionDenied)\n    - 該当問題が存在しない場合エラー(NotFound)\n    - QuestionResultにレコードが存在しない場合エラー(QuestionAnswerNotStarted)\n    - 採点を実行\n        - 該当問題のQuestionBlankのanswerと一致しているか各解答をチェック\n        - 全問題一致しているなら正解、1問でも不一致なら不正解\n    - QuestionBlankResultにデータを作成\n        - question_result_id: QuestionResultのID\n        - is_correct: 上記の採点結果(True or False)\n        - score: 0\n        - is_used_for_result: 上記の採点結果(True or False)\n    - QuestionBlankEachResultに送られてきた選択肢毎のデータを作成\n        - question_blank_id: 該当問題の空欄ID\n        - question_blank_result_id: 上記で作成したQuestionBlankResultのID\n        - answer: 空欄IDに対応するリクエストで送られてきたユーザの解答テキスト\n        - is_correct: 対象空欄の採点結果(True or False)\n    - QuestionResultに結果を書き込む\n        - question_result_status: QuestionResultStatus.PASS or QuestionResultStatus.ANSWERING\n- 補足情報:\n    - 空欄問題に点数はつけないためスコアは0点とする(将来的に点数はつける予定)\n    - 空欄問題はJudgeシステムで採点は行わない",
        "operationId": "generalPostQuestionsBlankExecute",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "コンテンツID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionBlankExecuteIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionBlankExecuteOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "問題解答開始していない: QUESTION_ANSWER_NOT_STARTED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "QUESTION_ANSWER_NOT_STARTED": {
                    "value": {
                      "errorCode": "QUESTION_ANSWER_NOT_STARTED",
                      "message": "問題解答開始していないため実行できません",
                      "detail": "question answer not started"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions/{session_id}/questions/{content_id}/answer-status": {
      "get": {
        "tags": [
          "general/sessions"
        ],
        "summary": "セッション問題解答状況取得",
        "description": "twitterで直接IDを叩いた時にすぐ始まっちゃうのを防ぐために必要\n問題詳細画面を開くときに使用し、チャレンジ問題かつ未解答の場合はポップアップ表示するために必要\n- 必要権限: [GENERAL_USER]\n- 取得条件:\n    - content_type: GENERAL\n    - Content.is_deleted = False\n    - Event.is_deleted=False\n    - Session.is_deleted=False\n    - セッションコンテンツに含まれている(session_id,content_id)\n- レスポンス:\n    - 問題の解答状況\n- 備考:\n    - 未解答とはQuestionResultテーブルにレコードが1件も存在しない場合を指す\n- 処理内容:\n    - QuestionResultに該当ユーザの該当問題のレコードが存在するかチェック\n    - チェック結果を返す",
        "operationId": "generalGetQuestionsAnswerStatus",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionsStatusOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions/{session_id}/questions/{content_id}/sample-cases": {
      "get": {
        "tags": [
          "general/sessions"
        ],
        "summary": "セッション問題テストケース取得",
        "description": "問題サンプルケース一覧取得\n- 必要権限: [GENERAL_USER, SKILL_CHECK_USER]\n- 例外処理:\n    - 該当セッションが存在しない場合: NotFound\n    - SessionContentsにはsession_idとcontent_idの組み合わせが存在しない場合: NotFound\n    - 該当問題が存在しない場合: NotFound\n- 並び順: QuestionTestCase.order\n- データ取得可能条件:\n    - Question.content_id = content_id\n    - QuestionTestCase.is_sample_case = True\n- レスポンス補足:\n    - QuestionTestCase.is_omitted がTrueの場合、shorten_stdin、shorten_stdoutを返す",
        "operationId": "getSessionQuestionSampleCaseLists",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "問題ID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "問題ID"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Session Question Sample Case Lists General Sessions  Session Id  Questions  Content Id  Sample Cases Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetQuestionSampleCasesListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions/{session_id}/questions/{content_id}/sample-cases/execute": {
      "post": {
        "tags": [
          "general/sessions"
        ],
        "summary": "セッション問題サンプルケース実行",
        "description": "セッション問題のサンプルケース実行\n- 必要権限: [GENERAL_USER, SKILL_CHECK_USER]\n- 例外処理\n    - セッションが存在しない(削除される)場合はエラー(NotFound)\n    - SessionUserに(session_id, user_id)が存在しない場合はエラー　(NotFound)\n    - 該当セッションが存在しない、またはイベントが存在しない場合はエラー(NotFound)\n    - 該当問題が存在しない場合はエラー(NotFound)\n        - SessionContentに(session_id, content_id)のデータが存在する\n        - Question.content_id = content_id\n        - Question.question_type in [QuestionType.CODING, QuestionType.FILLING, QuestionType.BUG]\n    - 該当言語が存在しない場合はエラー(NotFound)\n    - QuestionResultから該当するデータが取得できない場合はエラー(QuestionAnswerNotStarted)\n        - QuestionResult.user_id = user.id\n        - QuestionResult.question_id = Question.id\n        - QuestionResult.session_id = session_id\n        - QuestionResult.question_result_type in                 [QuestionResultType.SESSION, QuestionResultType.OLD_SESSION]\n- 処理手順\n    - QuestionResultを取得\n    - QuestionTestResultにデータを作成\n        - source_code: リクエストの値\n        - pg_lang_id: リクエストの値\n        - question_answer_result: QuestionAnswerResult.SCORING\n        - is_sample_case: True\n        - question_result_id: 上記で取得したQuestionResultのID\n    - QuestionTestCaseResultにテストケース毎のデータを作成\n        - question_test_result_id: 上記で作成したQuestionTestResultのID\n        - question_test_case_id: 対応するテストケースのID\n        - judge_status: JudgeStatus.WJ\n    - Judgeシステムの採点API実行",
        "operationId": "executeSessionQuestionSampleCases",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "問題ID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "問題ID"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionExecuteSampleCaseIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionExecuteSampleCaseOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "問題解答開始していない: QUESTION_ANSWER_NOT_STARTED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "QUESTION_ANSWER_NOT_STARTED": {
                    "value": {
                      "errorCode": "QUESTION_ANSWER_NOT_STARTED",
                      "message": "問題解答開始していないため実行できません",
                      "detail": "question answer not started"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions/{session_id}/questions/{content_id}/selection/execute": {
      "post": {
        "tags": [
          "general/sessions"
        ],
        "summary": "セッション選択式問題採点実行",
        "description": "セッション選択式問題採点実行\n- セッション問題に使用し、チャレンジ問題等には使用しない\n- 必要権限: [GENERAL_USER]\n- レスポンス:\n    - 採点結果とQuestionの解答\n- 処理内容:\n    - 該当問題が存在しない場合エラー(NotFound)\n    - QuestionResultにレコードが存在しない場合エラー(QuestionAnswerNotStarted)\n    - 採点を実行\n        - ユーザが選択したorderの中で該当問題のQuestionChoiceのis_correct=Falseがある場合不正解\n        - そうでなければ正解\n    - QuestionChoiceResultにデータを作成\n        - question_result_id: QuestionResultのID\n        - score: 0\n        - is_correct: 上記の採点結果(True or False)\n        - is_used_for_result: 上記の採点結果(True or False)\n    - QuestionChoiceResultRelationに送られてきた選択肢毎のデータを作成\n        - question_choice_id: ユーザが選択した選択肢のID\n        - question_choice_result_id: 上記で作成したQuestionChoiceResultのID\n- 補足情報:\n    - 選択式問題に点数はつけないためスコアは0点とする(将来的に点数はつける予定)\n    - 選択式問題はJudgeシステムで採点は行わない",
        "operationId": "generalPostQuestionsSelectionExecute",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionSelectionExecuteIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionSelectionExecuteOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "問題解答開始していない: QUESTION_ANSWER_NOT_STARTED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "QUESTION_ANSWER_NOT_STARTED": {
                    "value": {
                      "errorCode": "QUESTION_ANSWER_NOT_STARTED",
                      "message": "問題解答開始していないため実行できません",
                      "detail": "question answer not started"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions/{session_id}/questions/{content_id}/test-cases/execute": {
      "post": {
        "tags": [
          "general/sessions"
        ],
        "summary": "セッション問題テストケース実行",
        "description": "セッション問題のテストケース実行\n- チャレンジ問題等に使用し、セッション問題には使用しない\n- 必要権限: [GENERAL_USER, SKILL_CHECK_USER]\n- 例外処理\n    - 該当セッションが存在しない、またはイベントが存在しない場合はエラー(NotFound)\n    - SessionUserに(user_id, session_id)のデータが存在しない(NotFound)\n    - 該当問題が存在しない場合はエラー(NotFound)\n        - Content.is_deleted = False\n        - SessionContentに(session_id, content_id)のデータが存在する\n        - Question.content_id = content_id\n        - Question.question_type in [QuestionType.CODING, QuestionType.FILLING, QuestionType.BUG]\n    - 該当言語が存在しない場合はエラー(NotFound)\n    - QuestionResultから該当するデータが取得できない場合はエラー(QuestionAnswerNotStarted)\n        - QuestionResult.user_id = user.id\n        - QuestionResult.question_id = Question.id\n        - QuestionResult.session_id = session_id\n        - QuestionResult.question_result_type in                 [QuestionResultType.SESSION, QuestionResultType.OLD_SESSION]\n- 処理手順\n    - QuestionResultを取得\n    - QuestionTestResultにデータを作成\n        - source_code: リクエストの値\n        - pg_lang_id: リクエストの値\n        - question_answer_result: QuestionAnswerResult.SCORING\n        - is_sample_case: False\n        - question_result_id: 上記で取得したQuestionResultのID\n    - QuestionTestCaseResultにテストケース毎のデータを作成\n        - question_test_result_id: 上記で作成したQuestionTestResultのID\n        - question_test_case_id: 対応するテストケースのID\n        - judge_status: JudgeStatus.WJ\n    - Judgeシステムの採点API実行",
        "operationId": "executeSessionQuestionTestCases",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "問題ID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "問題ID"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteSessionQuestionTestCasesIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecuteSessionQuestionTestCasesOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "問題解答開始していない: QUESTION_ANSWER_NOT_STARTED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "QUESTION_ANSWER_NOT_STARTED": {
                    "value": {
                      "errorCode": "QUESTION_ANSWER_NOT_STARTED",
                      "message": "問題解答開始していないため実行できません",
                      "detail": "question answer not started"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions/{session_id}/questions/{content_id}/test-results": {
      "get": {
        "tags": [
          "general/sessions"
        ],
        "summary": "セッション過去提出コード一覧取得",
        "description": "提出履歴取得\n- 必要権限: [GENERAL_USER, SKILL_CHECK_USER]\n- 例外処理:\n    - 該当問題が存在しない場合: NotFound\n- データ取得可能条件:\n    - Question\n        - Content.is_deleted = False\n        - Content.content_type = ContentType.QUESTION\n        - Question.content_id = content_id\n    - QuestionTestResult\n        - question_answer_result not in [QuestionAnswerResult.SCORING, QuestionAnswerResult.SERVER_ERROR]\n- 処理手順\n    - 問題を特定\n    - question_idとuser.idでQuestionResultsを取得(全QuestionResultTypeの問題が対象)\n    - QuestionResult毎にquestion_test_resultsを取得(採点中とサーバーエラー以外)\n- 補足\n    - session_idでの提出のみ取得\n    - 回答時間降順に並ぶ\n    - stdin, stdout表示条件(or)\n        - 「解答者にテストケースを公開フラグがTrue」\n        - 「プラクティス問題」かつ「問題の公開フラグがTrue」\n        - 「ラーニング問題」かつ「問題の公開フラグがTrue」",
        "operationId": "getSessionQuestionsTestResults",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "問題ID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "問題ID"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Session Questions Test Results General Sessions  Session Id  Questions  Content Id  Test Results Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CodeSubmissionHistoryListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "問題解答開始していない: QUESTION_ANSWER_NOT_STARTED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "QUESTION_ANSWER_NOT_STARTED": {
                    "value": {
                      "errorCode": "QUESTION_ANSWER_NOT_STARTED",
                      "message": "問題解答開始していないため実行できません",
                      "detail": "question answer not started"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions/{session_id}/questions/{content_id}/test-results/{test_result_id}/sample-case": {
      "get": {
        "tags": [
          "general/sessions"
        ],
        "summary": "セッション問題サンプルケース結果取得",
        "description": "セッション問題サンプルケース結果取得\n\n- 必要権限: [GENERAL_USER, SKILL_CHECK_USER]\n- 例外処理\n    - セッションが存在しない(削除される)場合はエラー(NotFound)\n    - SessionUserに(session_id, user_id)が存在しない場合はエラー　(PermissionDenied)\n    - 該当セッションが存在しない、またはイベントが存在しない場合はエラー(NotFound)\n    - 該当問題が存在しない場合はエラー(NotFound)\n        - Content.is_deleted = False\n        - SessionContentに(session_id, content_id)のデータが存在する\n        - Question.content_id = content_id\n        - Question.question_type in [QuestionType.CORDING, QuestionType.FILLING, QuestionType.BUG]\n    - 該当QuestionResultが存在しない場合はエラー(NotFound)\n        - session_id, question_id, user_idが一致するデータが存在する\n    - 該当QuestionTestResultが存在しない場合はエラー(NotFound)\n        - 上記取得したQuestionResult.idと一致するデータが存在する\n- 並び順: QuestionTestCase.order昇順\n- 処理手順\n    - 該当QuestionTestResultを取得する\n    - 最後のポーリングである場合、もし全部のケースが取得できなければ、サーバーエラーと判定し、            QuestionTestResultのquestion_answer_resultをSERVER_ERRORに更新する\n    - 全部のケースが取得できた場合、結果を返す、\n- 備考:\n    - 一旦ポーリングの最大回数を超えてサーバーエラーに判定されたら、QuestionTestResultのquestion_answer_resultは変えないようにする\n    (\"app/services/judge_result/judge_result_question.py\"を修正する必要があるかもしれません)",
        "operationId": "getSessionQuestionSampleCaseResults",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "問題ID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "問題ID"
            },
            "name": "content_id",
            "in": "path"
          },
          {
            "description": "テスト結果ID",
            "required": true,
            "schema": {
              "title": "Test Result Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "テスト結果ID"
            },
            "name": "test_result_id",
            "in": "path"
          },
          {
            "description": "最後のクエリかどうか",
            "required": false,
            "schema": {
              "title": "Is Last Query",
              "type": "boolean",
              "description": "最後のクエリかどうか",
              "default": false
            },
            "name": "is_last_query",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQuestionSampleCaseResultsOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions/{session_id}/questions/{content_id}/test-results/{test_result_id}/test-case": {
      "get": {
        "tags": [
          "general/sessions"
        ],
        "summary": "セッション問題テストケース実行結果取得",
        "description": "セッション問題テストケース実行結果取得\n- 必要権限: [GENERAL_USER, SKILL_CHECK_USER]\n- 例外処理\n    - セッションが存在しない(削除される)場合はエラー(NotFound)\n    - SessionUserに(session_id, user_id)が存在しない場合はエラー　(PermissionDenied)\n    - 該当セッションが存在しない、またはイベントが存在しない場合はエラー(NotFound)\n    - 該当問題が存在しない場合はエラー(NotFound)\n        - Content.is_deleted = False\n        - SessionContentに(session_id, content_id)のデータが存在する\n        - Question.content_id = content_id\n        - Question.question_type in [QuestionType.CODING, QuestionType.FILLING, QuestionType.BUG]\n    - 該当QuestionResultが存在しない場合はエラー(NotFound)\n        - session_id, question_id, user_idが一致するデータが存在する\n    - 該当QuestionTestResultが存在しない場合はエラー(NotFound)\n        - 上記取得したQuestionResult.idと一致するデータが存在する\n        - is_sample_case = False\n- 並び順: QuestionTestCase.order昇順\n- 処理手順\n    - 該当QuestionTestResultを取得する\n    - 最後のポーリングである場合、もし全部のケースが取得できなければ、サーバーエラーと判定し、            QuestionTestResultのquestion_answer_resultをSERVER_ERRORに更新する\n    - 全部のケースが取得できた場合、結果を返す、\n- 備考:\n    - 一旦ポーリングの最大回数を超えてサーバーエラーに判定されたら、QuestionTestResultのquestion_answer_resultは変えないようにする\n    - セッション終了後は提出はできるが、点数に反映させない処理が必要です。\n    (\"app/services/judge_result/judge_result_question.py\"を修正する必要があるかもしれません)",
        "operationId": "getSessionQuestionTestCaseResults",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "問題ID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "問題ID"
            },
            "name": "content_id",
            "in": "path"
          },
          {
            "description": "テスト結果ID",
            "required": true,
            "schema": {
              "title": "Test Result Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "テスト結果ID"
            },
            "name": "test_result_id",
            "in": "path"
          },
          {
            "description": "最後のクエリかどうか",
            "required": false,
            "schema": {
              "title": "Is Last Query",
              "type": "boolean",
              "description": "最後のクエリかどうか",
              "default": false
            },
            "name": "is_last_query",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSessionTestCaseResultsOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions/{session_id}/ranking": {
      "get": {
        "tags": [
          "general/sessions"
        ],
        "summary": "一般ユーザー用セッションランキング取得",
        "description": "一般ユーザー側のセッションランキング取得\n- 必要権限: [GENERAL_USER] [SKILL_CHECK_USER]\n- 並び順:\n    - スコアの降順\n    - 同点の場合はスコア到達時間の昇順\n- レスポンス\n    - 対象ユーザーの順位\n    - セッションの参加人数\n    - offsetを考慮したlimit数分のランキングデータ\n- セッションが存在しない場合、NotFound\n- ランキングデータに表示する内容\n    - 444主催イベントの場合\n        - 順位 表示名 都道府県 スコア 合格問題数 合計解答時間\n    - 学校イベントの場合\n        - 順位 表示名 スコア\n    - スキルチェックの場合\n        - 順位 表示名 スコア\n- 補足\n    - ページネーションにより表示するランキングが変化する\n    - offsetで何ページの順位を表示するか決まる",
        "operationId": "getGeneralSessionRanking",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "表示するランキング数",
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "minimum": 0.0,
              "type": "integer",
              "description": "表示するランキング数",
              "default": 50
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "オフセット",
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "description": "オフセット",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralSessionRankingOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions/{session_id}/read-threads": {
      "post": {
        "tags": [
          "general/sessions"
        ],
        "summary": "セッションスレッド既読",
        "description": "一般用セッションスレッド既読\nスレッドタブ表示時に未読のスレッドを既読に変更\n- 必要権限：[GENERAL_USER]\n- 登録条件：\n    - Session.is_deleted = True\n- 登録内容\n    - SessionThreadReadに登録されていないsession_idとuser_idのデータを登録する",
        "operationId": "createThreadRead",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions/{session_id}/submit-histories": {
      "get": {
        "tags": [
          "general/sessions"
        ],
        "summary": "セッションコード提出履歴一覧取得",
        "description": "セッションコード提出履歴一覧取得\n- 必要権限：[GENERAL_USER]\n    - 一般ユーザーのみ実行可\n- session_idに紐づくログインユーザーのコード提出履歴を取得する\n- session_idのセッションが削除済み、存在しない場合NotFound",
        "operationId": "getSessionSubmittedCodeHistory",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Session Submitted Code History General Sessions  Session Id  Submit Histories Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionSubmitCodeHistoryOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions/{session_id}/threads": {
      "get": {
        "tags": [
          "general/sessions"
        ],
        "summary": "一般用セッションスレッド一覧取得",
        "description": "セッションスレッド投稿の一覧取得\n- 必要権限: [OWN_SESSION_VIEW]\n- session_idに紐づくスレッドを一覧取得\n- session_idのセッションが削除済み、存在しない場合NotFound\n- id降順に取得",
        "operationId": "getGeneralSessionThreadList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get General Session Thread List General Sessions  Session Id  Threads Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionThreadListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "SKILL_CHECK_USER",
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/school_master": {
      "post": {
        "tags": [
          "general/school_master"
        ],
        "summary": "学校マスター検索",
        "description": "学校マスター検索\n- 検索パラメータに従って学校マスター検索\n- 必要権限: [GENERAL_USER]\n- 検索パラメータ:\n    - 学校名(フリガナ、カタカナ一文字　頭文字で検索)\n        - カタカナ以外の場合、ParameterError\n    - TechFUL学校区分\n        SchoolDivisionRelationで学校区分IDに変換\n        SchoolDeptInfoMasterを学校区分IDで絞り込みした結果の学校IDを返す",
        "operationId": "searchSchoolMaster",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GeneralSchoolMasterSearchIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Search School Master General School Master Post",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneralSchoolMasterSearchOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/school_master/department": {
      "post": {
        "tags": [
          "general/school_master"
        ],
        "summary": "学部・学科マスター検索",
        "description": "学部・学科マスター検索\n- 検索パラメータに従って学部・学科マスター検索\n- 必要権限: [GENERAL_USER]\n- 検索パラメータ:\n    - 学校ID\n    - TechFUL学校区分\n        TechFUL学校区分をSchoolDivisionRelationで学校区分IDに変換\n        SchoolDeptInfoMasterを学校区分ID・学校IDで絞り込みした結果の学部ID・学科IDのセットを返す",
        "operationId": "searchSchoolDepartments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GeneralSchoolDepartmentSearchIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Search School Departments General School Master Department Post",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneralSchoolDepartmentSearchOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions-pro/{session_id}/contents/{content_id}": {
      "get": {
        "tags": [
          "general/sessions-pro"
        ],
        "summary": "一般ユーザーPROセッション問題詳細取得",
        "description": "一般ユーザーPROセッション問題詳細取得\n- 必要権限：[GENERAL_USER]\n- 取得条件:\n    - Session.is_deleted = False\n    - セッションが開催期間中\n    - セッションに登録されている問題\n    - セッション参加ユーザーである\n    - Content.content_type = ContentType.PRO\n    - Content.is_official = True\n    - Content.is_deleted = False\n    - ProFile.file_type = FileType.DOWNLOAD\n- 例外処理:\n    - 以下の場合NotFound\n        - session_idが存在しない\n        - セッション開催期間外の場合\n        - 対象セッションに登録されていない問題\n        - content_idが存在しない\n        - content_idの問題が削除済み\n    - 以下の場合QuestionAnswerNotStarted\n        - ProResultにデータが存在しない\n- 補足:\n    - 取得内容はチャレンジのPRO問題と同様\n    - レスポンススキーマはquestion_proの問題詳細と同じものを使用",
        "operationId": "getProSessionQuestion",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "コンテンツID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProQuestionDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "問題解答開始していない: QUESTION_ANSWER_NOT_STARTED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "QUESTION_ANSWER_NOT_STARTED": {
                    "value": {
                      "errorCode": "QUESTION_ANSWER_NOT_STARTED",
                      "message": "問題解答開始していないため実行できません",
                      "detail": "question answer not started"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions-pro/{session_id}/contents/{content_id}/submission-histories": {
      "get": {
        "tags": [
          "general/sessions-pro"
        ],
        "summary": "一般ユーザーPROセッション問題提出履歴一覧取得",
        "description": "一般ユーザーPROセッション問題提出履歴一覧取得\n- 必要権限: [GENERAL_USER]\n- 並び順: created_atの降順\n- 処理内容:\n    - ProSubmissionResultから対象セッションにおける対象ユーザーの提出履歴を取得\n        - judge_status == ProJudgeStatus.PASSED以外の場合result=\"Failed\"\n        - judge_status == ProJudgeStatus.SAMPLE_CASE_ERRORの場合error_type=\"Sample Error\"\n        - judge_status == ProJudgeStatus.TEST_CASE_ERROR or ProJudgeStatus.SERVER_ERRORの場合error_type=\"Error\"\n        - error_messageが空文字だった場合None\n    - 取得した提出履歴の最高成績をProQuestionSubmitHistoryOut.best_resultに設定\n        - ProSubmissionResult.is_valid = Trueのデータ\n        - ProReviewを参照してランク分けが設定されている場合ランクを求める\n        - ランクがついた場合総評をProReviewより取得\n- 取得条件:\n    - Session.is_deleted = False\n    - セッションが開催期間中\n    - セッションに登録されている問題\n    - セッション参加ユーザーである\n    - ProSubmissionResult.judge_status != ProJudgeStatus.WAITING_FOR_JUDGING\n    - Content.content_type = ContentType.PRO\n    - Content.is_official = True\n    - Content.is_deleted = False\n- 例外処理:\n    - 以下の場合NotFound\n        - session_idが存在しない\n        - セッション開催期間外の場合\n        - 対象セッションに登録されていない問題\n        - content_idが存在しない\n        - content_idの問題が削除済み\n        - submission_result_idが存在しない\n- 補足:\n    - 取得するデータが同じなためスキーマはquestions_proと同じものを使用",
        "operationId": "getProSessionQuestionSubmissionHistoryList",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "コンテンツID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProQuestionSubmitHistoryListOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions-pro/{session_id}/contents/{content_id}/submission-results/{submission_result_id}": {
      "get": {
        "tags": [
          "general/sessions-pro"
        ],
        "summary": "一般ユーザーPROセッション問題提出結果取得",
        "description": "一般ユーザーPROセッション問題提出結果取得\n- 必要権限: [GENERAL_USER]\n- 処理内容:\n    - ProSubmissionResultテーブルから結果を取得\n    - ProSubmissionResult.judge_status != ProJudgeStatus.WAITING_FOR_JUDGINGの場合\n        - is_done = True\n- 取得条件:\n    - Session.is_deleted = False\n    - セッションが開催期間中\n    - セッションに登録されている問題\n    - セッション参加ユーザーである\n    - ProSubmissionResult.judge_status != ProJudgeStatus.WAITING_FOR_JUDGING\n    - Content.content_type = ContentType.PRO\n    - Content.is_official = True\n    - Content.is_deleted = False\n- 例外処理:\n    - 以下の場合NotFound\n        - session_idが存在しない\n        - セッション開催期間外の場合\n        - 対象セッションに登録されていない問題\n        - content_idが存在しない\n        - content_idの問題が削除済み\n        - submission_result_idが存在しない\n- 補足:\n    - ポーリング回数に制限を設けるかは一般側の実装に合わせる\n    - ポーリング回数に制限が設けられた場合は、最後のポーリングの場合の処理は一般側と同様の処理にする",
        "operationId": "getProQuestionSubmissionResult",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "コンテンツID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "path"
          },
          {
            "description": "PRO提出結果ID",
            "required": true,
            "schema": {
              "title": "Submission Result Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "PRO提出結果ID"
            },
            "name": "submission_result_id",
            "in": "path"
          },
          {
            "description": "最後のポーリングかどうか",
            "required": false,
            "schema": {
              "title": "Is Last Query",
              "type": "boolean",
              "description": "最後のポーリングかどうか",
              "default": false
            },
            "name": "is_last_query",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProQuestionSubmissionResultOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions-pro/{session_id}/contents/{content_id}/submission-results/{submission_result_id}/extra-info": {
      "patch": {
        "tags": [
          "general/sessions-pro"
        ],
        "summary": "一般ユーザーPROセッション問題提出補足情報(コメント)更新",
        "description": "一般ユーザーPROセッション問題提出補足情報(コメント)更新\n- 必要権限: [GENERAL_USER]\n- 処理内容: ProSubmissionResult.extra_infoを更新\n- 取得条件:\n    - Session.is_deleted = False\n    - セッションが開催期間中\n    - セッションに登録されている問題\n    - セッション参加ユーザーである\n    - ProSubmissionResult.judge_status != ProJudgeStatus.WAITING_FOR_JUDGING\n    - Content.content_type = ContentType.PRO\n    - Content.is_official = True\n    - Content.is_deleted = False\n- 例外処理:\n    - 以下の場合NotFound\n        - session_idが存在しない\n        - セッション開催期間外の場合\n        - 対象セッションに登録されていない問題\n        - content_idが存在しない\n        - content_idの問題が削除済み\n        - submission_result_idが存在しない\n- 補足:\n    - レスポンススキーマはquestions_proの一般ユーザーPRO問題提出補足情報(コメント)更新と同じものを使用",
        "operationId": "updateProSessionQuestionExtraInfo",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "コンテンツID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "path"
          },
          {
            "description": "PRO問題提出結果ID",
            "required": true,
            "schema": {
              "title": "Submission Result Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "PRO問題提出結果ID"
            },
            "name": "submission_result_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProQuestionExtraInfoIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProQuestionExtraInfoOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions-pro/{session_id}/scoring/pro/{content_id}": {
      "patch": {
        "tags": [
          "general/sessions-pro"
        ],
        "summary": "セッションPRO問題採点実行(設計未完了)",
        "description": "セッションPRO問題を採点実行する\n- 必要権限：[PRO_SESSION_VIEW]\n- 実行処理:\n    - ScoringProIn(入力)で下記を取得\n      - run_file_name(実行するpythonファイル名)\n    - ProQuestion(PRO問題)モデルから下記データを取得\n      - evaluation(評価方法)\n      - evaluation_function(評価関数)\n      - evaluation_value(評価に使用する値)\n      - submit_type(採点方法)\n      - pass_line()合格ライン(0.1~100.0)\n    - 下記を共通部品などで取得\n      - user_upload_gcs_file_path(ユーザーが提出したZipファイルのURL)\n      - testcase_gcs_file_path(テストケース(Zipファイル)のURL)\n      - submission_csv_gcs_file_path(答えを書き込むCSVファイルのURL)\n      - answer_csv_gcs_file_path(解答CSVファイルのURL)\n      - judge_type(送信側識別用文字列)\n      - judge_code(送信側識別用数値)\n      - result_send_url(送信側がジャッジ結果を受け取るURL)\n    - 取得したデータを用いて採点を行う\n    - 例外処理\n    - 採点結果(ScoringProOut)を返却",
        "operationId": "scoringPro",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "問題ID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "問題ID"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScoringProIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringProOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "問題解答開始していない: QUESTION_ANSWER_NOT_STARTED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "QUESTION_ANSWER_NOT_STARTED": {
                    "value": {
                      "errorCode": "QUESTION_ANSWER_NOT_STARTED",
                      "message": "問題解答開始していないため実行できません",
                      "detail": "question answer not started"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/corporate_profile/{organization_id}": {
      "get": {
        "tags": [
          "general/corporate_profile"
        ],
        "summary": "一般ユーザー側企業情報取得",
        "description": "一般ユーザー側企業情報取得\n- 必要権限: [GENERAL_USER]\n- 処理内容\n    - Companyテーブルからデータを取得\n- 例外処理\n    - 該当しないorganization_id or 削除済み企業の場合NotFound\n- 対象テーブル\n    - Company\n    - Organization\n    - CompanyOffice\n-  抽出条件\n    - Organization\n        - OrganizationType: COMPANY\n        - is_deleted: False",
        "operationId": "getGeneralCorporateProfile",
        "parameters": [
          {
            "description": "組織ID",
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "組織ID"
            },
            "name": "organization_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CorporateProfileDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/corporate_profile/{organization_id}/company_members": {
      "get": {
        "tags": [
          "general/corporate_profile"
        ],
        "summary": "先輩社員情報を一覧取得(一般ユーザー側)",
        "description": "先輩社員情報を一覧取得(一般ユーザー側)\n- 必要権限: [GENERAL_USER]\n- 並び順: ID昇順\n- 処理内容\n    - CompanyMemberテーブルから該当社員のデータを取得\n- 例外処理\n    - 該当しないorganization_id or 削除済み企業の場合NotFound\n- 対象テーブル\n    - Organization\n    - Company\n    - CompanyMember\n- 抽出条件\n    - Organization.organization_type: COMPANY\n    - Organization.is_deleted: False",
        "operationId": "getGeneralCompanyMemberList",
        "parameters": [
          {
            "description": "組織ID",
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "組織ID"
            },
            "name": "organization_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get General Company Member List General Corporate Profile  Organization Id  Company Members Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyMemberListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/users/career": {
      "get": {
        "tags": [
          "general/users"
        ],
        "summary": "一般ユーザーキャリア情報取得",
        "description": "一般ユーザーキャリア情報取得\nログインユーザーに紐づくキャリア情報を更新する\n- 必要権限：[GENERAL_USER]",
        "operationId": "getUserCareer",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCareerOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "general/users"
        ],
        "summary": "一般ユーザーキャリア情報更新",
        "description": "一般ユーザーキャリア情報更新\nログインユーザーに紐づくキャリア情報を更新する\n- 必要権限：[GENERAL_USER]\n- 職歴情報は最大３つまで登録可能\n- 学歴の入力詳細\n    - 手動入力の場合：~master_id=Null, ~name=入力名\n    - 学校系マスタから入力の場合：~master_id=入力値、~name=Null",
        "operationId": "updateUserCareer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCareerIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCareerOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/users/me/deletion": {
      "post": {
        "tags": [
          "general/users"
        ],
        "summary": "一般ユーザー退会",
        "description": "一般ユーザーのアカウントを削除\n- 必要権限：[GENERAL_USER]\n- 処理内容：\n    - QuitReasonにデータを作成\n        - QuitReason.user_id = user.id\n        - QuitReason.quit_reason_type = quit_reason_type\n        - QuitReason.quit_reason = quit_reason\n    - userのis_deletedをtrueに更新\n- 存在しないquit_reason_typeを指定したらParameterError",
        "operationId": "deleteUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteUserIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "パラメータが不正: PARAMETER_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PARAMETER_ERROR": {
                    "value": {
                      "errorCode": "PARAMETER_ERROR",
                      "message": "指定されたパラメータは不正です",
                      "detail": "Parameter error"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/users/new": {
      "post": {
        "tags": [
          "general/users"
        ],
        "summary": "新規ユーザー情報登録",
        "description": "一般ユーザーのアカウント情報を新規登録\nサインアップ後の一般ユーザー情報を登録する\n- 必要権限：[GENERAL_USER]\n- 登録内容詳細：\n    - GeneralUser.is_entered_required_items=Trueで登録\n- 存在しないoccupation_id/prefecture_id指定時にDataDoesNotExist\n- 3つ以上のPG言語が入力された場合 ParameterError\n- 学歴の入力詳細\n    - 手動入力の場合：~master_id=Null, ~name=入力名\n    - 学校系マスタから入力の場合：~master_id=入力値、~name=Null",
        "operationId": "createNewAccountInfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAccountInfoIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewAccountInfoOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST<br>パラメータが不正: PARAMETER_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  },
                  "PARAMETER_ERROR": {
                    "value": {
                      "errorCode": "PARAMETER_ERROR",
                      "message": "指定されたパラメータは不正です",
                      "detail": "Parameter error"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/users/profile": {
      "get": {
        "tags": [
          "general/users"
        ],
        "summary": "プロフィール情報取得",
        "description": "一般ユーザープロフィール情報取得\nログインユーザーに紐づくプロフィール情報を取得する\n- 必要権限：[GENERAL_USER]\n- 出力項目詳細\n    - job_hunting_type == JOB_HUNTINGの場合job_hunting_status出力\n    - job_hunting_type == JOB_CHANGEの場合job_changing_status出力",
        "operationId": "getUserProfile",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "general/users"
        ],
        "summary": "プロフィール情報更新",
        "description": "一般ユーザープロフィール情報を更新する\nログインユーザーに紐づくプロフィール情報を更新する\n- 必要権限：[GENERAL_USER]",
        "operationId": "updateUserProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/users/scout": {
      "put": {
        "tags": [
          "general/users"
        ],
        "summary": "人材紹介スカウトを承諾する",
        "operationId": "approveScoutInvitation",
        "parameters": [
          {
            "description": "エージェント組織ID",
            "required": true,
            "schema": {
              "title": "Organization Id",
              "type": "integer",
              "description": "エージェント組織ID"
            },
            "name": "organization_id",
            "in": "query"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/users/scout-acceptance": {
      "patch": {
        "tags": [
          "general/users"
        ],
        "summary": "ユーザプロフィールのスカウト受信設定を更新する",
        "description": "リクエストを送ってきたユーザのプロフィールのスカウト受信設定を更新する\"",
        "operationId": "updateScoutAcceptance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScoutAcceptanceIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/users/signup": {
      "post": {
        "tags": [
          "general/users"
        ],
        "summary": "一般ユーザー本登録",
        "description": "一般ユーザー本登録\n- トークンからユーザーを取得\n    - ユーザーが取得できない、本登録日時が入っていない場合はInvalidCredentialsエラー\n- 使用したトークンを削除\n- ユーザーの本登録日時を現在日時に設定\n- ユーザーのis_deletedをFalseに変更\n- ユーザーのアクセストークンを発行",
        "operationId": "signup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "401": {
            "description": "アクセストークンが不正、または有効期限切れ: INVALID_CREDENTIALS",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "INVALID_CREDENTIALS": {
                    "value": {
                      "errorCode": "INVALID_CREDENTIALS",
                      "message": "認証情報が無効です",
                      "detail": "invalid credentials"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/general/users/signup/temporary": {
      "post": {
        "tags": [
          "general/users"
        ],
        "summary": "一般ユーザー仮登録",
        "description": "一般ユーザー仮登録\n- 同じusernameを持つ本登録ユーザーが存在した場合ALREADY_EXISTS_USERNAME\n- 同じemailを持つ本登録ユーザーが存在した場合ALREADY_EXISTS_EMAIL\n- 同じusernameまたはemailを持つ仮登録ユーザーは削除\n- リクエスト内容でユーザーを作成\n    - 仮登録の状態ではis_deleted=Trueとする\n- 仮登録ユーザーに対して`利用規約`,`プライバシーポリシー`,`新規登録時の注意事項`の規約登録\n- 本登録用のトークンを発行\n- 仮登録メールをユーザーに送信",
        "operationId": "signupTemporary",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupTemporaryIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "同じユーザー名またはメールアドレスがすでに登録済み: ALREADY_EXISTS_USERNAME_OR_EMAIL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "ALREADY_EXISTS_USERNAME_OR_EMAIL": {
                    "value": {
                      "errorCode": "ALREADY_EXISTS_USERNAME_OR_EMAIL",
                      "message": "同じユーザー名またはメールアドレスがすでに登録済みです",
                      "detail": [
                        "username",
                        "email"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/general/users/skill-information": {
      "get": {
        "tags": [
          "general/users"
        ],
        "summary": "一般ユーザースキル情報取得",
        "description": "一般ユーザースキル情報取得\nログインユーザーに紐づくスキル情報を更新する\n- 必要権限：[GENERAL_USER]\n- 得意PG言語、得意フレームワークは各３つまで登録可能",
        "operationId": "getUserSkillInformation",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSkillInfoOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "general/users"
        ],
        "summary": "一般ユーザースキル情報更新",
        "description": "一般ユーザースキル情報更新\nログインユーザーに紐づくスキル情報を更新する\n- 必要権限：[GENERAL_USER]\n- 得意PG言語、得意フレームワークは各３つまで登録可能",
        "operationId": "updateUserSkillInformation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSkillInfoIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSkillInfoOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "パラメータが不正: PARAMETER_ERROR<br>存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PARAMETER_ERROR": {
                    "value": {
                      "errorCode": "PARAMETER_ERROR",
                      "message": "指定されたパラメータは不正です",
                      "detail": "Parameter error"
                    }
                  },
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/users/terms-of-use-consent-info": {
      "get": {
        "tags": [
          "general/users"
        ],
        "summary": "最新の利用規約に同意しているか確認する",
        "description": "最新の利用規約（求人利用規約・個人情報利用規約）に同意しているか確認する\n- 必要権限: [GENERAL_USER] [SKILL_CHECK_USER]\n- レスポンス詳細\n    - is_agreed_latest_terms(最新バージョンの規約に同意しているか)\n    - is_agreed_past_terms(過去バージョンも含むいずれかの規約に同意していたか)",
        "operationId": "getLatestAgreedTermsInfo",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Latest Agreed Terms Info General Users Terms Of Use Consent Info Get",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/advertisements/banners": {
      "get": {
        "tags": [
          "general/advertisements"
        ],
        "summary": "広告ランダム取得",
        "description": "広告ランダム取得\n- 必要権限: [Pm.GENERAL_USER]\n- 実行条件:\n  - is_published = True(公開中)\n  - is_deleted = False(削除されていない)\n  - 取得する広告画像がnullでない\n  - start <= now <= end\n  - nowが未指定の場合は、nowにAPI呼び出し時の現在時刻を設定\n  - size(広告サイズ)で指定されたサイズの画像を取得\n    - Advertisementモデルのimage_336_280かimage_120_600かimage_600_120かimage_1250_170を\n    - RandomAdvertisementDetailOutのimageに設定し返却\n  - limitで取得する上限を指定\n- 並び順: ランダム\n- API補足情報\n  - 広告表示時: 当API\n  - 広告クリック時: 表示する広告のURL取得とクリックを計測するAPI",
        "operationId": "getRandomAdvertisements",
        "parameters": [
          {
            "description": "現在時刻",
            "required": false,
            "schema": {
              "title": "Now",
              "type": "string",
              "description": "現在時刻",
              "format": "date-time"
            },
            "name": "now",
            "in": "query"
          },
          {
            "description": "広告取得制限",
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 5.0,
              "minimum": 0.0,
              "type": "integer",
              "description": "広告取得制限",
              "default": 5
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "広告サイズ",
            "required": false,
            "schema": {
              "title": "Size",
              "type": "string",
              "description": "広告サイズ"
            },
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Random Advertisements General Advertisements Banners Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RandomAdvertisementDetailOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/advertisements/banners/{advertisement_id}": {
      "get": {
        "tags": [
          "general/advertisements"
        ],
        "summary": "広告クリック計測&URL返却",
        "description": "広告クリック計測&URL返却\n- 必要権限: [Pm.GENERAL_USER]\n- 概要:\n  - 広告クリック時に呼ばれるAPI\n  - クリック履歴テーブルにレコードを作成\n  - クリックしたURLを取得し、返却\n- 実行処理:\n  - AdvertisementViewedHistory(広告閲覧履歴)にレコード追加\n    - advertisement_id=advertisement_id\n    - user_id=user.id\n  - Advertisementからデータ抽出\n    - id=advertisement_id\n    - is_published=True\n    - is_deleted=False\n  - 取得できなかった場合404 NOT_FOUND\n  - Advertisement.urlを返却",
        "operationId": "getRandomAdvertisementsUrl",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Advertisement Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "advertisement_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RandomAdvertisementUrlDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/jobs": {
      "get": {
        "tags": [
          "general/jobs"
        ],
        "summary": "一般求人一覧取得",
        "description": "_summary_\n\nReturns:\n    JobsListOut: _description_",
        "operationId": "generalGetJobsList",
        "parameters": [
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/app__routers__general__jobs__get_jobs_list__Ordering"
                }
              ],
              "default": "id_desc"
            },
            "name": "order_by",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 50
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Employmentstatus",
              "type": "string"
            },
            "name": "employmentStatus",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Pglang",
              "type": "string"
            },
            "name": "pgLang",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Framework",
              "type": "string"
            },
            "name": "framework",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Occupation",
              "type": "string"
            },
            "name": "occupation",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Feature",
              "type": "string"
            },
            "name": "feature",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Companyname",
              "type": "string"
            },
            "name": "companyName",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Isfavorite",
              "type": "boolean"
            },
            "name": "isFavorite",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Isscoutreceive",
              "type": "boolean"
            },
            "name": "isScoutReceive",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Graduationyear",
              "type": "integer"
            },
            "name": "graduationYear",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobsListOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/jobs/banner": {
      "get": {
        "tags": [
          "general/jobs"
        ],
        "summary": "一般求人 - ピックアップ求人(バナー求人)一覧取得(未実装)",
        "description": "一般求人 - ピックアップ求人(バナー求人)一覧取得\n- 必要権限: [Pm.GENERAL_USER]\n- 仕様\n    - 公開済み求人をランダムで9件取得する\n        - 並び順含めリクエスト毎に毎回ランダム取得\n        - 9個に満たない場合は全求人を取得する(並び順はランダム)",
        "operationId": "getBannerJobList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Banner Job List General Jobs Banner Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BannerJobListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/jobs/{job_id}": {
      "get": {
        "tags": [
          "general/jobs"
        ],
        "summary": "一般求人詳細取得",
        "description": "_summary_\n\nReturns:\n    JobDetailOut: _description_",
        "operationId": "generalGetJob",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Job Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "job_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobDetailDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/jobs/{job_id}/applications": {
      "put": {
        "tags": [
          "general/jobs"
        ],
        "summary": "一般求人応募",
        "description": "_summary_\nReturns:\n    None: _description_",
        "operationId": "generalPutJobApplication",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Job Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "job_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "データが重複している: DUPLICATE_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DUPLICATE_ERROR": {
                    "value": {
                      "errorCode": "DUPLICATE_ERROR",
                      "message": "データが重複しています",
                      "detail": "duplicate key value violates unique constraintr"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/jobs/{job_id}/favorites": {
      "put": {
        "tags": [
          "general/jobs"
        ],
        "summary": "一般求人気になる変更",
        "description": "_summary_\n\nReturns:\n    None: _description_",
        "operationId": "generalPutJobFavorite",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Job Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "job_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/jobs/{job_id}/related-jobs": {
      "get": {
        "tags": [
          "general/jobs"
        ],
        "summary": "関連求人を取得する",
        "operationId": "generalGetRelatedJobs",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Job Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "job_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response General Get Related Jobs General Jobs  Job Id  Related Jobs Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RelatedJobList"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/events": {
      "get": {
        "tags": [
          "general/events"
        ],
        "summary": "イベント一覧を取得",
        "description": "イベント一覧を取得\n- 必要権限: [GENERAL_USER]\n- 並び順:ID降順\n- 取得条件:\n    - is_deleted = False\n    - is_public = True\n- クエリパラメータ補足情報\n    - is_participating = True : ユーザーが参加中のイベント一覧取得\n    - is_participating = False : 公開イベント一覧\n    - is_in_progress = True : イベントに紐づくセッションが開催中のみ\n    - is_picked_up = True: TODO イベントがピックアップ中のみ、現状未実装（特に検索条件なし）\n- レスポンスデータ補足情報\n    - is_finished: 「セッションが1つ以上」AND「現在時刻が全セッションの開催終了日の後」\n    - host_name: 企業名 または 学校名 + 学部名\n    - sessions\n        - user_count: セッション参加ユーザーの合計\n        - session_status\n        　- 開催予定: セッション開始日時 > 現在日時\n        　- 開催中: セッション開始日時 <= 現在日時 <= セッション終了日時\n        　- 終了: 現在日時 > セッション終了日時",
        "operationId": "getGeneralEventList",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 50
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "description": "イベント名(部分一致)/セッションコード(完全一致、優先)",
            "required": false,
            "schema": {
              "title": "Search",
              "type": "string",
              "description": "イベント名(部分一致)/セッションコード(完全一致、優先)"
            },
            "name": "search",
            "in": "query"
          },
          {
            "description": "参加中のイベントを表示",
            "required": false,
            "schema": {
              "title": "Is Participating",
              "type": "boolean",
              "description": "参加中のイベントを表示"
            },
            "name": "is_participating",
            "in": "query"
          },
          {
            "description": "開催中のイベントのみ表示",
            "required": false,
            "schema": {
              "title": "Is In Progress",
              "type": "boolean",
              "description": "開催中のイベントのみ表示",
              "default": false
            },
            "name": "is_in_progress",
            "in": "query"
          },
          {
            "description": "ピックアップ中のイベント",
            "required": false,
            "schema": {
              "title": "Is Picked Up",
              "type": "boolean",
              "description": "ピックアップ中のイベント",
              "default": false
            },
            "name": "is_picked_up",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralEventListOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/events/{event_id}": {
      "get": {
        "tags": [
          "general/events"
        ],
        "summary": "イベント詳細取得",
        "description": "イベント詳細を取得\n- 必要権限: [GENERAL_USER][SKILL_CHECK_USER]\n- 取得条件:\n    - is_deleted = False\n- レスポンスデータ補足情報\n    - host_name: 企業名 または 学校名 + 学部名",
        "operationId": "getGeneralEvent",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Event Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "event_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralEventDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/events/{event_id}/results": {
      "get": {
        "tags": [
          "general/events"
        ],
        "summary": "イベント成績取得",
        "description": "イベント成績を取得\n- 必要権限: [GENERAL_USER]\n- 例外処理\n    - eventが見つからない場合はNotFound\n- 処理手順\n    - event_idからeventを取得、session_id(複数可能)を取得\n    - session_idとuser_idでSessionUserを取得できるかどうか確認\n    -　SessionContentで紐づくContentを取得、question_idを取得\n    - 練習セッションではないsession_id、user_id、question_idでSessionResultを取得、user_idでグループし、scoreと順位を集計\n- 備考\n    - 練習セッションの問題はは集計対象外なので、該当fieldはNoneのまま返す",
        "operationId": "getEventScoreStats",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Event Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "event_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventScoreStatsOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/events/{event_id}/threads": {
      "get": {
        "tags": [
          "general/events"
        ],
        "summary": "イベントスレッド一覧を取得",
        "description": "イベントスレッド一覧を取得\n- 必要権限: [GENERAL_USER]\n- 並び順:ID降順\n- 取得条件:\n    - 学校主催イベント\n    - Event.is_deleted = False\n    - EventThread.is_deleted = False",
        "operationId": "getGeneralEventThreadList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Event Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "event_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get General Event Thread List General Events  Event Id  Threads Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneralEventThreadListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/chat-rooms": {
      "get": {
        "tags": [
          "general/chat-rooms"
        ],
        "summary": "一般チャットルーム一覧取得",
        "description": "一般チャットルーム一覧取得\n- 並び順: 最終送信日時の降順\n- 自身の参加しているチャットルームのみ取得\n- レスポンス補足情報\n    - icon: chat_room_typeで分岐\n        - エージェントの場合: TechFULロゴ画像\n        - 学校の場合: 学校ユーザーアイコン画像\n        - 企業の場合: 企業ロゴ画像\n    - room_name: chat_room_typeで分岐\n        - エージェントの場合: `TechFULキャリアアドバイザー`\n        - 学校の場合: 学校ユーザーアカウント名\n        - 企業の場合: 企業名\n    - sub_room_name: chat_room_typeが学校の場合は学校名、それ以外は空文字\n    - chat_partner_type: chat_room_typeで分岐\n        - エージェントの場合: `エージェント`\n        - 学校の場合: `学校`\n        - 企業の場合: `企業`\n    - unread_count: チャットの未読数",
        "operationId": "getGeneralChatRoomList",
        "parameters": [
          {
            "description": "チャットルームタイプ(企業:1、学校:2、エージェント:3)",
            "required": false,
            "schema": {
              "title": "Chat Room Type",
              "type": "integer",
              "description": "チャットルームタイプ(企業:1、学校:2、エージェント:3)"
            },
            "name": "chat_room_type",
            "in": "query"
          },
          {
            "description": "ルーム名検索(部分一致)",
            "required": false,
            "schema": {
              "title": "Room Name",
              "type": "string",
              "description": "ルーム名検索(部分一致)"
            },
            "name": "room_name",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralChatRoomListOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "general/chat-rooms"
        ],
        "summary": "一般チャットルーム作成",
        "description": "一般チャットルーム作成\n- 企業, 444相手のみ作成可能\n- 登録時データ補足情報\n    - organization_id: リクエストのorganization_idに設定する\n    - general_user_id: ログインユーザーのIDを設定する\n    - last_send_time: 現在時刻を設定する\n    - chat_room_type: 企業: `COMPANY`, エージェント(444): `AGENT` に設定する\n- 同じホストとユーザーのチャットルームが存在する場合は登録処理は行わず、レスポンスのみ行う",
        "operationId": "createGeneralChatRoom",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GeneralChatRoomCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralChatRoomCreateOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/chat-rooms/{chat_room_id}/chats": {
      "get": {
        "tags": [
          "general/chat-rooms"
        ],
        "summary": "一般チャット一覧取得",
        "description": "一般チャット一覧取得\n- 並び順: id昇順\n- 自身の参加しているチャットルームのみ取得可能\n- レスポンス項目\n    - icon: chat_room_typeで分岐\n        - エージェントの場合: TechFULロゴ画像\n        - 学校の場合: 学校ユーザーアイコン画像\n        - 企業の場合: 企業ロゴ画像\n    - room_name: chat_room_typeで分岐\n        - エージェントの場合: `TechFULキャリアアドバイザー`\n        - 学校の場合: 学校ユーザーアカウント名\n        - 企業の場合: 企業名\n    - sub_room_name: 学校の場合は学校名、それ以外は空文字\n    - chats\n        - file.is_expired: 有効期限切れ、もしくはis_deletedがTrueの場合True、それ以外はFalse\n        - is_own:  自身のチャットの場合True\n        - sender: room_nameと同じ\n        - icon: 上記iconと同じ",
        "operationId": "getGeneralChatList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Chat Room Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "chat_room_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralChatListOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "general/chat-rooms"
        ],
        "summary": "一般チャット送信",
        "description": "一般チャット送信\n- 自身の参加しているチャットルームのみ\n- チャット送信後に送信先学校ユーザー、企業に対して通知メールを送信する\n- チャットファイルの場合は有効期限を7日間に設定する\n- レスポンス項目\n    - icon: chat_room_typeで分岐\n        - エージェントの場合: TechFULロゴ画像\n        - 学校の場合: 学校ユーザーアイコン画像\n        - 企業の場合: 企業ロゴ画像\n    - room_name: chat_room_typeで分岐\n        - エージェントの場合: `TechFULキャリアアドバイザー`\n        - 学校の場合: 学校ユーザーアカウント名\n        - 企業の場合: 企業名\n    - sub_room_name: 学校の場合は学校名、それ以外は空文字\n    - chats\n        - file.is_expired: 有効期限切れ、もしくはis_deletedがTrueの場合True、それ以外はFalse\n        - is_own: 自身のチャットの場合True\n        - sender: room_nameと同じ\n        - icon: 上記iconと同じ\n- 登録時データ補足情報\n    - ChatRoom.last_send_time: 現在時刻で更新",
        "operationId": "sendGeneralChat",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Chat Room Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "chat_room_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GeneralChatSendIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralChatListDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/chat-rooms/{chat_room_id}/files": {
      "get": {
        "tags": [
          "general/chat-rooms"
        ],
        "summary": "一般チャットファイル一覧取得",
        "description": "一般チャットファイル一覧取得\n- 並び順: id昇順\n- 取得条件\n    - 自身の参加しているチャットルームのみ取得可能\n    - is_deleted: False\n    - expires_at: 現在日時以上\n- レスポンス補足情報\n    - sender:\n        - 送信者がホスト側でない(一般ユーザー): ユーザー名\n        - 送信者がホスト側で`chat_room_type`が`エージェント`: `TechFULキャリアアドバイザー`\n        - 送信者がホスト側で`chat_room_type`が`企業`: 企業名\n        - 送信者がホスト側で`chat_room_type`が`学校`: ユーザー名\n    - icon: 送信者のアイコン\n        - 送信者がホスト側でない(一般ユーザー): ユーザーアイコンURL\n        - 送信者がホスト側で`chat_room_type`が`エージェント`: TechFULロゴ画像URL\n        - 送信者がホスト側で`chat_room_type`が`企業`: 企業ロゴURL\n        - 送信者がホスト側で`chat_room_type`が`学校`: ユーザーアイコンURL",
        "operationId": "getGeneralChatFileList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Chat Room Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "chat_room_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get General Chat File List General Chat Rooms  Chat Room Id  Files Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneralChatFileListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/chat-rooms/{chat_room_id}/read-chats": {
      "post": {
        "tags": [
          "general/chat-rooms"
        ],
        "summary": "一般チャット既読",
        "description": "一般チャット既読\n- 既読可能条件\n    - 自身の参加しているチャットルームのみ\n- chat_roomが取得できない場合はNotFoundエラー\n- 指定されたチャットルームで、自身が未読のチャットを既読にする(ChatReadUserに登録する)",
        "operationId": "readGeneralChat",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Chat Room Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "chat_room_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions-techthon/{session_id}/contents": {
      "get": {
        "tags": [
          "general/sessions-techthon"
        ],
        "summary": "一般ユーザー用テックソンセッションコンテンツ一覧取得",
        "description": "一般ユーザー用テックションセッションコンテンツ一覧取得\n- 必要権限: [GENERAL_USER]\n- 並び順: order昇順\n- 処理内容:\n    - セッションに登録されている問題情報を取得\n- 例外処理:\n    -session_idのセッションが削除済み、存在しない場合、Techthonセッションでない場合NotFound\n- 対象テーブル\n    - TechthonSession\n    - SessionContent\n    - Content\n    - ContentTopic\n    - ContentCategory\n    - Techthon",
        "operationId": "getGeneralSessionsTechthonContentList",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get General Sessions Techthon Content List General Sessions Techthon  Session Id  Contents Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionsTechthonContentListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions-techthon/{session_id}/contents/content-id-list": {
      "get": {
        "tags": [
          "general/sessions-techthon"
        ],
        "summary": "一般ユーザーテックソンセッションに登録されているコンテンツIDリスト取得",
        "description": "一般ユーザーテックソンセッションに登録されているコンテンツIDリスト取得\n- 必要権限: [GENERAL_USER]\n- 処理内容:\n    - SessionContentから対象セッションに紐づくコンテンツIDを取得\n- 例外処理:\n    - 以下の場合NotFound:\n        - Techthonセッションではない(TechthonSessionに対象セッションIDが存在しない)\n        - セッション参加者ではない一般ユーザーがセッション問題を閲覧\n- 補足\n    - テックソンセッションにおける詳細画面でのミッションタブを表示するためにこちらを使用",
        "operationId": "getGeneralSessionsTechthonContentIdList",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechthonContentIdOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions-techthon/{session_id}/contents/{content_id}": {
      "get": {
        "tags": [
          "general/sessions-techthon"
        ],
        "summary": "一般ユーザーテックソン問題詳細取得",
        "description": "一般ユーザーテックソン問題詳細取得\n- 必要権限: [GENERAL_USER]\n- 処理内容:\n    - Techthonテーブルから問題概要とミッション番号を取得\n    - 対象問題に紐づくテストケースを全て取得\n    - TechthonTestCaseResultから結果を取得\n        - techthon_test_case_id\n        - response_code\n        - response_message\n        - score\n    - テストケースに紐づくヒントを取得\n        - 解放されているヒントのみ本文を返す\n- 実行条件:\n    - Content.content_type = ContentType.TECHTHON(テックソン)\n    - Content.is_official = True\n    - Content.is_published = True\n    - Content.is_deleted = False\n    - SessionUserであること\n    - Event.is_deleted = False\n    - Session.is_deleted = False\n    - テックソンセッションであること(TechthonSessionに該当レコードがあること)\n    - SessionContentに含まれているもの\n- 例外処理:\n    - 以下の場合NotFound:\n        - 削除済み問題\n        - 対象セッションの問題ではない\n        - 削除済みセッション\n        - Techthonセッションではない\n        - セッション参加者ではない一般ユーザーがセッション問題を閲覧\n- 補足\n    - スキーマのTechthonTestCaseOutにあるtypeはDBには存在しません\n    - typeには\"リクエスト\"という文字列を直接代入するなどの処理で対応してください\n    - 採点を一度も行なっていない場合TechthonTestCaseResultにはレコードはありません",
        "operationId": "getGeneralSessionsTechthonContent",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "コンテンツID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__general__sessions_techthon__general_sessions_techthon_content_out__TechthonContentDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions-techthon/{session_id}/contents/{content_id}/answer-start": {
      "post": {
        "tags": [
          "general/sessions-techthon"
        ],
        "summary": "一般ユーザーテックソン問題解答開始",
        "description": "一般ユーザーテックソン問題解答開始\n- 必要権限: [GENERAL_USER]\n- 処理内容:\n    - TechthonResultにデータを作成\n        - チームIDはuser_idから特定\n        - question_result_status = QuestionResultStatus.ANSWERING\n        - 対象のuser_idが存在する場合は作成しない\n- 実行条件:\n    - Content.content_type = ContentType.TECHTHON(テックソン)\n    - Content.is_official = True\n    - Content.is_published = True\n    - Content.is_deleted = False\n    - SessionUserであること\n    - Event.is_deleted = False\n    - Session.is_deleted = False\n    - テックソンセッションであること(TechthonSessionに該当レコードがあること)\n    - SessionContentに含まれているもの\n- 例外処理:\n    - 以下の場合NotFound:\n        - 削除済み問題\n        - 対象セッションの問題ではない\n        - 削除済みセッション\n        - Techthonセッションではない\n        - セッション参加者ではない一般ユーザーがセッション問題を閲覧\n- 補足\n    - 通常問題は詳細取得と解答開始のAPIをわけているのでテックソンも同様にしている",
        "operationId": "startGeneralSessionsTechthonContent",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "コンテンツID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions-techthon/{session_id}/contents/{content_id}/environments": {
      "get": {
        "tags": [
          "general/sessions-techthon"
        ],
        "summary": "一般ユーザー用テックソンセッション自動環境構築一覧取得",
        "description": "一般ユーザー用テックソンセッション自動環境構築一覧取得\n- 必要権限: [GENERAL_USER]\n- 並び順: idの昇順\n- 処理内容:\n    - 対象のテックソン問題のトピックに紐づく自動環境構築一覧を取得\n- 対象テーブル\n    - Session\n    - SessionContent\n    - TechthonSession\n    - Content\n    - ContentTopic\n    - TechthonEnvironment\n    - TechthonEnvironmentRelation\n- 抽出条件:\n    - Session.is_deleted = False\n    - Content.content_type = ContentType.TECHTHON\n    - Content.is_official = True\n    - Content.is_deleted = False\n    - TechthonEnvironment.is_deleted = False\n    - TechthonEnvironmentRelation.is_default = False\n- 例外処理:\n    - 以下の場合NotFound\n        - 対象セッションが削除済み、Techthonセッションでない\n        - 対象問題が削除済みの場合\n        - 対象問題がテックソン問題でない\n        - セッションID・コンテンツIDが存在しない場合",
        "operationId": "getGeneralSessionsTechthonEnvironmentList",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "コンテンツID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get General Sessions Techthon Environment List General Sessions Techthon  Session Id  Contents  Content Id  Environments Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionsTechthonEnvironmentListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions-techthon/{session_id}/contents/{content_id}/environments/{environment_id}": {
      "patch": {
        "tags": [
          "general/sessions-techthon"
        ],
        "summary": "一般ユーザーテックソン自動環境構築実行",
        "description": "一般ユーザーテックソン自動環境構築実行\n- 必要権限: [GENERAL_USER]\n- 処理内容:\n    - 環境IDとトピックIDからTechthonEnvironmentRelation.idを特定しTechthonTeamに書き込む\n    - 環境IDからテンプレート名を取得\n    - 自動環境構築を実行するGCPリソースにテンプレート名とともにリクエスト #TODO: リソース決定したら修正\n    - レスポンスとして返ってきたサーバー情報をもとにTechthonTeamを更新する\n- 実行条件:\n    - SessionUserであること\n    - Event.is_deleted = False\n    - Session.is_deleted = False\n    - テックソンセッションであること(TechthonSessionに該当レコードがあること)\n    - セッションが開催中であること\n    - TechthonTeam.techthon_environment_relation_id=NULLであること\n- 例外処理:\n    - 以下の場合NotFound:\n        - 対象セッションではない\n        - 削除済みセッション\n        - Techthonセッションではない\n        - セッションに登録されている問題ではない\n        - セッションID・コンテンツID・トピックID・環境IDが存在しない\n        - セッション参加者ではない一般ユーザーが実行\n    - 以下の場合CannotBeExecutedConditionsNotSatisfied:\n        - 開催期間内でない\n        - 既に自動環境構築を実行済み\n    - 以下の場合InternalServerError:\n        - 自動環境構築に失敗\n- 補足\n    - 自動環境構築を実行できるのは1チーム1回まで",
        "operationId": "executeGeneralSessionsTechthonEnvironment",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "コンテンツID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "path"
          },
          {
            "description": "環境ID",
            "required": true,
            "schema": {
              "title": "Environment Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "環境ID"
            },
            "name": "environment_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechthonServerInfoOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "条件を満たしていないため実行不可: CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED": {
                    "value": {
                      "errorCode": "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
                      "message": "条件を満たしていないため実行不可",
                      "detail": "Cannot be executed because the required conditions are not satisfied."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "サーバーエラーが発生: INTERNAL_SERVER_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "INTERNAL_SERVER_ERROR": {
                    "value": {
                      "errorCode": "INTERNAL_SERVER_ERROR",
                      "message": "エラーが発生しました",
                      "detail": "internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions-techthon/{session_id}/contents/{content_id}/execute": {
      "post": {
        "tags": [
          "general/sessions-techthon"
        ],
        "summary": "一般ユーザーテックソンセッション採点実行",
        "description": "一般ユーザーテックソンセッション採点実行\n- 必要権限: [GENERAL_USER]\n- 処理内容:\n    - TechthonResultを取得\n    - TechthonTestCaseテーブルとTechthonTestCaseRequestParamテーブルからテストケースを取得\n    - TechthonTestResultにデータを作成\n        - question_answer_result: QuestionAnswerResult.SCORING\n    - TechthonTestCaseResultにテストケース毎のデータを作成\n        - techthon_test_result_id: 上記で作成したTechthonTestResultのID\n        - techthon_test_case_id: 対応するテストケースのID\n        - techthon_test_case_judge_status: TechthonJudgeStatus.WAITING\n    - TechthonのジャッジシステムAPIのリクエストで送るパラメータを準備\n        - product_urlは以下のように作成\n            - http:// + 貸し出しサーバーのIPアドレス + TechthonTestCase.url_path\n    - TechthonのジャッジシステムAPIにリクエスト\n        - APIのエンドポイント:'https://techthon.techful-api.com/api/techthon/response_check'\n    - テストケースごとに減点率を考慮したスコアを算出\n        - message == \"Wrong Answer\"の場合、以下のスコアを1/4倍にする\n            - middleware os network security application\n        - 減点率は解放されたヒントの内、最大のものを使い各スコアを算出\n            - ex: userのmiddlwwareの得点 = middlwwareのスコア * 最大の減点率\n            - 各スコアは四捨五入でint型に\n        - 各スコアの合計を算出\n        - TechthonTestCaseResultにジャッジ結果を書き込む\n    - TechthonTestResultに合計スコアを書き込む\n    - 過去の結果と比較して今回が最高得点だった場合、TechthonResultを更新する\n    - 採点結果をフロントに返す\n- 例外処理:\n    - 以下の場合NotFound:\n        - content_idが存在しない・削除済み問題・非公開の問題・コンテンツ区分がテックソンでない\n        - 削除済みセッション・Techthonセッションではない\n        - セッション参加者ではない一般ユーザーがセッション問題を閲覧\n    - 以下の場合QuestionAnswerNotStarted\n        - TechthonResultにレコードが存在しない\n- 補足\n    - Wrong Answerの場合ジャッジ側で1/4倍するべきだが、total_sumしか1/4倍されていないため各スコアの1/4倍処理を加えている\n    - body_paramに追加するvalueに\"True\" or \"False\"という文字列があった場合、それはbool型に変換する\n    - body_paramに追加する値には以下のようにvalueがさらにdictになっている場合がある\n        - {\n            items: [\n                {\n                    \"id\": 4001,\n                    \"name\": \"item1\",\n                    \"price\": 80,\n                    \"on_sale\": True,\n                    \"count\": 1000\n                },\n                {\n                    \"id\": 4002,\n                    \"name\": \"item2\",\n                    \"price\": 100,\n                    \"on_sale\": True,\n                    \"count\": 1500\n                }\n            ]\n        }",
        "operationId": "executeGeneralSessionsTechthonContent",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "コンテンツID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecuteTechthonContentOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "問題解答開始していない: QUESTION_ANSWER_NOT_STARTED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "QUESTION_ANSWER_NOT_STARTED": {
                    "value": {
                      "errorCode": "QUESTION_ANSWER_NOT_STARTED",
                      "message": "問題解答開始していないため実行できません",
                      "detail": "question answer not started"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions-techthon/{session_id}/contents/{content_id}/hint-status/{test_case_id}": {
      "get": {
        "tags": [
          "general/sessions-techthon"
        ],
        "summary": "一般ユーザーテックソンヒント解放状況取得",
        "description": "一般ユーザーテックソンテストケースに紐づくヒントの解放状況取得\n- 必要権限: [GENERAL_USER]\n- 処理内容:\n    - チームIDとテストケースIDからテストケースに紐づく各ヒントの解放状況を取得\n        - チームIDはuser_idから特定\n- レスポンス\n    - 解放しているヒントはTrue・解放していないヒントはFalseで返す\n- 実行条件:\n    - Content.content_type = ContentType.TECHTHON(テックソン)\n    - Content.is_official = True\n    - Content.is_published = True\n    - Content.is_deleted = False\n    - SessionUserであること\n    - Event.is_deleted = False\n    - Session.is_deleted = False\n    - テックソンセッションであること(TechthonSessionに該当レコードがあること)\n    - SessionContentに含まれているもの\n    - TechthonTestCaseHint.is_deleted = False\n- 例外処理:\n    - 以下の場合NotFound:\n        - セッションID・コンテンツID・テストケースIDが存在しない\n        - 削除済み問題・非公開の問題・テックソン問題でない\n        - 対象セッションの問題ではない\n        - 削除済みセッション\n        - Techthonセッションではない\n        - セッション参加者ではない一般ユーザーがセッション問題を閲覧",
        "operationId": "getGeneralSessionsTechthonHintStatus",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "コンテンツID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "path"
          },
          {
            "description": "テストケースID",
            "required": true,
            "schema": {
              "title": "Test Case Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "テストケースID"
            },
            "name": "test_case_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechthonTestCaseHintStatusOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions-techthon/{session_id}/contents/{content_id}/test-cases/{test_case_id}/hints/{hint_id}": {
      "get": {
        "tags": [
          "general/sessions-techthon"
        ],
        "summary": "一般ユーザーテックソンヒント詳細取得",
        "description": "一般ユーザーテックソンヒント詳細取得\n- 必要権限: [GENERAL_USER]\n- 処理内容:\n    - hint_idからヒント内容を取得\n- 実行条件:\n    - Content.content_type = ContentType.TECHTHON(テックソン)\n    - Content.is_official = True\n    - Content.is_published = True\n    - Content.is_deleted = False\n    - SessionUserであること\n    - Event.is_deleted = False\n    - Session.is_deleted = False\n    - テックソンセッションであること(TechthonSessionに該当レコードがあること)\n    - SessionContentに含まれているもの\n    - TechthonTestCaseHint.is_deleted = False\n- 例外処理:\n    - 以下の場合NotFound:\n        - セッションID・コンテンツID・テストケースID・ヒントIDが存在しない\n        - 取得できるヒントが存在しない場合\n        - 削除済み問題・非公開の問題・テックソン問題でない\n        - 対象セッションの問題ではない\n        - 削除済みセッション\n        - Techthonセッションではない\n        - セッション参加者ではない一般ユーザーがセッション問題を閲覧",
        "operationId": "getGeneralSessionsTechthonHint",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "コンテンツID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "path"
          },
          {
            "description": "テストケースID",
            "required": true,
            "schema": {
              "title": "Test Case Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "テストケースID"
            },
            "name": "test_case_id",
            "in": "path"
          },
          {
            "description": "ヒントID",
            "required": true,
            "schema": {
              "title": "Hint Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "ヒントID"
            },
            "name": "hint_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechthonHintOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions-techthon/{session_id}/participant": {
      "get": {
        "tags": [
          "general/sessions-techthon"
        ],
        "summary": "Techthon参加者取得",
        "description": "Techthon参加者取得\n- 必要権限: [GENERAL_USER]\n- 処理内容:\n    - session_idからSessionUserを取得する\n        - TechthonParticipantListOut.icon = UserCommonInfo.icon\n        - TechthonParticipantListOut.username = UserCommonInfo.display_name\n        - TechthonParticipantListOut.registration_date = SessionUser.created_at\n        - TechthonSession.is_teamed が Trueなら\n            - TechthonParticipantListOut.team_name = TechthonTeam.team_name\n            - もしTechthonTeamに所属していないなら \"チーム未登録\" と返す\n        - Falseなら\n            - TechthonParticipantListOut.team_name = None\n- 実行条件:\n    - SessionUserであること\n    - Event.is_deleted = False\n    - Session.is_deleted = False\n    - テックソンセッションであること(TechthonSessionに該当レコードがあること)\n- 並び順:\n    SessionUser.created_atの降順\n- 例外処理:\n    - 以下の場合NotFound:\n        - 以下の場合NotFound:\n        - Sessionが存在しない\n        - SessionUserではない\n        - Eventが削除済み\n        - Sessionが削除済み\n        - テックソンセッションではない\n- 補足:\n    - 削除済みのUserは取得しない",
        "operationId": "getTechthonParticipantList",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Techthon Participant List General Sessions Techthon  Session Id  Participant Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TechthonParticipantListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions-techthon/{session_id}/portfolio": {
      "get": {
        "tags": [
          "general/sessions-techthon"
        ],
        "summary": "Techthonポートフォリオ情報取得",
        "description": "Techthonポートフォリオ情報取得\n- 必要権限: [GENERAL_USER]\n- 処理内容:\n    - TechthonSkillSheetを特定し各データを取得\n    - User.usernameとUserCommonInfo.display_nameを取得\n    - チーム戦ならTechtonTeam.team_nameを取得\n    - session_idとuser.idからTechthonResultを取得し、各socreの合計を求め,取得\n    - 取得したTechthonResultに紐づくTechthonTestCaseから角scoreの最大値を求め,取得\n- 実行条件:\n    - SessionUserであること\n    - Event.is_deleted = False\n    - Session.is_deleted = False\n    - テックソンセッションであること(TechthonSessionに該当レコードがあること)\n- 例外処理:\n    - 以下の場合NotFound:\n        - 対象セッションではない\n        - 削除済みセッション\n        - Techthonセッションではない\n        - セッション参加者ではない一般ユーザーがセッション問題を閲覧",
        "operationId": "getGeneralTechthonSessionPortfolio",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__general__sessions_techthon__techthon_portfolio_out__TechthonPortfolioOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions-techthon/{session_id}/ranking": {
      "get": {
        "tags": [
          "general/sessions-techthon"
        ],
        "summary": "Techthonランキング取得",
        "description": "Techthonランキング取得\n- 必要権限: [GENERAL_USER]\n- 処理内容:\n    - TechthonTeam毎に以下を取得\n        - TechthonResult.total_scoreの合計\n        - チーム戦なら\n            - TechthonTeam.team_name\n        - チーム戦でないなら\n            - UserCommonInfo.display_name\n        - 順位(連番)\n- 実行条件:\n    - SessionUserであること\n    - Event.is_deleted = False\n    - Session.is_deleted = False\n    - テックソンセッションであること(TechthonSessionに該当レコードがあること)\n- 例外処理:\n    - 以下の場合NotFound:\n        - 対象セッションではない\n        - 削除済みセッション\n        - Techthonセッションではない\n        - セッション参加者ではない一般ユーザーがセッション問題を閲覧\n- 並び順\n    - scoreの昇順\n    - TechthonResult.updated_atの昇順",
        "operationId": "getTechthonRanking",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Techthon Ranking General Sessions Techthon  Session Id  Ranking Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/app__schemas__general__sessions_techthon__techthon_ranking_out__TechthonRankingOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions-techthon/{session_id}/server/info": {
      "get": {
        "tags": [
          "general/sessions-techthon"
        ],
        "summary": "一般ユーザーがテックソンセッションでログインするサーバー情報取得",
        "description": "一般ユーザーがテックソンセッションでログインするサーバー情報取得\n- 必要権限: [GENERAL_USER]\n- 処理内容:\n    - TechthonTeamテーブルからIPアドレス・サーバーID・パスワードを取得\n        - TechthonTeamMemberテーブルのuser_idでチームIDを特定\n        - TechthonTeamテーブルのチームIDからサーバー情報を特定\n- 実行条件:\n    - SessionUserであること\n    - Event.is_deleted = False\n    - Session.is_deleted = False\n    - テックソンセッションであること(TechthonSessionに該当レコードがあること)\n- 例外処理:\n    - 以下の場合NotFound:\n        - 対象セッションではない\n        - 削除済みセッション\n        - Techthonセッションではない\n        - セッション参加者ではない一般ユーザーがセッション問題を閲覧\n- 補足\n    - TechthonTeamテーブルではサーバーIDとなっているが、これが貸し出すサーバーのログインユーザーID",
        "operationId": "getGeneralSessionsTechthonServerInfo",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechthonServerInfoOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions-techthon/{session_id}/server/init": {
      "patch": {
        "tags": [
          "general/sessions-techthon"
        ],
        "summary": "一般ユーザーテックソンサーバー初期化実行",
        "description": "一般ユーザーテックソンサーバー初期化実行\n- 必要権限: [GENERAL_USER]\n- 処理内容:\n    - TechthonEnvironmentRelationからテンプレート名を取得\n        - TechthonTeam.techthon_environment_relation_id = NULLの場合\n            - 対象問題のトピックに紐づくTechthonEnvironmentRelation.is_default=Trueのテンプレート\n        - TechthonTeam.techthon_environment_relation_id != NULLの場合\n            - TechthonTeam.techthon_environment_relation_idのテンプレート\n    - サーバー初期化を実行するGCPリソースにテンプレート名とともにリクエスト #TODO: リソース決定したら修正\n    - レスポンスで返ってきたサーバー情報をもとにTechthonTeamを更新する\n- 実行条件:\n    - SessionUserであること\n    - Event.is_deleted = False\n    - Session.is_deleted = False\n    - テックソンセッションであること(TechthonSessionに該当レコードがあること)\n    - セッションが開催中であること\n- 例外処理:\n    - 以下の場合NotFound:\n        - 対象セッションではない\n        - 削除済みセッション\n        - Techthonセッションではない\n        - セッションに登録されている問題ではない\n        - セッションID・コンテンツID・トピックID・環境IDが存在しない\n        - セッション参加者ではない一般ユーザーが実行\n    - 以下の場合CannotBeExecutedConditionsNotSatisfied:\n        - 開催期間内でない\n    - 以下の場合InternalServerError:\n        - サーバー初期化に失敗",
        "operationId": "initializeGeneralSessionsTechthonServer",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechthonServerInfoOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "条件を満たしていないため実行不可: CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED": {
                    "value": {
                      "errorCode": "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
                      "message": "条件を満たしていないため実行不可",
                      "detail": "Cannot be executed because the required conditions are not satisfied."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "サーバーエラーが発生: INTERNAL_SERVER_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "INTERNAL_SERVER_ERROR": {
                    "value": {
                      "errorCode": "INTERNAL_SERVER_ERROR",
                      "message": "エラーが発生しました",
                      "detail": "internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions-techthon/{session_id}/server/restart": {
      "patch": {
        "tags": [
          "general/sessions-techthon"
        ],
        "summary": "一般ユーザーテックソンサーバー再起動実行",
        "description": "一般ユーザーテックソンサーバー再起動実行\n- 必要権限: [GENERAL_USER]\n- 処理内容:\n    - TechthonTeamからインスタンス名を取得\n    - サーバー再起動を実行するGCPリソースにインスタンス名とともにリクエスト #TODO: リソース決定したら修正\n    - レスポンスで返ってきたサーバー情報をもとにTechthonTeamを更新する\n- 実行条件:\n    - SessionUserであること\n    - Event.is_deleted = False\n    - Session.is_deleted = False\n    - テックソンセッションであること(TechthonSessionに該当レコードがあること)\n    - セッションが開催中であること\n- 例外処理:\n    - 以下の場合NotFound:\n        - 対象セッションではない\n        - 削除済みセッション\n        - Techthonセッションではない\n        - セッションに登録されている問題ではない\n        - セッションID・コンテンツID・トピックID・環境IDが存在しない\n        - セッション参加者ではない一般ユーザーが実行\n    - 以下の場合CannotBeExecutedConditionsNotSatisfied:\n        - 開催期間内でない\n    - 以下の場合InternalServerError:\n        - サーバー再起動に失敗",
        "operationId": "restartGeneralSessionsTechthonServer",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechthonServerInfoOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "条件を満たしていないため実行不可: CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED": {
                    "value": {
                      "errorCode": "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
                      "message": "条件を満たしていないため実行不可",
                      "detail": "Cannot be executed because the required conditions are not satisfied."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "サーバーエラーが発生: INTERNAL_SERVER_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "INTERNAL_SERVER_ERROR": {
                    "value": {
                      "errorCode": "INTERNAL_SERVER_ERROR",
                      "message": "エラーが発生しました",
                      "detail": "internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/sessions-techthon/{session_id}/skill": {
      "get": {
        "tags": [
          "general/sessions-techthon"
        ],
        "summary": "Techthon利用技術取得",
        "description": "Techthon利用技術取得\n- 必要権限: [GENERAL_USER]\n- 処理内容:\n    - TechthonSkillSheetから各データを取得\n- 実行条件:\n    - SessionUserであること\n    - Event.is_deleted = False\n    - Session.is_deleted = False\n    - テックソンセッションであること(TechthonSessionに該当レコードがあること)\n- 例外処理:\n    - 以下の場合NotFound:\n        - Sessionが存在しない\n        - SessionUserではない\n        - Eventが削除済み\n        - Sessionが削除済み\n        - テックソンセッションではない",
        "operationId": "getTechthonSkillData",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechthonSkillDataOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "general/sessions-techthon"
        ],
        "summary": "Techthon利用技術更新",
        "description": "Techthon利用技術更新\n- 必要権限: [GENERAL_USER]\n- 処理内容:\n    - session_idとuser.idからTechthonSkillSheetを特定\n    - TechthonSkillSheetを更新 (なければ作成)\n- 実行条件:\n    - SessionUserであること\n    - Event.is_deleted = False\n    - Session.is_deleted = False\n    - テックソンセッションであること(TechthonSessionに該当レコードがあること)\n- 例外処理:\n    - 以下の場合NotFound:\n        - Sessionが存在しない\n        - SessionUserではない\n        - Eventが削除済み\n        - Sessionが削除済み\n        - テックソンセッションではない",
        "operationId": "updateTechthonSkillData",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechthonSkillDataIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechthonSkillDataOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/questions/challenge": {
      "get": {
        "tags": [
          "general/questions"
        ],
        "summary": "一般チャレンジ問題一覧取得",
        "description": "一般チャレンジ問題一覧を取得\n- 必要権限: [GENERAL_USER]\n- 並び順: difficulty, id 昇順\n- 取得条件:\n    - content_type: GENERAL\n    - content_division: CHALLENGE\n    - is_deleted = False\n    - is_published = True\n    - is_official = True\n- レスポンスデータ補足情報\n    - challenger_count: 問題解答成績をカウント、問題に対応し問題解答種別がCHALLENGEのものをカウント\n    - passed_count: 問題解答成績をカウント、問題に対応し問題解答種別がCHALLENGEで解答状況が合格のものをカウント\n    - question_result_status: ログインユーザーの解答状況",
        "operationId": "getGeneralQuestionChallengeList",
        "parameters": [
          {
            "description": "カテゴリID",
            "required": false,
            "schema": {
              "title": "Content Category Ids",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "カテゴリID"
            },
            "name": "content_category_ids",
            "in": "query"
          },
          {
            "description": "トピックID",
            "required": false,
            "schema": {
              "title": "Content Topic Ids",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "トピックID"
            },
            "name": "content_topic_ids",
            "in": "query"
          },
          {
            "description": "問題形式 | 1:コーディング問題, 2:穴埋め問題, 3:バグ取り問題, 4:選択式問題, 5:空欄問題",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/QuestionType"
              },
              "description": "問題形式 | 1:コーディング問題, 2:穴埋め問題, 3:バグ取り問題, 4:選択式問題, 5:空欄問題"
            },
            "name": "question_types",
            "in": "query"
          },
          {
            "description": "難易度",
            "required": false,
            "schema": {
              "title": "Difficulties",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "難易度"
            },
            "name": "difficulties",
            "in": "query"
          },
          {
            "description": "解答状況 | 1:未回答, 2:解答中, 3:合格",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/QuestionResultStatusNoFail"
              },
              "description": "解答状況 | 1:未回答, 2:解答中, 3:合格"
            },
            "name": "question_result_statuses",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get General Question Challenge List General Questions Challenge Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneralQuestionChallengeListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/questions/practice": {
      "get": {
        "tags": [
          "general/questions"
        ],
        "summary": "一般プラクティス問題一覧取得",
        "description": "一般プラクティス問題一覧を取得\n- 必要権限: [GENERAL_USER]\n- 並び順: difficulty, id 昇順\n- 取得条件:\n    - content_type: GENERAL\n    - content_division: PRACTICE\n    - is_deleted = False\n    - is_published = True\n    - is_official = True",
        "operationId": "getGeneralQuestionPracticeList",
        "parameters": [
          {
            "description": "カテゴリID",
            "required": false,
            "schema": {
              "title": "Content Category Ids",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "カテゴリID"
            },
            "name": "content_category_ids",
            "in": "query"
          },
          {
            "description": "トピックID",
            "required": false,
            "schema": {
              "title": "Content Topic Ids",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "トピックID"
            },
            "name": "content_topic_ids",
            "in": "query"
          },
          {
            "description": "問題形式 | 1:コーディング問題, 2:穴埋め問題, 3:バグ取り問題, 4:選択式問題, 5:空欄問題",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/QuestionType"
              },
              "description": "問題形式 | 1:コーディング問題, 2:穴埋め問題, 3:バグ取り問題, 4:選択式問題, 5:空欄問題"
            },
            "name": "question_types",
            "in": "query"
          },
          {
            "description": "難易度",
            "required": false,
            "schema": {
              "title": "Difficulties",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "難易度"
            },
            "name": "difficulties",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get General Question Practice List General Questions Practice Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneralQuestionPracticeListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/questions/practice/{topic_id}/{question_level}": {
      "get": {
        "tags": [
          "general/questions"
        ],
        "summary": "一般ラーニング問題一覧取得",
        "description": "一般ラーニング問題一覧を取得\n- 必要権限: [GENERAL_USER]\n- 並び順: difficulty, id 昇順\n- 取得条件:\n    - Category.name = プログラミング基礎\n    - Content.content_type: GENERAL\n    - Content.content_division: LEARNING\n    - Content.is_deleted = False\n    - Content.is_published = True\n    - Content.is_official = True\n- 例外\n    - topicが存在しなければ NotFound\n    - question_level が 1,2,3 のいずれかに該当しなければ NotFound",
        "operationId": "getGeneralQuestionLearningList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Topic Id",
              "type": "integer"
            },
            "name": "topic_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Question Level",
              "type": "integer"
            },
            "name": "question_level",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralQuestionLearningListOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/questions/{content_id}": {
      "get": {
        "tags": [
          "general/questions"
        ],
        "summary": "一般ユーザー用問題詳細取得",
        "description": "問題詳細取得(通常問題用・セッション問題用)\n- 必要権限: [Pm.GENERAL_USER] [SKILL_CHECK_USER]\n- 実行条件:\n    - Content.is_deleted = False\n    - Content.is_published=True\n        - パラメーターにsession_idがある場合　Content.is_published=Falseも含む\n    - Content.content_type = ContentType.General (一般問題)\n    - セッション問題の場合:\n        - 既に問題解答開始しているか(user_id,session_idに紐づくQuestionResultレコードがあるか)チェック\n        - Queryパラメータ(session_id)を入力すること\n        - SessionUserであること\n        - Event.is_public = True\n        - Event.is_deleted = False\n        - Session.is_deleted = False\n        - SessionContentに含まれているもの\n- Response:\n    - NotFound:\n        - 削除済み問題・非公開の問題\n        - セッション問題ではない非公開の問題\n        - 削除済みセッション・非公開セッションの問題\n        - セッション参加者ではない一般ユーザーがセッション問題を閲覧する",
        "operationId": "getGeneralQuestion",
        "parameters": [
          {
            "description": "問題ID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "問題ID"
            },
            "name": "content_id",
            "in": "path"
          },
          {
            "description": "セッションID",
            "required": false,
            "schema": {
              "title": "Session Id",
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/questions/{content_id}/answer-start": {
      "post": {
        "tags": [
          "general/questions"
        ],
        "summary": "問題解答開始",
        "description": "問題解答開始(チャレンジ問題で使用)\n- 必要権限: [GENERAL_USER]\n- QuestionResultにデータを作成する\n    - ユニーク項目: 以下のデータが存在する場合はスキップ\n        - question_id: content_idからquestionを取得し設定\n        - user_id: ログインユーザーのuser_id\n        - question_result_type: CHALLENGE\n    - question_result_status: ANSWERING",
        "operationId": "startGeneralQuestionAnswer",
        "parameters": [
          {
            "description": "問題ID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "問題ID"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/questions/{content_id}/blank/execute": {
      "post": {
        "tags": [
          "general/questions"
        ],
        "summary": "一般空欄問題採点実行",
        "description": "一般空欄問題採点実行\n- チャレンジ問題等に使用し、セッション問題には使用しない\n- 必要権限: [GENERAL_USER]\n- レスポンス:\n    - 採点結果とQuestionの解答と各空欄の採点結果\n- 処理内容:\n    - 該当問題が存在しない場合エラー(NotFound)\n    - QuestionResultにレコードが存在しない場合エラー(QuestionAnswerNotStarted)\n    - 採点を実行\n        - 該当問題のQuestionBlankのanswerと一致しているか各解答をチェック\n        - 全問題一致しているなら正解、1問でも不一致なら不正解\n    - QuestionBlankResultにデータを作成\n        - question_result_id: QuestionResultのID\n        - is_correct: 上記の採点結果(True or False)\n        - score: 0\n        - is_used_for_result: 上記の採点結果(True or False)\n    - QuestionBlankEachResultに送られてきた選択肢毎のデータを作成\n        - question_blank_id: 該当問題の空欄ID\n        - question_blank_result_id: 上記で作成したQuestionBlankResultのID\n        - answer: 空欄IDに対応するリクエストで送られてきたユーザの解答テキスト\n        - is_correct: 対象空欄の採点結果(True or False)\n    - QuestionResultに結果を書き込む\n        - question_result_status: QuestionResultStatus.PASS or QuestionResultStatus.ANSWERING\n- 補足情報:\n    - 空欄問題に点数はつけないためスコアは0点とする(将来的に点数はつける予定)\n    - 空欄問題はJudgeシステムで採点は行わない",
        "operationId": "executeGeneralQuestionBlank",
        "parameters": [
          {
            "description": "コンテンツID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionBlankExecuteIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionBlankExecuteOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "問題解答開始していない: QUESTION_ANSWER_NOT_STARTED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "QUESTION_ANSWER_NOT_STARTED": {
                    "value": {
                      "errorCode": "QUESTION_ANSWER_NOT_STARTED",
                      "message": "問題解答開始していないため実行できません",
                      "detail": "question answer not started"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/questions/{content_id}/bug_code": {
      "get": {
        "tags": [
          "general/questions"
        ],
        "summary": "バグコード取得",
        "description": "一般バグコード取得\n- バグコードが未登録の場合はNoneを返す\n- レスポンス\n    - pg_lang_id\n    - source_code\n    - name\n    - monaco_name",
        "operationId": "getBugCode",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BugCodeOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/questions/{content_id}/sample-cases": {
      "get": {
        "tags": [
          "general/questions"
        ],
        "summary": "セッション問題サンプルケース一覧取得",
        "description": "問題サンプルケース一覧取得\n- 必要権限: [GENERAL_USER, SKILL_CHECK_USER]\n- 例外処理:\n    - 該当問題が存在しない場合: NotFound\n- データ取得可能条件:\n    - Question.content_id = content_id\n    - QuestionTestCase.is_sample_case = True\n- レスポンス補足:\n    - QuestionTestCase.is_omitted がTrueの場合、shorten_stdin、shorten_stdoutを返す",
        "operationId": "generalGetQuestionsSampleCase",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response General Get Questions Sample Case General Questions  Content Id  Sample Cases Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuestionsSampleCaseOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/questions/{content_id}/sample-cases/execute": {
      "post": {
        "tags": [
          "general/questions"
        ],
        "summary": "一般問題サンプルケース実行",
        "description": "一般問題サンプルケース実行\n- チャレンジ問題等に使用し、セッション問題には使用しない\n- 必要権限: [GENERAL_USER]\n- 解答開始していない場合はエラー\n    - QuestionResultから[ユーザーID、問題ID、解答種別:チャレンジ]に該当するデータが取得できない\n- QuestionTestResultにデータを作成\n    - source_code: リクエストの値\n    - pg_lang_id: リクエストの値\n    - question_answer_result: QuestionAnswerResult.SCORING\n    - is_used_for_result: False\n    - total_test_case_count: 問題に紐づくサンプルケース数\n    - is_sample_case: True\n- QuestionTestCaseResultにサンプルケース毎のデータを作成\n    - question_test_result_id: 上記で作成したQuestionTestResultのID\n    - question_test_case_id: 対応するサンプルケースのID\n    - judge_status: JudgeStatus.WJ\n- Judgeシステムの採点API実行",
        "operationId": "executeGeneralQuestionSampleCase",
        "parameters": [
          {
            "description": "問題ID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "問題ID"
            },
            "name": "content_id",
            "in": "path"
          },
          {
            "description": "問題解答種別",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/QuestionResultType"
                }
              ],
              "description": "問題解答種別",
              "default": 2
            },
            "name": "question_result_type",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionExecuteSampleCaseIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionExecuteSampleCaseOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST<br>問題解答開始していない: QUESTION_ANSWER_NOT_STARTED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  },
                  "QUESTION_ANSWER_NOT_STARTED": {
                    "value": {
                      "errorCode": "QUESTION_ANSWER_NOT_STARTED",
                      "message": "問題解答開始していないため実行できません",
                      "detail": "question answer not started"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/questions/{content_id}/selection/execute": {
      "post": {
        "tags": [
          "general/questions"
        ],
        "summary": "一般選択式問題採点実行",
        "description": "一般選択式問題採点実行\n- チャレンジ問題等に使用し、セッション問題には使用しない\n- 必要権限: [GENERAL_USER]\n- レスポンス:\n    - 採点結果とQuestionの解答\n- 処理内容:\n    - 該当問題が存在しない場合エラー(NotFound)\n    - QuestionResultにレコードが存在しない場合エラー(QuestionAnswerNotStarted)\n    - 採点を実行\n        - ユーザが選択したorderの中で該当問題のQuestionChoiceのis_correct=Falseがある場合不正解\n        - そうでなければ正解\n    - QuestionChoiceResultにデータを作成\n        - question_result_id: QuestionResultのID\n        - score: 0\n        - is_correct: 上記の採点結果(True or False)\n        - is_used_for_result: 上記の採点結果(True or False)\n    - QuestionChoiceResultRelationに送られてきた選択肢毎のデータを作成\n        - question_choice_id: ユーザが選択した選択肢のID\n        - question_choice_result_id: 上記で作成したQuestionChoiceResultのID\n- 補足情報:\n    - 選択式問題に点数はつけないためスコアは0点とする(将来的に点数はつける予定)\n    - 選択式問題はJudgeシステムで採点は行わない",
        "operationId": "executeGeneralQuestionSelection",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionSelectionExecuteIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionSelectionExecuteOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "問題解答開始していない: QUESTION_ANSWER_NOT_STARTED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "QUESTION_ANSWER_NOT_STARTED": {
                    "value": {
                      "errorCode": "QUESTION_ANSWER_NOT_STARTED",
                      "message": "問題解答開始していないため実行できません",
                      "detail": "question answer not started"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/questions/{content_id}/start": {
      "post": {
        "tags": [
          "general/questions"
        ],
        "summary": "問題回答開始(通常問題・セッション問題)",
        "description": "問題回答開始(通常問題・セッション問題)\n- 必要権限: [GENERAL_USER][SKILL_CHECK_USER]\n- 通常問題の場合\n    - 問題解答種別(QuestionResultType)\n        - チャンレンジ(QuestionResultType.CHALLENGE)\n        - プラクティス(QuestionResultType.PRACTICE)\n        - ラーニング・それ以外(QuestionResultType.LEARNING)\n- セッション問題の場合\n    - 問題解答種別(QuestionResultType)\n        - セッション(QuestionResultType.SESSION)",
        "operationId": "startAnsweringQuestion",
        "parameters": [
          {
            "description": "問題ID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "問題ID"
            },
            "name": "content_id",
            "in": "path"
          },
          {
            "description": "セッションID",
            "required": false,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "query"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/questions/{content_id}/test-cases/execute": {
      "post": {
        "tags": [
          "general/questions"
        ],
        "summary": "一般問題テストケース実行",
        "description": "一般問題テストケース実行\n- チャレンジ問題等に使用し、セッション問題には使用しない\n- 必要権限: [GENERAL_USER] (SKILL_CHECK_USERはこのAPIを使用しない、SKILL_CHECK_USERはセッション問題のみ)\n- 例外処理\n    - 該当問題が存在しない場合はエラー(NotFound)\n        - Content.is_deleted = False\n        - Question.content_id = content_id\n        - Question.question_type in [QuestionType.CORDING, QuestionType.FILLING, QuestionType.BUG]\n    - 該当言語が存在しない場合はエラー(DataDoesNotExist)\n    - QuestionResultから該当するデータが取得できない場合はエラー(QuestionAnswerNotStarted)\n        - QuestionResult.user_id = user.id\n        - QuestionResult.question_id = Question.id\n        - QuestionResult.session_id is None\n        - QuestionResult.old_session_id is None\n        - QuestionResult.question_result_type in                 [QuestionResultType.CHALLENGE, QuestionResultType.PRACTICE, QuestionResultType.LEANING]\n- 処理手順\n    - QuestionTestResultにデータを作成\n        - source_code: リクエストの値\n        - pg_lang_id: リクエストの値\n        - question_answer_result: QuestionAnswerResult.SCORING\n        - is_sample_case: False\n    - QuestionTestCaseResultにテストケース毎のデータを作成\n        - question_test_result_id: 上記で作成したQuestionTestResultのID\n        - question_test_case_id: 対応するテストケースのID\n        - judge_status: JudgeStatus.WJ\n    - Judgeシステムの採点API実行",
        "operationId": "executeGeneralQuestionTestCase",
        "parameters": [
          {
            "description": "問題ID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "問題ID"
            },
            "name": "content_id",
            "in": "path"
          },
          {
            "description": "問題解答種別",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/QuestionResultType"
                }
              ],
              "description": "問題解答種別",
              "default": 2
            },
            "name": "question_result_type",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteQuestionTestCaseIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecuteQuestionTestCaseOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "問題解答開始していない: QUESTION_ANSWER_NOT_STARTED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "QUESTION_ANSWER_NOT_STARTED": {
                    "value": {
                      "errorCode": "QUESTION_ANSWER_NOT_STARTED",
                      "message": "問題解答開始していないため実行できません",
                      "detail": "question answer not started"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/questions/{content_id}/test-results": {
      "get": {
        "tags": [
          "general/questions"
        ],
        "summary": "提出履歴取得",
        "description": "提出履歴取得\n- 必要権限: [GENERAL_USER]\n- 例外処理:\n    - 該当問題が存在しない場合: NotFound\n- データ取得可能条件:\n    - Question\n        - Content.is_deleted = False\n        - Content.content_type = ContentType.QUESTION\n        - Question.content_id = content_id\n    - QuestionTestResult\n        - question_answer_result not in [QuestionAnswerResult.SCORING, QuestionAnswerResult.SERVER_ERROR]\n- 処理手順\n    - 問題を特定\n    - question_idとuser.idでQuestionResultsを取得(全QuestionResultTypeの問題が対象)\n    - QuestionResult毎にquestion_test_resultsを取得(採点中とサーバーエラー以外)\n- 補足\n    - セッション問題での回答は含まれない\n    - 回答時間降順に並ぶ\n    - stdin, stdout表示条件(or)\n        - 「解答者にテストケースを公開フラグがTrue」\n        - 「プラクティス問題」かつ「問題の公開フラグがTrue」\n        - 「ラーニング問題」かつ「問題の公開フラグがTrue」",
        "operationId": "getGeneralCodeSubmissionHistoryList",
        "parameters": [
          {
            "description": "問題ID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "問題ID"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get General Code Submission History List General Questions  Content Id  Test Results Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CodeSubmissionHistoryListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/questions/{content_id}/test-results/{test_result_id}/sample-case": {
      "get": {
        "tags": [
          "general/questions"
        ],
        "summary": "問題サンプルケース結果取得",
        "description": "問題サンプルケース結果取得\n\n- 必要権限: [GENERAL_USER]\n- 例外処理:\n    - 該当問題が存在しない場合: NotFound\n    - 該当QuestionTestResultが存在しない場合: NotFound\n    - QuestionTestResult.is_sample_caseがFalseの場合: NotFound\n- 並び順: QuestionTestCase.order昇順\n- 処理手順\n    - 該当QuestionTestResultを取得する\n    - 最後のポーリングである場合、もし全部のケースが取得できなければ、サーバーエラーと判定し、            QuestionTestResultのquestion_answer_resultをSERVER_ERRORに更新する\n    - 取得できたケースを返す(test_case: test_case_id昇順, original_case: order昇順)\n- 備考:\n    - 一旦ポーリングの最大回数を超えてサーバーエラーに判定されたら、QuestionTestResult.question_answer_resultは変えないようにする\n    (\"app/services/judge_result/judge_result_question.py\"を修正する必要があるかもしれません)",
        "operationId": "getQuestionSampleCaseResults",
        "parameters": [
          {
            "description": "問題ID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "問題ID"
            },
            "name": "content_id",
            "in": "path"
          },
          {
            "description": "テスト結果ID",
            "required": true,
            "schema": {
              "title": "Test Result Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "テスト結果ID"
            },
            "name": "test_result_id",
            "in": "path"
          },
          {
            "description": "最後のポーリングかどうか",
            "required": false,
            "schema": {
              "title": "Is Last Query",
              "type": "boolean",
              "description": "最後のポーリングかどうか",
              "default": false
            },
            "name": "is_last_query",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQuestionSampleCaseResultsOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/questions/{content_id}/test-results/{test_result_id}/test-case": {
      "get": {
        "tags": [
          "general/questions"
        ],
        "summary": "問題テストケース結果取得",
        "description": "問題テストケース結果取得\n- 必要権限: [GENERAL_USER]\n- 例外処理:\n    - 該当問題が存在しない場合: NotFound\n    - 該当QuestionTestResultが存在しない場合: NotFound\n    - QuestionTestResult.is_sample_caseがFalseの場合: NotFound\n- 並び順: QuestionTestCase.order昇順\n- 処理手順\n    - 該当QuestionTestResultを取得する\n    - 最後のポーリングである場合、もし全部のケースが取得できなければ、サーバーエラーと判定し、            QuestionTestResultのquestion_answer_resultをSERVER_ERRORに更新する\n    - 取得できたケースと集計結果を返す\n    - チャレンジ問題かつサーバーエラーではない場合、おすすめ問題も返す。\n- 備考:\n    - 一旦ポーリングの最大回数を超えてサーバーエラーに判定されたら、QuestionTestResultのquestion_answer_resultは変えないようにする\n    (\"app/services/judge_result/judge_result_question.py\"を修正する必要があるかもしれません)",
        "operationId": "getQuestionTestCaseResults",
        "parameters": [
          {
            "description": "問題ID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "問題ID"
            },
            "name": "content_id",
            "in": "path"
          },
          {
            "description": "テスト結果ID",
            "required": true,
            "schema": {
              "title": "Test Result Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "テスト結果ID"
            },
            "name": "test_result_id",
            "in": "path"
          },
          {
            "description": "最後のポーリングかどうか",
            "required": false,
            "schema": {
              "title": "Is Last Query",
              "type": "boolean",
              "description": "最後のポーリングかどうか",
              "default": false
            },
            "name": "is_last_query",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTestCaseResultsOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "パラメータが不正: PARAMETER_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PARAMETER_ERROR": {
                    "value": {
                      "errorCode": "PARAMETER_ERROR",
                      "message": "指定されたパラメータは不正です",
                      "detail": "Parameter error"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/educational-materials/{content_id}": {
      "get": {
        "tags": [
          "general/educational-materials"
        ],
        "summary": "教材詳細取得",
        "description": "一般ユーザー用 教材詳細取得/イベント教材取得\n- 必要権限: [GENERAL_USER], [SKILL_CHECK_USER]\n- 表示条件\n    - is_deleted=False\n    - Content.content_type = 教材\n    - Content.is_published=True\n        - パラメーターにsession_idがある場合　Content.is_published=Falseも含む\n    - セッションの教材の場合: Queryパラメータ(session_id)を入力すること\n        - SessionUserであること\n        - Event.is_public = True\n        - Event.is_deleted = False\n        - Session.is_deleted = False\n        - SessionContentに含まれているもの",
        "operationId": "getGeneralEducationalMaterial",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          },
          {
            "description": "セッションID",
            "required": false,
            "schema": {
              "title": "Session Id",
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationalMaterialDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/pg-langs/{pg_lang_id}": {
      "get": {
        "tags": [
          "general/pg-langs"
        ],
        "summary": "一般PG言語詳細取得",
        "description": "PG言語詳細を取得(一般ユーザー向け)\n- 必要権限: [GENERAL_USER, SKILL_CHECK_USER]",
        "operationId": "getPgLangGeneral",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Pg Lang Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "pg_lang_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralPgLangDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/general/ranking/challenge": {
      "get": {
        "tags": [
          "general/ranking"
        ],
        "summary": "一般チャレンジ問題ランキング取得",
        "description": "一般ユーザーチャレンジ問題ランキング取得\n一般ユーザーのダッシュボードに表示するランキング\n集計するランキングは3種類あるが、クエリパラメータで対応\n- 必要権限：[GENERAL_USER]\n- ランキング種類\n    - 総合ランキング 週間ランキング(スコア別) 週間ランキング(解答別)\n- レスポンス\n    - 該当ユーザーのランキング情報\n    - 集計対象となった合計ユーザー数\n    - top10のユーザー名と集計結果\n- 処理内容\n    - ranking_type = 総合ランキングの場合\n        - QuestionResultからユーザーごとの累積スコアを集計\n        - 合計ユーザー数を上記結果のレコード数より算出\n        - 該当ユーザーの必要情報を抽出\n        - top10のユーザー名とスコアを抽出\n        - 該当ユーザーと一つ上の順位のユーザとのスコアの差分を算出\n    - ranking_type = 週間ランキング(スコア別)の場合\n        - QuestionResultからユーザごとの週間の累積スコアを集計\n        - 合計ユーザー数を上記結果のレコード数より算出\n        - 該当ユーザーの必要情報を抽出\n        - top10のユーザー名とスコアを抽出\n    - ranking_type = 週間ランキング(解答別)の場合\n        - QuestionResultからユーザーごとの週間の問題解答数を集計\n        - 合計ユーザー数を上記結果のレコード数より算出\n        - 該当ユーザーの必要情報を抽出\n        - top10のユーザー名とスコアを抽出\n- 取得条件\n    - QuestionResult\n        - question_result_type: チャレンジ\n        - updated_at: 週間ランキングの場合その対象週\n        - question_result_status: 合格 (解答別の集計の場合必要)\n    - User\n        - user_type: 一般ユーザー\n        - is_deleted: False\n- 補足\n    - 1度もユーザーが解答していない場合\n        - 順位は「-位」と表示する\n        - スコア or 解答数は0とする\n        - 次の順位までのスコアは表示しない\n    - 該当ユーザーが1位の場合\n        - 次の順位までのスコアは「-pt」or「-回」と表示する\n    - TOP10に表示する人数\n        - スコアが同点のユーザーが複数いる場合、10人目の順位と同じ順位のユーザーは全て表示\n        - ex: 1 2 3 4 5 6 7 7 9 9 9 9\n        - ex: 1 2 3 4 5 6 7 8 9 10 10",
        "operationId": "getGeneralChallengeRanking",
        "parameters": [
          {
            "description": "集計するランキングのタイプ(総合ランキング:1, 週間ランキング(スコア別):2, 週間ランキング(解答別):3)",
            "required": false,
            "schema": {
              "title": "Ranking Type",
              "type": "integer",
              "description": "集計するランキングのタイプ(総合ランキング:1, 週間ランキング(スコア別):2, 週間ランキング(解答別):3)"
            },
            "name": "ranking_type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRankingChallengeOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/general/skillcheck-users/sessions": {
      "get": {
        "tags": [
          "general/skill_check_users"
        ],
        "summary": "スキルチェックユーザー参加セッション一覧取得",
        "description": "スキルチェックユーザー参加セッション一覧取得\n- 必要権限: [SKILL_CHECK_USER]\n- 取得可能条件:\n    - 自分が参加したセッション一覧を取得可能\n    - Event.purpose == EventPurpose.SKILL_CHECK\n    - Event.host_id == user.organization_id\n    - Event.is_deleted == False\n    - Session.is_deleted == False\n    - SessionUser.user_id == user.id",
        "operationId": "getSkillUserParticipatingSessions",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Skill User Participating Sessions General Skillcheck Users Sessions Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParticipatingSessionsOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "SKILL_CHECK_USER"
            ]
          }
        ]
      }
    },
    "/common/auth/moodle/check": {
      "post": {
        "tags": [
          "common/auth"
        ],
        "summary": "Moodle連携確認",
        "description": "Moodle連携確認\n    - このAPIはフロントではなくMoodleが叩くcloud functionの関数が叩くAPIです\nMoodle連携を確認し、自動ログインが可能かを確認する\n    - 自動ログインとはusernameとpasswordを入力せずにログインできる機能のこと\n    - 下記の条件を満たした時自動ログイン可能とみなす\n        - moodle_link_check_in.moodle_usernameを持つMoodleUserが存在する\n        - そのMoodleUserと紐づいているSchoolDepartmentが任意のMoodleOauthInfoと紐づいている\n            - MoodleOauthInfo.client_id = moodle_link_check_in.client_id を満たしていなくてもいい\n        - MoodleUserを紐づくUserのis_deleted = False\n- 処理内容\n    - 自動ログイン可能か確認する\n    - 可能なら\n        - moodle_link_check_out.is_auto_login = True\n        - moodle_link_check_out.encryption_client_id",
        "operationId": "moodleLinkCheck",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoodleLinkCheckIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoodleLinkCheckOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/common/auth/moodle/decrypted-auth-token": {
      "post": {
        "tags": [
          "common/auth"
        ],
        "summary": "ログイントークン復号",
        "description": "暗号化されたログイントークンを復号し取得\n- 例外処理\n    - 復号できない場合 ParameterError\n    - 復号に成功したがそのdictがAuthTokenOutに変換できないなら ParameterError",
        "operationId": "getDecryptedAuthToken",
        "parameters": [
          {
            "description": "暗号化されたauth_token",
            "required": true,
            "schema": {
              "title": "Encrypted Auth Token",
              "type": "string",
              "description": "暗号化されたauth_token"
            },
            "name": "encrypted_auth_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "パラメータが不正: PARAMETER_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PARAMETER_ERROR": {
                    "value": {
                      "errorCode": "PARAMETER_ERROR",
                      "message": "指定されたパラメータは不正です",
                      "detail": "Parameter error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/common/auth/moodle/login": {
      "post": {
        "tags": [
          "common/auth"
        ],
        "summary": "moodleログイン",
        "description": "moodleログイン\n- 処理内容\n    - login_in.encrypted_jsonを復号しclient_idとmoodle_usernameを取得\n    - client_idを持つMoodleOauthInfoを取得\n    - auth_token_outを取得\n        - ここは get_token と 同じ処理\n    - usernameを持つuserを特定\n    - MoodleUserを作成 (既に作成されていれば作成しない)\n        - user_id = user.id\n        - school_department_id = moodle_oauth_info.school_department_id\n        - moodle_username = moodle_username\n- 例外処理\n    - MoodleOauthInfoが存在しなければ NotFound\n    - userが存在しなければ NotFound\n    - usernameかpasswordが間違っていれば IncorrectUsernameOrPassword\n    - decrypted_json が 復号できない or client_idまたはmoodle_usernameが取り出せなければ DuplicateError",
        "operationId": "moodleLogin",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/MoodleLoginForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "401": {
            "description": "ユーザー名またはパスワードが不正: INCORRECT_USERNAME_OR_PASSWORD",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "INCORRECT_USERNAME_OR_PASSWORD": {
                    "value": {
                      "errorCode": "INCORRECT_USERNAME_OR_PASSWORD",
                      "message": "ユーザー名またはパスワードが不正です",
                      "detail": "Incorrect username or password"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "データが重複している: DUPLICATE_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DUPLICATE_ERROR": {
                    "value": {
                      "errorCode": "DUPLICATE_ERROR",
                      "message": "データが重複しています",
                      "detail": "duplicate key value violates unique constraintr"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/common/auth/password/reset": {
      "post": {
        "tags": [
          "common/auth"
        ],
        "summary": "パスワードリセット",
        "description": "パスワードリセット\n- パスワードリセットトークンをデコードし、payloadを取得\n- payloadからユーザーを特定\n- DBに保持しているトークン情報を取得\n  - payloadのjtiと一致し、有効期限が過ぎていないもの\n- 使用したDBのトークン情報を削除\n- 該当ユーザーのパスワードを新しいものに更新",
        "operationId": "resetPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "401": {
            "description": "アクセストークンが不正、または有効期限切れ: INVALID_CREDENTIALS",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "INVALID_CREDENTIALS": {
                    "value": {
                      "errorCode": "INVALID_CREDENTIALS",
                      "message": "認証情報が無効です",
                      "detail": "invalid credentials"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/common/auth/password/reset/email": {
      "post": {
        "tags": [
          "common/auth"
        ],
        "summary": "パスワードリセット用email送信",
        "description": "指定emailにパスワードリセット用email送信\n- 指定のemailがユーザーの`email`または`sub_email`と一致するユーザーを取得\n    - 該当するユーザーがいない場合はメール送信せずに成功レスポンスを返す\n- すべての該当ユーザーに対して以下の処理を行う\n- ユーザーに紐づくトークンをすべて削除\n- パスワードリセットトークンを生成し、ユーザートークンとしてDBに保存\n- 指定されたemailに対してメール送信\n    - メール本文にtokenを付与したパスワード変更のURLとusernameを含む",
        "operationId": "sendPasswordResetEmail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetEmailIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/common/auth/token": {
      "post": {
        "tags": [
          "common/auth"
        ],
        "summary": "トークン取得",
        "description": "usernameとpasswordからトークンを取得",
        "operationId": "getToken",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GetTokenForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "401": {
            "description": "ユーザー名またはパスワードが不正: INCORRECT_USERNAME_OR_PASSWORD",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "INCORRECT_USERNAME_OR_PASSWORD": {
                    "value": {
                      "errorCode": "INCORRECT_USERNAME_OR_PASSWORD",
                      "message": "ユーザー名またはパスワードが不正です",
                      "detail": "Incorrect username or password"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/common/auth/token/refresh": {
      "post": {
        "tags": [
          "common/auth"
        ],
        "summary": "トークン再取得",
        "description": "リフレッシュトークンからトークンを取得",
        "operationId": "refreshToken",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "401": {
            "description": "リフレッシュトークンが不正: INVALID_REFRESH_TOKEN",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "INVALID_REFRESH_TOKEN": {
                    "value": {
                      "errorCode": "INVALID_REFRESH_TOKEN",
                      "message": "認証情報が無効です",
                      "detail": "invalid refresh token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/common/auth/token/refresh/revoke": {
      "post": {
        "tags": [
          "common/auth"
        ],
        "summary": "リフレッシュトークン失効",
        "description": "リフレッシュトークンを失効させる\n- ログアウト時に使用\n- 無効なトークンを指定してもエラーは返さない",
        "operationId": "revokeRefreshToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevokeRefreshTokenIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/common/choices/annual-incomes": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "年収一覧を取得",
        "description": "年収一覧を取得\n- 並び順: order昇順",
        "operationId": "getAnnualIncomeChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Annual Income Choices Common Choices Annual Incomes Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnnualIncomeChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/companies": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "企業一覧を取得",
        "description": "企業一覧を取得\n- 並び順: id昇順",
        "operationId": "getCompanyChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Company Choices Common Choices Companies Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/company-document-types": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "企業情報資料タイプ一覧取得",
        "description": "企業情報資料タイプ一覧を取得\n- Enumのデータを返却",
        "operationId": "getCompanyDocumentTypeChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Company Document Type Choices Common Choices Company Document Types Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyDocumentTypeChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/company-plan-status": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "企業プラン加入状況選択肢一覧",
        "description": "企業プラン加入状況選択肢一覧\n- Enumのデータを返却",
        "operationId": "getCompanyPlanStatusChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Company Plan Status Choices Common Choices Company Plan Status Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyPlanStatusChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/company-plan-status-no-trials": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "企業プラン加入状況(トライアルなし)選択肢一覧",
        "description": "企業プラン加入状況(トライアルなし)選択肢一覧\n- Enumのデータを返却",
        "operationId": "getCompanyPlanStatusNoTrialChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Company Plan Status No Trial Choices Common Choices Company Plan Status No Trials Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyPlanStatusNoTrialChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/company-scales": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "企業規模一覧を取得",
        "description": "企業規模一覧を取得\n- 並び順: order昇順",
        "operationId": "getCompanyScaleChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Company Scale Choices Common Choices Company Scales Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyScaleChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/content-categories": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "コンテンツカテゴリ選択肢一覧取得",
        "description": "コンテンツカテゴリ選択肢一覧を取得\n- 並び順: order昇順",
        "operationId": "getContentCategoryChoices",
        "parameters": [
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Locale"
                }
              ],
              "default": "ja"
            },
            "name": "locale",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Content Category Choices Common Choices Content Categories Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentCategoryChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/content-category-types": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "コンテンツカテゴリタイプ一覧取得",
        "description": "コンテンツカテゴリタイプ一覧を取得\n- Enumのデータを返却",
        "operationId": "getContentCategoryTypeChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Content Category Type Choices Common Choices Content Category Types Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentCategoryTypeChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/content-divisions": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "コンテンツ区分選択肢一覧",
        "description": "コンテンツ区分選択肢一覧\n- Enumのデータを返却",
        "operationId": "getContentDivisionChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Content Division Choices Common Choices Content Divisions Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentDivisionChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/content-package-levels": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "コンテンツパッケージレベル選択肢一覧",
        "description": "コンテンツパッケージレベル選択肢一覧\n- Enumのデータを返却",
        "operationId": "getContentPackageLevelChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Content Package Level Choices Common Choices Content Package Levels Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentPackageLevelChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/content-topics": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "コンテンツトピック選択肢一覧取得",
        "description": "コンテンツトピック選択肢一覧を取得\n- 並び順: order昇順",
        "operationId": "getContentTopicChoices",
        "parameters": [
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Locale"
                }
              ],
              "default": "ja"
            },
            "name": "locale",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Content Topic Choices Common Choices Content Topics Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentTopicChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/countries": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "国選択肢一覧取得",
        "description": "国選択肢一覧を取得\n- 並び順: id昇順",
        "operationId": "getCountryChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Country Choices Common Choices Countries Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/current-jobs": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "現在の職業 選択肢一覧を取得",
        "description": "現在の職業 選択肢一覧を取得\n- Enumのデータを返却",
        "operationId": "getCurrentJobChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Current Job Choices Common Choices Current Jobs Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrentJobChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/educational-material-types": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "教材タイプ選択肢一覧",
        "description": "教材タイプ選択肢一覧\n- Enumのデータを返却",
        "operationId": "getEducationalMaterialTypeChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Educational Material Type Choices Common Choices Educational Material Types Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EducationalMaterialTypeChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/employment-management-status-items": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "企業における雇用管理に関する状況一覧取得",
        "description": "企業における雇用管理に関する状況一覧を取得\n- Enumのデータを返却",
        "operationId": "getEmploymentManagementStatusItemChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Employment Management Status Item Choices Common Choices Employment Management Status Items Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmploymentManagementStatusItemChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/employment-statuses": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "雇用形態一覧取得",
        "description": "雇用形態一覧を取得\n- Enumのデータを返却",
        "operationId": "getEmploymentStatusChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Employment Status Choices Common Choices Employment Statuses Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmploymentStatusChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/english-levels": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "英語レベル一覧を取得",
        "description": "英語レベル一覧を取得\n- 並び順: order昇順",
        "operationId": "getEnglishLevelChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get English Level Choices Common Choices English Levels Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnglishLevelChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/event-purposes": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "イベントの目的選択肢一覧",
        "description": "イベントの目的選択肢一覧\n- Enumのデータを返却",
        "operationId": "getEventPurposeChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Event Purpose Choices Common Choices Event Purposes Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventPurposeChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/faq-categories": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "FAQカテゴリ一覧取得",
        "description": "FAQカテゴリ一覧取得\n- Enumのデータを返却",
        "operationId": "getFaqCategoryChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Faq Category Choices Common Choices Faq Categories Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FaqCategoryChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/faq-targets": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "FAQターゲット一覧取得",
        "description": "FAQターゲット一覧取得\n- Enumのデータを返却",
        "operationId": "getFaqTargets",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Faq Targets Common Choices Faq Targets Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FaqTargetChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/frameworks": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "フレームワーク選択肢一覧取得",
        "description": "フレームワーク選択肢一覧を取得\n- 並び順: id昇順",
        "operationId": "getFrameworkChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Framework Choices Common Choices Frameworks Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FrameworkChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/industries": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "業種一覧取得",
        "description": "業種一覧を取得\n- 並び順: order昇順",
        "operationId": "getIndustryChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Industry Choices Common Choices Industries Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IndustryChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/industry-groups": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "業種グループ一覧取得",
        "description": "業種グループ一覧を取得\n- 並び順: order昇順",
        "operationId": "getIndustryGroupChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Industry Group Choices Common Choices Industry Groups Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IndustryGroupChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/information-targets": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "インフォターゲットenum取得",
        "description": "インフォターゲットenumを取得",
        "operationId": "getInformationTargetChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Information Target Choices Common Choices Information Targets Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InformationTargetChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/intentionalities": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "志向性一覧を取得",
        "description": "志向性一覧を取得\n- 並び順: order昇順",
        "operationId": "getIntentionalityChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Intentionality Choices Common Choices Intentionalities Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntentionalityChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/job-changing-status": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "転職活動状況 選択肢一覧を取得",
        "description": "転職活動状況 選択肢一覧を取得\n- Enumのデータを返却",
        "operationId": "getJobChangingStatusChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Job Changing Status Choices Common Choices Job Changing Status Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobChangingStatusChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/job-draft-statuses": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "求人下書ステータス一覧取得",
        "description": "求人下書ステータス一覧を取得\n- Enumのデータを返却",
        "operationId": "getJobDraftStatusChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Job Draft Status Choices Common Choices Job Draft Statuses Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobDraftStatusChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/job-feature-categories": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "求人特徴カテゴリ一覧取得",
        "description": "求人特徴カテゴリ一覧を取得\n- Enumのデータを返却",
        "operationId": "getJobFeatureCategoryChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Job Feature Category Choices Common Choices Job Feature Categories Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobFeatureCategoryChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/job-features": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "求人特徴選択肢一覧取得",
        "description": "求人特徴選択肢一覧を取得\n- 並び順: id降順",
        "operationId": "getJobFeatureChoices",
        "parameters": [
          {
            "description": "正社員用",
            "required": false,
            "schema": {
              "title": "Is For Full Time Staff",
              "type": "boolean",
              "description": "正社員用"
            },
            "name": "is_for_full_time_staff",
            "in": "query"
          },
          {
            "description": "新卒用",
            "required": false,
            "schema": {
              "title": "Is For New Graduate",
              "type": "boolean",
              "description": "新卒用"
            },
            "name": "is_for_new_graduate",
            "in": "query"
          },
          {
            "description": "アルバイト用",
            "required": false,
            "schema": {
              "title": "Is For Part Time Job",
              "type": "boolean",
              "description": "アルバイト用"
            },
            "name": "is_for_part_time_job",
            "in": "query"
          },
          {
            "description": "インターン用",
            "required": false,
            "schema": {
              "title": "Is For Intern",
              "type": "boolean",
              "description": "インターン用"
            },
            "name": "is_for_intern",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Job Feature Choices Common Choices Job Features Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobFeatureChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/job-hunting-status": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "就職活動状況 選択肢一覧を取得",
        "description": "就職活動状況 選択肢一覧を取得\n- Enumのデータを返却",
        "operationId": "getJobHuntingStatusChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Job Hunting Status Choices Common Choices Job Hunting Status Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobHuntingStatusChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/job-hunting-types": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "求職ステータス 選択肢一覧を取得",
        "description": "求職ステータス 選択肢一覧を取得\n- Enumのデータを返却",
        "operationId": "getJobHuntingTypeChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Job Hunting Type Choices Common Choices Job Hunting Types Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobHuntingTypeChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/job-selection-types": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "求人選考タイプ一覧取得",
        "description": "求人選考タイプ一覧を取得\n- Enumのデータを返却\n- 企業(organization_id)を指定した場合のレスポンスデータ\n    - 人材紹介プランに加入していた場合: `1, エージェント経由` を含める\n    - スカウトプランに加入していた場合: `2, \"直接採用` を含める\n    - 指定した企業がない場合: 空のリストを返す",
        "operationId": "getJobSelectionTypeChoices",
        "parameters": [
          {
            "description": "組織ID",
            "required": false,
            "schema": {
              "title": "Organization Id",
              "type": "integer",
              "description": "組織ID"
            },
            "name": "organization_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Job Selection Type Choices Common Choices Job Selection Types Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobSelectionTypeChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/judge-status": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "ジャッジステータス選択肢一覧",
        "description": "ジャッジステータス選択肢一覧\n- Enumのデータを返却",
        "operationId": "getJudgeStatusChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Judge Status Choices Common Choices Judge Status Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JudgeStatusChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/occupations": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "職種選択肢一覧取得",
        "description": "職種選択肢一覧を取得\n- 並び順: order昇順",
        "operationId": "getOccupationChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Occupation Choices Common Choices Occupations Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OccupationChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/passive-smoking-initiatives": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "集合場所における受動喫煙防止の取り組み一覧取得",
        "description": "集合場所における受動喫煙防止の取り組み一覧を取得\n- Enumのデータを返却",
        "operationId": "getPassiveSmokingInitiativeChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Passive Smoking Initiative Choices Common Choices Passive Smoking Initiatives Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PassiveSmokingInitiativeChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/pg-langs": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "PG言語選択肢一覧取得",
        "description": "PG言語選択肢一覧を取得\n- 並び順: id昇順",
        "operationId": "getPgLangChoices",
        "parameters": [
          {
            "description": "SQL言語か",
            "required": false,
            "schema": {
              "title": "Is Sql",
              "type": "boolean",
              "description": "SQL言語か"
            },
            "name": "is_sql",
            "in": "query"
          },
          {
            "description": "穴埋め問題で使用するか",
            "required": false,
            "schema": {
              "title": "Use For Blank Question",
              "type": "boolean",
              "description": "穴埋め問題で使用するか"
            },
            "name": "use_for_blank_question",
            "in": "query"
          },
          {
            "description": "問題回答に使用するか",
            "required": false,
            "schema": {
              "title": "Use For Judgement Lang",
              "type": "boolean",
              "description": "問題回答に使用するか"
            },
            "name": "use_for_judgement_lang",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Pg Lang Choices Common Choices Pg Langs Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PgLangChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/phone-number-types": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "電話番号タイプ 選択肢一覧を取得",
        "description": "電話番号タイプ 選択肢一覧を取得\n- Enumのデータを返却",
        "operationId": "getPhoneNumberTypeChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Phone Number Type Choices Common Choices Phone Number Types Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneNumberTypeChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/prefectures": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "都道府県一覧を取得",
        "description": "都道府県一覧を取得\n- 並び順: id昇順",
        "operationId": "getPrefectureChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Prefecture Choices Common Choices Prefectures Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrefectureChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/probations": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "求人試用期間一覧取得",
        "description": "求人試用期間一覧を取得\n- Enumのデータを返却",
        "operationId": "getProbationChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Probation Choices Common Choices Probations Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProbationChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/question-types": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "問題形式選択肢一覧",
        "description": "問題形式選択肢一覧\n- Enumのデータを返却",
        "operationId": "getQuestionTypeChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Question Type Choices Common Choices Question Types Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuestionTypeChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/recruitment-and-hiring-status-items": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "募集採用に関する状況一覧取得",
        "description": "募集採用に関する状況一覧を取得\n- Enumのデータを返却",
        "operationId": "getRecruitmentAndHiringStatusItemChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Recruitment And Hiring Status Item Choices Common Choices Recruitment And Hiring Status Items Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecruitmentAndHiringStatusItemChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/salary-systems": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "給与形態一覧取得",
        "description": "給与形態一覧を取得\n- Enumのデータを返却",
        "operationId": "getSalarySystemChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Salary System Choices Common Choices Salary Systems Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalarySystemChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/school-types": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "学校の種類選択肢一覧",
        "description": "学校の種類選択肢一覧\n- Enumのデータを返却",
        "operationId": "getSchoolTypeChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get School Type Choices Common Choices School Types Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SchoolTypeChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/school-user-types": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "学校管理ユーザータイプ選択肢一覧",
        "description": "学校管理ユーザータイプ選択肢一覧\n- Enumのデータを返却",
        "operationId": "getSchoolUserTypeChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get School User Type Choices Common Choices School User Types Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SchoolUserTypeChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/selection-steps": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "選考ステップ選択肢一覧",
        "description": "選考ステップ選択肢一覧\n- Enumのデータを返却",
        "operationId": "getSelectionStepChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Selection Step Choices Common Choices Selection Steps Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionStepChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/selection-types": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "選考タイプ一覧取得",
        "description": "選考タイプ一覧取得\n- Enumのデータを返却",
        "operationId": "getSelectionTypeChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Selection Type Choices Common Choices Selection Types Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectionTypeChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/skill-levels": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "スキルレベル(求人)一覧取得",
        "description": "スキルレベル(求人)一覧取得\n- Enumのデータを返却",
        "operationId": "getSkillLevelChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Skill Level Choices Common Choices Skill Levels Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SkillLevelChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/skills": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "スキル選択肢一覧取得",
        "description": "スキル選択肢一覧を取得\n- 並び順: id昇順",
        "operationId": "getSkillChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Skill Choices Common Choices Skills Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SkillChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/term-types": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "規約種別選択肢一覧",
        "description": "規約種別選択肢一覧\n- Enumのデータを返却",
        "operationId": "getTermTypeChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Term Type Choices Common Choices Term Types Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TermTypeChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/choices/vocational-ability-status-items": {
      "get": {
        "tags": [
          "common/choices"
        ],
        "summary": "職業能力開発・向上に関する状況一覧取得",
        "description": "職業能力開発・向上に関する状況一覧を取得\n- Enumのデータを返却",
        "operationId": "getVocationalAbilityStatusItemChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Vocational Ability Status Item Choices Common Choices Vocational Ability Status Items Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VocationalAbilityStatusItemChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/portfolios/users/{user_id}/answer-preference": {
      "get": {
        "tags": [
          "common/portfolios"
        ],
        "summary": "回答傾向を取得する",
        "description": "回答傾向を取得\n- 必要権限:\n    - PORTFOLIO_VIEW\n    - GENERAL_USER\n    - TOKEN_GUEST",
        "operationId": "getPortfolioPreference",
        "parameters": [
          {
            "description": "id",
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "id"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "期限",
            "required": false,
            "schema": {
              "title": "Expires At",
              "type": "number",
              "description": "期限"
            },
            "name": "expires_at",
            "in": "query"
          },
          {
            "description": "HTTPメソッド",
            "required": false,
            "schema": {
              "title": "Http Method",
              "type": "string",
              "description": "HTTPメソッド"
            },
            "name": "http_method",
            "in": "query"
          },
          {
            "description": "トークン",
            "required": false,
            "schema": {
              "title": "Token",
              "type": "string",
              "description": "トークン"
            },
            "name": "token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAnswerPreferenceOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearerForGuest": [
              "PORTFOLIO_VIEW",
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/common/portfolios/users/{user_id}/portfolio": {
      "get": {
        "tags": [
          "common/portfolios"
        ],
        "summary": "ポートフォリオを取得",
        "description": "ポートフォリオのユーザー情報表示、希望条件、ユーザーPRを取得\n- 必要権限: [PORTFOLIO_VIEW, GENERAL_USER]\n- 取得可能条件\n  - User.is_deleted == False\n- 実行処理\n  - スカウト承諾済フラグにスカウト承諾済かどうかをDB取得して設定(フロントエンドで表示を出し分ける項目あり)\n  - 学校名／会社名: 現在の職業が学生の場合は学校名を、学生以外の場合は会社名を設定\n  - 学部名／部門・所属・役職: 現在の職業が学生の場合は学部名を、学生以外の場合は部門・所属・役職を設定",
        "operationId": "getPortfolios",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "期限",
            "required": false,
            "schema": {
              "title": "Expires At",
              "type": "number",
              "description": "期限"
            },
            "name": "expires_at",
            "in": "query"
          },
          {
            "description": "HTTPメソッド",
            "required": false,
            "schema": {
              "title": "Http Method",
              "type": "string",
              "description": "HTTPメソッド"
            },
            "name": "http_method",
            "in": "query"
          },
          {
            "description": "トークン",
            "required": false,
            "schema": {
              "title": "Token",
              "type": "string",
              "description": "トークン"
            },
            "name": "token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortfolioDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearerForGuest": [
              "PORTFOLIO_VIEW",
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/common/portfolios/users/{user_id}/question-result-heatmap": {
      "get": {
        "tags": [
          "common/portfolios"
        ],
        "summary": "ヒートマップを取得する",
        "description": "ヒートマップを取得する\n- 必要権限:\n    - PORTFOLIO_VIEW\n    - GENERAL_USER\n    - TOKEN_GUEST",
        "operationId": "getPortfolioHeatmap",
        "parameters": [
          {
            "description": "id",
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "id"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "期限",
            "required": false,
            "schema": {
              "title": "Expires At",
              "type": "number",
              "description": "期限"
            },
            "name": "expires_at",
            "in": "query"
          },
          {
            "description": "HTTPメソッド",
            "required": false,
            "schema": {
              "title": "Http Method",
              "type": "string",
              "description": "HTTPメソッド"
            },
            "name": "http_method",
            "in": "query"
          },
          {
            "description": "トークン",
            "required": false,
            "schema": {
              "title": "Token",
              "type": "string",
              "description": "トークン"
            },
            "name": "token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Portfolio Heatmap Common Portfolios Users  User Id  Question Result Heatmap Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgrammingProblemCategoryStat"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearerForGuest": [
              "PORTFOLIO_VIEW",
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/common/portfolios/users/{user_id}/techthon-heatmap": {
      "get": {
        "tags": [
          "common/portfolios"
        ],
        "summary": "Techthon成績を取得する",
        "operationId": "getPortfolioTechthonHeatmap",
        "parameters": [
          {
            "description": "id",
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "id"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "期限",
            "required": false,
            "schema": {
              "title": "Expires At",
              "type": "number",
              "description": "期限"
            },
            "name": "expires_at",
            "in": "query"
          },
          {
            "description": "HTTPメソッド",
            "required": false,
            "schema": {
              "title": "Http Method",
              "type": "string",
              "description": "HTTPメソッド"
            },
            "name": "http_method",
            "in": "query"
          },
          {
            "description": "トークン",
            "required": false,
            "schema": {
              "title": "Token",
              "type": "string",
              "description": "トークン"
            },
            "name": "token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Portfolio Techthon Heatmap Common Portfolios Users  User Id  Techthon Heatmap Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TechthonTopicStat"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearerForGuest": [
              "PORTFOLIO_VIEW",
              "GENERAL_USER"
            ]
          }
        ]
      }
    },
    "/common/terms/check": {
      "get": {
        "tags": [
          "common/terms"
        ],
        "summary": "最新の利用規約に同意しているか確認",
        "description": "ユーザーが最新の利用規約に同意しているか確認する(共通)\n- ログインユーザーのUserTypeによって確認するTermTypeを選択する\n    - UserType.GENERAL\n        - TermType 1, 2, 3\n    - UserType.SCHOOL\n        - TermType 6\n    - UserType.COMPANY\n        - TermType 7\n    - 上記以外のUser_Type\n        - Trueを返す\n- レスポンス\n    - is_agreed_latest_terms(最新の利用規約に同意しているか)\n    - (同意していない場合)term_type",
        "operationId": "checkUserAgreedTerms",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckAgreedTermsOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/terms/{term_type}": {
      "get": {
        "tags": [
          "common/terms"
        ],
        "summary": "規約詳細情報取得(共通)",
        "description": "規約詳細情報取得(共通)\n- 指定されたterm_typeの最新versionを取得する\n- ロケールによって返却する規約本文(TermCommonDetailOut.content_lc)を切り替える",
        "operationId": "getTermCommon",
        "parameters": [
          {
            "description": "1:利用規約 (一般ユーザー), 2:プライバシーポリシー (一般ユーザー）, 3:新規登録時の注意事項 (一般ユーザー), 4:人材紹介 個人情報規約, 5:人材紹介 利用規約, 6:学校 利用規約, 7:企業 利用規約",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TermType"
                }
              ],
              "description": "1:利用規約 (一般ユーザー), 2:プライバシーポリシー (一般ユーザー）, 3:新規登録時の注意事項 (一般ユーザー), 4:人材紹介 個人情報規約, 5:人材紹介 利用規約, 6:学校 利用規約, 7:企業 利用規約"
            },
            "name": "term_type",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Locale"
                }
              ],
              "default": "ja"
            },
            "name": "locale",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TermCommonDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "common/terms"
        ],
        "summary": "利用規約同意API(共通)",
        "description": "利用規約同意、再同意\n指定されたTermTypeで最新の利用規約登録",
        "operationId": "agreeUserTerm",
        "parameters": [
          {
            "description": "1:利用規約 (一般ユーザー), 2:プライバシーポリシー (一般ユーザー）, 3:新規登録時の注意事項 (一般ユーザー), 4:人材紹介 個人情報規約, 5:人材紹介 利用規約, 6:学校 利用規約, 7:企業 利用規約",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TermType"
                }
              ],
              "description": "1:利用規約 (一般ユーザー), 2:プライバシーポリシー (一般ユーザー）, 3:新規登録時の注意事項 (一般ユーザー), 4:人材紹介 個人情報規約, 5:人材紹介 利用規約, 6:学校 利用規約, 7:企業 利用規約"
            },
            "name": "term_type",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/info/informations": {
      "get": {
        "tags": [
          "common/info"
        ],
        "summary": "インフォ一覧取得",
        "description": "インフォ一覧取得\n- 必要権限: [GENERAL_USER, INFORMATION_VIEW]\n- 仕様\n    - ユーザタイプに応じて、該当するインフォ(Information)一覧を返す\n    - フィルタリング条件: 公開フラグがTrue\n    - ソート条件：作成日の降順",
        "operationId": "getCommonInformationList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Common Information List Common Info Informations Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InfoListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "INFORMATION_VIEW"
            ]
          }
        ]
      }
    },
    "/common/info/informations/dashboard": {
      "get": {
        "tags": [
          "common/info"
        ],
        "summary": "ダッシュボード用インフォ一覧取得",
        "description": "ダッシュボード用インフォ一覧取得\n- 必要権限: [GENERAL_USER, INFORMATION_VIEW]\n- 仕様\n    - ユーザタイプに応じて、該当する未読のアップデートのお知らせインフォ(Information)一覧を返す\n    - 返す全てのインフォに対し、既読フラグ(InformationViewLog)を付与する\n    - フィルタリング条件: 公開フラグがTrue AND 未読 AND アップデートのお知らせかがTrue\n    - ソート条件：作成日の降順",
        "operationId": "getCommonInformationDashboardList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Common Information Dashboard List Common Info Informations Dashboard Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InformationDashboardListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "INFORMATION_VIEW"
            ]
          }
        ]
      }
    },
    "/common/info/informations/view-all": {
      "post": {
        "tags": [
          "common/info"
        ],
        "summary": "インフォ一括既読",
        "description": "インフォ一括既読\n- 必要権限: [GENERAL_USER, INFORMATION_VIEW]\n- 仕様\n    - 未読のインフォを一括で既読にする\n        - 判定対象のインフォはインフォ一覧(get_information_list)と同じ条件",
        "operationId": "viewAllInformations",
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "INFORMATION_VIEW"
            ]
          }
        ]
      }
    },
    "/common/info/informations/{information_id}": {
      "get": {
        "tags": [
          "common/info"
        ],
        "summary": "インフォ詳細取得",
        "description": "インフォ詳細取得\n- 必要権限: [GENERAL_USER, INFORMATION_VIEW]\n- 仕様\n    - information_idに該当するインフォ(Information)を返す\n    - 返すインフォが未読の場合は既読フラグ(InformationViewLog)を付与する\n    - 該当するインフォが存在しない場合は404\n    - 該当するインフォのタイプがユーザータイプと異なる場合は403",
        "operationId": "getCommonInformationDetail",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Information Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "information_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__common__info__information_detail_out__InformationDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "INFORMATION_VIEW"
            ]
          }
        ]
      }
    },
    "/common/info/notifications": {
      "get": {
        "tags": [
          "common/info"
        ],
        "summary": "通知一覧取得",
        "description": "通知一覧取得\n- 必要権限: [GENERAL_USER, INFORMATION_VIEW]\n- 仕様\n    - ユーザー宛 + ユーザーが所属する組織宛の通知(Notification)一覧を返す\n        - ユーザーが一般ユーザー(GENERAL)の場合は「ユーザー宛」のみ判定する\n        - is_for_all(通知タイプ)は未使用のため考慮しない\n    - ソート条件：作成日の降順",
        "operationId": "getCommonNotificationList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Common Notification List Common Info Notifications Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InfoListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "INFORMATION_VIEW"
            ]
          }
        ]
      }
    },
    "/common/info/notifications/view-all": {
      "post": {
        "tags": [
          "common/info"
        ],
        "summary": "通知一括既読",
        "description": "通知一括既読\n- 必要権限: [GENERAL_USER, INFORMATION_VIEW]\n- 仕様\n    - 未読の通知を一括で既読にする\n        - 判定対象の通知は通知一覧(get_notification_list)と同じ条件",
        "operationId": "viewAllNotifications",
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "INFORMATION_VIEW"
            ]
          }
        ]
      }
    },
    "/common/info/notifications/{notification_id}": {
      "get": {
        "tags": [
          "common/info"
        ],
        "summary": "通知詳細取得",
        "description": "通知詳細取得\n- 必要権限: [GENERAL_USER, INFORMATION_VIEW]\n- 仕様\n    - notification_idに該当する通知(Notification)のURLを返す\n    - 返す通知が未読の場合は既読フラグ(NotificationViewLog)を付与する\n    - 該当する通知が存在しない場合は404\n    - 該当する通知のが自分宛or自組織宛でなければ403",
        "operationId": "getCommonNotificationDetail",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Notification Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "notification_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "INFORMATION_VIEW"
            ]
          }
        ]
      }
    },
    "/common/manuals/faqs": {
      "get": {
        "tags": [
          "common/manuals"
        ],
        "summary": "よくある質問取得",
        "description": "よくある質問を取得\n- 並び順:\n    - カテゴリ: FaqCategory.value 昇順\n    - FAQ: ID昇順\n- 処理手順\n    - query parameterでtarget_typeを受け取る\n    - 該当category, faqを取得",
        "operationId": "getUserFaqList",
        "parameters": [
          {
            "description": "ターゲット",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FaqTargetType"
                }
              ],
              "description": "ターゲット"
            },
            "name": "target",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get User Faq List Common Manuals Faqs Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetFaqOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "パラメータが不正: PARAMETER_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PARAMETER_ERROR": {
                    "value": {
                      "errorCode": "PARAMETER_ERROR",
                      "message": "指定されたパラメータは不正です",
                      "detail": "Parameter error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/common/manuals/pdf-manuals": {
      "get": {
        "tags": [
          "common/manuals"
        ],
        "summary": "PDFマニュアル取得",
        "description": "PDFマニュアル一覧を取得\n- 並び順: ManualPDF.order昇順\n- 処理手順\n    - user.user_typeで一般ユーザー、学校ユーザー、企業ユーザーを判定し、target_audience_typeを確定（その他は取得不可、ParameterError）\n    - ManualPDF.target_audience_typeでマニュアル特定(is_integrated=Falseのを取得)",
        "operationId": "getPdfManualList",
        "parameters": [
          {
            "description": "対象ユーザー種別",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/app__routers__common__manuals__get_pdf_manual_list__ManualTargetType"
                }
              ],
              "description": "対象ユーザー種別"
            },
            "name": "target",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPDFManualOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "パラメータが不正: PARAMETER_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PARAMETER_ERROR": {
                    "value": {
                      "errorCode": "PARAMETER_ERROR",
                      "message": "指定されたパラメータは不正です",
                      "detail": "Parameter error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/common/manuals/video-manuals": {
      "get": {
        "tags": [
          "common/manuals"
        ],
        "summary": "ビデオマニュアル取得",
        "description": "ビデオマニュアル一覧を取得\n- 並び順: ManualVideo.orderの昇順\n- 処理内容\n    - targetよりManualVideo.target_audience_typeと一致するビデオマニュアルを取得\n        - 一般ユーザー or 学校ユーザー or 企業ユーザー\n- 例外処理\n    - ParameterError",
        "operationId": "getVideoManualList",
        "parameters": [
          {
            "description": "対象ユーザータイプ",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/app__routers__common__manuals__get_video_manual_list__ManualTargetType"
                }
              ],
              "description": "対象ユーザータイプ"
            },
            "name": "target",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Video Manual List Common Manuals Video Manuals Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetVideoManualListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "パラメータが不正: PARAMETER_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PARAMETER_ERROR": {
                    "value": {
                      "errorCode": "PARAMETER_ERROR",
                      "message": "指定されたパラメータは不正です",
                      "detail": "Parameter error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/common/users/me": {
      "get": {
        "tags": [
          "common/users"
        ],
        "summary": "ログインユーザー情報取得(仮実装)",
        "description": "ログインユーザー情報取得",
        "operationId": "getMe",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeOut"
                },
                "examples": {
                  "staff": {
                    "value": {
                      "id": 1,
                      "username": "staff_user",
                      "lastName": "太郎",
                      "firstName": "田中",
                      "userType": 6,
                      "unreadChatCount": 0,
                      "organization": {
                        "id": 1,
                        "name": "組織名"
                      }
                    }
                  },
                  "company": {
                    "value": {
                      "id": 1,
                      "username": "company_user",
                      "lastName": "太郎",
                      "firstName": "田中",
                      "userType": 3,
                      "unreadChatCount": 0,
                      "organization": {
                        "id": 1,
                        "name": "組織名"
                      }
                    }
                  },
                  "school": {
                    "value": {
                      "id": 1,
                      "username": "school_user",
                      "lastName": "太郎",
                      "firstName": "田中",
                      "userType": 4,
                      "unreadChatCount": 0,
                      "organization": {
                        "id": 1,
                        "name": "組織名"
                      }
                    }
                  },
                  "skill_check": {
                    "value": {
                      "id": 1,
                      "username": "skill_check_user",
                      "lastName": "太郎",
                      "firstName": "田中",
                      "userType": 2,
                      "unreadChatCount": 0,
                      "organization": {
                        "id": 1,
                        "name": "組織名"
                      }
                    }
                  },
                  "part_timer": {
                    "value": {
                      "id": 1,
                      "username": "part_timer_user",
                      "lastName": "太郎",
                      "firstName": "田中",
                      "userType": 7,
                      "unreadChatCount": 0,
                      "organization": {
                        "id": 1,
                        "name": "組織名"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/users/me/email": {
      "post": {
        "tags": [
          "common/users"
        ],
        "summary": "メールアドレス更新",
        "description": "メールアドレス更新\n- ユーザー情報のemailパラメータを更新する",
        "operationId": "updateEmail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmailIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "パラメータが不正: PARAMETER_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PARAMETER_ERROR": {
                    "value": {
                      "errorCode": "PARAMETER_ERROR",
                      "message": "指定されたパラメータは不正です",
                      "detail": "Parameter error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/common/users/me/email/verify": {
      "post": {
        "tags": [
          "common/users"
        ],
        "summary": "ユーザーemail変更確認メール送信",
        "description": "メールアドレス変更用のメールを送信\n- メール本文にemail変更のURLを含む\n- メールアドレスの確認を行うためのメールを送信するAPIなので、メールアドレスの更新処理は行わない",
        "operationId": "sendVerifyEmail",
        "parameters": [
          {
            "description": "サブメールアドレス更新かどうか",
            "required": false,
            "schema": {
              "title": "Is Sub Email",
              "type": "boolean",
              "description": "サブメールアドレス更新かどうか",
              "default": false
            },
            "name": "is_sub_email",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/users/me/password": {
      "put": {
        "tags": [
          "common/users"
        ],
        "summary": "パスワード更新",
        "description": "パスワード更新",
        "operationId": "updatePassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/users/{user_id}/question-results": {
      "get": {
        "tags": [
          "common/users"
        ],
        "summary": "ユーザー全提出履歴一覧取得",
        "description": "- ユースケース\n    - https://docs.google.com/spreadsheets/d/1v6J6rlky2VQ0xg2yEWsBkP_sLRCg0BuMGCyf1jxixRM/edit#gid=0\n    - 一般ユーザー\n        - ポートフォリオ対象問題\n        - ポートフォリオQuestionResult判定条件\n            - https://docs.google.com/spreadsheets/d/1E0VU8yO151bZjphcOwXvsxro7YhNfb-GLtI4MbUrbBo/edit#gid=55629785\n    - EVENT_ALL\n        - 自組織主催全セッションの問題 (イベントでの提出のみ)\n    - EVENT\n        - 該当イベント内の全セッションの問題を表示 (イベントでの提出のみ)",
        "operationId": "getUserAllSubmissionList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "表示範囲",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DisplayScope"
                }
              ],
              "description": "表示範囲",
              "default": "portfolio"
            },
            "name": "display_scope",
            "in": "query"
          },
          {
            "description": "イベントID, display_scopeがEVENTの場合必須",
            "required": false,
            "schema": {
              "title": "Event Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "イベントID, display_scopeがEVENTの場合必須"
            },
            "name": "event_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 50
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAllSubmissionsOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "PORTFOLIO_VIEW",
              "OWN_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/common/users/{user_id}/question-results/questions/{content_id}/submissions": {
      "get": {
        "tags": [
          "common/users"
        ],
        "summary": "コード確認画面の提出物部分を取得する",
        "description": "コード確認画面の提出物部分を取得する\n- 必要権限:\n    - 一般ユーザー: 自分のみ\n    - エージェント\n    - スキルチェック管理者: 自組織のスキルチェックイベント参加者のみ\n    - 学校管理者: 自組織イベント参加者のみ\n    - tokenでの認証\n- データ取得可能条件:\n    - Question.question_typeが[QuestionType.SELECTION, QuestionType.BLANK]以外\n    - QuestionResultが存在する",
        "operationId": "getUserCodeCheckSubmissions",
        "parameters": [
          {
            "description": "id",
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "id"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "コンテンツID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "path"
          },
          {
            "description": "期限",
            "required": false,
            "schema": {
              "title": "Expires At",
              "type": "number",
              "description": "期限"
            },
            "name": "expires_at",
            "in": "query"
          },
          {
            "description": "HTTPメソッド",
            "required": false,
            "schema": {
              "title": "Http Method",
              "type": "string",
              "description": "HTTPメソッド"
            },
            "name": "http_method",
            "in": "query"
          },
          {
            "description": "トークン",
            "required": false,
            "schema": {
              "title": "Token",
              "type": "string",
              "description": "トークン"
            },
            "name": "token",
            "in": "query"
          },
          {
            "description": "セッションID",
            "required": false,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get User Code Check Submissions Common Users  User Id  Question Results Questions  Content Id  Submissions Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserCodeCheckSubmissionOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearerForGuest": [
              "GENERAL_USER",
              "OWN_SKILL_CHECK_ACCOUNT_VIEW",
              "OWN_SESSION_VIEW",
              "RECRUITMENT"
            ]
          }
        ]
      }
    },
    "/common/users/{user_id}/question-results/{content_id}/code-check": {
      "get": {
        "tags": [
          "common/users"
        ],
        "summary": "コード確認画面の問題文部分を取得する",
        "description": "コード確認を取得する\n- 必要権限:\n    - 一般ユーザー: 自分のみ\n    - エージェント\n    - スキルチェック管理者: 自組織のスキルチェックイベント参加者のみ\n    - 学校管理者: 自組織イベント参加者のみ\n    - tokenでの認証\n- データ取得可能条件:\n    - User.is_deleted == False\n    - QuestionResult.user_id == user_id",
        "operationId": "getUserPortfolioCode",
        "parameters": [
          {
            "description": "id",
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "id"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "コンテンツID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "path"
          },
          {
            "description": "期限",
            "required": false,
            "schema": {
              "title": "Expires At",
              "type": "number",
              "description": "期限"
            },
            "name": "expires_at",
            "in": "query"
          },
          {
            "description": "HTTPメソッド",
            "required": false,
            "schema": {
              "title": "Http Method",
              "type": "string",
              "description": "HTTPメソッド"
            },
            "name": "http_method",
            "in": "query"
          },
          {
            "description": "トークン",
            "required": false,
            "schema": {
              "title": "Token",
              "type": "string",
              "description": "トークン"
            },
            "name": "token",
            "in": "query"
          },
          {
            "description": "セッションID",
            "required": false,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPortFolioCodeOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearerForGuest": [
              "GENERAL_USER",
              "OWN_SKILL_CHECK_ACCOUNT_VIEW",
              "OWN_SESSION_VIEW",
              "RECRUITMENT"
            ]
          }
        ]
      }
    },
    "/common/files/chat-files/download-urls": {
      "post": {
        "tags": [
          "common/files"
        ],
        "summary": "チャットファイルダウンロードURL発行",
        "description": "チャットファイルダウンロードURL発行\n- ダウンロード可能条件\n    - 自身所属するチャットルーム\n        - 企業、スタッフの場合は組織単位\n        - 学校、一般ユーザーの場合は個人単位",
        "operationId": "obtainChatFileUrl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatFileDownloadIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/files/upload": {
      "post": {
        "tags": [
          "common/files"
        ],
        "summary": "ファイルアップロード",
        "description": "ファイルアップロード",
        "operationId": "uploadFile",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadFileForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Upload File Common Files Upload Post",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileDetailOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/files/upload/judge-data": {
      "post": {
        "tags": [
          "common/files"
        ],
        "summary": "事前配置ファイルアップロード",
        "description": "事前配置ファイルをジャッジのバケットにアップロード",
        "operationId": "uploadFileJudge",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadFileJudgeForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Upload File Judge Common Files Upload Judge Data Post",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileDetailOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/companies/{organization_id}/documents": {
      "get": {
        "tags": [
          "common/companies"
        ],
        "summary": "企業資料一覧を取得",
        "description": "企業資料一覧を取得\n- 並び順:id昇順\n- 取得条件:\n    - Organization.is_deleted = False",
        "operationId": "getCompanyDocumentList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "organization_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Company Document List Common Companies  Organization Id  Documents Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyDocumentListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/companies/{organization_id}/documents/{document_id}": {
      "get": {
        "tags": [
          "common/companies"
        ],
        "summary": "企業資料を取得",
        "description": "企業資料を取得\n- 取得条件:\n    - Organization.is_deleted = False",
        "operationId": "getCompanyDocument",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "organization_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Document Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "document_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDocumentDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/chat-rooms/chats/unread-number": {
      "get": {
        "tags": [
          "common/chat-rooms"
        ],
        "summary": "チャット未読数取得",
        "description": "チャット未読数取得\n- 必要権限\n    - [Pm.GENERAL_USER,Pm.CHAT]",
        "operationId": "getChatUnreadNumber",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatUnReadNumberOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "GENERAL_USER",
              "CHAT",
              "CHAT_VIEW"
            ]
          }
        ]
      }
    },
    "/common/contacts": {
      "post": {
        "tags": [
          "common/contacts"
        ],
        "summary": "お問い合わせ送信",
        "description": "お問い合わせ内容を送信\n- レスポンス:\n    -\n- 処理内容:\n    - 一般ユーザーの場合\n        - Contactテーブルの該当項目を追加\n            - contact_type -> GENERAL\n            - organization_id -> なし\n            - user_id -> ユーザーID\n            - name -> 空文字\n            - email -> ユーザーに紐づくメールアドレス\n            - title -> \"TechFUL内でユーザーからのお問い合わせがありました。\"で固定\n            - body -> 送られてきた問い合わせ内容\n    - 企業・学校の場合\n        - Contactテーブルに該当する項目を追加\n            - name email title bodyは送られてきた内容\n    - 送られてきた内容を444管理のメールアドレスに送信\n- 補足:\n    - 一般ユーザと企業・学校で送られてくる内容が異なる\n        - 一般: 問い合わせ内容のみ\n        - 企業・学校: 本名・メールアドレス・件名・問い合わせ内容\n    - メールの宛先や文面は「通知の方法確認(23/2/17)」スプレッドシートを確認",
        "operationId": "sendContacts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommonContactsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/common/sample-codes": {
      "get": {
        "tags": [
          "common/sample-codes"
        ],
        "summary": "PG言語別サンプルコード一覧取得",
        "description": "PG言語別サンプルコード一覧を取得\n- 並び順: order昇順",
        "operationId": "getPgLangSampleCodeList",
        "parameters": [
          {
            "description": "PG言語ID",
            "required": true,
            "schema": {
              "title": "Pg Lang Id",
              "type": "integer",
              "description": "PG言語ID"
            },
            "name": "pg_lang_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Pg Lang Sample Code List Common Sample Codes Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PgLangSampleCodeListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/judge/errors": {
      "post": {
        "tags": [
          "judge"
        ],
        "summary": "ジャッジエラー報告API",
        "description": "ユーザからバックエンドへのジャッジエラー報告\n- 444 の Slack に Webhook で送信\n- 指定された問題やセッションが存在しない / is_deleted==True の場合は NotFound\n- 「時刻」「提出id」「問題名(id)」「ユーザー名(id)」「出題場所」「window.navigator.userAgentの情報」を通知",
        "operationId": "notifyJudgeError",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotifyJudgeErrorIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/judge/results": {
      "post": {
        "tags": [
          "judge"
        ],
        "summary": "judge結果書き込み",
        "description": "judge結果を書き込み\n- judgeシステムからアクセス可能",
        "operationId": "judgeResult",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JudgeResultIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/manage/contents/{content_id}/favorites": {
      "post": {
        "tags": [
          "manage/contents"
        ],
        "summary": "お気に入り自組織コンテンツを作成する",
        "description": "お気に入り自組織コンテンツを作成する\n- 必要権限: [PROBLEM_VIEW] [MATERIAL_VIEW]\n- 実行条件: 条件不一致の場合、NotFound(404)を返す\n    - 削除済みコンテンツは実行不可\n    - 非公開コンテンツは自組織コンテンツのみ実行可能\n    - 組織お気に入りコンテンツに含まれていないコンテンツのみ実行可能",
        "operationId": "createFavoriteOrganizationContent",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PROBLEM_VIEW",
              "MATERIAL_VIEW"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/contents"
        ],
        "summary": "お気に入り自組織コンテンツを削除する",
        "description": "お気に入り自組織コンテンツを物理削除する\n- 必要権限: [PROBLEM_VIEW] [MATERIAL_VIEW]\n- 実行条件: 条件不一致の場合、NotFound(404)を返す\n    - 削除済みコンテンツは実行不可\n    - 非公開コンテンツは自組織コンテンツのみ実行可能\n    - 組織お気に入りコンテンツに含まれているのみ実行可能",
        "operationId": "deleteFavoriteOrganizationContent",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PROBLEM_VIEW",
              "MATERIAL_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/content-topics": {
      "get": {
        "tags": [
          "manage/content-topics"
        ],
        "summary": "コンテンツトピック一覧取得",
        "description": "コンテンツトピック一覧を取得\n- 必要権限: [ASSETS_EDIT]\n- 並び順: id降順",
        "operationId": "getContentTopicList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Content Topic List Manage Content Topics Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentTopicListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT",
              "ASSETS_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/content-topics"
        ],
        "summary": "コンテンツトピック作成",
        "description": "コンテンツトピックを作成\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "createContentTopic",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentTopicCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTopicDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/content-topics/{content_topic_id}": {
      "get": {
        "tags": [
          "manage/content-topics"
        ],
        "summary": "コンテンツトピック詳細取得",
        "description": "コンテンツトピック詳細を取得\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "getContentTopic",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Topic Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_topic_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTopicDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/content-topics"
        ],
        "summary": "コンテンツトピック削除",
        "description": "コンテンツトピックを削除\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "deleteContentTopic",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Topic Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_topic_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "データが紐付いているため削除不可: CANNOT_BE_DELETED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_BE_DELETED": {
                    "value": {
                      "errorCode": "CANNOT_BE_DELETED",
                      "message": "データが紐付いているため削除できません",
                      "detail": "Cannot be deleted because the data is linked"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/content-topics"
        ],
        "summary": "コンテンツトピック更新",
        "description": "コンテンツトピックを更新\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "updateContentTopic",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Topic Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_topic_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentTopicUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentTopicDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/information": {
      "get": {
        "tags": [
          "manage/information"
        ],
        "summary": "インフォ一覧取得",
        "description": "インフォ一覧を取得\n- 必要権限: [INFORMATION_VIEW]\n- 並び順: id降順",
        "operationId": "getInformationList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Information List Manage Information Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InformationListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "INFORMATION_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/information"
        ],
        "summary": "インフォ作成",
        "description": "インフォを作成\n- 必要権限: [INFORMATION_EDIT]\n- 登録データ補足情報\n    - created_by: last_name + first_name",
        "operationId": "createInformation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InformationCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__manage__information__information_detail_out__InformationDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "INFORMATION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/information/{information_id}": {
      "get": {
        "tags": [
          "manage/information"
        ],
        "summary": "インフォ詳細取得",
        "description": "インフォ詳細を取得\n- 必要権限: [INFORMATION_VIEW]",
        "operationId": "getInformation",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Information Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "information_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__manage__information__information_detail_out__InformationDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "INFORMATION_VIEW"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/information"
        ],
        "summary": "インフォ削除",
        "description": "インフォを削除\n- 必要権限: [INFORMATION_EDIT]",
        "operationId": "deleteInformation",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Information Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "information_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "INFORMATION_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/information"
        ],
        "summary": "インフォ更新",
        "description": "インフォを更新\n- 必要権限: [INFORMATION_EDIT]\n- 登録データ補足情報\n    - updated_by: last_name + first_name",
        "operationId": "updateInformation",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Information Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "information_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InformationUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__manage__information__information_detail_out__InformationDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "INFORMATION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/selections": {
      "get": {
        "tags": [
          "manage/selections"
        ],
        "summary": "選考管理一覧取得",
        "description": "選考管理一覧取得\n- 必要権限: [SELECTION | PORTFOLIO_PERSONAL_INFORMATION_VIEW | RECRUITMENT]\n- 並び順: 選考ID降順\n- 444スタッフ： 企業名検索ができる & 件数取得\n- 企業ユーザー: 自分が所属する企業IDで絞り込み & 企業名検索ができない ＆ 件数取得\n- 取得条件\n    - Job.is_deleted=False\n    - Job.is_published=True\n- 項目取得条件\n    - 本名/年齢\n        - PORTFOLIO_PERSONAL_INFORMATION_VIEW\n        - RECRUITMENT & 対象ユーザー人材紹介規約同意済み\n        - SELECTION & 選考タイプ：スカウト & スカウト承諾済み(応募中以降の選考中ステップあり)\n        - SELECTION & 選考タイプ：自己応募 & 選考受理済み(書類選考以降の選考中ステップあり)\n    - 条件を満たさない場合はNoneにする(非表示)\n- 検索条件\n    - UserID\n    - 求人ID\n    - 選考ステップ\n- 絞り込み条件\n    - お気に入り\n    - 企業ID\n    - 選考ステップ\n    - 選考開始年\n    - 卒業年度",
        "operationId": "getSelectionList",
        "parameters": [
          {
            "description": "アカウント名",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "アカウント名"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "求人ID",
            "required": false,
            "schema": {
              "title": "Job Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "求人ID"
            },
            "name": "job_id",
            "in": "query"
          },
          {
            "description": "組織ID",
            "required": false,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "組織ID"
            },
            "name": "organization_id",
            "in": "query"
          },
          {
            "description": "企業ID",
            "required": false,
            "schema": {
              "title": "Company Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "企業ID"
            },
            "name": "company_id",
            "in": "query"
          },
          {
            "description": "お気に入りか",
            "required": false,
            "schema": {
              "title": "Is Favorite",
              "type": "boolean",
              "description": "お気に入りか"
            },
            "name": "is_favorite",
            "in": "query"
          },
          {
            "description": "10:応募中, 11:スカウト承諾待ち, 20:書類選考, 21:1次面接, 22:2次面接, 23:3次面接, 24:4次面接, 25:5次面接, 30:内定出し, 31:内定承諾, 32:入社済み, 40:スカウト不承諾, 41:お見送り, 42:辞退, 49:終了",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SelectionStep"
              },
              "description": "10:応募中, 11:スカウト承諾待ち, 20:書類選考, 21:1次面接, 22:2次面接, 23:3次面接, 24:4次面接, 25:5次面接, 30:内定出し, 31:内定承諾, 32:入社済み, 40:スカウト不承諾, 41:お見送り, 42:辞退, 49:終了"
            },
            "name": "selection_step",
            "in": "query"
          },
          {
            "description": "選考開始年",
            "required": false,
            "schema": {
              "title": "Starts At",
              "type": "integer",
              "description": "選考開始年"
            },
            "name": "starts_at",
            "in": "query"
          },
          {
            "description": "卒業年度FROM",
            "required": false,
            "schema": {
              "title": "Graduation Year From",
              "type": "integer",
              "description": "卒業年度FROM"
            },
            "name": "graduation_year_from",
            "in": "query"
          },
          {
            "description": "卒業年度TO",
            "required": false,
            "schema": {
              "title": "Graduation Year To",
              "type": "integer",
              "description": "卒業年度TO"
            },
            "name": "graduation_year_to",
            "in": "query"
          },
          {
            "description": "取得開始位置",
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "description": "取得開始位置",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "description": "取得件数",
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "取得件数",
              "default": 200
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectionListOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "SELECTION",
              "PORTFOLIO_PERSONAL_INFORMATION_VIEW",
              "RECRUITMENT"
            ]
          }
        ]
      }
    },
    "/manage/selections/{job_selection_id}/datetime": {
      "patch": {
        "tags": [
          "manage/selections"
        ],
        "summary": "選考予定日を更新",
        "description": "選考予定日を更新\n- 必要権限: [SELECTION]\n- 更新条件\n    - Job.is_deleted=False\n    - Job.is_published=True\n    - selection_stepが終了以外\n    - 選考開始日から365日以内",
        "operationId": "updateSelectionDatetime",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Job Selection Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "job_selection_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SelectionDateTimeUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "SELECTION"
            ]
          }
        ]
      }
    },
    "/manage/selections/{job_selection_id}/favorites": {
      "patch": {
        "tags": [
          "manage/selections"
        ],
        "summary": "お気に入り選考を更新",
        "description": "お気に入り選考を更新\n- 必要権限: [SELECTION]\n- is_favorite = Falseの場合、Trueへ更新\n- is_favorite = Trueの場合、Falseへ更新",
        "operationId": "updateFavoriteSelection",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Job Selection Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "job_selection_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "SELECTION"
            ]
          }
        ]
      }
    },
    "/manage/selections/{job_selection_id}/memo": {
      "patch": {
        "tags": [
          "manage/selections"
        ],
        "summary": "選考メモ更新",
        "description": "選考メモ更新\n- 必要権限: [SELECTION]\n- 更新条件\n    - Job.is_deleted=False\n    - Job.is_published=True",
        "operationId": "updateSelectionMemo",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Job Selection Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "job_selection_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SelectionMemoUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "SELECTION"
            ]
          }
        ]
      }
    },
    "/manage/selections/{job_selection_id}/steps": {
      "patch": {
        "tags": [
          "manage/selections"
        ],
        "summary": "選考ステップを更新",
        "description": "選考ステップを更新\n- 必要権限: [SELECTION]\n- 更新条件\n    - Job.is_deleted=False\n    - Job.is_published=True\n    - selection_stepが終了以外\n    - 選考開始日から365日以内\n    - status(選考ステップ)が選考終了区分のステップに変更された際に、直前のstatusの値をfinished_status(選考終了時のステップ)に格納する\n    - 求人選考タイプ(JobSelectionType)毎の選考管理\n        - 共通\n            - スタッフは選考ステータスを制限なく編集できる。\n            - ユーザーから辞退の操作ができるのはスカウト承認待ちの際のみ。\n        - エージェント経由 AGENT\n            - 人材紹介プラン契約中の企業が選択できる選考種別。\n            - 選考ステータスの管理はスタッフが行う。\n            - 企業は選考ステータスを編集できない。\n        - 自社選考 DIRECT\n            - スカウトプラン契約中の企業が選択できる選考種別。\n            - 選考ステータスの管理は企業が行う。\n            - 企業は選考ステータスを前ステップへ戻せない。\n                - 現在の選考ステップ(SelectionStep)より小さい選考ステップへ更新できない",
        "operationId": "updateSelection",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Job Selection Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "job_selection_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SelectionStepUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "条件を満たしていないため実行不可: CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED<br>パラメータが不正: PARAMETER_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED": {
                    "value": {
                      "errorCode": "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
                      "message": "条件を満たしていないため実行不可",
                      "detail": "Cannot be executed because the required conditions are not satisfied."
                    }
                  },
                  "PARAMETER_ERROR": {
                    "value": {
                      "errorCode": "PARAMETER_ERROR",
                      "message": "指定されたパラメータは不正です",
                      "detail": "Parameter error"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "SELECTION"
            ]
          }
        ]
      }
    },
    "/manage/content-categories": {
      "get": {
        "tags": [
          "manage/content-categories"
        ],
        "summary": "コンテンツカテゴリ一覧取得",
        "description": "コンテンツカテゴリ一覧を取得\n- 必要権限: [ASSETS_EDIT]\n- 並び順: id降順",
        "operationId": "getContentCategoryList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Content Category List Manage Content Categories Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentCategoryListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT",
              "ASSETS_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/content-categories"
        ],
        "summary": "コンテンツカテゴリ作成",
        "description": "コンテンツカテゴリを作成\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "createContentCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentCategoryCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentCategoryDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/content-categories/{content_category_id}": {
      "get": {
        "tags": [
          "manage/content-categories"
        ],
        "summary": "コンテンツカテゴリ詳細取得",
        "description": "コンテンツカテゴリ詳細を取得\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "getContentCategory",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Category Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_category_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentCategoryDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/content-categories"
        ],
        "summary": "コンテンツカテゴリ削除",
        "description": "コンテンツカテゴリを削除\n- 必要権限: [ASSETS_EDIT]\n- 物理削除、コンテンツトピックが紐付いている場合は削除不可",
        "operationId": "deleteContentCategory",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Category Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_category_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "データが紐付いているため削除不可: CANNOT_BE_DELETED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_BE_DELETED": {
                    "value": {
                      "errorCode": "CANNOT_BE_DELETED",
                      "message": "データが紐付いているため削除できません",
                      "detail": "Cannot be deleted because the data is linked"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/content-categories"
        ],
        "summary": "コンテンツカテゴリ更新",
        "description": "コンテンツカテゴリを更新\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "updateContentCategory",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Category Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_category_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentCategoryUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentCategoryDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/school-departments": {
      "get": {
        "tags": [
          "manage/schools/school-departments"
        ],
        "summary": "学部一覧取得",
        "description": "学部一覧取得\n- 必要権限: [ALL_ADMIN_EDIT]\n- id降順で表示する\n- 以下の条件のデータのみ取得可能\n    - OrganizationType: SCHOOL\n    - is_deleted: False",
        "operationId": "getSchoolDepartmentList",
        "parameters": [
          {
            "description": "学校ID",
            "required": false,
            "schema": {
              "title": "School Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "学校ID"
            },
            "name": "school_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get School Department List Manage School Departments Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SchoolDepartmentListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_EDIT"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/schools/school-departments"
        ],
        "summary": "学部作成",
        "description": "学部を作成\n- 必要権限: [ALL_ADMIN_EDIT]\n- 作成者に姓名を入力する",
        "operationId": "createSchoolDepartment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchoolDepartmentCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolDepartmentDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/school-departments/{organization_id}": {
      "get": {
        "tags": [
          "manage/schools/school-departments"
        ],
        "summary": "学部詳細取得",
        "description": "学部詳細取得\n- 必要権限: [ALL_ADMIN_VIEW]\n- 以下の条件のデータのみ取得可能\n    - OrganizationType: SCHOOL\n    - is_deleted: False",
        "operationId": "getSchoolDepartment",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "organization_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolDepartmentDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_VIEW"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/schools/school-departments"
        ],
        "summary": "学部更新",
        "description": "学部を更新\n- 必要権限: [ALL_ADMIN_EDIT]\n- 更新者に姓名を入力する",
        "operationId": "updateSchoolDepartment",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "organization_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchoolDepartmentUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolDepartmentDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/choices/scout-mail-templates": {
      "get": {
        "tags": [
          "manage/choices"
        ],
        "summary": "スカウトメールテンプレート選択肢一覧取得",
        "description": "スカウトメールテンプレート一覧を取得\n- 必要権限: [SCOUT]\n- 並び順: id降順\n- ログインユーザー企業と全体公開のデータを取得可能",
        "operationId": "getScoutMailTemplateChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Scout Mail Template Choices Manage Choices Scout Mail Templates Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScoutMailTemplateChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "SCOUT"
            ]
          }
        ]
      }
    },
    "/manage/choices/session_terms": {
      "get": {
        "tags": [
          "manage/choices"
        ],
        "summary": "セッション規約選択肢一覧取得",
        "description": "セッション規約選択肢一覧を取得\n- 必要権限: [OWN_SESSION_VIEW] [ALL_EVENT_AND_SESSION_VIEW]\n- 並び順: id降順\n- 自組織で作成した規約のみ取得可能",
        "operationId": "getSessionTermChoices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Session Term Choices Manage Choices Session Terms Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionTermChoicesOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/part-timers": {
      "get": {
        "tags": [
          "manage/part-timers"
        ],
        "summary": "アルバイト一覧",
        "description": "アルバイトアカウント一覧を取得\n- 必要権限: [STAFF_VIEW]\n- ログインユーザー所属組織のアルバイトを取得\n- is_deleted=Falseのスタッフのみ取得\n- 並び順: id昇順",
        "operationId": "getPartTimerList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Part Timer List Manage Part Timers Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartTimersListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "STAFF_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/part-timers"
        ],
        "summary": "アルバイト作成",
        "description": "アルバイトアカウント作成\n- 必要権限: [STAFF_EDIT]\n- ログインユーザー所属組織のアルバイトアカウントを作成する\n- 登録データ補足情報\n    - created_by: ログインユーザーのlast_name + first_name",
        "operationId": "createPartTimers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartTimersCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartTimersDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "データが重複している: DUPLICATE_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DUPLICATE_ERROR": {
                    "value": {
                      "errorCode": "DUPLICATE_ERROR",
                      "message": "データが重複しています",
                      "detail": "duplicate key value violates unique constraintr"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "STAFF_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/part-timers/{part_time_id}": {
      "delete": {
        "tags": [
          "manage/part-timers"
        ],
        "summary": "アルバイト削除",
        "description": "アルバイトアカウント論理削除\n- 必要権限: [STAFF_EDIT]\n- is_deleted=Falseのアルバイトのみ削除可能\n- ログインユーザー所属組織のアルバイトのみ削除可能",
        "operationId": "deletePartTimer",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Part Time Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "part_time_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "STAFF_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/job-users": {
      "get": {
        "tags": [
          "manage/job-users"
        ],
        "summary": "求人ユーザー検索一覧取得",
        "description": "求人ユーザー一覧取得\n- 必要権限: [RECRUITMENT]\n- ユーザー名検索(絞り込みと併用しない)：\n    - 完全一致\n    - あいまい検索(部分一致)\n- ユーザ絞り込み：\n    - 卒業年度\n    - 居住地\n    - 登録日時\n    - 最終アクセス\n    - 現在の職業(学生/会社員)\n    - スカウト状況(未スカウト/承諾待ち/承諾済み/不承諾/スカウト拒否)\n    - 希望勤務地\n    - 希望職種\n    - スキルレベル(入門/初級/中級/上級/スキルレベルなし)\n    - 得意プログラミング言語\n- ページネーション: 50件\n- 表示条件\n    - User.is_deleted = False\n    - GeneralUser.receive_scouts = True\n- Response:\n    - 成功: HTTP_200_OK\n- 処理内容:\n    1. 権限確認\n        - 他組織求人を閲覧できることを確認\n    2. ユーザー名検索 or 絞り込み\n        - 取得クエリ作成\n        - 件数取得\n    3. 求人ユーザー一覧取得\n- 並び順:ID降順\n- 取得条件:\n    - 一般ユーザーであること\n    - 削除済みでないこと",
        "operationId": "getJobUserList",
        "parameters": [
          {
            "description": "あいまいユーザ名検索か",
            "required": false,
            "schema": {
              "title": "Fuzzy Search Name",
              "type": "boolean",
              "description": "あいまいユーザ名検索か"
            },
            "name": "fuzzy_search_name",
            "in": "query"
          },
          {
            "description": "ユーザー名",
            "required": false,
            "schema": {
              "title": "Name",
              "type": "string",
              "description": "ユーザー名"
            },
            "name": "name",
            "in": "query"
          },
          {
            "description": "卒業年下限",
            "required": false,
            "schema": {
              "title": "Lower Limit Graduate Year",
              "type": "integer",
              "description": "卒業年下限"
            },
            "name": "lower_limit_graduate_year",
            "in": "query"
          },
          {
            "description": "卒業年上限",
            "required": false,
            "schema": {
              "title": "Upper Limit Graduate Year",
              "type": "integer",
              "description": "卒業年上限"
            },
            "name": "upper_limit_graduate_year",
            "in": "query"
          },
          {
            "description": "卒業年未入力",
            "required": false,
            "schema": {
              "title": "Undefined Graduate Year",
              "type": "boolean",
              "description": "卒業年未入力"
            },
            "name": "undefined_graduate_year",
            "in": "query"
          },
          {
            "description": "現在の職業",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CurrentJob"
              },
              "description": "現在の職業"
            },
            "name": "current_job_type_lists",
            "in": "query"
          },
          {
            "description": "スカウト状況",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ReferableUserStatus"
              },
              "description": "スカウト状況"
            },
            "name": "scout_status_lists",
            "in": "query"
          },
          {
            "description": "居住地ID",
            "required": false,
            "schema": {
              "title": "Residence Id",
              "type": "integer",
              "description": "居住地ID"
            },
            "name": "residence_id",
            "in": "query"
          },
          {
            "description": "登録日時下限",
            "required": false,
            "schema": {
              "title": "Lower Limit Registration Date",
              "type": "string",
              "description": "登録日時下限",
              "format": "date-time"
            },
            "name": "lower_limit_registration_date",
            "in": "query"
          },
          {
            "description": "登録日時上限",
            "required": false,
            "schema": {
              "title": "Upper Limit Registration Date",
              "type": "string",
              "description": "登録日時上限",
              "format": "date-time"
            },
            "name": "upper_limit_registration_date",
            "in": "query"
          },
          {
            "description": "最終アクセス日時下限",
            "required": false,
            "schema": {
              "title": "Lower Limit Last Access Date",
              "type": "string",
              "description": "最終アクセス日時下限",
              "format": "date-time"
            },
            "name": "lower_limit_last_access_date",
            "in": "query"
          },
          {
            "description": "登最終アクセス日時上限",
            "required": false,
            "schema": {
              "title": "Upper Limit Last Access Date",
              "type": "string",
              "description": "登最終アクセス日時上限",
              "format": "date-time"
            },
            "name": "upper_limit_last_access_date",
            "in": "query"
          },
          {
            "description": "希望勤務地ID",
            "required": false,
            "schema": {
              "title": "Desired Prefecture Ids",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "希望勤務地ID"
            },
            "name": "desired_prefecture_ids",
            "in": "query"
          },
          {
            "description": "希望職種ID",
            "required": false,
            "schema": {
              "title": "Desired Occupation Ids",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "希望職種ID"
            },
            "name": "desired_occupation_ids",
            "in": "query"
          },
          {
            "description": "レベル",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SkillLevel"
              },
              "description": "レベル"
            },
            "name": "skill_levels",
            "in": "query"
          },
          {
            "description": "使用PG言語ID",
            "required": false,
            "schema": {
              "title": "User Used Pg Lang Ids",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "使用PG言語ID"
            },
            "name": "user_used_pg_lang_ids",
            "in": "query"
          },
          {
            "description": "得意なPG言語ID",
            "required": false,
            "schema": {
              "title": "User Preferred Pg Lang Ids",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "得意なPG言語ID"
            },
            "name": "user_preferred_pg_lang_ids",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "minimum": 0.0,
              "type": "integer",
              "default": 50
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobUserListOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "RECRUITMENT"
            ]
          }
        ]
      }
    },
    "/manage/job-users/detail-modal/{user_id}": {
      "get": {
        "tags": [
          "manage/job-users"
        ],
        "summary": "スカウト承諾済み求人ユーザー詳細取得",
        "description": "スカウト承諾済み求人ユーザー詳細取得\n- 必要権限: [SCOUT], [ALL_JOB_VIEW], [OWN_JOB_VIEW]\n- 取得条件:\n    - 一般ユーザーであること\n    - 削除済みでないこと\n- Response:\n    - 成功: HTTP_200_OK\n- 処理内容:",
        "operationId": "getJobUserDetailModal",
        "parameters": [
          {
            "description": "ユーザーID",
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "ユーザーID"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobUserDetailModalOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "RECRUITMENT"
            ]
          }
        ]
      }
    },
    "/manage/job-users/download": {
      "get": {
        "tags": [
          "manage/job-users"
        ],
        "summary": "求人ユーザー一覧ダウンロード",
        "description": "求人ユーザー一覧のダウンロード\n- 必要権限：[SCOUT],[ALL_JOB_VIEW],[OWN_JOB_VIEW]\n- 実行処理\n    - 求人ユーザー一覧取得APIと共通の処理\n    - 上記処理のレスポンスデータから対象のデータをcsvファイルに書き出しレスポンスとして返す\n- 書き出すデータのカラム名\n    - 行番号\n    - ユーザー名\n    - 現住所　※現在住んでいる都道府県\n    - 現職\n    - 学校区分\n    - 学校\n    - 学部・学科\n    - 卒業年度\n    - 希望職種\n    - 希望勤務地\n    - レベル\n- csvファイル名: users_list_yyyymmddss\n- 権限がない場合、PermissionDenied\n- 補足\n    - 求人ユーザー一覧取得APIがまだ実装されていないため、クエリパラメータ名は仮\n    - クエリパラメータ名は統一させるので、確定したら修正",
        "operationId": "downloadJobUserList",
        "parameters": [
          {
            "description": "あいまいユーザ名検索か",
            "required": false,
            "schema": {
              "title": "Fuzzy Search Name",
              "type": "boolean",
              "description": "あいまいユーザ名検索か"
            },
            "name": "fuzzy_search_name",
            "in": "query"
          },
          {
            "description": "ユーザー名",
            "required": false,
            "schema": {
              "title": "Name",
              "type": "string",
              "description": "ユーザー名"
            },
            "name": "name",
            "in": "query"
          },
          {
            "description": "卒業年下限",
            "required": false,
            "schema": {
              "title": "Lower Limit Graduate Year",
              "type": "integer",
              "description": "卒業年下限"
            },
            "name": "lower_limit_graduate_year",
            "in": "query"
          },
          {
            "description": "卒業年上限",
            "required": false,
            "schema": {
              "title": "Upper Limit Graduate Year",
              "type": "integer",
              "description": "卒業年上限"
            },
            "name": "upper_limit_graduate_year",
            "in": "query"
          },
          {
            "description": "卒業年未入力",
            "required": false,
            "schema": {
              "title": "Undefined Graduate Year",
              "type": "boolean",
              "description": "卒業年未入力"
            },
            "name": "undefined_graduate_year",
            "in": "query"
          },
          {
            "description": "現在の職業",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CurrentJob"
              },
              "description": "現在の職業"
            },
            "name": "current_job_type_lists",
            "in": "query"
          },
          {
            "description": "スカウト状況",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ReferableUserStatus"
              },
              "description": "スカウト状況"
            },
            "name": "scout_status_lists",
            "in": "query"
          },
          {
            "description": "居住地ID",
            "required": false,
            "schema": {
              "title": "Residence Id",
              "type": "integer",
              "description": "居住地ID"
            },
            "name": "residence_id",
            "in": "query"
          },
          {
            "description": "登録日時下限",
            "required": false,
            "schema": {
              "title": "Lower Limit Registration Date",
              "type": "string",
              "description": "登録日時下限",
              "format": "date-time"
            },
            "name": "lower_limit_registration_date",
            "in": "query"
          },
          {
            "description": "登録日時上限",
            "required": false,
            "schema": {
              "title": "Upper Limit Registration Date",
              "type": "string",
              "description": "登録日時上限",
              "format": "date-time"
            },
            "name": "upper_limit_registration_date",
            "in": "query"
          },
          {
            "description": "最終アクセス日時下限",
            "required": false,
            "schema": {
              "title": "Lower Limit Last Access Date",
              "type": "string",
              "description": "最終アクセス日時下限",
              "format": "date-time"
            },
            "name": "lower_limit_last_access_date",
            "in": "query"
          },
          {
            "description": "最終アクセス日時上限",
            "required": false,
            "schema": {
              "title": "Upper Limit Last Access Date",
              "type": "string",
              "description": "最終アクセス日時上限",
              "format": "date-time"
            },
            "name": "upper_limit_last_access_date",
            "in": "query"
          },
          {
            "description": "希望勤務地ID",
            "required": false,
            "schema": {
              "title": "Desired Prefecture Ids",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "希望勤務地ID"
            },
            "name": "desired_prefecture_ids",
            "in": "query"
          },
          {
            "description": "希望職種ID",
            "required": false,
            "schema": {
              "title": "Desired Occupation Ids",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "希望職種ID"
            },
            "name": "desired_occupation_ids",
            "in": "query"
          },
          {
            "description": "レベル",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SkillLevel"
              },
              "description": "レベル"
            },
            "name": "skill_levels",
            "in": "query"
          },
          {
            "description": "使用PG言語ID",
            "required": false,
            "schema": {
              "title": "User Used Pg Lang Ids",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "使用PG言語ID"
            },
            "name": "user_used_pg_lang_ids",
            "in": "query"
          },
          {
            "description": "得意なPG言語ID",
            "required": false,
            "schema": {
              "title": "User Preferred Pg Lang Ids",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "得意なPG言語ID"
            },
            "name": "user_preferred_pg_lang_ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "SCOUT",
              "ALL_JOB_VIEW",
              "OWN_JOB_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/job-users/info-modal/{user_id}": {
      "get": {
        "tags": [
          "manage/job-users"
        ],
        "summary": "スカウト承諾済みでない求人ユーザー情報取得",
        "description": "求人ユーザー情報取得\n- 必要権限: [RECRUITMENT]\n- 表示条件\n    - User.is_deleted = False\n    - GeneralUser.receive_scouts = True\n- Response:\n    - 成功: HTTP_200_OK\n- 処理内容:\n    - 承諾済のみfull nameを表示する",
        "operationId": "getJobUserInfoModal",
        "parameters": [
          {
            "description": "ユーザーID",
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "ユーザーID"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobUserInfoModalOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "条件を満たしていないため実行不可: CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED": {
                    "value": {
                      "errorCode": "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
                      "message": "条件を満たしていないため実行不可",
                      "detail": "Cannot be executed because the required conditions are not satisfied."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "RECRUITMENT"
            ]
          }
        ]
      }
    },
    "/manage/job-users/introduced-jobs/{job_user_id}": {
      "get": {
        "tags": [
          "manage/job-users"
        ],
        "summary": "紹介済み求人一覧取得",
        "description": "紹介済み求人一覧取得\n- 必要権限：[RECRUITMENT]\n- 並び順: 求人created_atの降順\n- 実行処理\n  - free_wordで(企業名または求人名で検索)で検索\n  - free_wordの初期値はNoneのため条件指定なしの検索\n  - スカウト先企業候補の情報をDB取得\n  - 一覧表示する企業の情報は別APIにて取得",
        "operationId": "getIntroducedJobsForJobUser",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Job User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "job_user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Introduced Jobs For Job User Manage Job Users Introduced Jobs  Job User Id  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScoutListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "RECRUITMENT"
            ]
          }
        ]
      }
    },
    "/manage/job-users/{job_user_id}/memo": {
      "patch": {
        "tags": [
          "manage/job-users"
        ],
        "summary": "求人ユーザーメモ更新",
        "description": "求人ユーザーメモを更新する\n- 必要権限：[SCOUT],[ALL_JOB_VIEW],[OWN_JOB_VIEW]\n- 更新条件\n    - ReferableUser.is_deleted=False",
        "operationId": "updateJobUsersMemo",
        "parameters": [
          {
            "description": "id",
            "required": true,
            "schema": {
              "title": "Job User Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "id"
            },
            "name": "job_user_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobUsersMemoUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "SCOUT",
              "ALL_JOB_VIEW",
              "OWN_JOB_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/job-users/{job_user_id}/scout-invitation": {
      "post": {
        "tags": [
          "manage/job-users"
        ],
        "summary": "未スカウトユーザーにスカウト送信",
        "description": "未スカウトユーザーにスカウト送信(ReferableUser作成)",
        "operationId": "sendScoutInvitation",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Job User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "job_user_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScoutInvitationIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "パラメータが不正: PARAMETER_ERROR<br>データが重複している: DUPLICATE_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PARAMETER_ERROR": {
                    "value": {
                      "errorCode": "PARAMETER_ERROR",
                      "message": "指定されたパラメータは不正です",
                      "detail": "Parameter error"
                    }
                  },
                  "DUPLICATE_ERROR": {
                    "value": {
                      "errorCode": "DUPLICATE_ERROR",
                      "message": "データが重複しています",
                      "detail": "duplicate key value violates unique constraintr"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "RECRUITMENT"
            ]
          }
        ]
      }
    },
    "/manage/job-users/{job_user_id}/scout-list": {
      "get": {
        "tags": [
          "manage/job-users"
        ],
        "summary": "求人ユーザースカウト先企業候補一覧取得",
        "description": "求人ユーザースカウト先企業候補一覧を取得\n- 必要権限：[RECRUITMENT]\n- 並び順: 求人IDの昇順\n- データ取得可能条件:\n    - JobSelection.organization_id == user.organization_id\n    - JobSelection.user_id == job_user_id\n    - JobSelection.selection_type == SelectionType.SCOUT",
        "operationId": "getJobUserScoutList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Job User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "job_user_id",
            "in": "path"
          },
          {
            "description": "企業名かタイトル検索",
            "required": false,
            "schema": {
              "title": "Free Word",
              "type": "string",
              "description": "企業名かタイトル検索"
            },
            "name": "free_word",
            "in": "query"
          },
          {
            "description": "取得件数",
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "取得件数",
              "default": 50
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "取得開始位置",
            "required": false,
            "schema": {
              "title": "Offset",
              "type": "integer",
              "description": "取得開始位置",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntroducedJobListOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "RECRUITMENT"
            ]
          }
        ]
      }
    },
    "/manage/job-users/{job_user_id}/status": {
      "patch": {
        "tags": [
          "manage/job-users"
        ],
        "summary": "求人ユーザーステータス更新(未実装)",
        "description": "求人ユーザーステータスを更新する\n- 必要権限: [RECRUITMENT]\n- 更新条件\n    - ReferableUser.is_deleted=False",
        "operationId": "updateJobUsersStatus",
        "parameters": [
          {
            "description": "id",
            "required": true,
            "schema": {
              "title": "Job User Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "id"
            },
            "name": "job_user_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobUsersStatusUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "条件を満たしていないため実行不可: CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED": {
                    "value": {
                      "errorCode": "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
                      "message": "条件を満たしていないため実行不可",
                      "detail": "Cannot be executed because the required conditions are not satisfied."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "RECRUITMENT"
            ]
          }
        ]
      }
    },
    "/manage/job-users/{job_user_id}/submit-scout/{job_id}": {
      "post": {
        "tags": [
          "manage/job-users"
        ],
        "summary": "ユーザーに求人を紹介するAPI",
        "description": "ユーザーに求人を紹介するAPI\n必要権限: [RECRUITMENT]\nデータ取得条件:\n    - User\n        - User.user_type == UserType.GENERAL_USER\n        - User.is_deleted == False\n        - ReferableUser.referable_user_status == ReferableUserStatus.APPROVED\n        - ReferableUser.is_deleted == False\n    - Job\n        - Job.is_deleted == False\n    - JobSelectionで(user_id, job_id)のレコードが存在しない\n実行手順:\n    - user、jobデータ取得\n        - 取得できない場合はNotFoundエラー、userが存在するが、ReferableUserが存在しない/承諾ではない場合はParameterErrorエラー\n    - JobSelection レコードを作成、　JobSelection.selection_step = SelectionStep.WAITING_FOR_SCOUT_ACCEPTANCE\n    - 通知(Notification)作成 (user宛: リンク先はユーザーのスカウト一覧、agent宛: 応募企業のスカウト一覧)\n    - User.receive_emails = Trueの場合、メールを送信 (User.user_common_info.sub_emailが存在すれば、そちらにも送信)\n    - チャットにscout_messageを送信　（メッセージが空ではない場合）\n    - 更新したjob情報を返す",
        "operationId": "sendJobScoutToUser",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Job User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "job_user_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Job Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "job_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendJobScoutToUserIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendJobScoutToUserOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "パラメータが不正: PARAMETER_ERROR<br>データが重複している: DUPLICATE_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PARAMETER_ERROR": {
                    "value": {
                      "errorCode": "PARAMETER_ERROR",
                      "message": "指定されたパラメータは不正です",
                      "detail": "Parameter error"
                    }
                  },
                  "DUPLICATE_ERROR": {
                    "value": {
                      "errorCode": "DUPLICATE_ERROR",
                      "message": "データが重複しています",
                      "detail": "duplicate key value violates unique constraintr"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "RECRUITMENT"
            ]
          }
        ]
      }
    },
    "/manage/pro-sessions/{session_id}/contents": {
      "get": {
        "tags": [
          "manage/pro-sessions"
        ],
        "summary": "Pro用セッションコンテンツ一覧取得",
        "description": "Pro用セッションコンテンツ一覧取得\n- 必要権限: [PRO_PROBLEM_VIEW]\n- 並び順: order昇順\n- session_idのセッションが削除済み、存在しない場合NotFound",
        "operationId": "getProSessionContentList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Pro Session Content List Manage Pro Sessions  Session Id  Contents Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProSessionContentListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PRO_PROBLEM_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/pro-sessions/{session_id}/contents/{content_id}/data/zip": {
      "get": {
        "tags": [
          "manage/pro-sessions"
        ],
        "summary": "管理側PROセッション問題データzip取得",
        "description": "管理側PROセッション問題データzip取得\n- 必要権限: [PRO_PROBLEM_VIEW]\n- 処理手順:\n    - 対象PRO問題に紐づいているProFile(file_type=FileType.DOWNLOAD)を取得\n    - GCSからダウンロード\n    - Zipで圧縮し、Responseで返す\n- 取得条件:\n    - SessionContentにデータが存在する\n    - Session.is_deleted == False\n    - Content.is_deleted == False\n    - ProFile.file_type == FileType.DOWNLOAD\n- 例外処理:\n    - 以下の場合NotFound:\n        - セッションに登録された問題でない\n        - セッションが存在しない・削除済み\n        - 問題が存在しない・削除済み\n- 補足:\n    - 取得方法は通常PRO問題と同様",
        "operationId": "downloadProSessionDataZipFile",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "コンテンツID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PRO_PROBLEM_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/pro-sessions/{session_id}/contents/{content_id}/submission-histories": {
      "get": {
        "tags": [
          "manage/pro-sessions"
        ],
        "summary": "管理者側PROセッション問題内提出履歴一覧取得",
        "description": "管理者側PROセッション問題内提出履歴一覧取得\n- 必要権限: [PRO_PROBLEM_VIEW]\n- 並び順: created_atの降順\n- 実行条件\n    - イベントのホストであるまたは444スタッフである\n- 処理内容:\n    - セッションが存在するか確認\n    - ProSubmissionResultから対象問題における提出履歴を取得\n        - 対象セッション内での提出履歴を取得\n        - usernameが指定されたらusernameで絞り込む\n- 取得条件:\n    - Session.is_deleted == False\n    - SessionContent.session_id == session_id\n    - SessionContent.content_id == content_id\n    - ProSubmissionResult.judge_status != ProJudgeStatus.WAITING_FOR_JUDGING\n    - Content.is_official == True\n    - Content.is_deleted == False\n- 例外処理:\n    - 以下の場合NotFound\n        - 他組織のPROセッション\n        - 対象PROセッションが存在しない・削除済み\n        - PROセッションに登録されていないPRO問題\n        - 対象PRO問題が存在しない・削除済み\n- 補足:\n    - 提出履歴がない場合は空のリストを返す\n    - PRO問題はチャレンジ問題でもセッションに登録できるため、チャレンジ問題での提出履歴は取得しないように\n    - エラーメッセージと提出コメントはない場合は空文字を返す",
        "operationId": "getProSessionQuestionSubmissionHistoryListForManage",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "コンテンツID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "path"
          },
          {
            "description": "ユーザー名",
            "required": false,
            "schema": {
              "title": "Username",
              "maxLength": 150,
              "type": "string",
              "description": "ユーザー名"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Pro Session Question Submission History List For Manage Manage Pro Sessions  Session Id  Contents  Content Id  Submission Histories Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ManageProQuestionSubmissionHistoryOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PRO_PROBLEM_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/pro-sessions/{session_id}/question-result": {
      "get": {
        "tags": [
          "manage/pro-sessions"
        ],
        "summary": "PROセッション問題成績一覧取得",
        "description": "PROイベントセッション問題成績一覧取得(問題成績タブの内容)\n- 必要権限: [PRO_SESSION_VIEW] [ALL_EVENT_AND_SESSION_VIEW]\n- 並び順: 登録された順に表示(SessionContentの順番通りに並べる)\n- 表示項目:\n    - 順 問題名 難易度 トピック 合格/挑戦\n- 取得可能条件\n    - [ALL_EVENT_AND_SESSION_VIEW]を持つ場合\n        - 自組織・他組織イベントセッション取得可能\n    - [ALL_EVENT_AND_SESSION_VIEW]を持たない かつ [PRO_SESSION_VIEW]を持つ場合\n        - 自組織イベントセッションのみ取得可能\n- 「詳細を見る」ボタン押下時に表示する内容\n    - 全アカウント共通表示項目\n        - 参加者名/合否/スコア/解答時間/提出回数/エラー数\n    - アカウントタイプ毎に取得項目変更:\n        - スタッフ主催イベント\n            - アルバイト:\n                - 表示名 -> 表示\n                - 実名/補足/学籍番号 -> 非表示\n            - ST,SU:\n                - 表示名 -> 表示\n                - 実名\n                    - 必要権限： 人材紹介機能 [RECRUITMENT] & ユーザーが人材紹介規約同意済み\n                    - 自組織イベントの場合\n                        - 必要権限： 自組織個人情報閲覧 [OWN_SESSION_PERSONAL_INFORMATION_VIEW]\n                - 補足/学籍番号 -> 非表示\n            - イベント共催企業:\n                - 実名/表示名/補足/学籍番号 -> 非表示\n        - 学校主催イベント\n            - 学校・スタッフ:\n                - 学籍番号/補足 -> 表示\n                - 表示名 -> 非表示\n                - 実名\n                    - 自組織イベントの場合\n                        - 必要権限： [自組織イベント個人情報閲覧] OWN_SESSION_PERSONAL_INFORMATION_VIEW\n                    - 他組織イベント かつ 閲覧者がスタッフの場合\n                        - 必要権限： [他組織イベント個人情報閲覧] ALL_SESSION_PERSONAL_INFORMATION_VIEW\n                    - 必要権限: 人材紹介機能 [RECRUITMENT] & ユーザーが人材紹介規約同意済み\n            - イベント共催企業:\n                - 実名/表示名/補足/学籍番号 -> 非表示\n        - 企業主催イベント\n            - 表示名/補足 -> 表示\n            - 実名/学籍番号 -> 非表示",
        "operationId": "getProSessionQuestionResult",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Pro Session Question Result Manage Pro Sessions  Session Id  Question Result Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProSessionQuestionResultListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PRO_SESSION_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/pro-sessions/{session_id}/ranking": {
      "get": {
        "tags": [
          "manage/pro-sessions"
        ],
        "summary": "PROセッションランキング取得",
        "description": "PROイベントセッションランキング取得(ランキングタブの内容)\n- 必要権限: [PRO_SESSION_VIEW] [ALL_EVENT_AND_SESSION_VIEW]\n- 取得数: 50\n- 並び順: 合計スコア降順\n    - 同率スコアの場合: セッション参加ユーザID昇順で並べる\n- 取得可能条件\n    - [ALL_EVENT_AND_SESSION_VIEW]を持つ場合\n        - 自組織・他組織イベントセッション取得可能\n    - [ALL_EVENT_AND_SESSION_VIEW]を持たない かつ [PRO_SESSION_VIEW]を持つ場合\n        - 自組織イベントセッションのみ取得可能\n- アカウント種別表示可能項目 (権限については一般イベントセッションと同様)\n    - 全アカウント共通表示項目\n        - 参加者名/順位/エラー数/挑戦数/合格数/合計スコア\n    - アカウントタイプ毎に取得項目変更:\n        - スタッフ主催イベント\n            - アルバイト:\n                - 表示名 -> 表示\n                - 実名/補足/学籍番号 -> 非表示\n            - ST,SU:\n                - 表示名 -> 表示\n                - 実名\n                    - 必要権限： 人材紹介機能 [RECRUITMENT] & ユーザーが人材紹介規約同意済み\n                    - 自組織イベントの場合\n                        - 必要権限： 自組織個人情報閲覧 [OWN_SESSION_PERSONAL_INFORMATION_VIEW]\n                - 補足/学籍番号 -> 非表示\n            - イベント共催企業:\n                - 実名/表示名/補足/学籍番号 -> 非表示\n        - 学校主催イベント\n            - 学校・スタッフ:\n                - 学籍番号/補足 -> 表示\n                - 表示名 -> 非表示\n                - 実名\n                    - 自組織イベントの場合\n                        - 必要権限： [自組織イベント個人情報閲覧] OWN_SESSION_PERSONAL_INFORMATION_VIEW\n                    - 他組織イベント かつ 閲覧者がスタッフの場合\n                        - 必要権限： [他組織イベント個人情報閲覧] ALL_SESSION_PERSONAL_INFORMATION_VIEW\n                    - 必要権限: 人材紹介機能 [RECRUITMENT] & ユーザーが人材紹介規約同意済み\n            - イベント共催企業:\n                - 実名/表示名/補足/学籍番号 -> 非表示\n        - 企業主催イベント\n            - 表示名/補足 -> 表示\n            - 実名/学籍番号 -> 非表示",
        "operationId": "getProSessionsRanking",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Pro Sessions Ranking Manage Pro Sessions  Session Id  Ranking Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionRankingListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PRO_SESSION_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/pro-sessions/{session_id}/real-time-ranking": {
      "get": {
        "tags": [
          "manage/pro-sessions"
        ],
        "summary": "PROセッションランキング取得",
        "description": "PROイベントセッションリアルタイムランキング取得\n一般イベントセッションリアルタイムランキングと動作は同様\n- 必要権限: [PRO_SESSION_VIEW] [ALL_EVENT_AND_SESSION_VIEW]\n- 並び順: 合計スコア降順\n    - 同率スコアの場合: セッション参加ユーザID昇順で並べる\n- 取得可能条件\n    - [ALL_EVENT_AND_SESSION_VIEW]を持つ場合\n        - 自組織・他組織PROイベントセッション取得可能\n    - [ALL_EVENT_AND_SESSION_VIEW]を持たない かつ [PRO_SESSION_VIEW]を持つ場合\n        - 自組織PROイベントセッションのみ取得可能\n- アカウント種別表示可能項目\n    - セッションの表示設定によって、実名/所属組織/補足情報/学籍番号が表示される\n    - 全アカウント共通表示項目(ただしアルバイトは非表示)\n        - 順位\n        - スコア\n        - 参加者名\n    - スタッフ(アルバイト)\n        - 非表示\n    - スタッフ(ST, SU)\n        - 実名(本名表示設定の場合、参加者名から本名へ切り替わる)\n        - 所属組織\n        - 補足情報\n        - 学籍番号\n    - 学校\n        - 実名(本名表示設定の場合、参加者名から本名へ切り替わる)\n        - 所属組織\n        - 補足情報\n        - 学籍番号\n    - 企業\n        - 非表示\n- ランキング表示人数(max_num_of_ranking)まで表示する\n- 表示にかかるSessionの項目\n    - max_num_of_ranking\n    - show_real_name_in_ranking\n    - show_organization_in_ranking\n    - show_info_in_ranking\n    - show_student_id_in_ranking",
        "operationId": "getProSessionsRealTimeRankingList",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Pro Sessions Real Time Ranking List Manage Pro Sessions  Session Id  Real Time Ranking Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionRealTimeRankingListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PRO_SESSION_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/pro-sessions/{session_id}/remaning-num-of-participants": {
      "get": {
        "tags": [
          "manage/pro-sessions"
        ],
        "summary": "PROセッション残り参加可能人数(参加チケット)取得(未実装)",
        "description": "PROセッション残り参加可能人数(参加チケット)取得\n- 必要権限: [PRO_SESSION_EDIT] (444スタッフのみアクセス可)\n- 実装: ProSessionモデルのremaning_num_of_participantsの値を返す\n- session_idのセッションが削除済み、存在しない場合NotFound",
        "operationId": "getProSessionRemaningNumOfParticipants",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProSessionRemaningNumOfParticipantsOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PRO_SESSION_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/pro-sessions"
        ],
        "summary": "PROセッション残り参加可能人数(参加チケット)更新(未実装)",
        "description": "PROセッション残り参加可能人数(参加チケット)更新\n- 必要権限: [PRO_SESSION_EDIT] (444スタッフのみアクセス可)\n- 実装: ProSessionモデルのremaning_num_of_participantsの値を入力数分だけ増加\n    - 負の値を入れると既存のチケットを減らす\n        - 但し計算結果が0未満になる場合は400(ParameterError)\n- session_idのセッションが削除済み、存在しない場合NotFound",
        "operationId": "updateProSessionRemaningNumOfParticipants",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProSessionRemaningNumOfParticipantsIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProSessionRemaningNumOfParticipantsOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PRO_SESSION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/portfolios/heatmap-case": {
      "post": {
        "tags": [
          "manage/portfolios"
        ],
        "summary": "ヒートマップサンプルケース作成",
        "description": "ヒートマップサンプルケース作成\n- 必要権限: [ASSETS_EDIT]\n- 処理手順\n    - usernameでユーザーを特定 (削除されても特定)\n    - SkillHeatmapSampleCaseを作成\n        - order: 最大値+1\n        - is_published: True\n        - industry, occupation 中間テーブルレコード作成\n        - SkillHeatmapSampleCaseCellを作成\n            - QuestionResultをトピック別集計\n                - 対象: チャレンジ問題 or use_in_portfolio.use_in_portfolio=True\n                - UserSkill取得と共通化できるかも",
        "operationId": "createHeatmapSampleCase",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHeatmapSampleCaseIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/portfolios/users/token-issuance": {
      "post": {
        "tags": [
          "manage/portfolios"
        ],
        "summary": "第三者用のポートフォリオアクセストークンを発行する",
        "description": "第三者閲覧用URLを発行する\n- 必要権限:\n    - RECRUITMENT\n- データ取得可能条件:\n    - User.is_deleted = False\n    - User.user_type = UserType.GENERAL_USER\n- expires_at取得:\n    - datetime.utcnow() + timedelta(days=...)\n- レスポンス補足:\n    - expires_at: TIMESTAMPで返す\n- 実行処理:\n    - userが特定できるかどうかチェック\n    - token生成\n    - レスポンス返す\n- URL想定:\n    - /limited/portfolio?user_id=<user_id>&expires=<expires>&signature=<signature>",
        "operationId": "generateAccessToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateAccessTokenIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateAccessTokenOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "RECRUITMENT"
            ]
          }
        ]
      }
    },
    "/manage/portfolios/users/{user_id}/comment-by-staff": {
      "patch": {
        "tags": [
          "manage/portfolios"
        ],
        "summary": "担当者からの一言を更新する",
        "description": "担当者からの一言を更新する\n- 必要権限:\n    - [RECRUITMENT]\n- データ取得可能条件\n    - User.is_deleted == False\n    - ReferableUser.is_deleted == False\n    - ReferableUser.company_id == user.organization.company_id",
        "operationId": "updateCommentByStaff",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommentByStaffIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCommentByStaffOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "RECRUITMENT"
            ]
          }
        ]
      }
    },
    "/manage/terms": {
      "get": {
        "tags": [
          "manage/terms"
        ],
        "summary": "利用規約一覧取得",
        "description": "利用規約一覧取得\n- 必要権限: [ASSETS_EDIT]\n- 並び順: term_type昇順\n- term_type毎にversionが最新のもののみ取得",
        "operationId": "getTermList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Term List Manage Terms Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TermListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/terms/{term_type}": {
      "get": {
        "tags": [
          "manage/terms"
        ],
        "summary": "規約詳細情報取得",
        "description": "規約詳細情報取得\n- 必要権限: [ASSETS_EDIT]\n- 指定されたterm_typeの最新versionを取得する",
        "operationId": "getTerm",
        "parameters": [
          {
            "description": "1:利用規約 (一般ユーザー), 2:プライバシーポリシー (一般ユーザー）, 3:新規登録時の注意事項 (一般ユーザー), 4:人材紹介 個人情報規約, 5:人材紹介 利用規約, 6:学校 利用規約, 7:企業 利用規約",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TermType"
                }
              ],
              "description": "1:利用規約 (一般ユーザー), 2:プライバシーポリシー (一般ユーザー）, 3:新規登録時の注意事項 (一般ユーザー), 4:人材紹介 個人情報規約, 5:人材紹介 利用規約, 6:学校 利用規約, 7:企業 利用規約"
            },
            "name": "term_type",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TermDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/terms"
        ],
        "summary": "利用規約更新",
        "description": "規約を更新\n- 必要権限: [ASSETS_EDIT]\n- 既存レコードの更新ではなく、versionをインクリメントし新規レコードとして作成する",
        "operationId": "updateTerm",
        "parameters": [
          {
            "description": "1:利用規約 (一般ユーザー), 2:プライバシーポリシー (一般ユーザー）, 3:新規登録時の注意事項 (一般ユーザー), 4:人材紹介 個人情報規約, 5:人材紹介 利用規約, 6:学校 利用規約, 7:企業 利用規約",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TermType"
                }
              ],
              "description": "1:利用規約 (一般ユーザー), 2:プライバシーポリシー (一般ユーザー）, 3:新規登録時の注意事項 (一般ユーザー), 4:人材紹介 個人情報規約, 5:人材紹介 利用規約, 6:学校 利用規約, 7:企業 利用規約"
            },
            "name": "term_type",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TermUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TermDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/pg-langs": {
      "get": {
        "tags": [
          "manage/pg-langs"
        ],
        "summary": "PG言語一覧取得",
        "description": "PG言語一覧を取得\n- 必要権限: [ASSETS_EDIT]\n- 並び順: id降順",
        "operationId": "getPgLangList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Pg Lang List Manage Pg Langs Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PgLangListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/pg-langs"
        ],
        "summary": "PG言語作成",
        "description": "PG言語を作成\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "createPgLang",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PgLangCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PgLangDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/pg-langs/{pg_lang_id}": {
      "get": {
        "tags": [
          "manage/pg-langs"
        ],
        "summary": "PG言語詳細取得",
        "description": "PG言語詳細を取得\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "getPgLang",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Pg Lang Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "pg_lang_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PgLangDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT",
              "ASSETS_VIEW"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/pg-langs"
        ],
        "summary": "PG言語削除",
        "description": "PG言語を削除\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "deletePgLang",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Pg Lang Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "pg_lang_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/pg-langs"
        ],
        "summary": "PG言語更新",
        "description": "PG言語を更新\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "updatePgLang",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Pg Lang Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "pg_lang_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PgLangUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PgLangDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/techthon_questions": {
      "get": {
        "tags": [
          "manage/techthon_questions"
        ],
        "summary": "テックソン問題一覧取得",
        "description": "テックソン問題一覧取得\n- 必要権限: [TECHTHON_MISSION_PHASE_VIEW]\n- 並び順: idの昇順\n- 抽出条件:\n    - Content.content_type = ContentType.TECHTHON\n    - Content.is_deleted = False\n    - Content.content_topic_id in content_topic_ids\n    - ContentTopic.content_category_id in content_category_ids\n- 例外処理\n    - 権限のないユーザーからのリクエストの場合NotFound\n    - クエリパラメータが存在しない値の場合ParameterError\n- 補足\n    - ミッション番号は\"mission\" + Techthon.orderを結合した文字列にして返す",
        "operationId": "getTechthonQuestionList",
        "parameters": [
          {
            "description": "カテゴリID",
            "required": false,
            "schema": {
              "title": "Content Category Ids",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "カテゴリID"
            },
            "name": "content_category_ids",
            "in": "query"
          },
          {
            "description": "トピックID",
            "required": false,
            "schema": {
              "title": "Content Topic Ids",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "トピックID"
            },
            "name": "content_topic_ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Techthon Question List Manage Techthon Questions Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TechthonQuestionListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "パラメータが不正: PARAMETER_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PARAMETER_ERROR": {
                    "value": {
                      "errorCode": "PARAMETER_ERROR",
                      "message": "指定されたパラメータは不正です",
                      "detail": "Parameter error"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "TECHTHON_MISSION_PHASE_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/techthon_questions"
        ],
        "summary": "テックソン問題作成",
        "description": "テックソン問題作成\n- 必要権限: [TECHTHON_MISSION_PHASE_EDIT]\n- 対象テーブル:\n    - Content\n    - Techthon\n    - TechthonDocument\n    - TechthonTestCase\n    - TechthonTestCaseRequestParameter\n    - TechthonTestCaseHint\n- 登録情報:\n    - Content.content_type = ContentType.TECHTHON\n    - Content.content_division = ContentDivision.STOCK\n    - Content.is_official = True\n    - Content.is_shared_between_schools = False\n    - Content.organization_id = user.organization_id\n    - Content.created_by: user.full_name\n- 例外処理:\n    - 権限のないユーザーが作成の場合403",
        "operationId": "createTechthonQuestion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechthonContentDetailIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__manage__techthon_questions__techthon_question_out__TechthonContentDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "TECHTHON_MISSION_PHASE_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/techthon_questions/{content_id}": {
      "get": {
        "tags": [
          "manage/techthon_questions"
        ],
        "summary": "テックソン問題詳細取得",
        "description": "テックソン問題詳細取得\n- 必要権限: [TECHTHON_MISSION_PHASE_VIEW]\n- 対象テーブル:\n    - Content\n    - Techthon\n    - TechthonDocument\n    - TechthonTestCase\n    - TechthonTestCaseRequestParameter\n    - TechthonTestCaseHint\n- 抽出条件:\n    - Content.content_type = ContentType.TECHTHON(テックソン)\n    - Content.is_official = True\n    - Content.is_published = True\n    - Content.is_deleted = False\n    - TechthonTestCaseHint.is_deleted = False\n- 例外処理:\n    - 以下の場合NotFound:\n        - 削除済み問題\n        - 指定されたコンテンツIDが存在しない\n    - 権限のないユーザーが閲覧の場合403",
        "operationId": "getTechthonQuestion",
        "parameters": [
          {
            "description": "コンテンツID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__manage__techthon_questions__techthon_question_out__TechthonContentDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "TECHTHON_MISSION_PHASE_VIEW"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/techthon_questions"
        ],
        "summary": "テックソン問題削除",
        "description": "テックソン問題削除\n- 必要権限: [TECHTHON_MISSION_PHASE_EDIT]\n- 論理削除\n- 削除条件:\n    - Content.content_type = ContentType.TECHTHON\n    - Content.organization_id = user.organization_id\n    - Content.is_deleted = False\n    - Content.updated_by: user.full_name\n- 例外処理:\n    - コンテンツIDが存在しない場合NotFound\n    - 権限のないユーザーが削除の場合NotFound",
        "operationId": "deleteTechthonQuestion",
        "parameters": [
          {
            "description": "コンテンツID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "TECHTHON_MISSION_PHASE_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/techthon_questions"
        ],
        "summary": "テックソン問題更新",
        "description": "テックソン問題更新\n- 必要権限: [TECHTHON_MISSION_PHASE_EDIT]\n- 対象テーブル:\n    - Content\n    - Techthon\n    - TechthonDocument\n    - TechthonTestCase\n    - TechthonTestCaseRequestParameter\n    - TechthonTestCaseHint\n- 更新条件:\n    - Content.content_type = ContentType.TECHTHON\n    - Content.content_division = ContentDivision.STOCK\n    - Content.is_official = True\n    - Content.is_shared_between_schools = False\n    - Content.organization_id = user.organization_id\n    - Content.is_deleted = False\n    - Content.updated_by: user.full_name\n- 例外処理:\n    - コンテンツIDが存在しない場合NotFound\n    - 権限のないユーザーが作成の場合NotFound",
        "operationId": "updateTechthonQuestion",
        "parameters": [
          {
            "description": "コンテンツID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechthonContentDetailIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__manage__techthon_questions__techthon_question_out__TechthonContentDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "TECHTHON_MISSION_PHASE_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/company-users": {
      "get": {
        "tags": [
          "manage/company-users"
        ],
        "summary": "企業ユーザ一覧取得",
        "description": "企業ユーザ一覧取得\n- 必要権限: [ALL_ADMIN_VIEW, OWN_ADMIN_VIEW]\n- 並び順: id昇順\n- 以下のデータのみ取得\n    - organization_type: COMPANYの組織のみ\n    - user_type: COMPANY or STAFF or PART_TIMER\n    - is_deleted: False",
        "operationId": "getCompanyUserList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "organization_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Company User List Manage Company Users Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyUserListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_VIEW",
              "OWN_ADMIN_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/company-users"
        ],
        "summary": "企業ユーザー作成",
        "description": "企業ユーザーを作成\n- 必要権限: [ALL_ADMIN_EDIT, OWN_ADMIN_EDIT]\n- 登録データ補足情報\n    - organization_id: OrganizationType.COMPANYの組織のみ設定可能\n    - user_type: UserType.COMPANY\n    - password: ハッシュ化して登録\n    - created_by: last_name + first_name\n- リクエストに対応した権限をユーザーに登録する",
        "operationId": "createCompanyUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyUserCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_EDIT",
              "OWN_ADMIN_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/company-users/csv": {
      "post": {
        "tags": [
          "manage/company-users"
        ],
        "summary": "企業管理者CSV作成",
        "description": "企業管理者CSV作成\n- 必要権限: [ALL_ADMIN_EDIT, OWN_ADMIN_EDIT]\n- リクエスト\n    - organization_id\n    - csv_data\n        - strで受け取る\n    - mail_text\n    - 各プランの加入状況\n- 例外処理\n    - organizationが存在しない場合、DataDoesNotExist\n    - 他組織のユーザーを作成しようとした場合、PermissionDenied\n- 登録データ補足情報\n    - 一度に登録できるのは10件まで\n    - organization_id: OrganizationType.COMPANYの組織のみ設定可能\n    - user_type: UserType.COMPANY\n    - password: 生成したパスワードをハッシュ化\n    - created_by: user.full_name\n    - company_user_info: リクエストに応じた権限を付与\n- レスポンス\n    - submit_count: 登録した人数(CSV内のデータ数)\n    - create_count: 登録に成功した人数\n- 登録されたユーザーにメール送信",
        "operationId": "createCompanyUserCsv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompanyUserCsvIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCompanyUserCsvOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_EDIT",
              "OWN_ADMIN_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/company-users/{user_id}": {
      "get": {
        "tags": [
          "manage/company-users"
        ],
        "summary": "企業ユーザー詳細取得",
        "description": "企業ユーザー詳細取得\n- 必要権限: [ALL_ADMIN_VIEW, OWN_ADMIN_VIEW]",
        "operationId": "getCompanyUser",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_VIEW",
              "OWN_ADMIN_VIEW"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/company-users"
        ],
        "summary": "企業ユーザー削除",
        "description": "企業ユーザー削除\n- 必要権限: [ALL_ADMIN_VIEW, OWN_ADMIN_EDIT]\n    - [OWN_ADMIN_EDIT]: 自組織のみ削除可能\n- 論理削除",
        "operationId": "deleteCompanyUser",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_VIEW",
              "OWN_ADMIN_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/company-users"
        ],
        "summary": "企業ユーザー更新",
        "description": "企業ユーザーを更新\n- 必要権限: [ALL_ADMIN_EDIT, OWN_ADMIN_EDIT]\n- 登録データ補足情報\n    - organization_id: OrganizationType.COMPANYの組織のみ設定可能\n    - user_type: COMPANY or STAFF or PART_TIMER\n    - password: ハッシュ化して登録\n    - updated_by: last_name + first_name\n- リクエストに対応した権限をユーザーに登録する",
        "operationId": "updateCompanyUser",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyUserUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyUserDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_EDIT",
              "OWN_ADMIN_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/faqs": {
      "get": {
        "tags": [
          "manage/faqs"
        ],
        "summary": "FAQ一覧取得",
        "description": "FAQ一覧取得\n- 必要権限: [ASSETS_EDIT]\n- 並び順: id降順",
        "operationId": "getFaqList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Faq List Manage Faqs Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FaqListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/faqs"
        ],
        "summary": "FAQ作成",
        "description": "FAQ作成\n- 必要権限: [ASSETS_EDIT]\n- 作成者をログインユーザーで設定",
        "operationId": "createFaq",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaqCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/faqs/{faq_id}": {
      "get": {
        "tags": [
          "manage/faqs"
        ],
        "summary": "FAQ詳細取得",
        "description": "FAQ詳細取得\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "getFaq",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Faq Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "faq_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/faqs"
        ],
        "summary": "FAQ削除",
        "description": "FAQを削除\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "deleteFaq",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Faq Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "faq_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/faqs"
        ],
        "summary": "FAQ更新",
        "description": "FAQ更新\n- 必要権限: [ASSETS_EDIT]\n- 更新者をログインユーザーで設定",
        "operationId": "updateFaq",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Faq Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "faq_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaqUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaqDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/job-features": {
      "get": {
        "tags": [
          "manage/job-features"
        ],
        "summary": "求人特徴一覧取得",
        "description": "求人の特徴一覧を取得\n- 必要権限: [ASSETS_EDIT]\n- 並び順: id降順",
        "operationId": "getJobFeatureList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Job Feature List Manage Job Features Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobFeatureListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/job-features"
        ],
        "summary": "求人特徴作成",
        "description": "求人の特徴を作成\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "createJobFeature",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobFeatureCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobFeatureDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/job-features/{job_feature_id}": {
      "get": {
        "tags": [
          "manage/job-features"
        ],
        "summary": "求人特徴詳細取得",
        "description": "求人の特徴詳細を取得\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "getJobFeature",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Job Feature Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "job_feature_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobFeatureDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/job-features"
        ],
        "summary": "求人特徴削除",
        "description": "求人の特徴を削除\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "deleteJobFeature",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Job Feature Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "job_feature_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/job-features"
        ],
        "summary": "求人特徴更新",
        "description": "求人の特徴を更新\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "updateJobFeature",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Job Feature Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "job_feature_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobFeatureUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobFeatureDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/sample-codes": {
      "get": {
        "tags": [
          "manage/sample-codes"
        ],
        "summary": "サンプルコード一覧取得",
        "description": "サンプルコード一覧を取得\n- 必要権限: [ASSETS_EDIT]\n- 並び順: id降順",
        "operationId": "getSampleCodeList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Sample Code List Manage Sample Codes Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SampleCodeListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/sample-codes"
        ],
        "summary": "サンプルコード作成",
        "description": "サンプルコードを作成\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "createSampleCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SampleCodeCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SampleCodeDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/sample-codes/{sample_code_id}": {
      "get": {
        "tags": [
          "manage/sample-codes"
        ],
        "summary": "サンプルコード詳細取得",
        "description": "サンプルコード詳細を取得\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "getSampleCode",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Sample Code Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "sample_code_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SampleCodeDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/sample-codes"
        ],
        "summary": "サンプルコード削除",
        "description": "サンプルコードを削除\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "deleteSampleCode",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Sample Code Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "sample_code_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/sample-codes"
        ],
        "summary": "サンプルコード更新",
        "description": "サンプルコードを更新\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "updateSampleCode",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Sample Code Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "sample_code_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SampleCodeUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SampleCodeDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/chat-templates": {
      "get": {
        "tags": [
          "manage/chat-templates"
        ],
        "summary": "チャットテンプレート一覧取得",
        "description": "チャットテンプレート一覧取得\n- 必要権限: [CHAT]\n- 並び順: id 降順\n- ログインユーザーのチャットテンプレートを取得",
        "operationId": "getChatTemplateList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Chat Template List Manage Chat Templates Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChatTemplateDetailOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "CHAT"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/chat-templates"
        ],
        "summary": "チャットテンプレート作成",
        "description": "チャットテンプレート作成\n- 必要権限: [CHAT]\n- ログインユーザーのチャットテンプレートを作成",
        "operationId": "createChatTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatTemplateCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatTemplateDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "CHAT"
            ]
          }
        ]
      }
    },
    "/manage/chat-templates/{chat_template_id}": {
      "get": {
        "tags": [
          "manage/chat-templates"
        ],
        "summary": "チャットテンプレート詳細取得",
        "description": "チャットテンプレート詳細取得\n- 必要権限: [CHAT]\n- ログインユーザーのチャットテンプレートのみ取得可能",
        "operationId": "getChatTemplate",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Chat Template Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "chat_template_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatTemplateDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "CHAT"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/chat-templates"
        ],
        "summary": "チャットテンプレート削除",
        "description": "チャットテンプレート削除\n- 必要権限: [CHAT]\n- ログインユーザーのチャットテンプレートのみ削除可能",
        "operationId": "deleteChatTemplate",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Chat Template Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "chat_template_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "CHAT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/chat-templates"
        ],
        "summary": "チャットテンプレート更新",
        "description": "チャットテンプレート更新\n- 必要権限: [CHAT]\n- ログインユーザーのチャットテンプレートのみ更新可能",
        "operationId": "updateChatTemplate",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Chat Template Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "chat_template_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatTemplateUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatTemplateDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "CHAT"
            ]
          }
        ]
      }
    },
    "/manage/scout-mail-templates": {
      "get": {
        "tags": [
          "manage/scout-mail-templates"
        ],
        "summary": "スカウトメールテンプレート一覧取得",
        "description": "スカウトメールテンプレート一覧を取得\n- 必要権限: [ASSETS_EDIT]\n- 並び順: id降順\n- ログインユーザー企業のデータのみ取得可",
        "operationId": "getScoutMailTemplateList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Scout Mail Template List Manage Scout Mail Templates Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScoutMailTemplateListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/scout-mail-templates"
        ],
        "summary": "スカウトメールテンプレート作成",
        "description": "スカウトメールテンプレートを作成\n- 必要権限: [ASSETS_EDIT]\n- ログインユーザー企業のデータとして作成",
        "operationId": "createScoutMailTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScoutMailTemplateCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoutMailTemplateDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/scout-mail-templates/{scout_mail_template_id}": {
      "get": {
        "tags": [
          "manage/scout-mail-templates"
        ],
        "summary": "スカウトメールテンプレート詳細取得",
        "description": "スカウトメールテンプレート詳細を取得\n- 必要権限: [ASSETS_EDIT]\n- ログインユーザー企業のデータのみ取得可",
        "operationId": "getScoutMailTemplate",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Scout Mail Template Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "scout_mail_template_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoutMailTemplateDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/scout-mail-templates"
        ],
        "summary": "スカウトメールテンプレート削除",
        "description": "スカウトメールテンプレートを削除\n- 必要権限: [ASSETS_EDIT]\n- ログインユーザー企業のデータのみ削除可",
        "operationId": "deleteScoutMailTemplate",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Scout Mail Template Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "scout_mail_template_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/scout-mail-templates"
        ],
        "summary": "スカウトメールテンプレート更新",
        "description": "スカウトメールテンプレートを更新\n- 必要権限: [ASSETS_EDIT]\n- ログインユーザー企業のデータのみ更新可",
        "operationId": "updateScoutMailTemplate",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Scout Mail Template Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "scout_mail_template_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScoutMailTemplateUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoutMailTemplateDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/sessions": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッション一覧取得",
        "description": "セッション一覧を取得\n- 必要権限: [OWN_SESSION_VIEW] [ALL_EVENT_AND_SESSION_VIEW]\n- 並び順:開始日時の昇順\n    - 開始日時が同時の場合は作成日時の降順\n- レスポンスデータ補足情報\n    - is_active: セッションが一時停止中か\n    - sessions\n        - session_user_count: セッション参加ユーザーの合計\n        - session_status\n        　- 開催予定: セッション開始日時 > 現在日時\n        　- 開催中: セッション開始日時 <= 現在日時 <= セッション終了日時\n        　- 終了: 現在日時 > セッション終了日時\n- 取得可能条件\n    - is_deleted = False\n    - [ALL_EVENT_AND_SESSION_VIEW]を持つ場合\n        - 自組織・他組織セッション取得可能\n    - [ALL_EVENT_AND_SESSION_VIEW]を持たない かつ [OWN_SESSION_VIEW]を持つ場合\n        - 自組織セッションのみ取得可能\n    - TODO: 通常セッションのみ取得する　９月リリースでPRO・TECHTHONセッション対応した際にフィルター削除",
        "operationId": "getSessionList",
        "parameters": [
          {
            "description": "イベントID",
            "required": false,
            "schema": {
              "title": "Event Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "イベントID"
            },
            "name": "event_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "minimum": 0.0,
              "type": "integer"
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "description": "ID(完全一致)、名前(部分一致)、学校/企業名(部分一致)",
            "required": false,
            "schema": {
              "title": "Search",
              "type": "string",
              "description": "ID(完全一致)、名前(部分一致)、学校/企業名(部分一致)"
            },
            "name": "search",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Session List Manage Sessions Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions/certificate-exam/{session_id}/users/{user_id}/timer/restart": {
      "patch": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "認定試験のタイマーを再開",
        "description": "認定試験のタイマーを再開\n- セッションユーザーステータスを解答終了から再開待ちに変更\n- is_reset=Trueの場合、session_user.user_start_at・end_atを削除して更新\n- 必要権限\n    -　444主催\n        - スタッフ\n    - 学校主催\n        - スタッフ\n        - 主催学校",
        "operationId": "restartCertificateExamUserTimer",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "タイマーを初期化するか",
            "required": false,
            "schema": {
              "title": "Is Reset",
              "type": "boolean",
              "description": "タイマーを初期化するか",
              "default": false
            },
            "name": "is_reset",
            "in": "query"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_EDIT",
              "ALL_EVENT_AND_SESSION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/sessions/count": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッション一覧取得(件数有り)",
        "description": "セッション一覧を取得(件数有り)\n- 必要権限: [OWN_SESSION_VIEW] [ALL_EVENT_AND_SESSION_VIEW]\n- 並び順:ID降順\n- レスポンスデータ補足情報\n    - is_active: セッションが一時停止中か\n    - sessions\n        - session_user_count: セッション参加ユーザーの合計\n        - session_status\n        　- 開催予定: セッション開始日時 > 現在日時\n        　- 開催中: セッション開始日時 <= 現在日時 <= セッション終了日時\n        　- 終了: 現在日時 > セッション終了日時\n- 取得可能条件\n    - is_deleted = False\n    - [ALL_EVENT_AND_SESSION_VIEW]を持つ場合\n        - 自組織・他組織セッション取得可能\n    - [ALL_EVENT_AND_SESSION_VIEW]を持たない かつ [OWN_SESSION_VIEW]を持つ場合\n        - 自組織セッションのみ取得可能\n    - TODO: 通常セッションのみ取得する　９月リリースでPRO・TECHTHONセッション対応した際にフィルター削除",
        "operationId": "getSessionListCount",
        "parameters": [
          {
            "description": "イベントID",
            "required": false,
            "schema": {
              "title": "Event Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "イベントID"
            },
            "name": "event_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 50
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "description": "ID(完全一致)、名前(部分一致)、学校/企業名(部分一致)",
            "required": false,
            "schema": {
              "title": "Search",
              "type": "string",
              "description": "ID(完全一致)、名前(部分一致)、学校/企業名(部分一致)"
            },
            "name": "search",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionListCountOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{event_id}": {
      "post": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッション作成",
        "description": "セッション作成\n- 必要権限: [OWN_SESSION_EDIT] [ALL_EVENT_AND_SESSION_EDIT]\n- 各項目設定可能条件\n    - 全アカウント・全イベント目的で共通で設定可能\n        - name\n        - starts_at\n        - ends_at\n        - location\n        - リアルタイムランキング表示\n            - 表示人数\n            - 参加者にランキングを表示する\n        - 参加者にランキング表示\n    - スタッフ設定可能項目\n        - パスワードつきセッション\n            - パスワード: パスワードつきセッション時必須(自動生成)\n        - 練習用セッション\n        - 参加ユーザー制限\n        - 卒業年度制限-以上，以下\n        - リアルタイムランキング表示\n            - 実名表示\n            - 所属組織\n        - 参加者にアンケートを表示する\n        - アンケート詳細設定\n        - Googleフォーム解答ページURL\n        - 説明文\n        - Googleフォーム編集ページURL[管理者のみ表示]\n    - 学校アカウント設定可能項目\n        - パスワードつきセッション\n            - パスワード: パスワードつきセッション時必須(自動生成)\n        - 練習用セッション\n        - 小テスト用セッション\n        - ランダムセッション\n        - 問題数\n        - 挑戦状況表示\n        - リアルタイムランキング表示\n            - 実名表示\n            - 所属組織\n            - 補足情報\n            - 学籍番号\n    - 検定試験のみ設定可能項目\n        - 試験時間(分)\n    - プログラミングコンテストのみ設定可能項目\n        - 求人紹介規約の同意を要求する\n- 作成可能条件\n    - [ALL_EVENT_AND_SESSION_EDIT]を持つ場合\n        - 自組織・他組織イベントセッション作成可能\n    - [ALL_EVENT_AND_SESSION_EDIT]を持たない かつ [OWN_SESSION_EDIT]を持つ場合\n        - 自組織イベントセッションのみ作成可能",
        "operationId": "createSession",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Event Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "event_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__manage__sessions__session_detail_out__SessionDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_EDIT",
              "ALL_EVENT_AND_SESSION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッション詳細情報取得",
        "description": "セッション詳細情報取得\n- 必要権限: [OWN_SESSION_VIEW], [ALL_EVENT_AND_SESSION_VIEW]\n- 取得可能条件\n    - [ALL_EVENT_AND_SESSION_VIEW]を持つ場合\n        - 自組織・他組織イベントセッション取得可能\n    - [ALL_EVENT_AND_SESSION_VIEW]を持たない かつ [OWN_SESSION_VIEW]を持つ場合\n        - 自組織イベントセッションのみ取得可能",
        "operationId": "getSessionDetail",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__manage__sessions__session_detail_out__SessionDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッション削除",
        "description": "セッション削除\n- 必要権限: [ALL_EVENT_AND_SESSION_EDIT] [OWN_SESSION_EDIT]\n- 論理削除\n- 削除可能条件\n    - [ALL_EVENT_AND_SESSION_EDIT]を持つ場合\n        - 自組織・他組織イベントセッション削除可能\n    - [ALL_EVENT_AND_SESSION_EDIT]を持たない かつ [OWN_SESSION_EDIT]を持つ 場合\n        - 自組織イベントセッションのみ削除可能\n    - is_deleted == False",
        "operationId": "deleteSession",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_EDIT",
              "ALL_EVENT_AND_SESSION_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッション設定更新",
        "description": "セッション設定更新\n- 必要権限: [OWN_SESSION_EDIT], [ALL_EVENT_AND_SESSION_EDIT]\n- 練習用セッションへ設定変更時の挙動\n    - イベント詳細画面-イベント成績タブのスコア集計からセッション内の全ての問題が外れる。\n    - 就職用ポートフォリオの問題関連の集計から、本セッションで解いた全ての問題が外れる。\n- アカウント毎の設定更新可能項目\n    - 全アカウント・全イベント目的で共通で設定可能\n        - name\n        - starts_at\n        - ends_at\n        - location\n        - リアルタイムランキング表示\n            - 表示人数\n            - 参加者にランキングを表示する\n        - 参加者にランキング表示\n        - 使用可能言語\n    - スタッフ設定可能項目\n        - パスワードつきセッション\n            - パスワード: パスワードつきセッション時必須(自動生成)\n        - 練習用セッション\n        - 参加ユーザー制限\n        - 卒業年度制限-以上，以下\n        - リアルタイムランキング表示\n            - 実名表示\n            - 所属組織\n        - 参加者にアンケートを表示する\n        - アンケート詳細設定\n        - Googleフォーム解答ページURL\n        - 説明文\n        - Googleフォーム編集ページURL[管理者のみ表示]\n    - 学校アカウント設定可能項目\n        - パスワードつきセッション\n            - パスワード: パスワードつきセッション時必須(自動生成)\n        - 練習用セッション\n        - 小テスト用セッション\n        - ランダムセッション\n        - 問題数\n        - 挑戦状況表示\n        - リアルタイムランキング表示\n            - 実名表示\n            - 所属組織\n            - 補足情報\n            - 学籍番号\n    - 検定試験のみ設定可能項目\n        - 試験時間(分)\n    - プログラミングコンテストのみ設定可能項目\n        - 求人紹介規約の同意を要求する\n- 更新可能条件\n    - [ALL_EVENT_AND_SESSION_EDIT]を持つ場合\n        - 自組織・他組織イベントセッション実施可能\n    - [ALL_EVENT_AND_SESSION_EDIT]を持たない かつ [OWN_SESSION_EDIT]を持つ場合\n        - 自組織イベントセッションのみ実施可能",
        "operationId": "updateSession",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__manage__sessions__session_detail_out__SessionDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_EDIT",
              "ALL_EVENT_AND_SESSION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/cheating_check": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッション不正チェック実行",
        "description": "セッション不正チェック実行\n- 必要権限: [OWN_SESSION_VIEW] [ALL_EVENT_AND_SESSION_VIEW]\n- 実行条件:\n    - 主催者組織(会社・学校)\n    - イベント共催組織(会社・学校)\n    - スタッフ・アルバイト\n- チェック内容\n    - 解答の完全一致:   コードをそのままkeyとしてグルーピングし、2ユーザー以上存在するものを表示\n    - 早すぎる解答:     問題難易度*60秒以下の提出をピックアップ\n    - 類似ソースコード: 「空白を抜かした行数 x 提出言語」をkeyとしてグルーピングし、2ユーザー以上存在するものを表示",
        "operationId": "executeCheatingCheck",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "チェック種別",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CheatCheckType"
                }
              ],
              "description": "チェック種別",
              "default": "for_time"
            },
            "name": "check_type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionCheatingCheckUserListOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/code-download": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッションZip提出コードダウンロード",
        "description": "セッションZip提出コードダウンロード\n- 必要権限： [OWN_SESSION_VIEW]\n- 学校主催セッションでのみ実行可能\n- (データDL画面にて)セッションに提出されたコードをZip形式でDL\n- 処理概要：\n    - 指定セッションが学校主催セッションかチェック（その他主催の場合PermissionDenied）\n    - 指定セッションが削除済み、存在しない場合NotFound\n    - 下記DLファイル詳細に従ってファイル作成、出力\n- DLファイル詳細：\n    - <セッション名>_ResultsCodes.zip\n        - フォルダ分類 AT_USERの場合　※[]内フォルダの深さ\n            - [1]filelist.csv（セッション参加者全体の回答リスト一覧）\n            - [1]<ユーザーid>_<ユーザー名>\n                - [2]<問題id>_<問題名>\n                    - [2]<回答日時>...ユーザーの回答コード(採点開始ボタン押下時の提出コード)\n                        - ex: 2023-02-07T11/23/48.744461.py\n        - フォルダ分類 AT_QUESTIONの場合\n            - [1]filelist.csv（セッション参加者全体の回答リスト一覧）\n            - [1]<問題id>_<問題名>\n                - [2]<ユーザーid>_<ユーザー名>\n                    - [2]<回答日時>\n    - フォルダ名に学籍番号を含む場合　<ユーザーid>が学籍番号へ変更（学籍番号なしは_<ユーザー名>で表示）\n    - filelist.csv詳細\n        - カラム：問題ID, 問題タイトル , ユーザー名 , 名前 , 表示名 , 補足情報 , 時刻 , 0:不正解/1:正解 , Zip内ファイルパス",
        "operationId": "downloadSessionSubmittedCodeForZip",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "学籍番号を含むか",
            "required": false,
            "schema": {
              "title": "Include Student Number",
              "type": "boolean",
              "description": "学籍番号を含むか",
              "default": false
            },
            "name": "include_student_number",
            "in": "query"
          },
          {
            "description": "フォルダの分類基準",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FolderConf"
                }
              ],
              "description": "フォルダの分類基準",
              "default": "user"
            },
            "name": "folder_config",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/code-search": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッション提出コード検索",
        "description": "セッションで提出されたコード内を検索する\n- 必要権限：[OWN_EVENT_EDIT]\n    - スタッフアカウントは全てのセッション対象に実行可\n    - 学校アカウントは学校主催セッション対象に実行可\n- 返却データ詳細：\n    - 指定されたセッション内問題に紐づく提出コード（合格ステータスの解答のみ）を返却\n    - search_result_countに指定検索ワードでの該当回数を表示する(０回の場合も結果自体は表示する)\n- session_idのセッションが削除済み、存在しない場合NotFound\n- 学校主催セッション以外の場合PermissionDenied\n- content_idが不正の場合(存在しないID or QuestionType.CODING/FILLING/BUG以外)、NotFound",
        "operationId": "searchSessionSubmittedCode",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "問題ID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 0.0,
              "type": "integer",
              "description": "問題ID"
            },
            "name": "content_id",
            "in": "query"
          },
          {
            "description": "検索キーワード",
            "required": true,
            "schema": {
              "title": "Keyword",
              "type": "string",
              "description": "検索キーワード"
            },
            "name": "keyword",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionSearchCodeOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_EVENT_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/contents": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "管理者用セッションコンテンツ一覧取得",
        "description": "管理者用セッションコンテンツ一覧取得\n- 必要権限: [OWN_SESSION_VIEW]　[ALL_EVENT_AND_SESSION_VIEW]\n- 並び順: order昇順\n- 取得可能条件\n    - [ALL_EVENT_AND_SESSION_VIEW]を持つ場合\n        - 自組織・他組織イベントセッション取得可能\n    - [ALL_EVENT_AND_SESSION_VIEW]を持たない かつ [OWN_SESSION_VIEW]を持つ場合\n        - 自組織イベントセッションのみ取得可能\n- session_idのセッションが削除済み、存在しない場合NotFound\n- question_filtered = True のとき",
        "operationId": "getSessionContentList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "セッション問題(一般・PRO・テックソン)のみ取得する",
            "required": false,
            "schema": {
              "title": "Question Filtered",
              "type": "boolean",
              "description": "セッション問題(一般・PRO・テックソン)のみ取得する"
            },
            "name": "question_filtered",
            "in": "query"
          },
          {
            "description": "問題の形式で絞り込み",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/QuestionType"
              },
              "description": "問題の形式で絞り込み"
            },
            "name": "question_types",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Session Content List Manage Sessions  Session Id  Contents Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/app__schemas__manage__sessions__session_content_list_out__SessionContentListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッションコンテンツ追加",
        "description": "セッションコンテンツ追加(更新)\n- 必要権限: [OWN_SESSION_EDIT] [ALL_EVENT_AND_SESSION_EDIT]\n- 実行可能条件\n    - [ALL_EVENT_AND_SESSION_EDIT]を持つ場合\n        - 自組織・他組織イベントセッションを実行可能\n    - [ALL_EVENT_AND_SESSION_EDIT]を持たない かつ [OWN_SESSION_EDIT]を持つ場合\n        - 自組織イベントセッションのみ実行可能\n    - Session.is_deleted = False\n- content_add_inが全てNoneの場合は、DBを変更しない",
        "operationId": "addSessionContent",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Content Add In",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionContentAddIn"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__manage__sessions__session_detail_out__SessionDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_EDIT",
              "ALL_EVENT_AND_SESSION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/error/{user_id}": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッションエラーコード取得",
        "description": "ユーザー毎のエラー一覧を取得\n- 必要権限: [OWN_SESSION_VIEW] [ALL_EVENT_AND_SESSION_VIEW]\n- 並び順: 作成日の昇順\n- 取得可能条件\n    - [ALL_EVENT_AND_SESSION_VIEW]を持つ場合\n        - 自組織・他組織イベントセッション取得可能\n    - [ALL_EVENT_AND_SESSION_VIEW]を持たない かつ [OWN_SESSION_VIEW]を持つ場合\n        - 自組織イベントセッションのみ取得可能",
        "operationId": "getSessionErrorList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionErrorListOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/leaderboard": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッションリアルタイムランキング一覧取得",
        "description": "セッションリアルタイムランキング一覧取得\n- 必要権限: [ALL_EVENT_AND_SESSION_VIEW], [OWN_SESSION_VIEW]\n- 並び順: order昇順\n    - ランクづけ\n        - 同率スコアの場合：セッション参加ユーザID昇順で並べる\n- 取得可能条件\n    - [ALL_EVENT_AND_SESSION_VIEW]を持つ場合\n        - 自組織・他組織イベントセッション取得可能\n    - [ALL_EVENT_AND_SESSION_VIEW]を持たない かつ [OWN_SESSION_VIEW]を持つ場合\n        - 自組織イベントセッションのみ取得可能\n- アカウント種別表示可能項目\n    - セッションの表示設定によって、実名/所属組織/補足情報/学籍番号が表示される\n    - 全アカウント共通表示項目\n        - 順位\n        - スコア\n        - 参加者名\n    - スタッフ\n        - 実名(本名表示設定の場合、参加者名から本名へ切り替わる)\n        - 所属組織\n        - 補足情報\n        - 学籍番号\n    - 学校\n        - 実名(本名表示設定の場合、参加者名から本名へ切り替わる)\n        - 所属組織\n        - 補足情報\n        - 学籍番号\n- ランキング表示人数(max_num_of_ranking)まで表示する",
        "operationId": "getSessionRealTimeRankingList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Session Real Time Ranking List Manage Sessions  Session Id  Leaderboard Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionRealTimeRankingListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_EVENT_AND_SESSION_VIEW",
              "OWN_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/portfolio/{user_id}": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッション用ポートフォリオ取得",
        "description": "セッション用ポートフォリオ取得\n- 必要権限: [OWN_SESSION_VIEW]\n- 仕様\n    - 指定したユーザーの指定したセッションにおけるポートフォリオを取得する\n    - ユーザーやイベントが存在しない場合・削除された場合は404\n    - 他組織のセッションや、該当セッションに参加していないユーザーを指定した場合は403\n- レスポンスデータ補足情報\n  - ユーザー情報\n    - 取得項目\n      - 表示名、ユーザーアイコンURL、都道府県、生年月日、卒業年月\n    - 抽出モデル: Userモデルと紐付くモデル\n    - 抽出条件\n      - id=user_id(クエリパラメータ)\n  - セッション情報\n    - 取得項目\n      - セッション、主催者、開催場所、実施期間、参加人数、問題数、評価方式\n    - 抽出モデル: Sessionと紐付くモデル\n    - 抽出条件\n      - id=session_id(クエリパラメータ)\n  - 相対評価\n    - 得点率\n      - user_score: ユーザーが獲得した総合得点の合計。\n      - avg_score: セッション参加ユーザーが獲得した総合得点の平均。\n      - max_score: 総合得点の最大値。セッション内の全問題における総合得点の合計。\n    - 正解率\n      - user_passed: ユーザーが通過した問題数。\n      - avg_passed: セッション参加ユーザーにおける、通過問題数の平均。\n      - max_passed: セッション内問題の通過数の最大値。セッション内の問題数。\n    - スコア分布\n      - セッション内の全問題における、それぞれの算出方法による算出値の合計。\n      - ※基礎得点(base): 問題難易度に10を乗じた値。\n      - ※タイムボーナス(time): 問題難易度に7を乗じた値。\n      - ※合格ボーナス得点(pass): 問題難易度に5を乗じた値。\n        - user_base: ユーザーの基礎得点。\n        - avg_base: セッション参加ユーザーの基礎得点の平均。\n        - max_base: 基礎得点のMAX値。セッション内全問題における基礎得点の合計。\n        - user_time: ユーザーのタイムボーナス得点。\n        - avg_time: セッション参加ユーザーのタイムボーナス得点の平均。\n        - max_time: タイムボーナスのMAX値。セッション内の全問題におけるタイムボーナスの合計。\n        - user_pass: ユーザーの合格ボーナス得点。\n        - avg_pass: セッション参加ユーザーの合格ボーナス得点の平均。\n        - max_pass: 合格ボーナス得点のMAX値。セッション内の全問題における合格ボーナス得点の合計。\n  - 問題成績\n    - セッション内の全問題における、問題名、難易度などの情報\n  - 補足情報\n    フロントエンドでパーセンテージを計算して表示する。",
        "operationId": "getSessionPortfolio",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionPortfolioOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/ranking": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッションランキング一覧取得",
        "description": "セッションランキング一覧（ランキングタブ内容）\n- 必要権限: [OWN_SESSION_VIEW] [ALL_EVENT_AND_SESSION_VIEW]\n- 並び順: 合計スコア降順\n    - 同率スコアの場合：スコアの更新日時順に表示する\n- 取得可能条件\n    - [ALL_EVENT_AND_SESSION_VIEW]を持つ場合\n        - 自組織・他組織イベントセッション取得可能\n    - [ALL_EVENT_AND_SESSION_VIEW]を持たない かつ [OWN_SESSION_VIEW]を持つ場合\n        - 自組織イベントセッションのみ取得可能\n- アカウント種別表示可能項目\n    - 全アカウント共通表示項目\n        - 参加者名/順位/挑戦数/コンパイルエラー数/合格数/合計スコア\n    - (セッション作成者の)アカウントタイプ毎に取得項目変更:\n        - スタッフ主催イベント\n            - アルバイト:\n                - 実名/補足/学籍番号　非表示\n            -　ST,SU:\n                - 実名\n                    - 必要権限： 人材紹介機能 [RECRUITMENT]　& ユーザーが人材紹介規約同意済み\n                    - 自組織イベントの場合\n                        - 必要権限： 自組織個人情報閲覧 [OWN_SESSION_PERSONAL_INFORMATION_VIEW]\n                - 補足/学籍番号 非表示\n            - イベント共催企業:\n                - 実名/表示名/補足/学籍番号 非表示\n        - 学校主催イベント\n            - 学校・スタッフ:\n                - チャットルームIDを返却\n                - 表示名　非表示\n                - 実名\n                    - 自組織イベントの場合\n                        - 必要権限： [自組織イベント個人情報閲覧] OWN_SESSION_PERSONAL_INFORMATION_VIEW\n                    - 他組織イベント かつ 閲覧者がスタッフの場合\n                        - 必要権限： [他組織イベント個人情報閲覧] ALL_SESSION_PERSONAL_INFORMATION_VIEW\n                    - 必要権限: 人材紹介機能 [RECRUITMENT] & ユーザーが人材紹介規約同意済み\n            - イベント共催企業:\n                - 実名/表示名/補足/学籍番号 非表示\n        - 企業主催イベント\n            - 実名/学籍番号 非表示",
        "operationId": "getSessionRankingList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Session Ranking List Manage Sessions  Session Id  Ranking Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionRankingListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/ranking/{user_id}": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッションランキングユーザー詳細取得",
        "description": "セッションランキングユーザー詳細（ランキングタブ内容,詳細を見る）\nuser_idに紐づいた問題解答詳細情報を返却\n- 必要権限: [OWN_SESSION_VIEW] [ALL_EVENT_AND_SESSION_VIEW]\n- 取得可能条件\n    - [ALL_EVENT_AND_SESSION_VIEW]を持つ場合\n        - 自組織・他組織イベントセッション取得可能\n    - [ALL_EVENT_AND_SESSION_VIEW]を持たない かつ [OWN_SESSION_VIEW]を持つ場合\n        - 自組織イベントセッションのみ取得可能\n- アカウント種別表示可能項目\n    - 全アカウント共通表示項目\n        - 詳細を見る(問題ごとの成績)\n            - 問題名/難易度/提出回数/目標時間内にクリアしたか/回答開始日時/合否/スコア/コンパイルエラー数",
        "operationId": "getSessionRankingDetail",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Session Ranking Detail Manage Sessions  Session Id  Ranking  User Id  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResultDetailOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/records/detail/download": {
      "post": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッション成績CSVダウンロード",
        "description": "セッション成績 ユーザー毎の成績詳細CSVダウンロード\n- 必要権限: [ALL_EVENT_AND_SESSION_VIEW OWN_SESSION_VIEW]\n- session_idが削除済み、存在しないならNotFound\n- csvのカラム名\n    - タイムスタンプ\n    - ユーザー名\n    - 補足\n    - 表示名\n    - 名前\n    - 生年月日\n    - メールアドレス\n    - 試験開始時間\n    - 試験終了時間\n    - 正解数\n    - 合計スコア\n    - 合計基礎点\n    - セッション名\n    - セッション言語\n    - 問題の数だけつなげる\n        - 問題1:問題名\n        - 問題1:問題タグ\n        - 問題1:言語\n        - 問題1:コード文字数\n        - 問題1:スコア\n        - 問題1:基礎点\n        - 問題1:正解ボーナス点\n        - 問題1:タイムボーナス\n        - 問題1:問題タイプ\n        - 問題1:問題カテゴリ\n        - 問題1:問題トピック\n        - 問題1:難易度\n        - 問題1:開始時間\n        - 問題1:経過時間\n        - 問題1:最後の提出\n        - 問題1:目標時間\n        - 問題1:検証エラー数\n        - 問題1:検証回数\n        - 問題1:コンパイルエラー数\n        - 問題1:正解テストケース数\n        - 問題1:全テストケース数\n        - 問題1:ステータス\n        - 問題1:コード提出回数\n        - 問題1:ケース1 (○ or ×)\n        - 問題1:ケースn\n        - 問題n ...",
        "operationId": "downloadSessionRecordsDetailCsv",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_EVENT_AND_SESSION_VIEW",
              "OWN_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/records/download": {
      "post": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッション成績CSVダウンロード",
        "description": "スキルチェックユーザーリストをダウンロードする\n- 必要権限: [OWN_SESSION_VIEW], [ALL_EVENT_AND_SESSION_VIEW]\n- session_idのセッションが削除済み、存在しない場合NotFound\n- SessionRecordCSVIn.csv_bodyの内容をCSVファイルに書き出しファイル出力",
        "operationId": "downloadSessionRecordsCsv",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionRecordCSVIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/records/question-detail": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッション成績(問題ごと)",
        "description": "セッション成績(問題ごと)\n- 必要権限: [OWN_SESSION_VIEW], [ALL_EVENT_AND_SESSION_VIEW]\n- 並び順:\n    - スコア順降順\n    - 同率スコアの場合、セッション参加順降順\n- アカウント主催イベント毎のログインアカウント別の取得可能項目\n    - スタッフ主催イベント\n        - アルバイト\n            - 参加者アカウント名\n            - 参加者表示名\n        - スタッフ (企業スキルチェック)\n            - 参加者アカウント名\n            - 参加者本名\n                - 自組織イベントの場合\n                    - 必要権限： [自組織イベント個人情報閲覧権限] OWN_SESSION_PERSONAL_INFORMATION_VIEW\n                - 人材紹介\n                    - 必要権限： [人材紹介機能] RECRUITMENT & 対象ユーザが人材紹介規約同意済み\n            - 参加者表示名\n    - 企業主催イベント (企業スキルチェック)\n        - 企業/スタッフ\n            - 参加者アカウント名\n            - 参加者表示名\n            - 補足\n    - 学校主催イベント (企業スキルチェック)\n        - 学校\n            - 学籍番号\n            - 参加者アカウント名\n            - 参加者本名\n                - 自組織イベントの場合\n                    - 必要権限： [自組織イベント個人情報閲覧] SESSION_PERSONAL_INFORMATION_VIEW\n                - 他組織イベントの場合\n                    - 必要権限： [他組織イベント個人情報閲覧] SESSION_SPONSOR_PERSONAL_INFORMATION_VIEW\n                - 人材紹介\n                    - 必要権限： [人材紹介機能] RECRUITMENT & 対象ユーザが人材紹介規約同意済み\n            - 補足\n        - スタッフ\n            - 学籍番号\n            - 参加者アカウント名\n            - 参加者本名\n                - 必要権限： [人材紹介機能] RECRUITMENT\n            - 補足\n    - 学校・スタッフ主催イベント\n        - 企業 (イベント共催)\n            - アカウント名",
        "operationId": "getSessionRecordsPerQuestion",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Session Records Per Question Manage Sessions  Session Id  Records Question Detail Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionQuestionRecordListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/records/user-detail": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッション成績(ユーザーごと)",
        "description": "セッション成績(ユーザーごと)\n- 必要権限: [OWN_SESSION_VIEW], [ALL_EVENT_AND_SESSION_VIEW]\n- 並び順:\n    - スコア順降順\n    - 同率スコアの場合、セッション参加順降順\n- アカウント主催イベント毎のログインアカウント別の取得可能項目\n    - スタッフ主催イベント\n        - アルバイト\n            - 参加者アカウント名\n            - 参加者表示名\n        - スタッフ (企業スキルチェック)\n            - 参加者アカウント名\n            - 参加者本名\n                - 自組織イベントの場合\n                    - 必要権限： [自組織イベント個人情報閲覧権限] OWN_SESSION_PERSONAL_INFORMATION_VIEW\n                - 人材紹介\n                    - 必要権限： [人材紹介機能] RECRUITMENT & 対象ユーザが人材紹介規約同意済み\n            - 参加者表示名\n    - 企業主催イベント (企業スキルチェック)\n        - 企業/スタッフ\n            - 参加者アカウント名\n            - 参加者表示名\n            - 補足\n    - 学校主催イベント (企業スキルチェック)\n        - 学校\n            - 学籍番号\n            - 参加者アカウント名\n            - 参加者本名\n                - 自組織イベントの場合\n                    - 必要権限： [自組織イベント個人情報閲覧] SESSION_PERSONAL_INFORMATION_VIEW\n                - 他組織イベントの場合\n                    - 必要権限： [他組織イベント個人情報閲覧] SESSION_SPONSOR_PERSONAL_INFORMATION_VIEW\n                - 人材紹介\n                    - 必要権限： [人材紹介機能] RECRUITMENT & 対象ユーザが人材紹介規約同意済み\n            - 補足\n        - スタッフ\n            - 学籍番号\n            - 参加者アカウント名\n            - 参加者本名\n                - 必要権限： [人材紹介機能] RECRUITMENT\n            - 補足\n    - 学校・スタッフ主催イベント\n        - 企業 (イベント共催)\n            - アカウント名",
        "operationId": "getSessionRecordsPerUser",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Session Records Per User Manage Sessions  Session Id  Records User Detail Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionQuestionRecordPerUserListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/records/{user_id}": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッション個人成績取得",
        "description": "セッション個人成績取得\n指定されたセッションとユーザーに紐づいた全問題の成績を返却する\n- 必要権限: [OWN_SESSION_VIEW], [ALL_EVENT_AND_SESSION_VIEW]\n- 取得可能条件\n    - [ALL_EVENT_AND_SESSION_VIEW]を持つ場合\n        - 自組織・他組織イベントセッション取得可能\n    - [ALL_EVENT_AND_SESSION_VIEW]を持たない かつ [OWN_SESSION_VIEW]を持つ場合\n        - 自組織イベントセッションのみ取得可能\n    - session_idが存在しない場合404\n    - user_idのユーザーが存在しない,sessionに参加していない場合404\n- レスポンス詳細\n    - コード： コード全体の文字数返却",
        "operationId": "getSessionPersonalRecord",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Session Personal Record Manage Sessions  Session Id  Records  User Id  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionPersonalRecordOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/registration/{session_term_id}": {
      "patch": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッション規約を登録する",
        "description": "セッション規約を登録する\n- 必要権限: [OWN_SESSION_EDIT] [ALL_EVENT_AND_SESSION_EDIT]\n- セッション開始後・終了後の場合不可",
        "operationId": "registerSessionTerm",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Term Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_term_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionTermDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "条件を満たしていないため実行不可: CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED": {
                    "value": {
                      "errorCode": "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
                      "message": "条件を満たしていないため実行不可",
                      "detail": "Cannot be executed because the required conditions are not satisfied."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_EDIT",
              "ALL_EVENT_AND_SESSION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/results": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッション問題成績一覧取得",
        "description": "セッション問題成績一覧取得\n- 必要権限: [ALL_EVENT_AND_SESSION_VIEW] [OWN_SESSION_VIEW]\n- 並び順:\n    - 「詳細を見る」ボタン押下時の問題毎の参加ユーザの成績一覧\n    - スコア順降順\n    - 同率スコアの場合、セッション参加順降順\n- アカウント主催イベント毎のログインアカウント別の取得可能項目\n    - スタッフ主催イベント\n        - アルバイト\n            - 参加者アカウント名\n            - 参加者表示名\n        - スタッフ (企業スキルチェック)\n            - 参加者アカウント名\n            - 参加者本名\n                - 必要権限： [人材紹介機能] RECRUITMENT　かつ　ユーザーが人材紹介規約同意済み\n            - 参加者表示名\n    - 企業主催イベント (企業スキルチェック)\n        - 企業/スタッフ\n            - 参加者アカウント名\n            - 参加者表示名\n            - 補足\n    - 学校主催イベント (企業スキルチェック)\n        - 学校\n            - 学籍番号\n            - 参加者アカウント名\n            - 参加者本名\n                - 必要権限： [自組織イベント個人情報閲覧] SESSION_PERSONAL_INFORMATION_VIEW\n                - 必要権限： [他組織イベント個人情報閲覧] SESSION_SPONSOR_PERSONAL_INFORMATION_VIEW\n            - 補足\n        - スタッフ\n            - 学籍番号\n            - 参加者アカウント名\n            - 参加者本名\n                - 必要権限： [人材紹介機能] RECRUITMENT　かつ　ユーザーが人材紹介規約同意済み\n            - 補足\n    - 学校・スタッフ主催イベント\n        - 企業 (イベント共催)\n            - アカウント名",
        "operationId": "getSessionQuestionResultList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Session Question Result List Manage Sessions  Session Id  Results Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/app__schemas__manage__sessions__session_question_result_list_out__SessionQuestionResultListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/results/users": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "ユーザー成績一覧取得",
        "description": "ユーザー成績一覧取得\n- 並び順: order昇順\n- 必要権限:\n    - [OWN_SESSION_VIEW]\n    - [ALL_EVENT_AND_SESSION_VIEW]\n- 取得条件：\n    - [ALL_EVENT_AND_SESSION_VIEW]を持つ場合\n        - 自組織・他組織イベントセッション取得可能\n    - [ALL_EVENT_AND_SESSION_VIEW]を持たない かつ [OWN_SESSION_VIEW]を持つ場合\n        - 自組織イベントセッションのみ取得可能\n- (セッション作成者の)アカウントタイプ毎に取得項目変更:\n    - スタッフ主催イベント\n        - アルバイト:\n            - 名前(本名)/補足/都道府県　なし\n        -　ST,SU:\n            - 名前(本名)\n                - 必要権限： 人材紹介機能 [RECRUITMENT]　& ユーザーが人材紹介規約同意済み\n                - 自組織イベントの場合\n                    - 必要権限： 自組織個人情報閲覧 [SESSION_PERSONAL_INFORMATION_VIEW]\n            - 補足　なし\n        - イベント共催企業:\n            - 名前(本名)/表示名/補足 なし\n    - 学校主催イベント\n        - 学校・スタッフ:\n            - 表示名　なし\n            - 名前(本名)\n                - 自組織イベントの場合\n                    - 必要権限： [自組織イベント個人情報閲覧] SESSION_PERSONAL_INFORMATION_VIEW\n                - 他組織イベント かつ 閲覧者がスタッフの場合\n                    - 必要権限： [他組織イベント個人情報閲覧] SESSION_SPONSOR_PERSONAL_INFORMATION_VIEW\n                - 必要権限: 人材紹介機能 [RECRUITMENT] & ユーザーが人材紹介規約同意済み\n        - イベント共催企業:\n            - 名前(本名)/表示名/補足/　なし\n    - 企業主催イベント\n        - 名前(本名)/都道府県/　なし",
        "operationId": "getSessionUserResultList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Session User Result List Manage Sessions  Session Id  Results Users Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionUserResultListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/skill-check-users": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "スキルチェックセッション参加者追加一覧取得",
        "description": "スキルチェックセッション（企業作成セッション）に参加できるユーザーの一覧を取得する\n参加者追加タブにて使用\n- 必要権限：[OWN_SESSION_EDIT]\n    - 自組織主催イベントの企業アカウントのみ実行できる\n- session_idに紐づく追加可能な参加者アカウントの一覧を取得する\n    - 取得ユーザ条件：ログインしている企業アカウントが発行したスキルチェックアカウント\n- session_idのセッションが削除済み、存在しない場合NotFound",
        "operationId": "getSkillCheckUsersAdditionalList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionUsersAddListOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_EDIT"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "スキルチェックセッションユーザー登録",
        "description": "スキルチェックセッション（企業作成セッション）へ参加者を登録する\n- 必要権限：[OWN_EVENT_EDIT]\n    - 自組織主催イベントの企業アカウントのみ実行できる\n- session_idに紐づくセッションへ参加者（スキルチェックアカウント）を登録する\n- session_idのセッションが削除済み、存在しない場合NotFound",
        "operationId": "addSkillCheckSessionUsers",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionUserAddIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionUserAddOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_EVENT_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/skill-check-users/delete": {
      "post": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "スキルチェックユーザー登録解除",
        "description": "スキルチェックセッションへの参加者登録を解除する\n- 必要権限: [OWN_EVENT_EDIT]\n    - TODO:現状企業学校で自組織セッション対象に実行可、444スタッフ側での実行権限については検討中\n- session_idのセッションが削除済み,存在しない場合NotFound\n- session_idのセッションが終了済みの場合実行不可エラー（CannotBeExecutedConditionsNotSatisfied）\n- 削除条件：セッション内での問題回答がないユーザーのみ削除可",
        "operationId": "deleteSkillCheckUsers",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SkillCheckSessionUsersDeleteIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "条件を満たしていないため実行不可: CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED": {
                    "value": {
                      "errorCode": "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
                      "message": "条件を満たしていないため実行不可",
                      "detail": "Cannot be executed because the required conditions are not satisfied."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_EVENT_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/skill-check-users/download": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "参加スキルチェックユーザーリストダウンロード",
        "description": "スキルチェックユーザーリストをダウンロードする\n- 必要権限：[OWN_SKILL_CHECK_ACCOUNT_VIEW]\n    - 自組織アカウントのみ実行できる\n- session_idに紐づくセッションに参加中のユーザー情報を出力\n    - 出力情報：ユーザー名/名前/補足情報/参加日/(パスワード)\n    - パスワードを含めるチェック（include_password=True）の場合、パスワード列を追加する\n- ファイル名：skillchecks.csv\n- session_idのセッションが削除済み、存在しない場合NotFound",
        "operationId": "downloadSkillCheckUserList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "パスワード列を含むか",
            "required": false,
            "schema": {
              "title": "Include Password",
              "type": "boolean",
              "description": "パスワード列を含むか",
              "default": false
            },
            "name": "include_password",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SKILL_CHECK_ACCOUNT_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/unregistration": {
      "patch": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッション規約を登録解除する",
        "description": "セッション規約を登録解除する\n- 必要権限: [OWN_SESSION_EDIT] [ALL_EVENT_AND_SESSION_EDIT]\n- Sessionモデル内の規約IDをNoneに更新する\n- セッション開始後・終了後の場合不可",
        "operationId": "unregisterSessionTerm",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "条件を満たしていないため実行不可: CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED": {
                    "value": {
                      "errorCode": "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
                      "message": "条件を満たしていないため実行不可",
                      "detail": "Cannot be executed because the required conditions are not satisfied."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_EDIT",
              "ALL_EVENT_AND_SESSION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/users/out": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッション参加取り消し対象ユーザー一覧取得",
        "description": "セッション参加取り消し対象ユーザー一覧取得\n- 必要権限: [OWN_SESSION_VIEW] [ALL_EVENT_AND_SESSION_VIEW]\n- 取得可能条件\n  - is_deleted = False\n  - [ALL_EVENT_AND_SESSION_VIEW]を持つ場合\n    - 自組織・他組織セッション取得可能\n  - [ALL_EVENT_AND_SESSION_VIEW]を持たない かつ [OWN_SESSION_VIEW]を持つ場合\n    - 自組織セッションのみ取得可能\n- 取得条件：\n  - 開催中のセッションに参加しているユーザーのうち、一度も解答していないユーザーの一覧を取得\n- 並び順: Session.created_atの降順\n- レスポンス内容補足：\n  - ユーザーアイコン画像URL\n    - UserCommonInfo.icon\n  - ユーザー名\n    - UserCommonInfo.display_nameが存在する場合、UserCommonInfo.display_name\n    - 存在しない場合、User.username\n  - 名前\n    - API実行ユーザーが学校アカウントかスタッフアカウントの場合、UserCommonInfo.last_name + UserCommonInfo.first_name\n    - 上記以外の場合、\"-\"\n  - 補足:\n    - API実行ユーザーが学校アカウントかスタッフアカウントの場合、UserCommonInfo.extra_info\n    - 上記以外の場合、\"-\"\n  - 参加日\n    - Session.created_at",
        "operationId": "getSessionUsersOut",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Session Users Out Manage Sessions  Session Id  Users Out Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionUsersOutListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッション参加ユーザー取り消し",
        "description": "セッション参加ユーザー取り消し\n- 必要権限: [ALL_EVENT_AND_SESSION_EDIT] [OWN_SESSION_EDIT]\n- 削除可能条件\n  - is_deleted = False\n  - [ALL_EVENT_AND_SESSION_EDIT]を持つ場合\n    - 自組織・他組織イベントセッション削除可能\n  - [ALL_EVENT_AND_SESSION_EDIT]を持たない かつ [OWN_SESSION_EDIT]を持つ 場合\n    - 自組織イベントセッションのみ削除可能\n- 処理概要\n  - 削除済でないid=session_idのセッション取得\n  - セッションが開催終了していた場合、CannotBeExecutedConditionsNotSatisfied発生\n  - セッションが存在しない場合NotFound発生\n  - セッション問題の解答がないユーザーのみ抽出し、削除実行",
        "operationId": "deleteSessionUsers",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionUsersDeleteIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "条件を満たしていないため実行不可: CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED": {
                    "value": {
                      "errorCode": "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
                      "message": "条件を満たしていないため実行不可",
                      "detail": "Cannot be executed because the required conditions are not satisfied."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_EDIT",
              "ALL_EVENT_AND_SESSION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/staffs": {
      "get": {
        "tags": [
          "manage/staffs"
        ],
        "summary": "社員アカウント一覧",
        "description": "社員アカウント一覧\n- 必要権限: [OWN_ADMIN_VIEW]\n- ログインユーザー所属組織のスタッフを取得\n- is_deleted=Falseのスタッフのみ取得\n- 並び順: id昇順",
        "operationId": "getStaffList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Staff List Manage Staffs Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StaffListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_ADMIN_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/staffs"
        ],
        "summary": "社員アカウント作成",
        "description": "社員アカウント作成\n- 必要権限: [OWN_ADMIN_EDIT]\n- ログインユーザー所属組織のスタッフアカウントを作成する\n- 登録データ補足情報\n    - user_type: UserType.STAFF\n    - staff_type: StaffType.GENERAL\n    - created_by: ログインユーザーのlast_name + first_name",
        "operationId": "createStaff",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "データが重複している: DUPLICATE_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DUPLICATE_ERROR": {
                    "value": {
                      "errorCode": "DUPLICATE_ERROR",
                      "message": "データが重複しています",
                      "detail": "duplicate key value violates unique constraintr"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_ADMIN_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/staffs/{staff_id}": {
      "delete": {
        "tags": [
          "manage/staffs"
        ],
        "summary": "社員アカウント削除",
        "description": "社員アカウント論理削除\n- 必要権限: [OWN_ADMIN_EDIT]\n- is_deleted=Falseのスタッフのみ削除可能\n- ログインユーザー所属組織のスタッフのみ削除可能",
        "operationId": "deleteStaff",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Staff Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "staff_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_ADMIN_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/manuals/pdf-manuals": {
      "get": {
        "tags": [
          "manage/manuals"
        ],
        "summary": "PDFマニュアル一覧取得",
        "description": "PDFマニュアル一覧取得\n- 必要権限: [ASSETS_VIEW]\n- 並び順: 作成日時降順",
        "operationId": "getManagePdfManualList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Manage Pdf Manual List Manage Manuals Pdf Manuals Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/app__schemas__manage__manuals__get_pdf_manual_list_out__GetPDFManualListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/manuals"
        ],
        "summary": "PDFマニュアル作成",
        "description": "PDFマニュアル作成\n- 必要権限: [ASSETS_EDIT]\n- 処理手順:\n    - ManualPDFを作成",
        "operationId": "createPdfManual",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePDFManualIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePDFManualOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/manuals/pdf-manuals/{pdf_manual_id}": {
      "get": {
        "tags": [
          "manage/manuals"
        ],
        "summary": "PDFマニュアル詳細取得",
        "description": "動画マニュアル詳細取得\n- 必要権限: [ASSETS_VIEW]\n-　データ取得可能条件:\n    - pdf_manual_idでManualPDFを特定できること",
        "operationId": "getManagePdfManualDetail",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Pdf Manual Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "pdf_manual_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPDFManualDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_VIEW"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/manuals"
        ],
        "summary": "PDFマニュアル削除",
        "description": "PDFマニュアル削除\n- 必要権限: [ASSETS_EDIT]\n- データ取得可能条件: pdf_manual_idが存在すること",
        "operationId": "deletePdfManual",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Pdf Manual Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "pdf_manual_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/manuals"
        ],
        "summary": "PDFマニュアル更新",
        "description": "PDFマニュアル更新\n- 必要権限: [ASSETS_EDIT]\n- 処理手順:\n    - pdf_manual_idで該当レコード特定\n    - データを更新する (formとresponseは作成と同じものですので、共通化になる)",
        "operationId": "updatePdfManual",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "PDFマニュアルID",
              "type": "integer"
            },
            "name": "pdf_manual_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePDFManualIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePDFManualOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/manuals/video-manuals": {
      "get": {
        "tags": [
          "manage/manuals"
        ],
        "summary": "動画マニュアル一覧取得",
        "description": "動画マニュアル一覧取得\n- 必要権限: [ASSETS_EDIT, ASSETS_VIEW]\n- 並び順: id降順",
        "operationId": "getVideoManualsList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Video Manuals List Manage Manuals Video Manuals Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VideoManualListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT",
              "ASSETS_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/manuals"
        ],
        "summary": "動画マニュアル作成",
        "description": "動画マニュアル作成\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "createVideoManual",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoManualCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/manuals/video-manuals/{video_manual_id}": {
      "get": {
        "tags": [
          "manage/manuals"
        ],
        "summary": "動画マニュアル詳細取得",
        "description": "動画マニュアル詳細取得\n- 必要権限: [ASSETS_EDIT, ASSETS_VIEW]",
        "operationId": "getManageVideoManualDetail",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Video Manual Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "video_manual_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoManualDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT",
              "ASSETS_VIEW"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/manuals"
        ],
        "summary": "動画マニュアル削除",
        "description": "動画マニュアル削除\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "deleteVideoManual",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Video Manual Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "video_manual_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/manuals"
        ],
        "summary": "動画マニュアル更新",
        "description": "動画マニュアル更新\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "updateVideoManual",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Video Manual Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "video_manual_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoManualUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/corporate_profile/{organization_id}": {
      "get": {
        "tags": [
          "manage/corporate_profile"
        ],
        "summary": "企業プロファイル取得",
        "description": "企業プロファイル取得\n- 必要権限: [OWN_ADMIN_VIEW] [ALL_ADMIN_VIEW]\n- 以下の条件のデータのみ取得可能\n    - OrganizationType: COMPANY\n    - is_deleted: False",
        "operationId": "getCorporateProfile",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "organization_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CorporateProfileDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_VIEW",
              "OWN_ADMIN_VIEW"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/corporate_profile"
        ],
        "summary": "企業プロファイル更新",
        "description": "企業プロファイル更新\n- 必要権限: [OWN_ADMIN_EDIT] [ALL_ADMIN_EDIT]\n- 以下の条件のデータのみ更新可能\n    - OrganizationType: COMPANY\n    - is_deleted: False\n- 更新データ補足情報\n    - Organization.updated_by: last_name + first_name",
        "operationId": "updateCorporateProfile",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "organization_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CorporateProfileUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CorporateProfileDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_EDIT",
              "OWN_ADMIN_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/corporate_profile/{organization_id}/company_members": {
      "get": {
        "tags": [
          "manage/corporate_profile"
        ],
        "summary": "先輩社員情報を一覧取得",
        "description": "先輩社員情報を一覧取得\n- 必要権限:  [ALL_ADMIN_VIEW], [OWN_ADMIN_VIEW]\n- 並び順: ID昇順\n- 実行条件\n    - Organization.is_deleted=False",
        "operationId": "getCompanyMemberList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "organization_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Company Member List Manage Corporate Profile  Organization Id  Company Members Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyMemberListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_VIEW",
              "OWN_ADMIN_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/corporate_profile"
        ],
        "summary": "先輩社員を登録",
        "description": "先輩社員を登録\n- 必要権限: [ALL_ADMIN_EDIT], [OWN_ADMIN_EDIT]\n- 登録条件\n    - 登録数は最大3個\n    - 登録数が3個のとき、実行不可\n    - Organization.is_deleted=False",
        "operationId": "createCompanyMember",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "organization_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyMemberCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyMemberDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "条件を満たしていないため実行不可: CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED": {
                    "value": {
                      "errorCode": "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
                      "message": "条件を満たしていないため実行不可",
                      "detail": "Cannot be executed because the required conditions are not satisfied."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_EDIT",
              "OWN_ADMIN_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/corporate_profile/{organization_id}/company_members/{company_member_id}": {
      "get": {
        "tags": [
          "manage/corporate_profile"
        ],
        "summary": "先輩社員情報を詳細取得",
        "description": "先輩社員情報を詳細取得\n- 必要権限:  [ALL_ADMIN_VIEW], [OWN_ADMIN_VIEW]\n- 実行条件\n    - Organization.is_deleted=False",
        "operationId": "getCompanyMember",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "organization_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Company Member Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "company_member_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyMemberDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_VIEW",
              "OWN_ADMIN_VIEW"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/corporate_profile"
        ],
        "summary": "先輩社員情報を削除",
        "description": "先輩社員情報を削除\n- 必要権限:  [ALL_ADMIN_EDIT], [OWN_ADMIN_EDIT]\n- 実行条件\n    - Organization.is_deleted=False",
        "operationId": "deleteCompanyMember",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "organization_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Company Member Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "company_member_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_EDIT",
              "OWN_ADMIN_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/corporate_profile"
        ],
        "summary": "先輩社員情報を更新",
        "description": "先輩社員情報を更新\n- 必要権限:  [ALL_ADMIN_EDIT], [OWN_ADMIN_EDIT]\n- 実行条件\n    - Organization.is_deleted=False",
        "operationId": "updateCompanyMember",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "organization_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Company Member Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "company_member_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyMemberUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyMemberDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_EDIT",
              "OWN_ADMIN_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/users": {
      "get": {
        "tags": [
          "manage/users"
        ],
        "summary": "SU用ユーザー一覧取得",
        "description": "SU用ユーザー一覧取得\n- 必要権限: [Pm.USER_ACCOUNT_EDIT]\n- ユーザー一覧取得\n    - User.id_deleted == False\n    - User.user_type == UserType.GENERAL\n    - fuzzy_search_nameで以下を検索\n        - User.username\n        - User.user_common_info.display_name\n        - User.user_common_info.last_name\n        - User.user_common_info.first_name\n        - User.user_common_info.email\n- 並び順 User.id",
        "operationId": "getForSuUserList",
        "parameters": [
          {
            "description": "あいまいユーザ名検索",
            "required": false,
            "schema": {
              "title": "Fuzzy Search Name",
              "type": "string",
              "description": "あいまいユーザ名検索"
            },
            "name": "fuzzy_search_name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get For Su User List Manage Users Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ForSuUserListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "USER_ACCOUNT_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/users/{user_id}/profile": {
      "get": {
        "tags": [
          "manage/users"
        ],
        "summary": "SU用ユーザプロフィール取得",
        "description": "SU用ユーザープロフィール取得\n- 必要権限: [Pm.USER_ACCOUNT_EDIT]\n- ユーザープロフィール取得\n    - is_delete == False,\n    - user_type == GENERAL,\n    - id == user_id\n- 取得できなければ NotFound",
        "operationId": "getForSuUserProfile",
        "parameters": [
          {
            "description": "user_id",
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer",
              "description": "user_id"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForSuUserProfileOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "USER_ACCOUNT_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/users"
        ],
        "summary": "SU用ユーザプロフィール更新",
        "description": "SU用ユーザープロフィール更新\n- 必要権限: [Pm.USER_ACCOUNT_EDIT]\n- ユーザープロフィール更新\n    - is_delete == False,\n    - user_type == GENERAL,\n    - id == user_id\n- ユーザーが取得できなければ NotFound\n- データがない場合は作成(upsert)\n- 同じusernameを持つuserがいればusernameは変更しない\n    - 同じusernameを持つuserがいればhas_duplicate_usernameはtrue\n    - 名前を変更しない場合はhas_duplicate_usernameはfalse",
        "operationId": "updateForSuUserProfile",
        "parameters": [
          {
            "description": "user_id",
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer",
              "description": "user_id"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateForSuUserProfileIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateForSuUserProfileOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "USER_ACCOUNT_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/skillcheck-users": {
      "get": {
        "tags": [
          "manage/skill_check_users"
        ],
        "summary": "スキルチェックアカウント一覧取得",
        "description": "スキルチェックアカウント一覧取得\n- 必要権限: [OWN_SKILL_CHECK_ACCOUNT_VIEW]\n- ページネーション: しばらくなしにする\n- 並び順: ユーザー名、名前(fullname)、補足情報、作成日、それぞれ昇順、降順に並べるように設定\n- 取得可能条件\n    - user.school_user_type = None\n    - User.is_deleted = False\n    - 組織id = 作成企業のid (User.organization_id = user.organization_id)\n    - ユーザータイプ = スキルチェック (User.user_type = UserType.SKILL_CHECK)\n- レスポンス補足情報\n    - count: 現在有効なスキルチェックアカウント数(削除されると失効)\n    - total: 発行可能なスキルチェックアカウント数\n- 処理内容\n    1. 自組織の組織id取得(user.organization_id)\n    2. 自組織に紐づいている企業トライアル条件から発行可能スキルチェックアカウント数取得\n    3. 条件で絞り込み、レスポンス構築",
        "operationId": "getSkillUsersList",
        "parameters": [
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/app__routers__manage__skill_check_users__get_skill_check_users_list__Ordering"
                }
              ],
              "default": "created_at_desc"
            },
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkillCheckUsersListOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SKILL_CHECK_ACCOUNT_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/skill_check_users"
        ],
        "summary": "スキルチェックアカウント追加(未実装)",
        "description": "スキルチェックアカウントをbulk createのAPI\n必要権限: OWN_SKILL_CHECK_ACCOUNT_EDIT\n設定可能パラメータ:\n    - count(追加数)\n実行条件:\n    - 権限を持つこと\n    - count(追加数) > 0\n    - 発行可能スキルチェックアカウント数　- 既存アカウント数 > 0\nレスポンス:\n    - 成功に追加したアカウント数\n    - 追加後の数\n    - 登録に失敗した数\n    - 発行可能数を超過した数\n既存アカウント数取得条件 (一覧と同じ):\n    - user.school_user_type = None\n    - User.is_deleted = False\n    - 組織id = 作成企業のid (User.organization_id = user.organization_id)\n    - ユーザータイプ = スキルチェック (User.user_type = UserType.SKILL_CHECK)",
        "operationId": "addSkillCheckUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SkillCheckUsersAddIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkillCheckUsersAddOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SKILL_CHECK_ACCOUNT_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/skillcheck-users/csv": {
      "get": {
        "tags": [
          "manage/skill_check_users"
        ],
        "summary": "スキルチェックアカウントリストダウンロード",
        "description": "スキルチェックアカウント一覧画面からCSVダウンロードする\n- 必要権限: [OWN_SKILL_CHECK_ACCOUNT_VIEW]\n- 取得可能条件(一覧と同じ):\n    - user.school_user_type = None\n    - User.is_deleted = False\n    - 組織id = 作成企業のid (User.organization_id = user.organization_id)\n    - ユーザータイプ = スキルチェック (User.user_type = UserType.SKILL_CHECK)\n- 備考: パスワードは`User.password`ではなく、 `User.user_common_info.onetime_password`で取得\n- 処理内容\n    1. data取得\n    2. response 書き込み(content-type, http header)",
        "operationId": "getSkillCheckUserListCsv",
        "parameters": [
          {
            "description": "セッションID",
            "required": false,
            "schema": {
              "title": "Session Id",
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "query"
          },
          {
            "description": "パスワード列を含むか",
            "required": false,
            "schema": {
              "title": "Include Password",
              "type": "boolean",
              "description": "パスワード列を含むか",
              "default": false
            },
            "name": "include_password",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SKILL_CHECK_ACCOUNT_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/skillcheck-users/{user_id}": {
      "get": {
        "tags": [
          "manage/skill_check_users"
        ],
        "summary": "スキルチェックアカウントログイン情報取得",
        "description": "指定のuser_idでスキルチェックアカウントのログイン情報を取得\n必要権限: [OWN_SKILL_CHECK_ACCOUNT_VIEW]\nレスポンス補足:\n    - ログインURLはフロント側に用意していただく\n取得条件:\n    - User.is_delete == False\n    - User.organization_id == user.organization_id\n備考: パスワードはUser.user_common_info.onetime_passwordを使用\n処理内容:\n    - 条件でユーザーを特定\n    - レスポンス返す",
        "operationId": "getSkillCheckUserLoginInfo",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkillCheckUserLoginInfoOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SKILL_CHECK_ACCOUNT_VIEW"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/skill_check_users"
        ],
        "summary": "スキルチェックアカウント削除",
        "description": "スキルチェックアカウント削除\n必要権限: OWN_SKILL_CHECK_ACCOUNT_EDIT\n実行条件:\n    - 該当データが特定できる (存在しない場合NotFound)\nデータ取得条件:\n    - User.id = user_id\n    - User.is_deleted = False\n    - User.organization_id = user.organization_id\n    - User.user_type = UserType.SKILL_CHECK",
        "operationId": "deleteSkillCheckUser",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SKILL_CHECK_ACCOUNT_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/skill_check_users"
        ],
        "summary": "スキルチェックアカウント情報更新",
        "description": "スキルチェックアカウント情報更新API\n必要権限: OWN_SKILL_CHECK_ACCOUNT_EDIT\n更新可能項目:\n    - 名前(display_name)\n    - 補足情報(extra_info)\n実行条件:\n    - 該当データ特定できる (存在しない場合NotFound)\nデータ取得条件:\n    - User.id = user_id\n    - User.is_deleted = False\n    - User.organization_id = user.organization_id\n    - User.user_type = UserType.SKILL_CHECK",
        "operationId": "updateSkillCheckUserInfo",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SkillCheckUserInfoUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkillCheckUserInfoUpdateOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SKILL_CHECK_ACCOUNT_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/skillcheck-users/{user_id}/reset-password": {
      "patch": {
        "tags": [
          "manage/skill_check_users"
        ],
        "summary": "パスワードリセット",
        "description": "スキルチェックアカウントリセットパスワードAPI\n必要権限: OWN_SKILL_CHECK_ACCOUNT_EDIT\n実行条件:\n    - 該当ユーザが特定できる (存在しない場合NotFound)\nデータ取得条件:\n    - User.id = user_id\n    - User.is_deleted = False\n    - User.organization_id = user.organization_id\n    - User.user_type = UserType.SKILL_CHECK",
        "operationId": "resetSkillCheckUserPassword",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SKILL_CHECK_ACCOUNT_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/content-packages": {
      "get": {
        "tags": [
          "manage/content-packages"
        ],
        "summary": "コンテンツパッケージ一覧取得",
        "description": "コンテンツパッケージ一覧を取得\n- 必要権限: [PRIVATE_CONTENT_PACKAGE_VIEW]\n- 並び順: id降順",
        "operationId": "getContentPackageList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Content Package List Manage Content Packages Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentPackageListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PRIVATE_CONTENT_PACKAGE_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/content-packages"
        ],
        "summary": "コンテンツパッケージ作成",
        "description": "コンテンツパッケージを作成\n- 必要権限: [CONTENT_PACKAGE_EDIT]\n- 登録データ補足情報\n    - created_at: user.full_name",
        "operationId": "createContentPackage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentPackageCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentPackageDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "CONTENT_PACKAGE_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/content-packages/for-event/{session_id}": {
      "get": {
        "tags": [
          "manage/content-packages"
        ],
        "summary": "イベント用コンテンツパッケージ一覧取得",
        "description": "イベント用コンテンツパッケージ一覧を取得\n- 必要権限: [OWN_SESSION_EDIT, ALL_EVENT_AND_SESSION_EDIT]\n    - ALL_EVENT_AND_SESSION_EDIT権限を持たない場合は自組織主催のイベントのみ指定可能\n- 指定したセッションが存在しない場合NOT_FOUNDエラー\n- 並び順: id降順\n- 取得可能条件\n    - is_published=True\n    - 企業主催のイベントの場合\n        - is_company_package=True\n    - 学校主催のイベントの場合\n        - is_school_package=True",
        "operationId": "getContentPackageListForEvent",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Content Package List For Event Manage Content Packages For Event  Session Id  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentPackageListForEventOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_EDIT",
              "ALL_EVENT_AND_SESSION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/content-packages/{content_package_id}": {
      "get": {
        "tags": [
          "manage/content-packages"
        ],
        "summary": "コンテンツパッケージ詳細取得",
        "description": "コンテンツパッケージ詳細を取得\n- 必要権限: [PRIVATE_CONTENT_PACKAGE_VIEW]\n- 登録コンテンツの並び順: order昇順",
        "operationId": "getContentPackage",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Package Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_package_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentPackageDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PRIVATE_CONTENT_PACKAGE_VIEW"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/content-packages"
        ],
        "summary": "コンテンツパッケージ削除",
        "description": "コンテンツパッケージを削除\n- 必要権限: [CONTENT_PACKAGE_EDIT]\n- 物理削除",
        "operationId": "deleteContentPackage",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Package Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_package_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "データが紐付いているため削除不可: CANNOT_BE_DELETED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_BE_DELETED": {
                    "value": {
                      "errorCode": "CANNOT_BE_DELETED",
                      "message": "データが紐付いているため削除できません",
                      "detail": "Cannot be deleted because the data is linked"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "CONTENT_PACKAGE_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/content-packages"
        ],
        "summary": "コンテンツパッケージ更新",
        "description": "コンテンツパッケージを更新\n- 必要権限: [CONTENT_PACKAGE_EDIT]\n- 登録データ補足情報\n    - updated_at: user.full_name",
        "operationId": "updateContentPackage",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Package Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_package_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentPackageUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentPackageDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "CONTENT_PACKAGE_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/content-packages/{content_package_id}/contents": {
      "put": {
        "tags": [
          "manage/content-packages"
        ],
        "summary": "パッケージコンテンツ更新",
        "description": "コンテンツパッケージの登録コンテンツを更新\n- 必要権限: [CONTENT_PACKAGE_EDIT]\n- 登録データ補足情報\n    - updated_at: user.full_name\n- 古い登録コンテンツをパッケージからすべて削除して、新しいコンテンツを登録する",
        "operationId": "updateContentPackageContent",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Package Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_package_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Content Package In",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContentPackageContentUpdateIn"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentPackageDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "CONTENT_PACKAGE_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/content-packages/{content_package_id}/for-event": {
      "get": {
        "tags": [
          "manage/content-packages"
        ],
        "summary": "イベント用コンテンツパッケージ詳細取得",
        "description": "コンテンツパッケージ詳細を取得\n- 必要権限: [OWN_SESSION_EDIT, ALL_EVENT_AND_SESSION_EDIT]\n- 登録コンテンツの並び順: order昇順\n- 取得可能条件\n    - is_published=True",
        "operationId": "getContentPackageForEvent",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Package Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_package_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentPackageDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_EDIT",
              "ALL_EVENT_AND_SESSION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/advertisements": {
      "get": {
        "tags": [
          "manage/advertisements"
        ],
        "summary": "広告一覧取得",
        "description": "広告一覧取得\n- 必要権限: [ADVERTISEMENT_VIEW]\n- 並び順: id降順\n- 以下のデータのみ取得\n  - is_deleted: False",
        "operationId": "getAdvertisementList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Advertisement List Manage Advertisements Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdvertisementDetailOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ADVERTISEMENT_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/advertisements"
        ],
        "summary": "広告作成",
        "description": "広告作成\n- 必要権限: [ADVERTISEMENT_EDIT]\n- 登録データ補足情報\n  -",
        "operationId": "createAdvertisement",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvertisementCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvertisementDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ADVERTISEMENT_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/advertisements/{advertisement_id}": {
      "get": {
        "tags": [
          "manage/advertisements"
        ],
        "summary": "広告詳細取得",
        "description": "広告詳細取得\n- 必要権限: [ADVERTISEMENT_VIEW]\n- 以下のデータのみ取得\n  - id: advertisement_id\n  - is_deleted: False",
        "operationId": "getAdvertisement",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Advertisement Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "advertisement_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvertisementDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ADVERTISEMENT_VIEW"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/advertisements"
        ],
        "summary": "広告削除",
        "description": "広告削除\n- 必要権限: [ADVERTISEMENT_EDIT]\n- Advertisementを削除する",
        "operationId": "deleteAdvertisement",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Advertisement Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "advertisement_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ADVERTISEMENT_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/advertisements"
        ],
        "summary": "広告更新",
        "description": "広告更新\n- 必要権限: [ADVERTISEMENT_EDIT]\n- is_deleted=Falseのみ更新可能\n- 登録データ補足情報\n  - 広告名(管理用): 入力値(テキストボックス)\n  - URL: 入力値: 入力値(テキストボックス)\n  - 掲載開始日時: 入力値(テキストボックス(カレンダー))\n  - 掲載終了日時: 入力値(テキストボックス(カレンダー))\n  - 公開フラグ: 入力値(チェックボックス)",
        "operationId": "updateAdvertisement",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Advertisement Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "advertisement_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvertisementUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvertisementDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ADVERTISEMENT_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/advertisements/{advertisement_id}/banners": {
      "post": {
        "tags": [
          "manage/advertisements"
        ],
        "summary": "広告画像登録",
        "description": "広告画像登録\n- 必要権限: [ADVERTISEMENT_EDIT]\n- 登録データ補足情報\n  - Advertisement.is_deleted = False",
        "operationId": "registerAdvertisementBanner",
        "parameters": [
          {
            "description": "id",
            "required": true,
            "schema": {
              "title": "Advertisement Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "id"
            },
            "name": "advertisement_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvertisementBannerCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvertisementBannerDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ADVERTISEMENT_EDIT"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/advertisements"
        ],
        "summary": "広告画像削除",
        "description": "広告画像削除\n- 必要権限: [ADVERTISEMENT_EDIT]\n- クラウドストレージ内の該当ファイルを削除する\n- Advertisementのimage1_336x280を空にする",
        "operationId": "deleteAdvertisementBanner",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Advertisement Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "advertisement_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ADVERTISEMENT_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/session_terms": {
      "get": {
        "tags": [
          "manage/session_terms"
        ],
        "summary": "セッション規約一覧を取得",
        "description": "セッション規約一覧を取得\n- 必要権限: [OWN_SESSION_VIEW] [ALL_EVENT_AND_SESSION_VIEW] [PRO_SESSION_EDIT] [TECHTHON_SESSION_EDIT]\n- 並び順:id昇順\n- 自組織で作成した規約のみ取得可能",
        "operationId": "getSessionTermList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Session Term List Manage Session Terms Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionTermListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW",
              "PRO_SESSION_EDIT",
              "TECHTHON_SESSION_EDIT"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/session_terms"
        ],
        "summary": "セッション規約を作成",
        "description": "セッション規約を作成\n- 必要権限: [OWN_SESSION_EDIT] [ALL_EVENT_AND_SESSION_EDIT] [PRO_SESSION_EDIT] [TECHTHON_SESSION_EDIT]\n- 自組織のセッション規約のみ作成できる",
        "operationId": "createSessionTerm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionTermCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionTermDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_EDIT",
              "ALL_EVENT_AND_SESSION_EDIT",
              "PRO_SESSION_EDIT",
              "TECHTHON_SESSION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/session_terms/{session_term_id}": {
      "get": {
        "tags": [
          "manage/session_terms"
        ],
        "summary": "セッション規約を取得",
        "description": "セッション規約を取得\n- 必要権限: [OWN_SESSION_VIEW] [ALL_EVENT_AND_SESSION_VIEW] [PRO_SESSION_EDIT] [TECHTHON_SESSION_EDIT]\n- 自組織で作成した規約のみ取得可能",
        "operationId": "getSessionTerm",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Term Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_term_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionTermDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW",
              "PRO_SESSION_EDIT",
              "TECHTHON_SESSION_EDIT"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/session_terms"
        ],
        "summary": "セッション規約を削除",
        "description": "セッション規約を削除\n- 必要権限: [OWN_SESSION_EDIT] [ALL_EVENT_AND_SESSION_EDIT] [PRO_SESSION_EDIT] [TECHTHON_SESSION_EDIT]\n- セッションと紐づいている場合、削除不可\n- 自組織のセッション規約のみ削除できる",
        "operationId": "deleteSessionTerm",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Term Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_term_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "データが紐付いているため削除不可: CANNOT_BE_DELETED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_BE_DELETED": {
                    "value": {
                      "errorCode": "CANNOT_BE_DELETED",
                      "message": "データが紐付いているため削除できません",
                      "detail": "Cannot be deleted because the data is linked"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_EDIT",
              "ALL_EVENT_AND_SESSION_EDIT",
              "PRO_SESSION_EDIT",
              "TECHTHON_SESSION_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/session_terms"
        ],
        "summary": "セッション規約更新",
        "description": "セッション規約更新\n- 必要権限: [OWN_SESSION_EDIT] [ALL_EVENT_AND_SESSION_EDIT] [PRO_SESSION_EDIT] [TECHTHON_SESSION_EDIT]\n- 自組織セッション規約のみ更新可能\n- 更新時\n    - versionをインクリメントする\n    - 更新者を変更する",
        "operationId": "updateSessionTerm",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Term Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_term_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionTermUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionTermDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_EDIT",
              "ALL_EVENT_AND_SESSION_EDIT",
              "PRO_SESSION_EDIT",
              "TECHTHON_SESSION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/school-users": {
      "get": {
        "tags": [
          "manage/school-users"
        ],
        "summary": "学校管理ユーザ一覧取得",
        "description": "学校管理ユーザ一覧取得\n- 必要権限: [ALL_ADMIN_VIEW, OWN_ADMIN_VIEW]\n- 並び順: id昇順\n- 以下のデータのみ取得\n    - user_type: UserType.SCHOOL\n    - is_deleted: False",
        "operationId": "getSchoolUserList",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "organization_id",
            "in": "query"
          },
          {
            "description": "管理者のみ",
            "required": false,
            "schema": {
              "title": "Is Manage",
              "type": "boolean",
              "description": "管理者のみ"
            },
            "name": "is_manage",
            "in": "query"
          },
          {
            "description": "先生のみ",
            "required": false,
            "schema": {
              "title": "Is Teacher",
              "type": "boolean",
              "description": "先生のみ"
            },
            "name": "is_teacher",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get School User List Manage School Users Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SchoolUserListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_VIEW",
              "OWN_ADMIN_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/school-users"
        ],
        "summary": "学校管理ユーザー作成",
        "description": "学校管理ユーザーを作成\n- 必要権限: [ALL_ADMIN_EDIT, OWN_ADMIN_EDIT]\n- 登録データ補足情報\n    - organization_id: OrganizationType.SCHOOLの組織のみ設定可能\n    - user_type: UserType.SCHOOL\n    - password: ハッシュ化して登録\n    - created_by: ログインユーザーのlast_name + first_name",
        "operationId": "createSchoolUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchoolUserCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolUserDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_EDIT",
              "OWN_ADMIN_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/school-users"
        ],
        "summary": "学校管理者権限変更",
        "description": "学校管理者権限変更(一括)\n- 必要権限: [ALL_ADMIN_EDIT], [OWN_ADMIN_EDIT]\n    - [OWN_ADMIN_EDIT]: 自組織のみ変更可能\n- リクエスト\n    - organization_id\n    - user_list\n        - user_id\n        - school_user_type",
        "operationId": "updateSchoolUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchoolUserUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_EDIT",
              "OWN_ADMIN_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/school-users/moodle/{organization_id}": {
      "get": {
        "tags": [
          "manage/school-users"
        ],
        "summary": "Moodle連携認証情報取得",
        "description": "Moodle連携認証情報取得\n- 必要権限: [ALL_ADMIN_EDIT]\n- MoodleOauthInfoが存在しなければNotFound",
        "operationId": "getMoodleLinkDetail",
        "parameters": [
          {
            "description": "組織ID",
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "組織ID"
            },
            "name": "organization_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoodleLinkDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "既にMoodle連携済み: ALREADY_LINKED_MOODLE",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "ALREADY_LINKED_MOODLE": {
                    "value": {
                      "errorCode": "ALREADY_LINKED_MOODLE",
                      "message": "既にMoodle連携済みです",
                      "detail": "Already Linked Moodle"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_EDIT"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/school-users"
        ],
        "summary": "Moodle連携登録",
        "description": "Moodle連携登録\n- 必要権限: [ALL_ADMIN_EDIT]\n- 実行処理\n    - MoodleOauthInfo作成\n        - client_key = \"S\" + str(school_department.id) + \"&\" + ランダムな12桁の文字列\n        - client_secret=ランダムな20桁の文字列\n            - 上記二つの処理は現TechFUL踏襲\n        - school_department_id=school_department.id\n        - created_by=user.username\n- 例外処理\n    - 学部が存在しなければ NotFound\n    - 学校が削除済みなら NotFound\n    - 指定されだ学部が既にMoodle連携済みなら AlreadyLinkedMoodle\n- 補足\n    - レスポンスのlinked_sourceは連携している学校名学部名",
        "operationId": "createMoodleLink",
        "parameters": [
          {
            "description": "組織ID",
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "組織ID"
            },
            "name": "organization_id",
            "in": "path"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoodleLinkDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "既にMoodle連携済み: ALREADY_LINKED_MOODLE",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "ALREADY_LINKED_MOODLE": {
                    "value": {
                      "errorCode": "ALREADY_LINKED_MOODLE",
                      "message": "既にMoodle連携済みです",
                      "detail": "Already Linked Moodle"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_EDIT"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/school-users"
        ],
        "summary": "Moodle連携認証情報削除",
        "description": "Moodle連携認証情報削除\n- 必要権限: [ALL_ADMIN_EDIT]\n- MoodleOauthInfoが存在しなければNotFound",
        "operationId": "deleteMoodleLink",
        "parameters": [
          {
            "description": "組織ID",
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "組織ID"
            },
            "name": "organization_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "既にMoodle連携済み: ALREADY_LINKED_MOODLE",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "ALREADY_LINKED_MOODLE": {
                    "value": {
                      "errorCode": "ALREADY_LINKED_MOODLE",
                      "message": "既にMoodle連携済みです",
                      "detail": "Already Linked Moodle"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/school-users/send-invitation": {
      "post": {
        "tags": [
          "manage/school-users"
        ],
        "summary": "学校ユーザー招待（アカウント追加）",
        "description": "学校ユーザー招待（アカウント追加）\n- 必要権限：[OWN_ADMIN_EDIT]\n- 処置内容\n    -　学校ユーザを作成\n        - username = user.organization.school_department.slug + \"-\" + \"1\"\n            - もし存在したら1ではなく2\n            - 現と同じ処理です\n        - password = ランダムな8桁の文字列\n            - 現と同じ処理です\n        - school_user_type = invitation_in.school_user_type\n        - email = invitation_in.email\n    - トークンを発行\n    - invitation_in.email宛てにpasswordとusernameを送信\n- 例外処理\n    - 同じemailが既に使用されていたら AlreadyExistsEmail",
        "operationId": "invitationSchoolUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvitationSchoolUserIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationSchoolUserOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "同じメールアドレスがすでに登録済み: ALREADY_EXISTS_EMAIL<br>存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "ALREADY_EXISTS_EMAIL": {
                    "value": {
                      "errorCode": "ALREADY_EXISTS_EMAIL",
                      "message": "同じメールアドレスがすでに登録済みです",
                      "detail": "Already Exists Email"
                    }
                  },
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_ADMIN_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/school-users/{user_id}": {
      "get": {
        "tags": [
          "manage/school-users"
        ],
        "summary": "学校ユーザー詳細取得",
        "description": "学校ユーザー詳細取得\n- 必要権限: [ALL_ADMIN_VIEW, OWN_ADMIN_VIEW]",
        "operationId": "getSchoolUser",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolUserDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_VIEW",
              "OWN_ADMIN_VIEW"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/school-users"
        ],
        "summary": "学校管理ユーザ削除",
        "description": "学校管理ユーザ削除\n- 必要権限: [ALL_ADMIN_EDIT, OWN_ADMIN_EDIT]\n- 論理削除\n- 以下のデータのみ削除可能\n    - user_type: SCHOOL\n    - is_deleted: False",
        "operationId": "deleteSchoolUser",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_EDIT",
              "OWN_ADMIN_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/school-users"
        ],
        "summary": "学校管理ユーザプロフィール更新",
        "description": "(先生,TA)ユーザープロフィール情報を更新する\n- 必要権限：[OWN_ADMIN_EDIT]\n- 処理内容\n    - user_id で特定した User の下記パラメータを変更する\n        - User.user_common_info.icon = profile_in.icon\n        - User.user_common_info.last_name = profile_in.last_name\n        - User.user_common_info.first_name = profile_in.first_name\n    - profile_inを返却\n- 例外\n    - user_id を持つ User が存在しなければ NotFound",
        "operationId": "updateSchoolUserProfile",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSchoolUserProfileIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSchoolUserProfileOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_ADMIN_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/skills": {
      "get": {
        "tags": [
          "manage/skills"
        ],
        "summary": "スキル一覧取得",
        "description": "スキル一覧を取得\n- 必要権限: [ASSETS_EDIT]\n- 並び順: id降順",
        "operationId": "getSkillList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Skill List Manage Skills Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SkillListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/skills"
        ],
        "summary": "スキル作成",
        "description": "スキルを作成\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "createSkill",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SkillCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkillDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/skills/{skill_id}": {
      "get": {
        "tags": [
          "manage/skills"
        ],
        "summary": "スキル詳細取得",
        "description": "スキル詳細を取得\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "getSkill",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Skill Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "skill_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkillDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/skills"
        ],
        "summary": "スキル削除",
        "description": "スキルを削除\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "deleteSkill",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Skill Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "skill_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/skills"
        ],
        "summary": "スキル更新",
        "description": "スキルを更新\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "updateSkill",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Skill Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "skill_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SkillUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkillDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/jobs": {
      "get": {
        "tags": [
          "manage/jobs"
        ],
        "summary": "求人一覧取得",
        "description": "求人一覧取得\n- 必要権限: [ALL_JOB_VIEW, OWN_JOB_VIEW]\n    - ALL_JOB_VIEW: 他組織の求人も含め取得可能\n    - OWN_JOB_VIEW: 自組織の求人のみ取得可能\n- データ取得条件\n    - is_deleted: False\n    - is_whole_organization: Trueの時は全組織求人取得する\n- レスポンスデータ補足情報\n    - 応募数: 求人に紐づく選考情報をカウント(選考タイプが自己応募のもののみカウント）\n    - 閲覧数: 求人閲覧履歴からカウント\n- 並び順: ID降順",
        "operationId": "getJobList",
        "parameters": [
          {
            "description": "組織ID検索。指定なしの場合は自組織",
            "required": false,
            "schema": {
              "title": "Organization Id",
              "type": "integer",
              "description": "組織ID検索。指定なしの場合は自組織"
            },
            "name": "organization_id",
            "in": "query"
          },
          {
            "description": "全組織求人取得フラグ",
            "required": false,
            "schema": {
              "title": "Is Whole Organization",
              "type": "boolean",
              "description": "全組織求人取得フラグ",
              "default": false
            },
            "name": "is_whole_organization",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Job List Manage Jobs Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_JOB_VIEW",
              "OWN_JOB_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/jobs/all": {
      "get": {
        "tags": [
          "manage/jobs"
        ],
        "summary": "HR用全求人一覧取得",
        "description": "全求人詳細取得\n- 必要権限: [RECRUITMENT]\n- データ取得条件\n    - company.recruit_plan_status = CompanyPlanStatus.NoTrial.SUBSCRIBED　(HR)\n    - job.posting_starts_at <= now <= job.posting_ends_at (HR)\n    - job.is_deleted = False\n- クエリパラメータ補足:\n    - access_type: [\"staff\", \"agent\"]\n    - free_word: 企業名かタイトル検索 (\"access_type\"が\"agent\"の場合のみ有効)\n\n- 集計に関して補足情報\n    - 紹介ユーザー数: 選考タイプがスカウトかつ組織IDが自組織のものを集計\n    - 選考ステップ数: 選考ステップが2Xものを集計\n    - 内定数: 選考ステップが30ものを集計(要確認)",
        "operationId": "getAllJobsList",
        "parameters": [
          {
            "description": "アクセスタイプ",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/app__routers__manage__jobs__get_all_jobs_list__AccessType"
                }
              ],
              "description": "アクセスタイプ"
            },
            "name": "access_type",
            "in": "query"
          },
          {
            "description": "企業名かタイトル検索",
            "required": false,
            "schema": {
              "title": "Free Word",
              "type": "string",
              "description": "企業名かタイトル検索"
            },
            "name": "free_word",
            "in": "query"
          },
          {
            "description": "取得件数",
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "取得件数",
              "default": 50
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "取得開始位置",
            "required": false,
            "schema": {
              "title": "Offset",
              "type": "integer",
              "description": "取得開始位置",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllJobsListOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_JOB_VIEW",
              "RECRUITMENT"
            ]
          }
        ]
      }
    },
    "/manage/jobs/drafts": {
      "get": {
        "tags": [
          "manage/jobs"
        ],
        "summary": "求人下書一覧取得",
        "description": "求人下書一覧取得\n- 必要権限: [ALL_JOB_VIEW, OWN_JOB_VIEW]\n    - ALL_JOB_VIEW: 他組織の求人も含め取得可能\n    - OWN_JOB_VIEW: 自組織の求人のみ取得可能\n- データ取得条件\n    - is_deleted: False\n    - JobDraftStatus.APPROVED(承認済み)以外のステータスを取得\n- 並び順: ID降順",
        "operationId": "getJobDraftList",
        "parameters": [
          {
            "description": "組織ID検索。指定なしの場合は自組織",
            "required": false,
            "schema": {
              "title": "Organization Id",
              "type": "integer",
              "description": "組織ID検索。指定なしの場合は自組織"
            },
            "name": "organization_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Job Draft List Manage Jobs Drafts Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobDraftListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_JOB_VIEW",
              "OWN_JOB_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/jobs"
        ],
        "summary": "求人下書作成",
        "description": "求人下書作成\n- 必要権限: [ALL_JOB_EDIT, OWN_JOB_EDIT]\n    - ALL_JOB_EDIT: 他組織の求人も含め作成可能\n    - OWN_JOB_EDIT: 自組織の求人のみ作成可能\n- 求人下書として作成する\n- 選考種別\n    - エージェント経由: 企業が人材紹介プランに加入している場合選択可能\n    - 直接採用: 企業がスカウトプランに加入している場合選択可能\n- 作成者: ログインユーザーのフルネームを設定",
        "operationId": "createJobDraft",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobDraftCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobDraftDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "パラメータが不正: PARAMETER_ERROR<br>存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PARAMETER_ERROR": {
                    "value": {
                      "errorCode": "PARAMETER_ERROR",
                      "message": "指定されたパラメータは不正です",
                      "detail": "Parameter error"
                    }
                  },
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_JOB_EDIT",
              "OWN_JOB_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/jobs/drafts/applying": {
      "get": {
        "tags": [
          "manage/jobs"
        ],
        "summary": "求人下書承認待ち一覧取得",
        "description": "求人下書承認待ち一覧取得\n- 必要権限: [JOB_PUBLISH_APPROVAL]\n- データ取得条件\n    - is_deleted: False\n    - 下書き状況: 申請中\n- 並び順: id降順",
        "operationId": "getJobDraftApplyingList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Job Draft Applying List Manage Jobs Drafts Applying Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobDraftApplyingListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "JOB_PUBLISH_APPROVAL"
            ]
          }
        ]
      }
    },
    "/manage/jobs/drafts/{job_draft_id}": {
      "get": {
        "tags": [
          "manage/jobs"
        ],
        "summary": "求人下書詳細取得",
        "description": "求人下書詳細取得\n- 必要権限: [ALL_JOB_VIEW, OWN_JOB_VIEW]\n    - ALL_JOB_VIEW: 他組織の求人も含め取得可能\n    - OWN_JOB_VIEW: 自組織の求人のみ取得可能\n- データ取得条件\n    - is_deleted: False",
        "operationId": "getJobDraft",
        "parameters": [
          {
            "description": "求人下書ID",
            "required": true,
            "schema": {
              "title": "Job Draft Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "求人下書ID"
            },
            "name": "job_draft_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobDraftDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_JOB_VIEW",
              "OWN_JOB_VIEW"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "manage/jobs"
        ],
        "summary": "求人下書更新",
        "description": "求人下書更新\n- 必要権限: [ALL_JOB_EDIT, OWN_JOB_EDIT]\n    - ALL_JOB_EDIT: 他組織の求人も含め更新可能\n    - OWN_JOB_EDIT: 自組織の求人のみ更新可能\n- 削除済みのものも更新可能で、更新後は削除されていない状態になる\n- 部分更新はできずすべて上書き\n- 組織と選考種別は変更不可\n- 実行可能条件\n    - 下書き状況: 編集中 or 申請中 or 却下 or is_deleted=True\n        - 条件を満たしていない場合はCannotBeExecutedConditionsNotSatisfiedエラー\n- 更新データ補足情報\n    - 更新者: ログインユーザーのフルネーム\n    - 下書き状況: 編集中\n    - is_deleted: False",
        "operationId": "updateJobDraft",
        "parameters": [
          {
            "description": "求人下書ID",
            "required": true,
            "schema": {
              "title": "Job Draft Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "求人下書ID"
            },
            "name": "job_draft_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobDraftUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobDraftDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "条件を満たしていないため実行不可: CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED": {
                    "value": {
                      "errorCode": "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
                      "message": "条件を満たしていないため実行不可",
                      "detail": "Cannot be executed because the required conditions are not satisfied."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_JOB_EDIT",
              "OWN_JOB_EDIT"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/jobs"
        ],
        "summary": "求人下書削除",
        "description": "求人下書削除\n- 必要権限: [ALL_JOB_EDIT, OWN_JOB_EDIT]\n    - ALL_JOB_EDIT: 他組織の求人も含め削除可能\n    - OWN_JOB_EDIT: 自組織の求人のみ削除可能\n- 論理削除\n- 削除可能条件\n    - is_deleted: False",
        "operationId": "deleteJobDraft",
        "parameters": [
          {
            "description": "求人下書ID",
            "required": true,
            "schema": {
              "title": "Job Draft Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "求人下書ID"
            },
            "name": "job_draft_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_JOB_EDIT",
              "OWN_JOB_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/jobs/drafts/{job_draft_id}/apply": {
      "put": {
        "tags": [
          "manage/jobs"
        ],
        "summary": "求人下書公開申請",
        "description": "求人下書公開申請\n- 必要権限: [ALL_JOB_PUBLISH_APPLICATION, OWN_JOB_PUBLISH_APPLICATION]\n    - ALL_JOB_PUBLISH_APPLICATION: 他組織の求人も含め申請可能\n    - OWN_JOB_PUBLISH_APPLICATION: 自組織の求人のみ申請可能\n- 444に対してSlack通知を行う\n- 実行可能条件\n    - is_deleted: False\n        - 条件を満たしていない場合はNotFoundエラー\n    - 下書き状況: 編集中\n        - 条件を満たしていない場合はCannotBeExecutedConditionsNotSatisfiedエラー\n- 更新データ情報\n    - 下書き状況: 申請中",
        "operationId": "applyJobDraft",
        "parameters": [
          {
            "description": "求人下書ID",
            "required": true,
            "schema": {
              "title": "Job Draft Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "求人下書ID"
            },
            "name": "job_draft_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "条件を満たしていないため実行不可: CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED": {
                    "value": {
                      "errorCode": "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
                      "message": "条件を満たしていないため実行不可",
                      "detail": "Cannot be executed because the required conditions are not satisfied."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_JOB_PUBLISH_APPLICATION",
              "OWN_JOB_PUBLISH_APPLICATION"
            ]
          }
        ]
      }
    },
    "/manage/jobs/drafts/{job_draft_id}/approve": {
      "put": {
        "tags": [
          "manage/jobs"
        ],
        "summary": "求人下書公開申請承認",
        "description": "求人下書公開申請承認\n- 必要権限: [JOB_PUBLISH_APPROVAL]\n- 444に対してSlack通知を行う\n- 実行可能条件\n    - is_deleted: False\n        - 条件を満たしていない場合はNotFoundエラー\n    - 下書き状況: 申請中\n        - 条件を満たしていない場合はCannotBeExecutedConditionsNotSatisfiedエラー\n- 更新データ情報\n    - 下書き状況: 承認済\n- 求人下書をもとに求人を作成、更新する",
        "operationId": "approveJobDraft",
        "parameters": [
          {
            "description": "求人下書ID",
            "required": true,
            "schema": {
              "title": "Job Draft Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "求人下書ID"
            },
            "name": "job_draft_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "条件を満たしていないため実行不可: CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED": {
                    "value": {
                      "errorCode": "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
                      "message": "条件を満たしていないため実行不可",
                      "detail": "Cannot be executed because the required conditions are not satisfied."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "JOB_PUBLISH_APPROVAL"
            ]
          }
        ]
      }
    },
    "/manage/jobs/drafts/{job_draft_id}/cancel": {
      "put": {
        "tags": [
          "manage/jobs"
        ],
        "summary": "求人下書公開申請取り消し",
        "description": "求人下書公開申請取り消し\n- 必要権限: [ALL_JOB_PUBLISH_APPLICATION, OWN_JOB_PUBLISH_APPLICATION]\n    - ALL_JOB_PUBLISH_APPLICATION: 他組織の求人も含め取り消し可能\n    - OWN_JOB_PUBLISH_APPLICATION: 自組織の求人のみ取り消し可能\n- 実行可能条件\n    - is_deleted: False\n        - 条件を満たしていない場合はNotFoundエラー\n    - 下書き状況: 申請中\n        - 条件を満たしていない場合はCannotBeExecutedConditionsNotSatisfiedエラー\n- 更新データ情報\n    - 下書き状況: 編集中",
        "operationId": "cancelJobDraft",
        "parameters": [
          {
            "description": "求人下書ID",
            "required": true,
            "schema": {
              "title": "Job Draft Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "求人下書ID"
            },
            "name": "job_draft_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "条件を満たしていないため実行不可: CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED": {
                    "value": {
                      "errorCode": "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
                      "message": "条件を満たしていないため実行不可",
                      "detail": "Cannot be executed because the required conditions are not satisfied."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_JOB_PUBLISH_APPLICATION",
              "OWN_JOB_PUBLISH_APPLICATION"
            ]
          }
        ]
      }
    },
    "/manage/jobs/drafts/{job_draft_id}/reject": {
      "put": {
        "tags": [
          "manage/jobs"
        ],
        "summary": "求人下書公開申請却下",
        "description": "求人下書公開申請却下\n- 必要権限: [JOB_PUBLISH_APPROVAL]\n- 444に対してSlack通知を行う\n- 実行可能条件\n    - is_deleted: False\n        - 条件を満たしていない場合はNotFoundエラー\n    - 下書き状況: 申請中\n        - 条件を満たしていない場合はCannotBeExecutedConditionsNotSatisfiedエラー\n- 更新データ情報\n    - 下書き状況: 却下\n    - 却下理由: リクエストデータで更新\n    - 再申請かどうか: True",
        "operationId": "rejectJobDraft",
        "parameters": [
          {
            "description": "求人下書ID",
            "required": true,
            "schema": {
              "title": "Job Draft Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "求人下書ID"
            },
            "name": "job_draft_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobDraftRejectIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "条件を満たしていないため実行不可: CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED": {
                    "value": {
                      "errorCode": "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
                      "message": "条件を満たしていないため実行不可",
                      "detail": "Cannot be executed because the required conditions are not satisfied."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "JOB_PUBLISH_APPROVAL"
            ]
          }
        ]
      }
    },
    "/manage/jobs/{job_id}": {
      "get": {
        "tags": [
          "manage/jobs"
        ],
        "summary": "求人詳細取得",
        "description": "求人詳細取得\n- 必要権限: [ALL_JOB_VIEW, OWN_JOB_VIEW]\n    - ALL_JOB_VIEW: 他組織の求人も含め取得可能\n    - OWN_JOB_VIEW: 自組織の求人のみ取得可能\n- データ取得条件\n    - is_deleted: False",
        "operationId": "getJob",
        "parameters": [
          {
            "description": "求人ID",
            "required": true,
            "schema": {
              "title": "Job Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "求人ID"
            },
            "name": "job_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__manage__jobs__job_detail_out__JobDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_JOB_VIEW",
              "OWN_JOB_VIEW"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/jobs"
        ],
        "summary": "求人削除",
        "description": "求人削除\n- 必要権限: [ALL_JOB_EDIT, OWN_JOB_EDIT]\n    - ALL_JOB_EDIT: 他組織の求人も含め削除可能\n    - OWN_JOB_EDIT: 自組織の求人のみ削除可能\n- 論理削除\n- 削除可能条件\n    - is_deleted: False\n- 紐付いている求人下書も一緒に削除する",
        "operationId": "deleteJob",
        "parameters": [
          {
            "description": "求人ID",
            "required": true,
            "schema": {
              "title": "Job Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "求人ID"
            },
            "name": "job_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_JOB_EDIT",
              "OWN_JOB_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/jobs/{job_id}/access": {
      "get": {
        "tags": [
          "manage/jobs"
        ],
        "summary": "求人アクセスログ取得",
        "description": "求人アクセスログ取得\n- 必要権限: [ALL_JOB_VIEW, OWN_JOB_VIEW]\n    - ALL_JOB_VIEW: 他組織の求人も含め取得可能\n    - OWN_JOB_VIEW: 自組織の求人のみ取得可能\n- レスポンス\n    - ユーザー一覧\n        - user_id, username, 最終アクセス\n        - 同じユーザーは最新のアクセスのみ\n        - 並び順：最終アクセス日時降順\n    - 掲載期間\n    - 週毎の閲覧数、応募数のリスト\n        - 週の開始は月曜日、\n        - 応募数: SelectionType.SELF\n- 例外処理\n    - 求人が存在するか\n        - ない場合はNotFound\n    - 他組織の求人を見る場合は権限があるか\n        - ない場合はPermissionDenied",
        "operationId": "getJobAccessLog",
        "parameters": [
          {
            "description": "求人ID",
            "required": true,
            "schema": {
              "title": "Job Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "求人ID"
            },
            "name": "job_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobAccessLogOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_JOB_VIEW",
              "OWN_JOB_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/jobs/{job_id}/favorite-users": {
      "get": {
        "tags": [
          "manage/jobs"
        ],
        "summary": "Get Job Favorite User List",
        "description": "求人お気に入りユーザー一覧取得\n- 必要権限: [RECRUITMENT]\n- レスポンス補足情報\n    - favorite_at: JobUserFavoriteのcreated_at",
        "operationId": "getJobFavoriteUserList",
        "parameters": [
          {
            "description": "求人ID",
            "required": true,
            "schema": {
              "title": "Job Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "求人ID"
            },
            "name": "job_id",
            "in": "path"
          },
          {
            "description": "アクセスタイプ",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/app__routers__manage__jobs__get_job_favorite_user_list__AccessType"
                }
              ],
              "description": "アクセスタイプ"
            },
            "name": "access_type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Job Favorite User List Manage Jobs  Job Id  Favorite Users Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobFavoriteUserListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_JOB_VIEW",
              "RECRUITMENT"
            ]
          }
        ]
      }
    },
    "/manage/jobs/{job_id}/introduce-user/{job_user_id}": {
      "post": {
        "tags": [
          "manage/jobs"
        ],
        "summary": "求人にユーザーを紹介するAPI",
        "description": "求人にユーザーを紹介する\n必要権限: [RECRUITMENT]",
        "operationId": "introduceJobToUser",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Job Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "job_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Job User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "job_user_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntroduceJobUserIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "パラメータが不正: PARAMETER_ERROR<br>データが重複している: DUPLICATE_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PARAMETER_ERROR": {
                    "value": {
                      "errorCode": "PARAMETER_ERROR",
                      "message": "指定されたパラメータは不正です",
                      "detail": "Parameter error"
                    }
                  },
                  "DUPLICATE_ERROR": {
                    "value": {
                      "errorCode": "DUPLICATE_ERROR",
                      "message": "データが重複しています",
                      "detail": "duplicate key value violates unique constraintr"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "RECRUITMENT"
            ]
          }
        ]
      }
    },
    "/manage/jobs/{job_id}/publish": {
      "put": {
        "tags": [
          "manage/jobs"
        ],
        "summary": "求人公開",
        "description": "求人公開\n- 必要権限: [JOB_PUBLISH, JOB_PUBLISH_APPROVAL]\n    - JOB_PUBLISH: 自組織の求人のみ実行可能\n    - JOB_PUBLISH_APPROVAL: 他組織の求人も実行可能\n- 444に対してSlack通知を行う\n- 実行可能条件\n    - is_deleted: False\n        - 条件を満たしていない場合はNotFoundエラー\n    - is_published: False\n        - 条件を満たしていない場合はCannotBeExecutedConditionsNotSatisfiedエラー\n- 更新データ情報\n    - is_published: True",
        "operationId": "publishJob",
        "parameters": [
          {
            "description": "求人ID",
            "required": true,
            "schema": {
              "title": "Job Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "求人ID"
            },
            "name": "job_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "条件を満たしていないため実行不可: CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED": {
                    "value": {
                      "errorCode": "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
                      "message": "条件を満たしていないため実行不可",
                      "detail": "Cannot be executed because the required conditions are not satisfied."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "JOB_PUBLISH",
              "JOB_PUBLISH_APPROVAL"
            ]
          }
        ]
      }
    },
    "/manage/jobs/{job_id}/scout-users": {
      "get": {
        "tags": [
          "manage/jobs"
        ],
        "summary": "Get Job Scout User List",
        "description": "求人紹介ユーザー一覧\n- 必要権限: [RECRUITMENT]\n- レスポンス\n    - 求人情報\n        - 企業名、職種名、求人名、勤務地、必要レベル、必要言語、ユーザーリスト\n            - ユーザーリスト\n                - ユーザー名、住所、現職、スキルレベル、使用言語、選考ステータス、紹介日",
        "operationId": "getJobScoutUserList",
        "parameters": [
          {
            "description": "求人ID",
            "required": true,
            "schema": {
              "title": "Job Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "求人ID"
            },
            "name": "job_id",
            "in": "path"
          },
          {
            "description": "アクセスタイプ",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/app__routers__manage__jobs__get_job_scout_user_list__AccessType"
                }
              ],
              "description": "アクセスタイプ"
            },
            "name": "access_type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobScoutUserListOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "403": {
            "description": "APIを実行する権限がない: PERMISSION_DENIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PERMISSION_DENIED": {
                    "value": {
                      "errorCode": "PERMISSION_DENIED",
                      "message": "実行する権限がありません",
                      "detail": "permission denied"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_JOB_VIEW",
              "RECRUITMENT"
            ]
          }
        ]
      }
    },
    "/manage/jobs/{job_id}/unpublish": {
      "put": {
        "tags": [
          "manage/jobs"
        ],
        "summary": "求人非公開",
        "description": "求人非公開\n- 必要権限: [JOB_PUBLISH, JOB_PUBLISH_APPROVAL]\n    - JOB_PUBLISH: 自組織の求人のみ実行可能\n    - JOB_PUBLISH_APPROVAL: 他組織の求人も実行可能\n- 444に対してSlack通知を行う\n- 実行可能条件\n    - is_deleted: False\n        - 条件を満たしていない場合はNotFoundエラー\n    - is_published: True\n        - 条件を満たしていない場合はCannotBeExecutedConditionsNotSatisfiedエラー\n- 更新データ情報\n    - is_published: False",
        "operationId": "unpublishJob",
        "parameters": [
          {
            "description": "求人ID",
            "required": true,
            "schema": {
              "title": "Job Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "求人ID"
            },
            "name": "job_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "条件を満たしていないため実行不可: CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED": {
                    "value": {
                      "errorCode": "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
                      "message": "条件を満たしていないため実行不可",
                      "detail": "Cannot be executed because the required conditions are not satisfied."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "JOB_PUBLISH",
              "JOB_PUBLISH_APPROVAL"
            ]
          }
        ]
      }
    },
    "/manage/countries": {
      "get": {
        "tags": [
          "manage/countries"
        ],
        "summary": "国一覧取得",
        "description": "国一覧を取得\n- 必要権限: [ASSETS_EDIT]\n- 並び順: id降順",
        "operationId": "getCountryList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Country List Manage Countries Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/countries"
        ],
        "summary": "国作成",
        "description": "国を作成\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "createCountry",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountryCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/countries/{country_id}": {
      "get": {
        "tags": [
          "manage/countries"
        ],
        "summary": "国詳細取得",
        "description": "国詳細を取得\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "getCountry",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Country Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "country_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/countries"
        ],
        "summary": "国削除",
        "description": "国を削除\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "deleteCountry",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Country Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "country_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/countries"
        ],
        "summary": "国更新",
        "description": "国を更新\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "updateCountry",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Country Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "country_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountryUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/events": {
      "get": {
        "tags": [
          "manage/events"
        ],
        "summary": "全組織イベント一覧取得",
        "description": "全組織イベント一覧を取得\n- 必要権限: [ALL_EVENT_AND_SESSION_VIEW]\n- レスポンスデータ補足情報\n    - host_name: 企業名 または 学校名 + 学部名\n    - is_host: 自組織開催のイベントの場合True、そうでない場合False\n    - session_count: イベントに紐づくセッションの数\n    - event_user_count: イベントの全セッションの参加者合計",
        "operationId": "getEventList",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 50
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "description": "ID(完全一致)、名前(部分一致)、学校/企業名(部分一致)",
            "required": false,
            "schema": {
              "title": "Search",
              "type": "string",
              "description": "ID(完全一致)、名前(部分一致)、学校/企業名(部分一致)"
            },
            "name": "search",
            "in": "query"
          },
          {
            "description": "ホスト企業ID",
            "required": false,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "ホスト企業ID"
            },
            "name": "organization_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/app__routers__manage__events__get_event_list__Ordering"
                }
              ],
              "default": "id_desc"
            },
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventListOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_EVENT_AND_SESSION_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/events"
        ],
        "summary": "全組織イベント作成",
        "description": "全組織イベントを作成\n- 必要権限: [ALL_EVENT_AND_SESSION_EDIT] [OWN_EVENT_EDIT]\n- 登録データ補足情報\n    - `host.is_444=True`の場合\n        - event_purpose: プログラミングコンテスト, 試験、テスト, 講義、教育用, スキルチェック, 検定試験, 検証用, TCB から選択可能\n        - is_public: True, Falseどちらも設定可能\n    - `host.organization_type=OrganizationType.COMPANY`の場合\n        - event_purpose: スキルチェック のみ選択可能\n        - is_public: False\n    - `host.organization_type=OrganizationType.SCHOOL`の場合\n        - event_purpose: プログラミングコンテスト, 試験、テスト, 講義、教育用, 検定試験, その他 から選択可能\n        - is_public: False",
        "operationId": "createEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "パラメータが不正: PARAMETER_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PARAMETER_ERROR": {
                    "value": {
                      "errorCode": "PARAMETER_ERROR",
                      "message": "指定されたパラメータは不正です",
                      "detail": "Parameter error"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_EVENT_AND_SESSION_EDIT",
              "OWN_EVENT_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/events/all-event-users": {
      "get": {
        "tags": [
          "manage/events"
        ],
        "summary": "過去イベント参加者一覧取得",
        "description": "過去イベント参加者一覧取得\n- 必要権限: [Pm.OWN_SESSION_PERSONAL_INFORMATION_VIEW]\n- 仕様\n    - 自組織主催イベントに紐づく全セッションに参加したユーザー一覧を返す\n    - 同じユーザーが複数のセッションに参加した場合はその数だけリストに含める\n        - 同じイベント内の複数セッション参加した場合もその数だけ返す(現行踏襲)\n    - 並び順：セッション参加日時の降順",
        "operationId": "getAllEventUsers",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get All Event Users Manage Events All Event Users Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ALLEventUserListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_PERSONAL_INFORMATION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/events/all-event/portfolio/{user_id}": {
      "get": {
        "tags": [
          "manage/events"
        ],
        "summary": "全イベント用ポートフォリオ取得(未実装)",
        "description": "- 全イベント用ポートフォリオ取得\n- 必要権限: [Pm.OWN_EVENT_VIEW]\n- 仕様\n    - 指定したユーザーの、自組織開催全イベントのポートフォリオを取得する\n    - ユーザーが存在しない・削除された場合は404\n    - 自組織主催のセッションに1度も参加していないユーザーを指定した場合は403\n- レスポンス内容補足\n    - 合格問題数・総問題数は自組織開催全イベントの参加した全セッションの情報をもとに計算\n        - 挑戦問題数: QuestionResultの該当ユーザー・セッションのレコード数\n        - 合格問題数: 上記のうちステータスが正解(QuestionResultStatusがPASS)のレコード数\n    - セッション一覧(session_list)も自組織開催全イベントの参加した全セッションの情報を表示\n        - ソート条件は「セッション開始日時昇順」\n    - 問題解答成績一覧(question_result_list)も自組織開催全イベントの参加した全セッションの情報を元に表示\n        - フィルタリング条件は「QuestionResultStatusがPASS(正解)」\n        - ソート条件は「スコア降順 → QuestionResultレコード作成日時昇順」\n        - 6件以上ある場合は上位6件のみ取得\n    - 但し、削除されたセッションや、セッションから外された問題は対象外",
        "operationId": "getAllEventPortfolio",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventPortfolioOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_EVENT_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/events/own": {
      "get": {
        "tags": [
          "manage/events"
        ],
        "summary": "自組織イベント一覧取得",
        "description": "自組織イベント一覧を取得\n- 必要権限: [OWN_EVENT_VIEW]\n- 並び順: id降順\n- クエリパラメータ補足情報\n    - event_filter\n        - is_published: Eventが公開済みのもののみ取得\n        - is_sponsor: EventSponsorに自組織が含まれているもののみ取得\n- レスポンスデータ補足情報\n    - is_finished: 「セッションが1つ以上」AND「現在時刻が全セッションの開催終了日の後」\n    - host_name: 企業名 または 学校名 + 学部名\n    - sessions\n        - user_count: セッション参加ユーザーの合計\n        - session_status\n        　- 開催予定: セッション開始日時 > 現在日時\n        　- 開催中: セッション開始日時 <= 現在日時 <= セッション終了日時\n        　- 終了: 現在日時 > セッション終了日時\n    # TODO: PRO,TECHTHONセッションが紐づくイベントは取得しない（９月実装後はフィルタ削除）",
        "operationId": "getCompanyEventList",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 50
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "description": "is_published:公開イベント, is_sponsor:協賛イベント",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/EventFilter"
                }
              ],
              "description": "is_published:公開イベント, is_sponsor:協賛イベント"
            },
            "name": "event_filter",
            "in": "query"
          },
          {
            "description": "イベント名(部分一致)/セッションコード(完全一致、優先)",
            "required": false,
            "schema": {
              "title": "Search",
              "type": "string",
              "description": "イベント名(部分一致)/セッションコード(完全一致、優先)"
            },
            "name": "search",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnEventListOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_EVENT_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/events"
        ],
        "summary": "自組織イベント作成",
        "description": "自組織イベントを作成\n- 必要権限: [OWN_EVENT_EDIT]\n- 登録データ補足情報\n    - host: ログインユーザーの組織\n    - `host.is_444=True`の場合\n        - event_purpose: プログラミングコンテスト, 試験、テスト, 講義、教育用, スキルチェック, 検定試験, 検証用, TCB から選択可能\n        - is_public: True, Falseどちらも設定可能\n    - `host.organization_type=OrganizationType.COMPANY`の場合\n        - event_purpose: スキルチェック のみ選択可能\n        - is_public: False\n    - `host.organization_type=OrganizationType.SCHOOL`の場合\n        - event_purpose: プログラミングコンテスト, 試験、テスト, 講義、教育用, その他 から選択可能\n        - is_public: False",
        "operationId": "createOwnEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnEventCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "パラメータが不正: PARAMETER_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PARAMETER_ERROR": {
                    "value": {
                      "errorCode": "PARAMETER_ERROR",
                      "message": "指定されたパラメータは不正です",
                      "detail": "Parameter error"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_EVENT_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/events/portfolio/{user_id}": {
      "get": {
        "tags": [
          "manage/events"
        ],
        "summary": "イベント単体用ポートフォリオ取得",
        "description": "- イベント単体用ポートフォリオ取得\n- 必要権限: [Pm.OWN_EVENT_VIEW]\n- 仕様\n    - 指定したユーザーの指定したイベントにおけるポートフォリオを取得する\n    - ユーザーやイベントが存在しない場合・削除された場合や該当イベントに参加していないユーザーを指定した場合は404\n    - 他組織のイベントを指定した場合は403\n- レスポンス内容補足\n    - 合格問題数・総問題数はイベント内の参加した全セッションの情報をもとに計算\n        - 挑戦問題数: QuestionResultの該当ユーザー・セッションのレコード数\n        - 合格問題数: 上記のうちステータスが正解(QuestionREsultStasusがPASS)のレコード数\n    - セッション一覧(session_list)も参加した全セッションの情報を表示\n        - ソート条件は「セッション開始日時昇順」\n    - 問題解答成績一覧(question_result_list)も参加した全セッションの情報を元に表示\n        - フィルタリング条件は「QuestionResultStatusがPASS(正解)」\n        - ソート条件は「スコア降順 → QuestionResultレコード作成日時昇順」\n        - 6件以上ある場合は上位6件のみ取得\n    - 但し、削除されたセッションや、セッションから外された問題は対象外",
        "operationId": "getEventPortfolio",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "イベントID",
            "required": false,
            "schema": {
              "title": "Event Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "イベントID"
            },
            "name": "event_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventPortfolioOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_EVENT_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/events/{event_id}": {
      "get": {
        "tags": [
          "manage/events"
        ],
        "summary": "イベント詳細取得",
        "description": "イベント詳細を取得\n- 必要権限: [OWN_EVENT_VIEW, ALL_EVENT_AND_SESSION_VIEW]\n    - OWN_EVENT_VIEW: 所属組織が主催、または協賛のイベントのみ取得可能\n    - ALL_EVENT_AND_SESSION_VIEW: 全イベント取得可能\n- レスポンスデータ補足情報\n    - host_name: 企業名 または 学校名 + 学部名",
        "operationId": "getEvent",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Event Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "event_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_EVENT_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/events"
        ],
        "summary": "イベント削除",
        "description": "イベントを削除\n- 必要権限: [ALL_EVENT_AND_SESSION_EDIT, OWN_EVENT_EDIT]\n    - ALL_EVENT_AND_SESSION_EDIT: 他組織イベントも削除可能\n    - OWN_EVENT_EDIT: 自組織イベントのみ削除可能\n- 論理削除",
        "operationId": "deleteEvent",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Event Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "event_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_EVENT_AND_SESSION_EDIT",
              "OWN_EVENT_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/events"
        ],
        "summary": "イベント更新",
        "description": "イベントを更新\n- 必要権限: [ALL_EVENT_AND_SESSION_EDIT, OWN_EVENT_EDIT]\n    - ALL_EVENT_AND_SESSION_EDIT: 他組織イベントも更新可能\n    - OWN_EVENT_EDIT: 自組織イベントのみ更新可能\n- 登録データ補足情報\n    - `host.is_444=True`の場合\n        - event_purpose: プログラミングコンテスト, 試験、テスト, 講義、教育用, スキルチェック, 検定試験, 検証用, TCB から選択可能\n        - is_public: True, Falseどちらも設定可能\n    - `host.organization_type=OrganizationType.COMPANY`の場合\n        - event_purpose: スキルチェック のみ選択可能\n        - is_public: False\n    - `host.organization_type=OrganizationType.SCHOOL`の場合\n        - event_purpose: プログラミングコンテスト, 試験、テスト, 講義、教育用, 検定試験, その他 から選択可能\n        - is_public: False",
        "operationId": "updateEvent",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Event Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "event_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "パラメータが不正: PARAMETER_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PARAMETER_ERROR": {
                    "value": {
                      "errorCode": "PARAMETER_ERROR",
                      "message": "指定されたパラメータは不正です",
                      "detail": "Parameter error"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_EVENT_AND_SESSION_EDIT",
              "OWN_EVENT_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/events/{event_id}/ranking": {
      "get": {
        "tags": [
          "manage/events"
        ],
        "summary": "イベントユーザーランキング取得",
        "description": "イベントユーザーランキング取得\n- 必要権限: [OWN_EVENT_VIEW]\n- アクセス権限詳細:\n    - Event.host.organizationで学校イベントか企業イベントかを判定\n    - Event.sponsorsで共催企業を取得\n    - 学校イベントの場合閲覧可能なユーザー\n        - 主催学校\n        - 共催企業\n        - ST, SU\n    - 企業イベントの場合閲覧可能なユーザー\n        - 主催企業\n        - ST, SU\n-　並び順: rank昇順\n- rank算出方法\n    - 基本はscore降順\n    - 同点の場合、合計解答時間が短い方を上位とする\n- 処理手順\n    - event.sessionsを取得\n    - SessionUserでuserを特定\n    - session_id, user_idでQuestionResultを集計\n    - rank算出",
        "operationId": "getEventUserRanking",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Event Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "event_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Event User Ranking Manage Events  Event Id  Ranking Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetEventUserRankingOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_EVENT_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/events/{event_id}/results/csv": {
      "get": {
        "tags": [
          "manage/events"
        ],
        "summary": "イベントユーザー成績CSV生成",
        "description": "イベントユーザー成績CSV生成\n- 必要権限: [OWN_SESSION_PERSONAL_INFORMATION_VIEW]\n- データ取得可能条件\n    -　自組織イベント\n- CSV format\n    - |#|ユーザー名|名前|補足情報|Event: 合格|Event: 総数|Session1: 名前|Session1: 合格|Session1: 総数| Q1: 合格| Q1: 総数|...|\n    - Event: 合格: Eventの問題合格数\n    - Event: 総数: Eventの問題総数\n    - Session1: 合格: Session1の問題合格数\n    - Session1: 総数: Session1の問題総数\n    - Q1: 合格: Q1のテストケース合格数\n    - Q1: 総数: Q1のテストケース総数",
        "operationId": "getEventUserScoreStatsCsv",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Event Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "event_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_PERSONAL_INFORMATION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/events/{event_id}/sponsors": {
      "get": {
        "tags": [
          "manage/events"
        ],
        "summary": "イベント共催企業一覧取得",
        "description": "イベント共催企業の一覧を取得\n- 必要権限: [EVENT_SPONSOR_ASSIGN]\n- 企業主催イベントの場合はイベントプランに加入している企業一覧、学校主催イベントの場合は学校一覧を返す\n- レスポンスデータ補足情報\n    - sponsored_limit: 企業主催イベントの場合は`company_event_limit`, 学校主催イベントの場合は`school_event_limit`を返す\n    - is_sponsored: スポンサー登録されている場合はTrue, そうでない場合はFalse\n- 並び順：組織ID昇順",
        "operationId": "getEventSponsorList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Event Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "event_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Event Sponsor List Manage Events  Event Id  Sponsors Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventSponsorListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "EVENT_SPONSOR_ASSIGN"
            ]
          }
        ]
      }
    },
    "/manage/events/{event_id}/sponsors/{organization_id}": {
      "post": {
        "tags": [
          "manage/events"
        ],
        "summary": "イベント共催登録",
        "description": "イベント共催登録\n- 必要権限: [EVENT_SPONSOR_ASSIGN]\n- 登録後に共催可能数を1減少(企業主催の場合`company_event_limit`、学校主催の場合`school_event_limit`)\n- 登録データ補足情報\n    - created_by: user.full_name",
        "operationId": "registerEventSponsor",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Event Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "event_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "organization_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "EVENT_SPONSOR_ASSIGN"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/events"
        ],
        "summary": "イベント共催登録解除",
        "description": "イベント共催登録解除\n- 必要権限: [EVENT_SPONSOR_ASSIGN]\n- 物理削除",
        "operationId": "unregisterEventSponsor",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Event Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "event_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "organization_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "EVENT_SPONSOR_ASSIGN"
            ]
          }
        ]
      }
    },
    "/manage/events/{event_id}/threads": {
      "get": {
        "tags": [
          "manage/events"
        ],
        "summary": "イベントスレッド一覧取得",
        "description": "イベントスレッド一覧取得\n- 必要権限: [OWN_EVENT_VIEW]\n- 並び順:ID降順\n- 取得条件\n    - Event.s_deleted=Falseのみ取得\n    - EventThread.is_deleted=Falseのみ取得",
        "operationId": "getEventThreadList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Event Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "event_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Event Thread List Manage Events  Event Id  Threads Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventThreadListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_EVENT_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/events"
        ],
        "summary": "イベントスレッド作成",
        "description": "イベントスレッド作成\n- 必要権限: [OWN_EVENT_EDIT]\n- 並び順:ID降順\n- 実行条件\n    - EventThread.is_deleted=Falseのみ取得\n    - event_idのイベントが削除済み、存在しない場合NotFound",
        "operationId": "createEventThread",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Event Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "event_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventThreadCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventThreadDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_EVENT_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/events/{event_id}/threads/{thread_id}": {
      "delete": {
        "tags": [
          "manage/events"
        ],
        "summary": "イベントスレッド削除",
        "description": "イベントスレッドを論理削除\n- 必要権限: [OWN_EVENT_EDIT]\n- event_idのセッションが削除済み、存在しない場合NotFound\n- thread_idのスレッド投稿が削除済み、存在しない場合NotFound",
        "operationId": "deleteEventThread",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Event Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "event_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Thread Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "thread_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_EVENT_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/events/{event_id}/users": {
      "get": {
        "tags": [
          "manage/events"
        ],
        "summary": "イベントの参加者一覧取得",
        "description": "イベントの参加者一覧を取得\n- 必要権限：[OWN_EVENT_VIEW, ALL_EVENT_AND_SESSION_VIEW]\n- アクセス権限詳細:\n- Event.host.organizationで学校イベントか企業イベントかを判定\n- Event.sponsorsで共催企業を取得\n- 学校イベントの場合閲覧可能なユーザータイプ\n    - 主催学校\n    - 共催企業\n    - ST, SU\n- 企業イベントの場合閲覧可能なユーザータイプ\n    - 主催企業\n    - ST, SU\n- 並び順:\n    - 参加者の参加日時の昇順 (SessionUser.created_at)\n- 実行処理\n    - 紐づくsessionを取得\n    - SessionUserで、該当user_idを取得\n        - 複数セッションに参加するユーザーがいる可能性があるため、重複の場合、参加日時を最初のもののみ取得",
        "operationId": "getEventUsersList",
        "parameters": [
          {
            "description": "イベントID",
            "required": true,
            "schema": {
              "title": "Event Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "イベントID"
            },
            "name": "event_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Event Users List Manage Events  Event Id  Users Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetEventUsersListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_EVENT_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/frameworks": {
      "get": {
        "tags": [
          "manage/frameworks"
        ],
        "summary": "フレームワーク一覧取得",
        "description": "フレームワーク一覧を取得\n- 必要権限: [ASSETS_EDIT]\n- 並び順: id降順",
        "operationId": "getFrameworkList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Framework List Manage Frameworks Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FrameworkListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/frameworks"
        ],
        "summary": "フレームワーク作成",
        "description": "フレームワークを作成\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "createFramework",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FrameworkCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FrameworkDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/frameworks/{framework_id}": {
      "get": {
        "tags": [
          "manage/frameworks"
        ],
        "summary": "フレームワーク詳細取得",
        "description": "フレームワーク詳細を取得\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "getFramework",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Framework Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "framework_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FrameworkDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/frameworks"
        ],
        "summary": "フレームワーク削除",
        "description": "フレームワークを削除\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "deleteFramework",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Framework Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "framework_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/frameworks"
        ],
        "summary": "フレームワーク更新",
        "description": "フレームワークを更新\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "updateFramework",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Framework Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "framework_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FrameworkUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FrameworkDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/company-documents": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッション企業資料一覧取得(PROとTechthonで共通)",
        "description": "セッション企業資料一覧取得(PROとTechthonで共通)\n- 必要権限: [OWN_SESSION_VIEW] [PRO_SESSION_VIEW] [TECHTHON_SESSION_VIEW]\n- session_idに紐付くセッション企業資料を取得\n- session_idのセッションが削除済み、存在しない場合NotFound",
        "operationId": "getSessionCompanyDocuments",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Session Company Documents Manage Sessions  Session Id  Company Documents Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionCompanyDocumentListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "PRO_SESSION_VIEW",
              "TECHTHON_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/header": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッションヘッダー情報取得(PROとTechthonで共通)",
        "description": "セッションヘッダー情報取得(PROとTechthonで共通)\n- 必要権限: [OWN_SESSION_VIEW] [PRO_SESSION_VIEW] [TECHTHON_SESSION_VIEW]\n- session_idに紐付くセッションヘッダー情報を取得\n- session_idのセッションが削除済み、存在しない場合NotFound",
        "operationId": "getSessionHeader",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Session Header Manage Sessions  Session Id  Header Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionHeaderListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "PRO_SESSION_VIEW",
              "TECHTHON_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/pause": {
      "patch": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッション一時停止",
        "description": "セッション一時停止\n- 必要権限: [OWN_SESSION_EDIT] [ALL_EVENT_AND_SESSION_EDIT] [PRO_SESSION_EDIT] [TECHTHON_SESSION_EDIT]\n- 実行可能条件\n    - [ALL_EVENT_AND_SESSION_EDIT]を持つ場合\n        - 自組織・他組織イベントセッション実行可能\n    - [ALL_EVENT_AND_SESSION_EDIT]を持たない かつ\n    - ([OWN_SESSION_EDIT] または [PRO_SESSION_EDIT] または [TECHTHON_SESSION_EDIT]) を持つ 場合\n        - 自組織イベントセッションのみ実行可能\n    - is_active = True のみ実行可能\n    - is_deleted = False のみ実行可能",
        "operationId": "pauseSession",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__manage__sessions__session_detail_out__SessionDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_EDIT",
              "ALL_EVENT_AND_SESSION_EDIT",
              "PRO_SESSION_EDIT",
              "TECHTHON_SESSION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/questionnaire": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッションアンケート取得(PROとTechthonで共通)",
        "description": "セッションアンケート取得(PROとTechthonで共通)\n- 必要権限: [OWN_SESSION_VIEW] [PRO_SESSION_VIEW] [TECHTHON_SESSION_VIEW]\n- session_idに紐付くアンケートを取得\n- session_idのセッションが削除済み、存在しない場合NotFound",
        "operationId": "getSessionQuestionnaire",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Session Questionnaire Manage Sessions  Session Id  Questionnaire Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionQuestionnaireListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "PRO_SESSION_VIEW",
              "TECHTHON_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/resume": {
      "patch": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッション再開",
        "description": "セッション再開\n- 必要権限: [OWN_SESSION_EDIT] [ALL_EVENT_AND_SESSION_EDIT] [PRO_SESSION_EDIT] [TECHTHON_SESSION_EDIT]\n- 実行可能条件\n    - [ALL_EVENT_AND_SESSION_EDIT]を持つ場合\n        - 自組織・他組織イベントセッション実行可能\n    - [ALL_EVENT_AND_SESSION_EDIT]を持たない かつ\n    - ([OWN_SESSION_EDIT] または [PRO_SESSION_EDIT] または [TECHTHON_SESSION_EDIT]) を持つ 場合\n        - 自組織イベントセッションのみ実行可能\n    - is_active = False のみ実行可能\n    - is_deleted = False のみ実行可能",
        "operationId": "resumeSession",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__manage__sessions__session_detail_out__SessionDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_EDIT",
              "ALL_EVENT_AND_SESSION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/threads": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッションスレッド一覧取得",
        "description": "セッションスレッド投稿の一覧取得\n- 必要権限: [OWN_SESSION_VIEW] [PRO_SESSION_VIEW] [TECHTHON_SESSION_VIEW]\n- session_idに紐づくスレッドを一覧取得\n- session_idのセッションが削除済み、存在しない場合NotFound\n- id降順に取得",
        "operationId": "getSessionThreads",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Session Threads Manage Sessions  Session Id  Threads Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionThreadListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "PRO_SESSION_VIEW",
              "TECHTHON_SESSION_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッションスレッド作成",
        "description": "セッションスレッドを作成\n- 必要権限：[OWN_SESSION_EDIT] [PRO_SESSION_VIEW] [TECHTHON_SESSION_VIEW]\n- session_id, ログインユーザーに紐づくセッションスレッドを新規作成する\n- session_idのセッションが削除済み、存在しない場合NotFound",
        "operationId": "createSessionThread",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionThreadCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_EDIT",
              "PRO_SESSION_VIEW",
              "TECHTHON_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/threads/{thread_id}": {
      "delete": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッションスレッド削除",
        "description": "セッションスレッドの投稿を論理削除\n- 必要権限:[OWN_SESSION_EDIT] [PRO_SESSION_VIEW] [TECHTHON_SESSION_VIEW]\n- session_idのセッションが削除済み、存在しない場合NotFound\n- thread_idのスレッド投稿が削除済み、存在しない場合NotFound",
        "operationId": "deleteSessionThread",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Thread Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "thread_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_EDIT",
              "PRO_SESSION_VIEW",
              "TECHTHON_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions/{session_id}/users": {
      "get": {
        "tags": [
          "manage/sessions"
        ],
        "summary": "セッション参加者一覧取得",
        "description": "セッション参加者の一覧を取得\n- 必要権限：[OWN_SESSION_VIEW] [ALL_EVENT_AND_SESSION_VIEW] [PRO_SESSION_VIEW] [TECHTHON_SESSION_VIEW]\n- 取得条件：\n    - [ALL_EVENT_AND_SESSION_VIEW]を持つ場合\n        - 自組織・他組織イベントセッション取得可能\n    - [ALL_EVENT_AND_SESSION_VIEW]を持たない かつ\n    - ([OWN_SESSION_EDIT] または [PRO_SESSION_EDIT] または [TECHTHON_SESSION_EDIT]) を持つ 場合\n        - 自組織イベントセッション, 共催企業登録済イベントのみ取得可能\n- (セッション作成者の)アカウントタイプ毎に取得項目変更\n    - スタッフ主催イベント\n        - アルバイト:\n            - 表示項目：参加者名(アカウント名)/表示名/参加日\n        - ST,SU:\n            - 表示項目：参加者名(アカウント名)/名前(本名)/表示名/都道府県/卒業予定/所属/参加日\n            - 名前(本名)\n                - 必要権限： 人材紹介機能 [RECRUITMENT]　& ユーザーが人材紹介規約同意済み\n                - 必要権限： 自組織個人情報閲覧 [OWN_SESSION_PERSONAL_INFORMATION_VIEW]\n        - イベント共催企業:\n            - 表示項目：参加者名(アカウント名)/都道府県/卒業予定/参加日\n    - 学校主催イベント\n        - 学校・スタッフ:\n            - 表示項目：参加者名(アカウント名)/名前(本名)/都道府県/卒業予定/所属/参加日/学籍番号\n            - 名前(本名)\n                - 必要権限： [自組織イベント個人情報閲覧] OWN_SESSION_PERSONAL_INFORMATION_VIEW\n                - 必要権限： [他組織イベント個人情報閲覧] SESSION_SPONSOR_PERSONAL_INFORMATION_VIEW\n                - 権限: 人材紹介機能 [RECRUITMENT] & ユーザーが人材紹介規約同意済み\n        - イベント共催企業:\n            - 表示項目：参加者名(アカウント名)/都道府県/卒業予定/参加日\n    - 企業主催イベント\n        - 表示項目：参加者名(アカウント名)/表示名/補足/参加日",
        "operationId": "getSessionUsers",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Session Users Manage Sessions  Session Id  Users Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionUsersListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW",
              "PRO_SESSION_VIEW",
              "TECHTHON_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/schools": {
      "get": {
        "tags": [
          "manage/schools"
        ],
        "summary": "学校一覧取得",
        "description": "学校一覧を取得\n- 必要権限: [ALL_ADMIN_VIEW]\n- is_deleted=Falseのもののみ取得",
        "operationId": "getSchoolList",
        "parameters": [
          {
            "description": "id,nameで検索",
            "required": false,
            "schema": {
              "title": "Search",
              "type": "string",
              "description": "id,nameで検索"
            },
            "name": "search",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "minimum": 0.0,
              "type": "integer"
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer"
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/app__routers__manage__schools__get_school_list__Ordering"
                }
              ],
              "default": "id"
            },
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolListOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/schools"
        ],
        "summary": "学校作成",
        "description": "学校を作成\n- 必要権限: [ALL_ADMIN_EDIT]",
        "operationId": "createSchool",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchoolCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/schools/counts": {
      "get": {
        "tags": [
          "manage/schools"
        ],
        "summary": "学校件数取得",
        "operationId": "getSchoolCount",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolCountOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/schools/{school_id}": {
      "get": {
        "tags": [
          "manage/schools"
        ],
        "summary": "学校詳細取得",
        "description": "学校詳細を取得\n- 必要権限: [ALL_ADMIN_VIEW]\n- is_deleted=Falseのもののみ取得可能",
        "operationId": "getSchool",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "School Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "school_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_VIEW"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/schools"
        ],
        "summary": "学校削除",
        "description": "学校を削除\n- 必要権限: [ALL_ADMIN_EDIT]\n- is_deleted=Falseのもののみ削除可能\n- 論理削除",
        "operationId": "deleteSchool",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "School Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "school_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/schools"
        ],
        "summary": "学校更新",
        "description": "学校を更新\n- 必要権限: [ALL_ADMIN_EDIT]\n- is_deleted=Falseのもののみ更新可能",
        "operationId": "updateSchool",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "School Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "school_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchoolUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/educational-materials": {
      "get": {
        "tags": [
          "manage/educational-materials"
        ],
        "summary": "教材一覧取得",
        "description": "教材一覧取得\n- 必要権限: [MATERIAL_VIEW]\n- 取得可能データ\n    - is_deleted=False\n    - コンテンツタイプ: 教材\n    - 自組織",
        "operationId": "getEducationalMaterialList",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 50
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/EducationalMaterialType"
            },
            "name": "educational_material_type",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Content Category Id",
              "minimum": 1.0,
              "type": "array",
              "items": {
                "minimum": 1.0,
                "type": "integer"
              }
            },
            "name": "content_category_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Difficulty",
              "maximum": 10.0,
              "minimum": 1.0,
              "type": "array",
              "items": {
                "maximum": 10.0,
                "minimum": 1.0,
                "type": "integer"
              }
            },
            "name": "difficulty",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/app__routers__manage__educational_materials__get_educational_material_list__Ordering"
                }
              ],
              "default": "id"
            },
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationalMaterialListOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "MATERIAL_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/educational-materials"
        ],
        "summary": "教材作成",
        "description": "教材作成\n- 必要権限: [MATERIAL_EDIT]\n- データ固定値\n    - コンテンツタイプ:教材\n    - コンテンツ区分:その他問題\n    - 公式問題:UserTypeがSTAFF, PART_TIMER, MANAGER, SUPERUSERの場合はTrue\n    - 作成者:ログインユーザー名\n- \"他の学校アカウントに共有\":学校アカウントのみ変更可能\n- 自組織に指定したコンテンツタグがない場合は作成し、すでにある場合はあるものを取得して紐付ける\n- `created_by`と`updated_by`のそれぞれに`first_name`と`last_name`を入力する",
        "operationId": "createEducationalMaterial",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EducationalMaterialCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationalMaterialDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "MATERIAL_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/educational-materials/event/{session_id}": {
      "get": {
        "tags": [
          "manage/educational-materials"
        ],
        "summary": "イベント用教材一覧取得",
        "description": "イベント用教材一覧取得\n- 必要権限: [OWN_SESSION_EDIT, ALL_EVENT_AND_SESSION_EDIT]\n    - ALL_EVENT_AND_SESSION_EDIT権限を持たない場合は自組織主催のイベントのみ指定可能\n- 指定したセッションが存在しない場合NOT_FOUNDエラー\n- 取得可能データ\n    - is_deleted=False\n    - コンテンツタイプ: 教材\n    - 学校主催のイベントの場合\n        - イベント主催組織の教材または`is_shared_between_schools=True`の教材\n    - 学校以外が主催のイベントの場合\n        - 自組織の教材\n- 作成者のレスポンス値について\n    - 学校主催のイベントの場合\n        - イベントの主催組織と同じ組織が作成した教材: 教材の作成者\n        - 上記以外: `共有コンテンツ`(固定値)\n    - 上記以外\n        - 教材の作成者",
        "operationId": "getEducationalMaterialListForEvent",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 50
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "description": "教材名",
            "required": false,
            "schema": {
              "title": "Name",
              "type": "string",
              "description": "教材名"
            },
            "name": "name",
            "in": "query"
          },
          {
            "description": "タグ",
            "required": false,
            "schema": {
              "title": "Tags",
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "タグ"
            },
            "name": "tags",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EducationalMaterialType"
              }
            },
            "name": "educational_material_type",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Content Category Ids",
              "minimum": 1.0,
              "type": "array",
              "items": {
                "minimum": 1.0,
                "type": "integer"
              }
            },
            "name": "content_category_ids",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Difficulties",
              "maximum": 10.0,
              "minimum": 1.0,
              "type": "array",
              "items": {
                "maximum": 10.0,
                "minimum": 1.0,
                "type": "integer"
              }
            },
            "name": "difficulties",
            "in": "query"
          },
          {
            "description": "公式問題のみ",
            "required": false,
            "schema": {
              "title": "Is Official",
              "type": "boolean",
              "description": "公式問題のみ"
            },
            "name": "is_official",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Created By",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "created_by",
            "in": "query"
          },
          {
            "description": "学校間共有問題を取得するか",
            "required": false,
            "schema": {
              "title": "Is Shared Between Schools",
              "type": "boolean",
              "description": "学校間共有問題を取得するか"
            },
            "name": "is_shared_between_schools",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/app__routers__manage__educational_materials__get_educational_material_list_for_event__Ordering"
                }
              ],
              "default": "id"
            },
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationalMaterialListForEventOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_EDIT",
              "ALL_EVENT_AND_SESSION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/educational-materials/{content_id}": {
      "get": {
        "tags": [
          "manage/educational-materials"
        ],
        "summary": "教材詳細取得",
        "description": "教材詳細取得\n- 必要権限: [MATERIAL_VIEW]\n- 取得可能データ\n    - is_deleted=False\n    - コンテンツタイプ: 教材\n    - 自組織",
        "operationId": "getEducationalMaterial",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationalMaterialDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "MATERIAL_VIEW"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/educational-materials"
        ],
        "summary": "教材削除",
        "description": "教材を削除\n- 必要権限: [MATERIAL_EDIT]\n- 論理削除\n- 削除可能データ\n    - is_deleted=False\n    - コンテンツタイプ: 教材\n    - 自組織",
        "operationId": "deleteEducationalMaterial",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "MATERIAL_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/educational-materials"
        ],
        "summary": "教材更新",
        "description": "教材更新\n- 必要権限: [MATERIAL_EDIT]\n- \"他の学校アカウントに共有\":学校アカウントのみ変更可能\n- 自組織に指定したコンテンツタグがない場合は作成し、すでにある場合はあるものを取得して紐付ける\n- updated_by: last_name + first_name",
        "operationId": "updateEducationalMaterial",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EducationalMaterialUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationalMaterialDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "MATERIAL_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/educational-materials/{content_id}/event": {
      "get": {
        "tags": [
          "manage/educational-materials"
        ],
        "summary": "イベント用教材詳細取得",
        "description": "イベント用教材詳細取得\n- 必要権限: [MATERIAL_VIEW]\n- 取得可能データ\n    - is_deleted=False\n    - コンテンツタイプ: 教材\n    - 自組織または`is_shared_between_schools=True`の教材",
        "operationId": "getEducationalMaterialForEvent",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationalMaterialDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_EDIT",
              "ALL_EVENT_AND_SESSION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/companies": {
      "get": {
        "tags": [
          "manage/companies"
        ],
        "summary": "企業一覧取得",
        "description": "企業一覧を取得\n- 必要権限: [ALL_ADMIN_VIEW]\n- レスポンスデータ補足情報,\n    - agreed_scout_count: 選考区分がスカウトでスカウト未承諾以外の選考情報データの総数\n    - total_scout_count: 選考区分がスカウトの選考情報データの総数\n    - recruit_count: 人材紹介求人に紐付いている選考情報データの総数\n    - is_published: 公開済みの求人が一つでもあればTrue\n- 以下の条件のデータのみ取得可能\n    - OrganizationType: COMPANY\n    - is_deleted: False",
        "operationId": "getCompanyList",
        "parameters": [
          {
            "description": "id,nameで検索",
            "required": false,
            "schema": {
              "title": "Search",
              "type": "string",
              "description": "id,nameで検索"
            },
            "name": "search",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "minimum": 0.0,
              "type": "integer"
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/app__routers__manage__companies__get_company_list__Ordering"
                }
              ],
              "default": "id_desc"
            },
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyListOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/companies"
        ],
        "summary": "企業作成",
        "description": "企業を作成\n- 必要権限: [ALL_ADMIN_EDIT]\n- 登録データ補足情報\n    - company_condition\n        - session_join_limit: 30\n        - skill_check_account_limit: 9999\n        - session_limit: 999\n        - skill_check_account_prefix: skillcheck\n        - can_scout: False\n        - scout_limit: 0\n        - school_event_limit: 0\n        - company_event_limit: 0\n    - created_by: last_name + first_name\n    - company_industry(企業業種)\n        - industry_id(業種ID)\n        - 最大3つまで登録できる",
        "operationId": "createCompany",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST<br>パラメータが不正: PARAMETER_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  },
                  "PARAMETER_ERROR": {
                    "value": {
                      "errorCode": "PARAMETER_ERROR",
                      "message": "指定されたパラメータは不正です",
                      "detail": "Parameter error"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/companies/{organization_id}": {
      "get": {
        "tags": [
          "manage/companies"
        ],
        "summary": "企業詳細取得",
        "description": "企業詳細を取得\n- 必要権限: [ALL_ADMIN_VIEW]\n- 以下の条件のデータのみ取得可能\n    - OrganizationType: COMPANY\n    - is_deleted: False",
        "operationId": "getCompany",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "organization_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_VIEW"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/companies"
        ],
        "summary": "企業更新",
        "description": "企業を更新\n- 必要権限: [ALL_ADMIN_EDIT]\n- is_deleted=Falseのもののみ更新可能\n- 登録データ補足情報\n    - updated_by: last_name + first_name\n- company_industry(企業業種)\n    - industry_id(業種ID)\n    - 最大3つまで登録可能",
        "operationId": "updateCompany",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "organization_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST<br>パラメータが不正: PARAMETER_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  },
                  "PARAMETER_ERROR": {
                    "value": {
                      "errorCode": "PARAMETER_ERROR",
                      "message": "指定されたパラメータは不正です",
                      "detail": "Parameter error"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/companies/{organization_id}/conditions": {
      "get": {
        "tags": [
          "manage/companies"
        ],
        "summary": "企業条件取得",
        "description": "企業条件を取得\n- 必要権限: [ALL_ADMIN_VIEW]\n- is_deleted=Falseのもののみ取得可能",
        "operationId": "getCompanyCondition",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "organization_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyConditionOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_VIEW"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/companies"
        ],
        "summary": "企業条件更新",
        "description": "企業を更新\n- 必要権限: [ALL_ADMIN_EDIT]\n- is_deleted=Falseのもののみ更新可能\n- 登録データ補足情報\n    - updated_by: last_name + first_name",
        "operationId": "updateCompanyCondition",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "organization_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyConditionUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyConditionOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ALL_ADMIN_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/companies/{organization_id}/documents": {
      "post": {
        "tags": [
          "manage/companies"
        ],
        "summary": "企業資料を作成",
        "description": "企業資料を作成\n- 必要権限: [OWN_ADMIN_EDIT] [ALL_ADMIN_EDIT]\n- 実行条件:\n    - 企業資料作成数上限：5\n    - 登録数が5個のとき、実行不可\n    - Organization.is_deleted = False",
        "operationId": "createCompanyDocument",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "organization_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDocumentCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDocumentDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "条件を満たしていないため実行不可: CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED": {
                    "value": {
                      "errorCode": "CANNOT_EXECUTED_CONDITIONS_NOT_SATISFIED",
                      "message": "条件を満たしていないため実行不可",
                      "detail": "Cannot be executed because the required conditions are not satisfied."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_ADMIN_EDIT",
              "ALL_ADMIN_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/companies/{organization_id}/documents/{document_id}": {
      "delete": {
        "tags": [
          "manage/companies"
        ],
        "summary": "企業資料を削除",
        "description": "企業資料を削除\n- 必要権限: [OWN_ADMIN_EDIT] [ALL_ADMIN_EDIT]\n- クラウドストレージ内の該当ファイルを削除する",
        "operationId": "deleteCompanyDocument",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "organization_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Document Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "document_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_ADMIN_EDIT",
              "ALL_ADMIN_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/companies"
        ],
        "summary": "企業資料更新",
        "description": "企業資料を更新\n- 必要権限: [OWN_ADMIN_EDIT][ALL_ADMIN_EDIT]\n- クラウドストレージ内の該当ファイルに変更があった場合、古いファイルを削除する",
        "operationId": "updateCompanyDocument",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Organization Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "organization_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Document Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "document_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyDocumentUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDocumentDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_ADMIN_EDIT",
              "ALL_ADMIN_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/chat-rooms": {
      "get": {
        "tags": [
          "manage/chat-rooms"
        ],
        "summary": "管理者チャットルーム一覧取得",
        "description": "管理者チャットルーム一覧取得\n- 必要権限: [CHAT]\n- 並び順: 最終送信日時の降順\n- ユーザー別表示内容\n    - 企業 or エージェント(444): 自社が参加しているチャットルーム一覧を表示\n    - 学校: 自身(先生)の参加しているチャットルーム一覧を表示\n- レスポンス補足情報\n    - icon: ユーザーのicon\n    - room_name: 一般ユーザーのusername\n    - sub_room_name: `show_real_name=True`の場合ユーザーの本名を表示\n    - chat_partner_type: `ユーザー`固定\n    - unread_count: 一般ユーザーチャットの未読数(ログインユーザーごとに計算)\n    - is_deleted_account: 一般ユーザーが退会済み(is_deleted=True)の場合True\n    - is_scout_refusal_account: 一般ユーザーがスカウト拒否(receive_scouts=False)の場合True",
        "operationId": "getManageChatRoomList",
        "parameters": [
          {
            "description": "ルーム名検索(部分一致)",
            "required": false,
            "schema": {
              "title": "Room Name",
              "type": "string",
              "description": "ルーム名検索(部分一致)"
            },
            "name": "room_name",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManageChatRoomListOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "CHAT"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/chat-rooms"
        ],
        "summary": "管理者チャットルーム作成",
        "description": "管理者チャットルーム作成\n- 必要権限: [CHAT]\n- 登録時データ補足情報\n    - organization_id: 自組織に設定する\n    - host_user_id: 学校の場合のみ自身をホストユーザーにする\n    - general_user_id: リクエストのuser_idに設定する\n    - last_send_time: 現在時刻を設定する\n    - show_real_name: 学校の場合のみTrue\n    - chat_room_type: 企業: `COMPANY`, 学校: `SCHOOL`, エージェント(444): `AGENT` に設定する\n- 同じホストとユーザーのチャットルームが存在する場合は登録処理は行わず、レスポンスのみ行う",
        "operationId": "createManageChatRoom",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManageChatRoomCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManageChatRoomCreateOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "CHAT"
            ]
          }
        ]
      }
    },
    "/manage/chat-rooms/{chat_room_id}/chats": {
      "get": {
        "tags": [
          "manage/chat-rooms"
        ],
        "summary": "管理者チャット一覧取得",
        "description": "管理者チャット一覧取得\n- 必要権限: [CHAT]\n- 並び順: id昇順\n- ユーザー別取得可能条件\n    - 企業 or エージェント(444): 自社が参加しているチャットルームのみ取得可能\n    - 学校: 自身(先生)の参加しているチャットルームのみ取得可能\n- レスポンス項目\n    - icon: ユーザーのicon\n    - room_name: ユーザーのアカウント名(username)\n    - sub_room_name: 本名表示フラグがTrueの場合、ユーザーの本名を表示\n    - chats\n        - file.is_expired: 有効期限切れ、もしくはis_deletedがTrueの場合True、それ以外はFalse\n        - is_own: 自身のチャットの場合True\n        - is_read: 一般ユーザーが自身のチャットを既読の場合True\n        - sender: チャット送信者の本名(full_name)、相手が一般ユーザーで本名表示フラグがFalseの場合はアカウント名(username)を表示\n        - icon: チャット送信者のユーザーアイコンURL",
        "operationId": "getManageChatList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Chat Room Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "chat_room_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManageChatListOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "CHAT"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/chat-rooms"
        ],
        "summary": "管理者チャット送信",
        "description": "管理者チャット送信\n- 必要権限: [CHAT]\n- サブチャットルーム名(本名)表示条件: 本名表示フラグがTrueの場合\n- 送信可能条件\n    - 企業 or エージェント(444): 自社が参加しているチャットルームのみ\n    - 学校: 自身(先生)の参加しているチャットルームのみ\n- チャット送信後に送信先ユーザーに対して通知メールを送信する\n    - receive_emails=Falseの場合は送信しない\n- チャットファイルの場合は有効期限を7日間に設定する\n- レスポンス項目\n    - icon: ユーザーのicon\n    - room_name: ユーザーのアカウント名(username)\n    - sub_room_name: 本名表示フラグがTrueの場合、ユーザーの本名を表示\n    - chats\n        - is_expired: 有効期限切れ、もしくはis_deletedがTrueの場合True\n        - is_own: 自身のチャットの場合True\n        - is_read: 一般ユーザーが自身のチャットを既読の場合True\n        - sender: チャット送信者の本名(full_name)、相手が一般ユーザーで本名表示フラグがFalseの場合はアカウント名(username)を表示\n        - icon: チャット送信者のユーザーアイコンURL\n- 登録時データ補足情報\n    - ChatRoom.last_send_time: 現在時刻で更新",
        "operationId": "sendManageChat",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Chat Room Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "chat_room_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManageChatSendIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManageChatListDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "CHAT"
            ]
          }
        ]
      }
    },
    "/manage/chat-rooms/{chat_room_id}/files": {
      "get": {
        "tags": [
          "manage/chat-rooms"
        ],
        "summary": "管理者チャットファイル一覧取得",
        "description": "管理者チャットファイル一覧取得\n- 必要権限: [CHAT]\n- 並び順: id昇順\n- 取得条件\n    - 企業 or エージェント(444)の場合: 自社が参加しているチャットルームのみ取得可能\n    - 学校の場合: 自身(先生)の参加しているチャットルームのみ取得可能\n    - is_deleted: False\n    - expires_at: 現在日時以上\n- レスポンス補足情報\n    - sender: チャット送信者の本名(full_name)、相手が一般ユーザーで本名表示フラグがFalseの場合はアカウント名(username)を表示\n    - icon: 送信者のユーザーアイコン",
        "operationId": "getManageChatFileList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Chat Room Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "chat_room_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Manage Chat File List Manage Chat Rooms  Chat Room Id  Files Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ManageChatFileListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "CHAT"
            ]
          }
        ]
      }
    },
    "/manage/chat-rooms/{chat_room_id}/files/{chat_id}": {
      "delete": {
        "tags": [
          "manage/chat-rooms"
        ],
        "summary": "管理者チャットファイル削除",
        "description": "管理者チャットファイル削除\n- 必要権限: [CHAT]\n- 取得条件\n    - 企業 or エージェント(444)の場合: 自社が参加しているチャットルームのみ取得可能\n    - 学校の場合: 自身(先生)の参加しているチャットルームのみ取得可能\n    - is_deleted: False\n    - expires_at: 現在日時以上\n- is_deleted=Trueに変更する\n- cloud storageのファイルを削除する",
        "operationId": "deleteManageChatFile",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Chat Room Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "chat_room_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Chat Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "chat_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "CHAT"
            ]
          }
        ]
      }
    },
    "/manage/chat-rooms/{chat_room_id}/read-chats": {
      "post": {
        "tags": [
          "manage/chat-rooms"
        ],
        "summary": "管理者チャット既読",
        "description": "管理者チャット既読\n- 必要権限: [CHAT]\n- 既読可能条件\n    - 企業 or エージェント(444): 自社が参加しているチャットルームのみ\n    - 学校: 自身(先生)の参加しているチャットルームのみ\n- chat_roomが取得できない場合はNotFoundエラー\n- 指定されたチャットルームで、自身が未読のチャットを既読にする(ChatReadUserに登録する)",
        "operationId": "readManageChat",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Chat Room Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "chat_room_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "CHAT"
            ]
          }
        ]
      }
    },
    "/manage/sessions-techthon/{event_id}": {
      "post": {
        "tags": [
          "manage/sessions-techthon"
        ],
        "summary": "TechthonSession作成",
        "description": "TechthonSession作成\n- 必要権限\n    - [TECHTHON_SESSION_EDIT]\n- 処理内容\n    - Sessionを作成\n    - TechthonSessionを作成\n- レスポンス\n    - 作成されたSessionIDを返す\n    - IDをもって、getTechthonSessionで詳細情報を取得する想定",
        "operationId": "createTechthonSession",
        "parameters": [
          {
            "description": "イベントID",
            "required": true,
            "schema": {
              "title": "Event Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "イベントID"
            },
            "name": "event_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechthonSessionIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechthonSessionOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "TECHTHON_SESSION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/sessions-techthon/{session_id}": {
      "patch": {
        "tags": [
          "manage/sessions-techthon"
        ],
        "summary": "TechthonSession更新",
        "description": "TechthonSession更新\n- 必要権限\n    - [TECHTHON_SESSION_EDIT]\n- データ取得\n    - Session.id = session_id\n    - Session.session_type = SessionType.TECHTHON\n    - Session.is_deleted = False\n- 処理内容\n    - Sessionを更新\n    - TechthonSessionを更新",
        "operationId": "updateTechthonSession",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechthonSessionIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "TECHTHON_SESSION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/sessions-techthon/{session_id}/contents": {
      "get": {
        "tags": [
          "manage/sessions-techthon"
        ],
        "summary": "テックソン問題一覧取得",
        "description": "テックソンセッション問題一覧取得\n- 必要権限: []\n- 並び順: idの昇順\n- 抽出条件:\n    - Content.content_type = ContentType.TECHTHON\n    - SessionContent.session_id = session_id\n- 補足\n    - ミッション番号は\"mission\" + Techthon.orderを結合した文字列にして返す\n    - セッションID、コンテンツIDで詳細を取得する",
        "operationId": "getTechthonSessionQuestionList",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Techthon Session Question List Manage Sessions Techthon  Session Id  Contents Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TechthonQuestionListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "パラメータが不正: PARAMETER_ERROR",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "PARAMETER_ERROR": {
                    "value": {
                      "errorCode": "PARAMETER_ERROR",
                      "message": "指定されたパラメータは不正です",
                      "detail": "Parameter error"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "TECHTHON_SESSION_VIEW"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "manage/sessions-techthon"
        ],
        "summary": "テックソンセッションコンテンツ追加",
        "description": "テックソンセッションコンテンツ追加\n- 必要権限:\n    - techthon_session_edit\n- 処理内容:\n    - 既存のSessionContentsを削除(session_id=session_id)\n    - session_contentsを作成 (list分を作成)\n        - orderはcontent.techthon.orderを使う\n        - 一つがTechthonとして存在しなければ、NotFound",
        "operationId": "addTechthonSessionContents",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Add In",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TechthonSessionContentAddIn"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "TECHTHON_SESSION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/sessions-techthon/{session_id}/contents/{content_id}": {
      "get": {
        "tags": [
          "manage/sessions-techthon"
        ],
        "summary": "テックソンセッション問題詳細取得",
        "description": "テックソン問題詳細取得\n- 必要権限: [TECHTHON_MISSION_PHASE_VIEW]\n- 処理内容:\n    - 対象のテックソン問題詳細を取得\n- 例外処理:\n    - 以下の場合NotFound:\n        - イベントまたはセッションが削除済み\n        - 削除済み問題\n        - 対象セッションの問題ではない\n        - 指定されたセッションID・コンテンツIDが存在しない\n        - 権限のないユーザーが閲覧\n- 補足:\n    - 問題詳細取得は管理者側の詳細取得APIと共通処理とする",
        "operationId": "getSessionsTechthonQuestion",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "コンテンツID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__manage__techthon_questions__techthon_question_out__TechthonContentDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "TECHTHON_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions-techthon/{session_id}/portfolio/{user_id}": {
      "get": {
        "tags": [
          "manage/sessions-techthon"
        ],
        "summary": "Techthonポートフォリオ取得",
        "description": "Techthonポートフォリオ取得\n- 必要権限: [TECHTHON_SESSION_VIEW]\n- 例外処理:\n    - 以下の場合NotFound\n        - イベントかセッションが存在しないまたは削除済み\n        - 企業ユーザーだがスポンサー企業ではない\n        - 指定したユーザーが存在しないまたはセッション参加ユーザーではない\n        - 権限を持たない\n- レスポンス補足\n    - TechthonUserInfo\n        - team_name: チーム戦の場合はチーム名を返す、個人戦の場合はNone\n        - user_comment以下: ユーザーが利用技術登録していなければ全てNone\n    - TechthonScoreInfo\n        - 各種獲得したスコア: チーム戦の場合はチームで取得した点数\n        - team_count: 個人戦の場合でも一人一チームに割り振られる",
        "operationId": "getManageTechthonSessionPortfolio",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "ユーザーID",
            "required": true,
            "schema": {
              "title": "User Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "ユーザーID"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__manage__sessions_techthon__techthon_portfolio_out__TechthonPortfolioOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "TECHTHON_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions-techthon/{session_id}/ranking": {
      "get": {
        "tags": [
          "manage/sessions-techthon"
        ],
        "summary": "Techthonセッションランキング取得",
        "description": "Techthonセッションランキング取得\n- 必要権限: [TECHTHON_SESSION_VIEW]\n- 例外処理:\n    - 以下の場合NotFound\n        - イベントかセッションが存在しないまたは削除済み\n        - 企業ユーザーだがスポンサー企業のユーザーではない\n        - 権限を持っていない\n- 補足情報:\n    - 順位は合計スコア順で表示\n        -  スコアが同じ場合は順位は同じだが、解答タイムが短い順に並べる\n    - team_name\n        - チーム戦の場合は返す\n        - 個人戦の場合はNone",
        "operationId": "getTechthonSessionRanking",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Techthon Session Ranking Manage Sessions Techthon  Session Id  Ranking Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/app__schemas__manage__sessions_techthon__techthon_ranking_out__TechthonRankingOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "TECHTHON_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions-techthon/{session_id}/team": {
      "post": {
        "tags": [
          "manage/sessions-techthon"
        ],
        "summary": "テックソンセッションチーム追加",
        "description": "テックソンセッションチーム追加\n- 必要権限: [TECHTHON_SESSION_EDIT]\n- 処理内容:\n    - セッションが存在しかつTechthonセッションか確認\n    - チーム番号を決める\n        - 対象セッションに既に存在するチーム番号の最大値+1を今回のチーム番号とする\n    - TechthonTeamに新規チームを追加\n        - TechthonTeam.techthon_session_id = TechthonSession.id\n        - TechthonTeam.team_name = \"team-{上記で決定した番号}\"\n        - TechthonTeam.ip_address = \"\"\n        - TechthonTeam.server_id = \"\"\n        - TechthonTeam.password = \"\"\n        - TechthonTeam.created_by = 作成者の本名\n        - TechthonTeam.updated_by = 作成者の本名\n        - TechthonTeam.gce_instance_name = \"\"\n- 例外処理:\n    - 以下の場合NotFound:\n        - セッションが削除済み\n        - セッションIDが存在しない",
        "operationId": "createTechthonSessionTeam",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechthonSessionTeamOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "TECHTHON_SESSION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/sessions-techthon/{session_id}/teams": {
      "get": {
        "tags": [
          "manage/sessions-techthon"
        ],
        "summary": "Get Techthon Teams",
        "description": "Techthonチーム一覧取得",
        "operationId": "getTechthonTeams",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Techthon Teams Manage Sessions Techthon  Session Id  Teams Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TechthonTeamOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "TECHTHON_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/sessions-techthon/{session_id}/teams/{team_id}": {
      "put": {
        "tags": [
          "manage/sessions-techthon"
        ],
        "summary": "テックソンセッション参加ユーザーチーム更新",
        "description": "テックソンセッション参加ユーザーチーム更新\n- 必要権限: [TECHTHON_SESSION_EDIT]\n- 処理内容:\n    - 対象のsession_idに紐づくTechthonSessionが存在しかつ対象セッションの参加ユーザーか確認\n    - team_idがTechthonTeamに存在するか確認\n    - 対象セッションのTechthonTeamMemberに対象ユーザーのSessionUser.idが存在する場合、TechthonTeamMember.team_idを更新\n        - 更新者を更新したスタッフのフルネームで更新\n    - 対象セッションのTechthonTeamMemberに対象ユーザーのSessionUser.idが存在しない場合、レコードを新規作成\n        - 作成者と更新者を作成したスタッフのフルネームで更新\n- 取得条件:\n    - Session.is_deleted == False\n- 対象テーブル:\n    - Session\n    - TechthonSession\n    - TechthonTeam\n    - TechthonTeamMember\n    - SessionUser\n    - User\n    - UserCommonInfo\n- 例外処理:\n    - 以下の場合NotFound:\n        - セッションが削除済み\n        - 対象セッションが存在しない\n        - 対象チームIDが存在しない\n        - 対象セッション参加ユーザーではない\n- 補足:\n    - チームの割り振りは管理者側で手動で行われるため、参加時にチームIDが付与されるわけではない",
        "operationId": "updateTeamForTechthonSessionUser",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "チームID",
            "required": true,
            "schema": {
              "title": "Team Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "チームID"
            },
            "name": "team_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechthonSessionUserTeamUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechthonSessionUserOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "TECHTHON_SESSION_EDIT"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/sessions-techthon"
        ],
        "summary": "テックソンセッションチーム削除",
        "description": "テックソンセッションチーム削除\n- 必要権限: [TECHTHON_SESSION_EDIT]\n- 処理内容:\n    - 対象セッションがTechthonセッションかつ存在するか確認\n    - 対象のテックソンチームを物理削除\n        - TechthonTeam.id == team_id\n- 例外処理:\n    - 以下の場合NotFound:\n        - セッションが削除済み\n        - セッションID・チームIDが存在しない\n- 補足:\n    - チームは設定時に間違えて追加した以外で削除しないように心がける",
        "operationId": "deleteTechthonSessionTeam",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "チームID",
            "required": true,
            "schema": {
              "title": "Team Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "チームID"
            },
            "name": "team_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "TECHTHON_SESSION_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/sessions-techthon"
        ],
        "summary": "テックソンセッションチーム名更新",
        "description": "テックソンセッションチーム名更新\n- 必要権限: [TECHTHON_SESSION_EDIT]\n- 処理内容:\n    - セッションが存在しかつTechthonセッションか確認\n    - 対象のチーム名を更新\n        - TechthonTeam.team_name = TechthonSessionTeamUpdateIn.team_name\n- 例外処理:\n    - 以下の場合NotFound:\n        - セッションが削除済み\n        - セッションIDが存在しない",
        "operationId": "updateTechthonSessionTeamName",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          },
          {
            "description": "チームID",
            "required": true,
            "schema": {
              "title": "Team Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "チームID"
            },
            "name": "team_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechthonSessionTeamUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TechthonSessionTeamOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "TECHTHON_SESSION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/sessions-techthon/{session_id}/users": {
      "get": {
        "tags": [
          "manage/sessions-techthon"
        ],
        "summary": "テックソンセッション参加ユーザー一覧取得",
        "description": "テックソンセッション参加ユーザー一覧取得\n- 必要権限: [TECHTHON_SESSION_VIEW]\n- 並び順: 参加日時の昇順\n- 処理内容:\n    - 対象のsession_idに紐づくTechthonSessionが存在するのか確認\n    - ホスト・スポンサー企業・444スタッフか確認\n    - 対象のsession_idに紐づく参加ユーザーをSessionUserから特定しUserテーブルから情報を取得\n    - GeneralUser.current_jobのタイプに応じて所属名を取得\n        - GeneralUser.current_job == CurrentJob.STUDENTの場合\n            - EducationalBackGround.school_master_idから学校名を取得\n            - 手入力の場合はEducationalBackGround.school_master_detailより取得\n        - GeneralUser.current_job != CurrentJob.STUDENTの場合\n            - WorkExperience.company_nameより企業名を取得\n    - 参加日はSessionUser.created_atをdateに変換した値で取得\n    - チーム情報はuser.idがTechthonTeamMember.user_idに存在する場合取得\n- 取得条件:\n    - Session.is_deleted == False\n- 対象テーブル:\n    - Session\n    - TechthonSession\n    - TechthonTeam\n    - TechthonTeamMember\n    - SessionUser\n    - User\n    - GeneralUser\n    - EducationalBackGround\n    - WorkExperience\n- 例外処理:\n    - 以下の場合NotFound:\n        - セッションが削除済み\n        - 対象セッションが存在しない\n- 補足:\n    - チームの割り振りは管理者側で手動で行われるため、参加時にチームIDが付与されるわけではない",
        "operationId": "getTechthonSessionUserList",
        "parameters": [
          {
            "description": "セッションID",
            "required": true,
            "schema": {
              "title": "Session Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "セッションID"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Techthon Session User List Manage Sessions Techthon  Session Id  Users Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TechthonSessionUserOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "TECHTHON_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/questions": {
      "get": {
        "tags": [
          "manage/questions"
        ],
        "summary": "問題一覧取得",
        "description": "問題一覧取得\n- 必要権限: [PROBLEM_VIEW]\n- 検索：ID/問題名/問題形式/コンテンツ区分/カテゴリ/難易度/問題タグ/検証済/公式・公開済み含む/で絞り込み\n- ページネーション: offset/limitの件数に従って取得\n- order_byに従ってソート\n- 自組織で作成した問題のみ取得可能\n- （学校ユーザーで実行時）他校が作成した問題は作成者・更新者欄に作成した学校名が表示される",
        "operationId": "getQuestionList",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 50
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "description": "コンテンツID",
            "required": false,
            "schema": {
              "title": "Content Id",
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "query"
          },
          {
            "description": "問題名",
            "required": false,
            "schema": {
              "title": "Name",
              "maxLength": 100,
              "type": "string",
              "description": "問題名"
            },
            "name": "name",
            "in": "query"
          },
          {
            "description": "問題形式",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/QuestionType"
              },
              "description": "問題形式"
            },
            "name": "question_types",
            "in": "query"
          },
          {
            "description": "コンテンツ区分",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ContentDivision"
              },
              "description": "コンテンツ区分"
            },
            "name": "content_divisions",
            "in": "query"
          },
          {
            "description": "問題カテゴリID",
            "required": false,
            "schema": {
              "title": "Content Category Ids",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "問題カテゴリID"
            },
            "name": "content_category_ids",
            "in": "query"
          },
          {
            "description": "難易度",
            "required": false,
            "schema": {
              "title": "Difficulties",
              "maximum": 10.0,
              "minimum": 1.0,
              "type": "array",
              "items": {
                "maximum": 10.0,
                "minimum": 1.0,
                "type": "integer"
              },
              "description": "難易度"
            },
            "name": "difficulties",
            "in": "query"
          },
          {
            "description": "問題タグID",
            "required": false,
            "schema": {
              "title": "Tags",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "問題タグID"
            },
            "name": "tags",
            "in": "query"
          },
          {
            "description": "検証済",
            "required": false,
            "schema": {
              "title": "Is Verified",
              "type": "boolean",
              "description": "検証済"
            },
            "name": "is_verified",
            "in": "query"
          },
          {
            "description": "お気に入り登録済み",
            "required": false,
            "schema": {
              "title": "Is Favorite",
              "type": "boolean",
              "description": "お気に入り登録済み"
            },
            "name": "is_favorite",
            "in": "query"
          },
          {
            "description": "公式問題のみ",
            "required": false,
            "schema": {
              "title": "Is Official",
              "type": "boolean",
              "description": "公式問題のみ"
            },
            "name": "is_official",
            "in": "query"
          },
          {
            "description": "オリジナル問題（非公開）",
            "required": false,
            "schema": {
              "title": "Is Original Private",
              "type": "boolean",
              "description": "オリジナル問題（非公開）"
            },
            "name": "is_original_private",
            "in": "query"
          },
          {
            "description": "オリジナル問題（他校に公開",
            "required": false,
            "schema": {
              "title": "Is Original Other Schools Public",
              "type": "boolean",
              "description": "オリジナル問題（他校に公開"
            },
            "name": "is_original_other_schools_public",
            "in": "query"
          },
          {
            "description": "ストック問題",
            "required": false,
            "schema": {
              "title": "Is Stock",
              "type": "boolean",
              "description": "ストック問題"
            },
            "name": "is_stock",
            "in": "query"
          },
          {
            "description": "他校の公開問題（テストケースあり）",
            "required": false,
            "schema": {
              "title": "Is Shared Schools Testcases",
              "type": "boolean",
              "description": "他校の公開問題（テストケースあり）"
            },
            "name": "is_shared_schools_testcases",
            "in": "query"
          },
          {
            "description": "他校の公開問題（テストケースなし）",
            "required": false,
            "schema": {
              "title": "Is Shared Schools None Testcases",
              "type": "boolean",
              "description": "他校の公開問題（テストケースなし）"
            },
            "name": "is_shared_schools_none_testcases",
            "in": "query"
          },
          {
            "description": "作成者",
            "required": false,
            "schema": {
              "title": "Created By",
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "作成者"
            },
            "name": "created_by",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/app__routers__manage__questions__get_question_list__Ordering"
                }
              ],
              "default": "created_at_desc"
            },
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionListOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PROBLEM_VIEW"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/questions"
        ],
        "summary": "問題作成",
        "description": "問題作成\n- 必要権限：[PROBLEM_EDIT]\n- 登録データ補足情報\n    - is_official: スタッフの場合True\n    - organization: 自組織\n    - created_by: user.full_name\n    - content_type: ContentType.GENERAL(一般問題・教材)",
        "operationId": "createQuestion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PROBLEM_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/questions/created_by": {
      "get": {
        "tags": [
          "manage/questions"
        ],
        "summary": "コンテンツ作成者一覧取得",
        "description": "\"\nコンテンツ作成者一覧取得\n- 必要権限: [OWN_SESSION_VIEW] [ALL_EVENT_AND_SESSION_VIEW]\n- 並び順:ID降順\nログインユーザーの所属組織によって作成されたContent.created_byを一覧で取得する\n取得条件：\n- Content_division＝ストック問題・第三者作成\n- is_published=True\n- is_official=False\n-\n    学校ユーザの場合：\n        - is_shared_between_schools=Trueのレコードも含む",
        "operationId": "getContentCreatedBy",
        "parameters": [
          {
            "description": "コンテンツタイプが問題のものを含むか",
            "required": false,
            "schema": {
              "title": "Is General",
              "type": "boolean",
              "description": "コンテンツタイプが問題のものを含むか"
            },
            "name": "is_general",
            "in": "query"
          },
          {
            "description": "コンテンツタイプがPRO問題のものを含むか",
            "required": false,
            "schema": {
              "title": "Is Pro Question",
              "type": "boolean",
              "description": "コンテンツタイプがPRO問題のものを含むか"
            },
            "name": "is_pro_question",
            "in": "query"
          },
          {
            "description": "コンテンツタイプが教材のものを含むか",
            "required": false,
            "schema": {
              "title": "Is Material",
              "type": "boolean",
              "description": "コンテンツタイプが教材のものを含むか"
            },
            "name": "is_material",
            "in": "query"
          },
          {
            "description": "コンテンツタイプがtechthonのものを含むか",
            "required": false,
            "schema": {
              "title": "Is Techthon",
              "type": "boolean",
              "description": "コンテンツタイプがtechthonのものを含むか"
            },
            "name": "is_techthon",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Content Created By Manage Questions Created By Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentCreatedByOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "ALL_EVENT_AND_SESSION_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/questions/event": {
      "get": {
        "tags": [
          "manage/questions"
        ],
        "summary": "イベント向け問題一覧取得",
        "description": "イベント向け問題一覧取得\n- 必要権限: [OWN_SESSION_VIEW][OWN_EVENT_VIEW]\n- 検索：問題名/問題形式/コンテンツ区分/カテゴリ/難易度/問題タグで絞り込み\n- 取得可能条件\n    - is_deleted = False\n    - is_verified = True\n    - コンテンツ区分：ストック、第三者作成\n    - 作成者\n    - 学校ユーザー\n        - 問題作成組織：自校、444\n        - 問題作成者：公式(is_official)、共有コンテンツ(is_shared_between_schools)、自校\n    - 企業ユーザー\n        - 問題作成組織：自社、444\n        - 問題作成者：公式、自社\n    - 444スタッフ\n        - 問題作成組織：444\n        - 問題作成者：自組織作成の全ての問題\n- 並び順:\n    - id降順\n- 作成者のレスポンス値について\n    - 公式問題の場合 公式:TechFUL(固定値)で表示\n    - 上記以外\n        - 問題作成者をそのまま表示",
        "operationId": "getQuestionListForEvent",
        "parameters": [
          {
            "description": "コンテンツID",
            "required": false,
            "schema": {
              "title": "Content Id",
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "query"
          },
          {
            "description": "問題名",
            "required": false,
            "schema": {
              "title": "Name",
              "maxLength": 100,
              "type": "string",
              "description": "問題名"
            },
            "name": "name",
            "in": "query"
          },
          {
            "description": "問題形式",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/QuestionType"
              },
              "description": "問題形式"
            },
            "name": "question_types",
            "in": "query"
          },
          {
            "description": "問題カテゴリID",
            "required": false,
            "schema": {
              "title": "Content Category Ids",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "問題カテゴリID"
            },
            "name": "content_category_ids",
            "in": "query"
          },
          {
            "description": "難易度",
            "required": false,
            "schema": {
              "title": "Difficulties",
              "maximum": 10.0,
              "minimum": 1.0,
              "type": "array",
              "items": {
                "maximum": 10.0,
                "minimum": 1.0,
                "type": "integer"
              },
              "description": "難易度"
            },
            "name": "difficulties",
            "in": "query"
          },
          {
            "description": "問題タグ",
            "required": false,
            "schema": {
              "title": "Tags",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "問題タグ"
            },
            "name": "tags",
            "in": "query"
          },
          {
            "description": "お気に入り登録済み",
            "required": false,
            "schema": {
              "title": "Is Favorite",
              "type": "boolean",
              "description": "お気に入り登録済み"
            },
            "name": "is_favorite",
            "in": "query"
          },
          {
            "description": "公式問題のみ",
            "required": false,
            "schema": {
              "title": "Is Official",
              "type": "boolean",
              "description": "公式問題のみ"
            },
            "name": "is_official",
            "in": "query"
          },
          {
            "description": "学校間共有問題を取得するか",
            "required": false,
            "schema": {
              "title": "Is Shared Between Schools",
              "type": "boolean",
              "description": "学校間共有問題を取得するか"
            },
            "name": "is_shared_between_schools",
            "in": "query"
          },
          {
            "description": "作成者",
            "required": false,
            "schema": {
              "title": "Created By",
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "作成者"
            },
            "name": "created_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Question List For Event Manage Questions Event Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuestionListDetailOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "OWN_EVENT_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/questions/publish": {
      "patch": {
        "tags": [
          "manage/questions"
        ],
        "summary": "問題公開",
        "description": "問題を公開状態へ変更する\n- 必要権限：[PROBLEM_PUBLISH]\n- 問題IDをリストで受け取り、公開状態(is_published=True)へ変更する",
        "operationId": "publishQuestion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Content In",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/QuestionPublishIn"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PROBLEM_PUBLISH"
            ]
          }
        ]
      }
    },
    "/manage/questions/tags": {
      "get": {
        "tags": [
          "manage/questions"
        ],
        "summary": "コンテンツタグ一覧取得",
        "description": "コンテンツタグ一覧取得\n- 必要権限: [OWN_SESSION_VIEW][OWN_EVENT_VIEW]\n    - 全てがFalseの時は全てのコンテンツタイプのものを取得\n    - is_general: コンテンツタイプが問題のものを取得\n    - is_pro_question: コンテンツタイプがPRO問題のものを取得\n    - is_material: コンテンツタイプが教材のものを取得\n    - is_techthon: コンテンツタイプがtechthonのものを取得",
        "operationId": "getContentTags",
        "parameters": [
          {
            "description": "コンテンツタイプが問題のものを含むか",
            "required": false,
            "schema": {
              "title": "Is General",
              "type": "boolean",
              "description": "コンテンツタイプが問題のものを含むか"
            },
            "name": "is_general",
            "in": "query"
          },
          {
            "description": "コンテンツタイプがPRO問題のものを含むか",
            "required": false,
            "schema": {
              "title": "Is Pro Question",
              "type": "boolean",
              "description": "コンテンツタイプがPRO問題のものを含むか"
            },
            "name": "is_pro_question",
            "in": "query"
          },
          {
            "description": "コンテンツタイプが教材問題のものを含むか",
            "required": false,
            "schema": {
              "title": "Is Material",
              "type": "boolean",
              "description": "コンテンツタイプが教材問題のものを含むか"
            },
            "name": "is_material",
            "in": "query"
          },
          {
            "description": "コンテンツタイプがtechthonのものを含むか",
            "required": false,
            "schema": {
              "title": "Is Techthon",
              "type": "boolean",
              "description": "コンテンツタイプがtechthonのものを含むか"
            },
            "name": "is_techthon",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Content Tags Manage Questions Tags Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentTagOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_VIEW",
              "OWN_EVENT_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/questions/{content_id}": {
      "get": {
        "tags": [
          "manage/questions"
        ],
        "summary": "問題詳細取得",
        "description": "問題詳細取得\n- 必要権限: [PROBLEM_VIEW]",
        "operationId": "getQuestion",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PROBLEM_VIEW"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/questions"
        ],
        "summary": "問題削除",
        "description": "問題の削除\n- 必要権限：[PROBLEM_EDIT]\n- 論理削除\n- 自組織が作成した問題のみ削除可能対象とする",
        "operationId": "deleteQuestion",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PROBLEM_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/questions"
        ],
        "summary": "問題更新",
        "description": "問題更新API\n- 必要権限：[PROBLEM_EDIT]\n- 更新条件：\n    - is_deleted=False\n    - 自組織が作成した問題のみ更新可能\n    - content_type=ContentType.GENERAL\n- updated_by: user.fullname",
        "operationId": "updateQuestion",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PROBLEM_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/questions/{content_id}/bug_code/register": {
      "post": {
        "tags": [
          "manage/questions"
        ],
        "summary": "バグコード登録",
        "description": "バグコード登録\n- ジャッジシステムにリクエストを送る\n- リクエストデータ\n    - pg_lang.lang_code\n    - source_code\n    - judge_type: JudgeType.TEMPLATE,\n    - judge_code: template.id,\n    - gcs_file_paths: list[str]\n    - sample_case_id_list: list[int]\n- API実行時登録データ\n    - source_code\n    - pg_lang_id\n    - question_id\n    - judge_status.WJ",
        "operationId": "registerBugCode",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BugCodeRegisterIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PROBLEM_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/questions/{content_id}/bug_code/result": {
      "get": {
        "tags": [
          "manage/questions"
        ],
        "summary": "バグコード登録結果取得",
        "description": "バグコード登録結果取得",
        "operationId": "getBugCodeRegistrationResult",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BugCodeRegistrationResultOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PROBLEM_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/questions/{content_id}/copy": {
      "post": {
        "tags": [
          "manage/questions"
        ],
        "summary": "問題コピー作成",
        "description": "問題コピー作成",
        "operationId": "createQuestionCopy",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "コンテンツID",
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PROBLEM_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/questions/{content_id}/english": {
      "patch": {
        "tags": [
          "manage/questions"
        ],
        "summary": "英語問題文更新",
        "description": "英語問題文更新\n- 必要権限: [PROBLEM_EDIT]",
        "operationId": "updateQuestionEnglishText",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionEnglishTextUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PROBLEM_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/questions/{content_id}/event": {
      "get": {
        "tags": [
          "manage/questions"
        ],
        "summary": "イベント用問題詳細取得",
        "description": "イベント向け問題詳細取得\n- 必要権限: [OWN_SESSION_VIEW][ALL_EVENT_AND_SESSION_EDIT]\n- 取得可能データ\n    - is_deleted=False\n    - 自組織作成または`is_shared_between_schools=True`\n    - is_published=True",
        "operationId": "getQuestionForEvent",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "OWN_SESSION_EDIT",
              "ALL_EVENT_AND_SESSION_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/questions/{content_id}/format_check": {
      "get": {
        "tags": [
          "manage/questions"
        ],
        "summary": "フォーマットチェック実行",
        "description": "フォーマットチェック実行\n- 必要権限:[PROBLEM_EDIT]\n- コンテンツ区分がコーディング, 穴埋め, バグ取り問題のみAPIが実行できる\n- フォーマットチェック結果件数を返す(ex. 正答件数/全件数)\n- チェック成功時: \"検証OK\"を返す\n- チェック失敗時: 該当したフォーマットエラー文全てを返す",
        "operationId": "executeFormatCheck",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionFormatCheckResultOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PROBLEM_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/questions/{content_id}/test-cases/": {
      "get": {
        "tags": [
          "manage/questions"
        ],
        "summary": "テストケース一覧取得",
        "description": "問題テストケース一覧取得\n- 必要権限: [PROBLEM_VIEW]\n- content_id（Question）に紐づくテストケースを取得\n- is_sample_case=Trueの場合サンプルケースのみ取得する\n- テストケースのファイルサイズが一定以上大きい場合\n    - stdin/stdoutを省略表示する\n    - is_omitted=Trueにして返却する",
        "operationId": "getQuestionTestCases",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Is Sample Case",
              "type": "boolean",
              "default": false
            },
            "name": "is_sample_case",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Question Test Cases Manage Questions  Content Id  Test Cases  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuestionTestCasesListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PROBLEM_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/questions/{content_id}/test-cases/download": {
      "get": {
        "tags": [
          "manage/questions"
        ],
        "summary": "テストケースダウンロード",
        "description": "テストケースダウンロード\n- 必要権限: [PROBLEM_VIEW]\n- ダウンロードファイル形式: download_type\n    -  `All`: テストケース・サンプルケースの全て\n        - `cases_<ContentID>.zip`\n    -  `Test`: テストケースのみ\n        - `test-cases_<ContentID>.zip`\n    - `Sample`: サンプルケースのみ\n        - `sample-cases_<ContentID>.zip`\n- ダウンロードファイル名:\n    - SampleCase(01~05)\n        - sample01_input.txt\n        - sample01_expected.txt\n    - TestCase(01~10)\n        - test01_input_<TestCaseName>.txt\n        - test01_expected_<TestCaseName>.txt",
        "operationId": "downloadTestCase",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          },
          {
            "description": "ALL/TEST/SAMPLE",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DownloadType"
                }
              ],
              "description": "ALL/TEST/SAMPLE",
              "default": "All"
            },
            "name": "download_type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PROBLEM_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/questions/{content_id}/test-cases/execution": {
      "post": {
        "tags": [
          "manage/questions"
        ],
        "summary": "検証用テストケース実行",
        "description": "問題管理者が問題の検証用のためにテストケースを実行する\n- ジャッジシステムにリクエストを送信\n  - リクエストデータ\n    - pg_lang: リクエストボディ\n    - source_code: リクエストボディ\n    - JudgeType.VERIFICATION(問題検証)\n    - judge_code: QuestionVerificationResult(問題テストケース別検証結果).id\n    - gcs_file_paths: filename(ファイル名), url(ファイルURL)\n    - test_case_id_list\n    - original_case_list: 空のリスト\n- API実行時DB登録データ\n  - QuestionVerificationResult(問題テストケース別検証結果)\n    - question_id\n    - user_id\n    - pg_lang_id\n    - source_code\n    - total_test_case_count\n  - QuestionVerificationCaseResult(問題テストケース別検証結果)\n    - question_verification_result_id(問題検証結果ID)\n    - question_test_case_id(問題テストケースID)\n- 例外処理\n  - プログラミング言語が存在しない場合DataDoesNotExist\n  - コンテンツまたは問題が存在しない場合NotFound\n  - テストケース(サンプルケース含む)が存在しない場合NotFound",
        "operationId": "executeQuestionTestCase",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionTestCaseExecuteIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionTestCaseExecuteOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "存在しないデータを参照している: DATA_DOES_NOT_EXIST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "DATA_DOES_NOT_EXIST": {
                    "value": {
                      "errorCode": "DATA_DOES_NOT_EXIST",
                      "message": "指定されたIDのデータは存在しません",
                      "detail": "Data with the specified ID does not exist"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PROBLEM_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/questions/{content_id}/test-cases/{question_verification_result_id}/execution-result": {
      "get": {
        "tags": [
          "manage/questions"
        ],
        "summary": "検証用テストケース実行結果取得",
        "description": "問題管理者が問題の検証用のために実行した、テストケース実行結果を取得する\n- 必要権限: [PROBLEM_VIEW]\n- 並び順: order昇順\n- 例外処理\n  - 問題が存在しない場合、NotFound\n  - 問題検証結果が存在しない場合、NotFound\n  - 問題テストケース別検証結果が存在しない場合、NotFound\n- 処理手順\n    - 該当QuestionVerificationResultを取得する\n    - 最後のポーリングの場合、かつ、全サンプルケースと全テストケースが取得できない場合、            QuestionVerificationResultのquestion_answer_resultをSERVER_ERRORに更新する\n    - 全部のケースが取得できた場合、結果を返す",
        "operationId": "getQuestionTestCaseExecutionResults",
        "parameters": [
          {
            "description": "コンテンツID",
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "コンテンツID"
            },
            "name": "content_id",
            "in": "path"
          },
          {
            "description": "問題検証結果ID",
            "required": true,
            "schema": {
              "title": "Question Verification Result Id",
              "minimum": 1.0,
              "type": "integer",
              "description": "問題検証結果ID"
            },
            "name": "question_verification_result_id",
            "in": "path"
          },
          {
            "description": "最後のクエリかどうか",
            "required": false,
            "schema": {
              "title": "Is Last Query",
              "type": "boolean",
              "description": "最後のクエリかどうか",
              "default": false
            },
            "name": "is_last_query",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionVerificationResultOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PROBLEM_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/questions/{content_id}/verification": {
      "get": {
        "tags": [
          "manage/questions"
        ],
        "summary": "問題検証履歴一覧取得",
        "description": "問題検証履歴一覧取得\n- 必要権限:[PROBLEM_VIEW]\n- other=True:他管理者の検証履歴を取得する",
        "operationId": "getQuestionVerificationList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Content Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "content_id",
            "in": "path"
          },
          {
            "description": "他管理者の検証履歴",
            "required": false,
            "schema": {
              "title": "Other",
              "type": "boolean",
              "description": "他管理者の検証履歴",
              "default": false
            },
            "name": "other",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Question Verification List Manage Questions  Content Id  Verification Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuestionVerificationListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "PROBLEM_VIEW"
            ]
          }
        ]
      }
    },
    "/manage/occupations": {
      "get": {
        "tags": [
          "manage/occupations"
        ],
        "summary": "職種一覧取得",
        "description": "職種一覧を取得\n- 必要権限: [ASSETS_EDIT]\n- 並び順: id降順",
        "operationId": "getOccupationList",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Occupation List Manage Occupations Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OccupationListOut"
                  }
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "manage/occupations"
        ],
        "summary": "職種作成",
        "description": "職種を作成\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "createOccupation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OccupationCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__manage__occupations__occupation_detail_out__OccupationDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    },
    "/manage/occupations/{occupation_id}": {
      "get": {
        "tags": [
          "manage/occupations"
        ],
        "summary": "職種詳細取得",
        "description": "職種詳細を取得\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "getOccupation",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Occupation Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "occupation_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__manage__occupations__occupation_detail_out__OccupationDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "manage/occupations"
        ],
        "summary": "職種削除",
        "description": "職種を削除\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "deleteOccupation",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Occupation Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "occupation_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "manage/occupations"
        ],
        "summary": "職種更新",
        "description": "職種を更新\n- 必要権限: [ASSETS_EDIT]",
        "operationId": "updateOccupation",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Occupation Id",
              "minimum": 1.0,
              "type": "integer"
            },
            "name": "occupation_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OccupationUpdateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__manage__occupations__occupation_detail_out__OccupationDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "バリデーションエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "指定したIDのデータが存在しない: NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "NOT_FOUND": {
                    "value": {
                      "errorCode": "NOT_FOUND",
                      "message": "データが存在しません",
                      "detail": "not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CustomOAuth2PasswordBearer": [
              "ASSETS_EDIT"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ALLEventUserListOut": {
        "title": "ALLEventUserListOut",
        "required": [
          "userId",
          "fullName",
          "username",
          "extraInfo",
          "eventName"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "title": "Userid",
            "minimum": 1.0,
            "type": "integer",
            "description": "ユーザーID"
          },
          "fullName": {
            "title": "Fullname",
            "type": "string",
            "description": "本名"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string",
            "description": "ユーザー名"
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足情報"
          },
          "eventName": {
            "title": "Eventname",
            "maxLength": 100,
            "type": "string",
            "description": "イベント名"
          }
        }
      },
      "AdvertisementBannerCreateIn": {
        "title": "AdvertisementBannerCreateIn",
        "required": [
          "image1336x280",
          "image2120x600",
          "image3600x120",
          "image41250x170"
        ],
        "type": "object",
        "properties": {
          "image1336x280": {
            "title": "Image1336X280",
            "type": "string",
            "description": "画像1(336x280)ファイルURL"
          },
          "image2120x600": {
            "title": "Image2120X600",
            "type": "string",
            "description": "画像2(120x600)ファイルURL"
          },
          "image3600x120": {
            "title": "Image3600X120",
            "type": "string",
            "description": "画像3(600x120)ファイルURL"
          },
          "image41250x170": {
            "title": "Image41250X170",
            "type": "string",
            "description": "画像4(1250x170)ファイルURL"
          }
        }
      },
      "AdvertisementBannerDetailOut": {
        "title": "AdvertisementBannerDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "image1336x280",
          "image2120x600",
          "image3600x120",
          "image41250x170"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "image1336x280": {
            "title": "Image1336X280",
            "type": "string",
            "description": "画像1(336x280)ファイルURL"
          },
          "image2120x600": {
            "title": "Image2120X600",
            "type": "string",
            "description": "画像2(120x600)ファイルURL"
          },
          "image3600x120": {
            "title": "Image3600X120",
            "type": "string",
            "description": "画像3(600x120)ファイルURL"
          },
          "image41250x170": {
            "title": "Image41250X170",
            "type": "string",
            "description": "画像4(1250x170)ファイルURL"
          }
        }
      },
      "AdvertisementCreateIn": {
        "title": "AdvertisementCreateIn",
        "required": [
          "name",
          "url"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 200,
            "type": "string",
            "description": "広告名(管理用)"
          },
          "url": {
            "title": "Url",
            "maxLength": 8196,
            "type": "string",
            "description": "URL"
          }
        }
      },
      "AdvertisementDetailOut": {
        "title": "AdvertisementDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "title",
          "publicationStartAt",
          "publicationEndAt",
          "url",
          "image1336x280",
          "image2120x600",
          "image3600x120",
          "image41250x170",
          "isPublished",
          "totalClickCount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "title": "Title",
            "maxLength": 200,
            "type": "string",
            "description": "広告名(管理用)"
          },
          "publicationStartAt": {
            "title": "Publicationstartat",
            "type": "string",
            "description": "掲載開始日時",
            "format": "date-time"
          },
          "publicationEndAt": {
            "title": "Publicationendat",
            "type": "string",
            "description": "掲載終了日時",
            "format": "date-time"
          },
          "url": {
            "title": "Url",
            "maxLength": 8196,
            "type": "string",
            "description": "URL"
          },
          "image1336x280": {
            "title": "Image1336X280",
            "type": "string",
            "description": "画像1 (336x280)"
          },
          "image2120x600": {
            "title": "Image2120X600",
            "type": "string",
            "description": "画像2 (120x600)"
          },
          "image3600x120": {
            "title": "Image3600X120",
            "type": "string",
            "description": "画像3 (600x120)"
          },
          "image41250x170": {
            "title": "Image41250X170",
            "type": "string",
            "description": "画像4 (1250x170)"
          },
          "isPublished": {
            "title": "Ispublished",
            "type": "boolean",
            "description": "公開フラグ"
          },
          "totalClickCount": {
            "title": "Totalclickcount",
            "type": "integer",
            "description": "総クリック数（総閲覧数）"
          }
        }
      },
      "AdvertisementUpdateIn": {
        "title": "AdvertisementUpdateIn",
        "required": [
          "name",
          "url",
          "start",
          "end",
          "isPublished"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 200,
            "type": "string",
            "description": "広告名(管理用)"
          },
          "url": {
            "title": "Url",
            "maxLength": 8196,
            "type": "string",
            "description": "URL"
          },
          "start": {
            "title": "Start",
            "type": "string",
            "description": "掲載開始日時",
            "format": "date-time"
          },
          "end": {
            "title": "End",
            "type": "string",
            "description": "掲載終了日時",
            "format": "date-time"
          },
          "isPublished": {
            "title": "Ispublished",
            "type": "boolean",
            "description": "公開フラグ"
          }
        }
      },
      "AllJobsListItem": {
        "title": "AllJobsListItem",
        "required": [
          "jobId",
          "companyId",
          "companyName",
          "occupation",
          "title",
          "requiredPgLangs",
          "updatedAt",
          "createdAt",
          "jobBrowsingCount",
          "favoriteCount",
          "scoutedCount",
          "inSelectionCount",
          "offeredCount",
          "isPublished",
          "companyJobOrder"
        ],
        "type": "object",
        "properties": {
          "jobId": {
            "title": "Jobid",
            "minimum": 1.0,
            "type": "integer",
            "description": "求人ID(COMMON)"
          },
          "companyId": {
            "title": "Companyid",
            "minimum": 1.0,
            "type": "integer",
            "description": "企業ID(管理番号用)(STAFF)"
          },
          "companyName": {
            "title": "Companyname",
            "type": "string",
            "description": "企業名(COMMON)"
          },
          "occupation": {
            "title": "Occupation",
            "type": "string",
            "description": "職種名(COMMON)"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "求人名(COMMON)"
          },
          "workLocation": {
            "title": "Worklocation",
            "type": "string",
            "description": "勤務場所(HR)",
            "default": ""
          },
          "requiredSkillLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SkillLevel"
              }
            ],
            "description": "必要レベル(HR)",
            "nullable": true
          },
          "requiredPgLangs": {
            "title": "Requiredpglangs",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "必要言語(HR)"
          },
          "employmentStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmploymentStatus"
              }
            ],
            "description": "給与形態(HR)",
            "nullable": true
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "description": "更新日(HR)",
            "format": "date"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日(STAFF)",
            "format": "date"
          },
          "target": {
            "title": "Target",
            "type": "string",
            "description": "応募条件(HR)",
            "default": ""
          },
          "recruitmentNumbers": {
            "title": "Recruitmentnumbers",
            "type": "integer",
            "description": "募集人数(STAFF)",
            "nullable": true
          },
          "jobBrowsingCount": {
            "title": "Jobbrowsingcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "あしあと(STAFF)"
          },
          "favoriteCount": {
            "title": "Favoritecount",
            "minimum": 0.0,
            "type": "integer",
            "description": "お気に入り数(COMMON)"
          },
          "scoutedCount": {
            "title": "Scoutedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "紹介ユーザー数(HR)"
          },
          "inSelectionCount": {
            "title": "Inselectioncount",
            "minimum": 0.0,
            "type": "integer",
            "description": "選考中(HR)"
          },
          "offeredCount": {
            "title": "Offeredcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "内定数(HR)"
          },
          "isPublished": {
            "title": "Ispublished",
            "type": "boolean",
            "description": "公開済みか(STAFF)"
          },
          "companyJobOrder": {
            "title": "Companyjoborder",
            "minimum": 0.0,
            "type": "integer",
            "description": "企業求人順番(管理番号用)(STAFF)"
          }
        }
      },
      "AllJobsListOut": {
        "title": "AllJobsListOut",
        "required": [
          "jobList",
          "totalCount",
          "hasPrevious",
          "hasNext"
        ],
        "type": "object",
        "properties": {
          "jobList": {
            "title": "Joblist",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllJobsListItem"
            },
            "description": "求人リスト"
          },
          "totalCount": {
            "title": "Totalcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "求人総数"
          },
          "hasPrevious": {
            "title": "Hasprevious",
            "type": "boolean",
            "description": "前ページが存在するか"
          },
          "hasNext": {
            "title": "Hasnext",
            "type": "boolean",
            "description": "次ページが存在するか"
          }
        }
      },
      "AnnualIncomeChoicesOut": {
        "title": "AnnualIncomeChoicesOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 50,
            "type": "string"
          }
        }
      },
      "ApiError": {
        "title": "ApiError",
        "required": [
          "errorCode",
          "message",
          "detail"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "title": "Errorcode",
            "type": "string"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          }
        }
      },
      "AuthTokenOut": {
        "title": "AuthTokenOut",
        "required": [
          "access_token",
          "token_type",
          "expires_in",
          "refresh_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "title": "Access Token",
            "type": "string",
            "example": "xxx.xxx.xxx"
          },
          "token_type": {
            "title": "Token Type",
            "enum": [
              "Bearer"
            ],
            "type": "string"
          },
          "expires_in": {
            "title": "Expires In",
            "type": "string",
            "format": "date-time"
          },
          "refresh_token": {
            "title": "Refresh Token",
            "type": "string",
            "example": "xxx.xxx.xxx"
          }
        }
      },
      "BannerJobListOut": {
        "title": "BannerJobListOut",
        "required": [
          "id",
          "title",
          "jobImage",
          "companyName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "求人ID"
          },
          "title": {
            "title": "Title",
            "maxLength": 63,
            "type": "string",
            "description": "求人タイトル"
          },
          "jobImage": {
            "title": "Jobimage",
            "type": "string",
            "description": "求人トップ画像"
          },
          "companyName": {
            "title": "Companyname",
            "type": "string",
            "description": "求人掲載企業名(alt用)"
          }
        }
      },
      "BugCodeOut": {
        "title": "BugCodeOut",
        "type": "object",
        "properties": {
          "pgLangId": {
            "title": "Pglangid",
            "type": "integer",
            "description": "pg言語ID",
            "nullable": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "言語名",
            "nullable": true
          },
          "monacoName": {
            "title": "Monaconame",
            "type": "string",
            "description": "モナコ名",
            "nullable": true
          },
          "sourceCode": {
            "title": "Sourcecode",
            "type": "string",
            "description": "ソースコード",
            "nullable": true
          }
        }
      },
      "BugCodeRegisterIn": {
        "title": "BugCodeRegisterIn",
        "required": [
          "pgLangId",
          "sourceCode"
        ],
        "type": "object",
        "properties": {
          "pgLangId": {
            "title": "Pglangid",
            "minimum": 1.0,
            "type": "integer"
          },
          "sourceCode": {
            "title": "Sourcecode",
            "type": "string"
          }
        }
      },
      "BugCodeRegistrationResultOut": {
        "title": "BugCodeRegistrationResultOut",
        "required": [
          "sampleCaseTitle",
          "sampleCaseStdin",
          "sampleCaseStdout"
        ],
        "type": "object",
        "properties": {
          "judgeStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JudgeStatus"
              }
            ],
            "description": "1:PASSED, 2:WRONG ANSWER, 3:COMPILE ERROR, 4:RUNTIME ERROR, 5:TIME LIMIT ERROR, 6:MEMORY LIMIT ERROR, 7:SERVER ERROR, 8:WAITING FOR JUDGING, 9:TEST CASE ERROR",
            "nullable": true
          },
          "judgeStatusLabel": {
            "title": "Judgestatuslabel",
            "type": "string",
            "nullable": true
          },
          "sampleCaseTitle": {
            "title": "Samplecasetitle",
            "type": "string",
            "description": "サンプルケースタイトル"
          },
          "sampleCaseStdin": {
            "title": "Samplecasestdin",
            "type": "string",
            "description": "入力"
          },
          "sampleCaseStdout": {
            "title": "Samplecasestdout",
            "type": "string",
            "description": "出力結果"
          },
          "errorOutput": {
            "title": "Erroroutput",
            "type": "string",
            "description": "エラー出力",
            "nullable": true
          },
          "pgLangId": {
            "title": "Pglangid",
            "minimum": 1.0,
            "type": "integer",
            "nullable": true
          },
          "sourceCode": {
            "title": "Sourcecode",
            "type": "string",
            "nullable": true
          }
        }
      },
      "CertificateExamTimerOut": {
        "title": "CertificateExamTimerOut",
        "required": [
          "sessionId",
          "userId",
          "userStartAt",
          "timeLimit"
        ],
        "type": "object",
        "properties": {
          "sessionId": {
            "title": "Sessionid",
            "minimum": 1.0,
            "type": "integer",
            "description": "セッションID"
          },
          "userId": {
            "title": "Userid",
            "minimum": 1.0,
            "type": "integer",
            "description": "ユーザーID"
          },
          "userStartAt": {
            "title": "Userstartat",
            "type": "string",
            "description": "タイマー開始時間(JST)",
            "format": "date-time"
          },
          "userEndAt": {
            "title": "Userendat",
            "type": "string",
            "description": "タイマー終了時間(JST)",
            "format": "date-time",
            "nullable": true
          },
          "timeLimit": {
            "title": "Timelimit",
            "type": "integer",
            "description": "検定試験時間(分)"
          }
        }
      },
      "ChatFileDownloadIn": {
        "title": "ChatFileDownloadIn",
        "required": [
          "chatRoomId",
          "privateUrl"
        ],
        "type": "object",
        "properties": {
          "chatRoomId": {
            "title": "Chatroomid",
            "minimum": 1.0,
            "type": "integer"
          },
          "privateUrl": {
            "title": "Privateurl",
            "type": "string"
          }
        }
      },
      "ChatRoomType": {
        "title": "ChatRoomType",
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "チャットルームタイプ"
      },
      "ChatTemplateCreateIn": {
        "title": "ChatTemplateCreateIn",
        "required": [
          "title",
          "message"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "maxLength": 64,
            "type": "string"
          },
          "message": {
            "title": "Message",
            "type": "string"
          }
        }
      },
      "ChatTemplateDetailOut": {
        "title": "ChatTemplateDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "title",
          "message"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "message": {
            "title": "Message",
            "type": "string"
          }
        }
      },
      "ChatTemplateUpdateIn": {
        "title": "ChatTemplateUpdateIn",
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "maxLength": 64,
            "type": "string",
            "nullable": true
          },
          "message": {
            "title": "Message",
            "type": "string",
            "nullable": true
          }
        }
      },
      "ChatType": {
        "title": "ChatType",
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "description": "チャットタイプ"
      },
      "ChatUnReadNumberOut": {
        "title": "ChatUnReadNumberOut",
        "required": [
          "unreadNumber"
        ],
        "type": "object",
        "properties": {
          "unreadNumber": {
            "title": "Unreadnumber",
            "type": "integer"
          }
        }
      },
      "CheatCheckType": {
        "title": "CheatCheckType",
        "enum": [
          "for_time",
          "for_match",
          "for_similar"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "CheckAgreedTermsOut": {
        "title": "CheckAgreedTermsOut",
        "required": [
          "isAgreedLatestTerms",
          "termType"
        ],
        "type": "object",
        "properties": {
          "isAgreedLatestTerms": {
            "title": "Isagreedlatestterms",
            "type": "boolean",
            "description": "最新の規約に同意しているか"
          },
          "termType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TermType"
              }
            ],
            "description": "同意していないterm_type",
            "nullable": true
          }
        }
      },
      "CodeSubmissionHistoryListOut": {
        "title": "CodeSubmissionHistoryListOut",
        "required": [
          "id",
          "createdAt",
          "isSampleCase",
          "pgLang",
          "isPassed",
          "sourceCode",
          "testCaseResults",
          "originalCaseResults"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "問題テスト実行結果ID"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "解答日時",
            "format": "date-time"
          },
          "isSampleCase": {
            "title": "Issamplecase",
            "type": "boolean",
            "description": "サンプルケースかどうか"
          },
          "pgLang": {
            "title": "Pglang",
            "allOf": [
              {
                "$ref": "#/components/schemas/PgLangInfo"
              }
            ],
            "description": "プログラミング言語"
          },
          "isPassed": {
            "title": "Ispassed",
            "type": "boolean",
            "description": "合否"
          },
          "sourceCode": {
            "title": "Sourcecode",
            "type": "string",
            "description": "ソースコード"
          },
          "testCaseResults": {
            "title": "Testcaseresults",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestCaseResultHistory"
            },
            "description": "テストケース別実行結果履歴"
          },
          "originalCaseResults": {
            "title": "Originalcaseresults",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OriginalCaseResultHistory"
            },
            "description": "オリジナルサンプルケース別実行結果履歴"
          }
        }
      },
      "CodingQuestionResultOut": {
        "title": "CodingQuestionResultOut",
        "required": [
          "questionTestResultId",
          "elapsedTimeToPass",
          "elapsedTimeForExecution",
          "passedCount",
          "totalCount",
          "score",
          "maxScore",
          "submissionCountUntilPassed",
          "compileErrorCount",
          "averageScore",
          "passedRate",
          "sourceCode",
          "pgLang"
        ],
        "type": "object",
        "properties": {
          "questionTestResultId": {
            "title": "Questiontestresultid",
            "type": "integer",
            "description": "id"
          },
          "elapsedTimeToPass": {
            "title": "Elapsedtimetopass",
            "minimum": 0.0,
            "type": "number",
            "description": "合格まで経過時間(hh:mm:ss)"
          },
          "elapsedTimeForExecution": {
            "title": "Elapsedtimeforexecution",
            "minimum": 0.0,
            "type": "number",
            "description": "合計実行時間(実行速度)"
          },
          "passedCount": {
            "title": "Passedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "合格数"
          },
          "totalCount": {
            "title": "Totalcount",
            "minimum": 1.0,
            "type": "integer",
            "description": "テストケース数"
          },
          "score": {
            "title": "Score",
            "minimum": 0.0,
            "type": "number",
            "description": "取得したスコア"
          },
          "maxScore": {
            "title": "Maxscore",
            "minimum": 0.0,
            "type": "number",
            "description": "最大スコア"
          },
          "submissionCountUntilPassed": {
            "title": "Submissioncountuntilpassed",
            "minimum": 0.0,
            "type": "integer",
            "description": "正解までの提出回数"
          },
          "compileErrorCount": {
            "title": "Compileerrorcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "エラー回数"
          },
          "averageScore": {
            "title": "Averagescore",
            "minimum": 0.0,
            "type": "number",
            "description": "平均スコア(全ユーザーが取得したスコアの平均)"
          },
          "passedRate": {
            "title": "Passedrate",
            "minimum": 0.0,
            "type": "number",
            "description": "正解率(全ユーザーの合格率の平均)"
          },
          "sourceCode": {
            "title": "Sourcecode",
            "type": "string",
            "description": "ソースコード"
          },
          "pgLang": {
            "title": "Pglang",
            "type": "string",
            "description": "プログラミング言語"
          },
          "testCaseResults": {
            "title": "Testcaseresults",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__common__users__code_check_out__TestCaseResult"
            },
            "description": "テストケース結果",
            "default": []
          }
        },
        "description": "QuestionTestResultのうち、is_valid=Trueのもの"
      },
      "CommonContactsIn": {
        "title": "CommonContactsIn",
        "required": [
          "body",
          "name",
          "email",
          "title"
        ],
        "type": "object",
        "properties": {
          "body": {
            "title": "Body",
            "type": "string",
            "description": "問い合わせ本文"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string",
            "description": "本名",
            "nullable": true
          },
          "email": {
            "title": "Email",
            "maxLength": 254,
            "type": "string",
            "description": "メールアドレス",
            "nullable": true
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string",
            "description": "件名",
            "nullable": true
          }
        }
      },
      "CompanyChoicesOut": {
        "title": "CompanyChoicesOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "CompanyConditionOut": {
        "title": "CompanyConditionOut",
        "required": [
          "canScout",
          "scoutLimit",
          "sessionJoinLimit",
          "skillCheckAccountLimit",
          "sessionLimit",
          "skillCheckAccountPrefix",
          "schoolEventLimit",
          "companyEventLimit"
        ],
        "type": "object",
        "properties": {
          "canScout": {
            "title": "Canscout",
            "type": "boolean",
            "description": "スカウト可能か"
          },
          "scoutLimit": {
            "title": "Scoutlimit",
            "minimum": 0.0,
            "type": "integer",
            "description": "スカウト上限"
          },
          "sessionJoinLimit": {
            "title": "Sessionjoinlimit",
            "minimum": 0.0,
            "type": "integer",
            "description": "セッション参加可能数"
          },
          "skillCheckAccountLimit": {
            "title": "Skillcheckaccountlimit",
            "minimum": 0.0,
            "type": "integer",
            "description": "発行可能スキルチェックアカウント数"
          },
          "sessionLimit": {
            "title": "Sessionlimit",
            "minimum": 0.0,
            "type": "integer",
            "description": "セッション開催可能回数"
          },
          "skillCheckAccountPrefix": {
            "title": "Skillcheckaccountprefix",
            "maxLength": 50,
            "type": "string",
            "description": "スキルチェックアカウント接頭辞"
          },
          "schoolEventLimit": {
            "title": "Schooleventlimit",
            "minimum": 0.0,
            "type": "integer",
            "description": "学校イベント協賛可能回数"
          },
          "companyEventLimit": {
            "title": "Companyeventlimit",
            "minimum": 0.0,
            "type": "integer",
            "description": "企業公開イベント開催可能回数"
          }
        }
      },
      "CompanyConditionUpdateIn": {
        "title": "CompanyConditionUpdateIn",
        "type": "object",
        "properties": {
          "canScout": {
            "title": "Canscout",
            "type": "boolean",
            "description": "スカウト可能か",
            "nullable": true
          },
          "scoutLimit": {
            "title": "Scoutlimit",
            "minimum": 0.0,
            "type": "integer",
            "description": "スカウト上限",
            "nullable": true
          },
          "sessionJoinLimit": {
            "title": "Sessionjoinlimit",
            "minimum": 0.0,
            "type": "integer",
            "description": "セッション参加可能数",
            "nullable": true
          },
          "skillCheckAccountLimit": {
            "title": "Skillcheckaccountlimit",
            "minimum": 0.0,
            "type": "integer",
            "description": "発行可能スキルチェックアカウント数",
            "nullable": true
          },
          "sessionLimit": {
            "title": "Sessionlimit",
            "minimum": 0.0,
            "type": "integer",
            "description": "セッション開催可能回数",
            "nullable": true
          },
          "skillCheckAccountPrefix": {
            "title": "Skillcheckaccountprefix",
            "maxLength": 50,
            "type": "string",
            "description": "スキルチェックアカウント接頭辞",
            "nullable": true
          },
          "schoolEventLimit": {
            "title": "Schooleventlimit",
            "minimum": 0.0,
            "type": "integer",
            "description": "学校イベント協賛可能回数",
            "nullable": true
          },
          "companyEventLimit": {
            "title": "Companyeventlimit",
            "minimum": 0.0,
            "type": "integer",
            "description": "企業公開イベント開催可能回数",
            "nullable": true
          }
        }
      },
      "CompanyCreateIn": {
        "title": "CompanyCreateIn",
        "required": [
          "name",
          "email",
          "scoutPlanStatus",
          "skillEvaluationPlanStatus",
          "recruitPlanStatus",
          "eventPlanStatus",
          "companyIndustry"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          },
          "formalName": {
            "title": "Formalname",
            "maxLength": 100,
            "type": "string",
            "default": ""
          },
          "logo": {
            "title": "Logo",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "ファイルアップロードAPIで取得(dir:company)",
            "default": ""
          },
          "url": {
            "title": "Url",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "HPのURL",
            "default": ""
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "scoutPlanStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyPlanStatus"
              }
            ],
            "description": "1:未加入, 2:トライアル, 3:本申込"
          },
          "skillEvaluationPlanStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyPlanStatus"
              }
            ],
            "description": "1:未加入, 2:トライアル, 3:本申込"
          },
          "recruitPlanStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyPlanStatusNoTrial"
              }
            ],
            "description": "1:未加入, 3:本申込"
          },
          "eventPlanStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyPlanStatusNoTrial"
              }
            ],
            "description": "1:未加入, 3:本申込"
          },
          "scoutPlanExpiresDate": {
            "title": "Scoutplanexpiresdate",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "skillEvaluationPlanExpiresDate": {
            "title": "Skillevaluationplanexpiresdate",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "recruitPlanExpiresDate": {
            "title": "Recruitplanexpiresdate",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "eventPlanExpiresDate": {
            "title": "Eventplanexpiresdate",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "companyIndustry": {
            "title": "Companyindustry",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyIndustryCreateIn"
            }
          }
        }
      },
      "CompanyDetailConditionOut": {
        "title": "CompanyDetailConditionOut",
        "required": [
          "canScout",
          "scoutLimit",
          "sessionJoinLimit",
          "skillCheckAccountLimit",
          "sessionLimit",
          "skillCheckAccountPrefix",
          "schoolEventLimit",
          "companyEventLimit",
          "agreedScoutCount",
          "totalScoutCount",
          "sentInterestCount",
          "viewPortfolioCount",
          "createdJobCount",
          "appliedJobCount",
          "favoriteJobCount",
          "viewedJobCount",
          "createdQuestionCount"
        ],
        "type": "object",
        "properties": {
          "canScout": {
            "title": "Canscout",
            "type": "boolean",
            "description": "スカウト可能か"
          },
          "scoutLimit": {
            "title": "Scoutlimit",
            "minimum": 0.0,
            "type": "integer",
            "description": "スカウト上限"
          },
          "sessionJoinLimit": {
            "title": "Sessionjoinlimit",
            "minimum": 0.0,
            "type": "integer",
            "description": "セッション参加可能数"
          },
          "skillCheckAccountLimit": {
            "title": "Skillcheckaccountlimit",
            "minimum": 0.0,
            "type": "integer",
            "description": "発行可能スキルチェックアカウント数"
          },
          "sessionLimit": {
            "title": "Sessionlimit",
            "minimum": 0.0,
            "type": "integer",
            "description": "セッション開催可能回数"
          },
          "skillCheckAccountPrefix": {
            "title": "Skillcheckaccountprefix",
            "maxLength": 50,
            "type": "string",
            "description": "スキルチェックアカウント接頭辞"
          },
          "schoolEventLimit": {
            "title": "Schooleventlimit",
            "minimum": 0.0,
            "type": "integer",
            "description": "学校イベント協賛可能回数"
          },
          "companyEventLimit": {
            "title": "Companyeventlimit",
            "minimum": 0.0,
            "type": "integer",
            "description": "企業公開イベント開催可能回数"
          },
          "agreedScoutCount": {
            "title": "Agreedscoutcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "スカウト承諾数"
          },
          "totalScoutCount": {
            "title": "Totalscoutcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "スカウト総数"
          },
          "sentInterestCount": {
            "title": "Sentinterestcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "気になる送信数"
          },
          "viewPortfolioCount": {
            "title": "Viewportfoliocount",
            "minimum": 0.0,
            "type": "integer",
            "description": "ユーザー閲覧数"
          },
          "createdJobCount": {
            "title": "Createdjobcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "求人作成数"
          },
          "appliedJobCount": {
            "title": "Appliedjobcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "求人応募数"
          },
          "favoriteJobCount": {
            "title": "Favoritejobcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "求人お気に入り数"
          },
          "viewedJobCount": {
            "title": "Viewedjobcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "求人被閲覧数"
          },
          "createdQuestionCount": {
            "title": "Createdquestioncount",
            "minimum": 0.0,
            "type": "integer",
            "description": "問題作成数"
          }
        }
      },
      "CompanyDetailOut": {
        "title": "CompanyDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "createdBy",
          "updatedBy",
          "name",
          "formalName",
          "logo",
          "image",
          "url",
          "email",
          "lastLogin",
          "description",
          "businessDetails",
          "address",
          "establishmentDate",
          "capitalStock",
          "numOfEmployees",
          "averageAge",
          "scoutPlanStatus",
          "skillEvaluationPlanStatus",
          "recruitPlanStatus",
          "eventPlanStatus",
          "scoutPlanExpiresDate",
          "skillEvaluationPlanExpiresDate",
          "recruitPlanExpiresDate",
          "eventPlanExpiresDate",
          "companyConditions",
          "companyIndustries"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 180,
            "type": "string"
          },
          "updatedBy": {
            "title": "Updatedby",
            "maxLength": 180,
            "type": "string"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          },
          "formalName": {
            "title": "Formalname",
            "maxLength": 100,
            "type": "string"
          },
          "logo": {
            "title": "Logo",
            "type": "string"
          },
          "image": {
            "title": "Image",
            "type": "string"
          },
          "url": {
            "title": "Url",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string"
          },
          "lastLogin": {
            "title": "Lastlogin",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "企業紹介文"
          },
          "businessDetails": {
            "title": "Businessdetails",
            "type": "string",
            "description": "事業内容"
          },
          "address": {
            "title": "Address",
            "maxLength": 255,
            "type": "string",
            "description": "企業住所"
          },
          "establishmentDate": {
            "title": "Establishmentdate",
            "maxLength": 125,
            "type": "string",
            "description": "会社設立日"
          },
          "capitalStock": {
            "title": "Capitalstock",
            "maxLength": 255,
            "type": "string",
            "description": "会社資本金"
          },
          "numOfEmployees": {
            "title": "Numofemployees",
            "maxLength": 255,
            "type": "string",
            "description": "従業員数"
          },
          "averageAge": {
            "title": "Averageage",
            "maxLength": 100,
            "type": "string",
            "description": "従業員平均年齢"
          },
          "scoutPlanStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyPlanStatus"
              }
            ],
            "description": "1:未加入, 2:トライアル, 3:本申込"
          },
          "skillEvaluationPlanStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyPlanStatus"
              }
            ],
            "description": "1:未加入, 2:トライアル, 3:本申込"
          },
          "recruitPlanStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyPlanStatusNoTrial"
              }
            ],
            "description": "1:未加入, 3:本申込"
          },
          "eventPlanStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyPlanStatusNoTrial"
              }
            ],
            "description": "1:未加入, 3:本申込"
          },
          "scoutPlanExpiresDate": {
            "title": "Scoutplanexpiresdate",
            "type": "string",
            "description": "スカウトプラン期限",
            "format": "date",
            "nullable": true
          },
          "skillEvaluationPlanExpiresDate": {
            "title": "Skillevaluationplanexpiresdate",
            "type": "string",
            "description": "スキル評価プラン期限",
            "format": "date",
            "nullable": true
          },
          "recruitPlanExpiresDate": {
            "title": "Recruitplanexpiresdate",
            "type": "string",
            "description": "人材紹介プラン期限",
            "format": "date",
            "nullable": true
          },
          "eventPlanExpiresDate": {
            "title": "Eventplanexpiresdate",
            "type": "string",
            "description": "イベントプラン期限",
            "format": "date",
            "nullable": true
          },
          "companyConditions": {
            "$ref": "#/components/schemas/CompanyDetailConditionOut"
          },
          "companyIndustries": {
            "title": "Companyindustries",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyIndustryOut"
            }
          }
        }
      },
      "CompanyDocumentCreateIn": {
        "title": "CompanyDocumentCreateIn",
        "required": [
          "title",
          "companyDocumentType",
          "file"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "default": ""
          },
          "companyDocumentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyDocumentType"
              }
            ],
            "description": "ドキュメント種別"
          },
          "file": {
            "title": "File",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "動画/PDF"
          }
        }
      },
      "CompanyDocumentDetailOut": {
        "title": "CompanyDocumentDetailOut",
        "required": [
          "createdAt",
          "updatedAt",
          "id",
          "title",
          "description",
          "companyDocumentType",
          "file",
          "companyId"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "companyDocumentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyDocumentType"
              }
            ],
            "description": "ドキュメント種別"
          },
          "file": {
            "title": "File",
            "type": "string",
            "description": "動画/PDF"
          },
          "companyId": {
            "title": "Companyid",
            "minimum": 1.0,
            "type": "integer"
          }
        }
      },
      "CompanyDocumentListOut": {
        "title": "CompanyDocumentListOut",
        "required": [
          "id",
          "title",
          "companyDocumentType",
          "companyName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string"
          },
          "companyDocumentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyDocumentType"
              }
            ],
            "description": "ドキュメント種別"
          },
          "companyName": {
            "title": "Companyname",
            "type": "string",
            "description": "組織名"
          }
        }
      },
      "CompanyDocumentType": {
        "title": "CompanyDocumentType",
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "企業情報資料タイプ"
      },
      "CompanyDocumentTypeChoicesOut": {
        "title": "CompanyDocumentTypeChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "CompanyDocumentUpdateIn": {
        "title": "CompanyDocumentUpdateIn",
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "description": {
            "title": "Description",
            "type": "string",
            "nullable": true
          },
          "companyDocumentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyDocumentType"
              }
            ],
            "description": "ドキュメント種別",
            "nullable": true
          },
          "file": {
            "title": "File",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "動画/PDF",
            "nullable": true
          }
        }
      },
      "CompanyIndustryCreateIn": {
        "title": "CompanyIndustryCreateIn",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "業種ID"
          }
        }
      },
      "CompanyIndustryOut": {
        "title": "CompanyIndustryOut",
        "required": [
          "industryGroupId",
          "industryId"
        ],
        "type": "object",
        "properties": {
          "industryGroupId": {
            "title": "Industrygroupid",
            "minimum": 1.0,
            "type": "integer",
            "description": "業種グループID"
          },
          "industryId": {
            "title": "Industryid",
            "minimum": 1.0,
            "type": "integer",
            "description": "業種ID"
          }
        }
      },
      "CompanyIndustryUpdateIn": {
        "title": "CompanyIndustryUpdateIn",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "業種ID"
          }
        }
      },
      "CompanyListDetailOut": {
        "title": "CompanyListDetailOut",
        "required": [
          "id",
          "companyId",
          "createdAt",
          "updatedAt",
          "name",
          "address",
          "establishmentDate",
          "url",
          "isPublished",
          "scoutPlanStatus",
          "skillEvaluationPlanStatus",
          "recruitPlanStatus",
          "eventPlanStatus",
          "agreedScoutCount",
          "totalScoutCount",
          "recruitCount",
          "lastLogin"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "companyId": {
            "title": "Companyid",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          },
          "address": {
            "title": "Address",
            "type": "string",
            "description": "住所"
          },
          "establishmentDate": {
            "title": "Establishmentdate",
            "type": "string",
            "description": "設立日"
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "ホームページURL"
          },
          "isPublished": {
            "title": "Ispublished",
            "type": "boolean",
            "description": "公開求人があるか"
          },
          "scoutPlanStatus": {
            "$ref": "#/components/schemas/CompanyPlanStatus"
          },
          "skillEvaluationPlanStatus": {
            "$ref": "#/components/schemas/CompanyPlanStatus"
          },
          "recruitPlanStatus": {
            "$ref": "#/components/schemas/CompanyPlanStatusNoTrial"
          },
          "eventPlanStatus": {
            "$ref": "#/components/schemas/CompanyPlanStatusNoTrial"
          },
          "agreedScoutCount": {
            "title": "Agreedscoutcount",
            "minimum": 0.0,
            "type": "integer"
          },
          "totalScoutCount": {
            "title": "Totalscoutcount",
            "minimum": 0.0,
            "type": "integer"
          },
          "recruitCount": {
            "title": "Recruitcount",
            "minimum": 0.0,
            "type": "integer"
          },
          "lastLogin": {
            "title": "Lastlogin",
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "CompanyListOut": {
        "title": "CompanyListOut",
        "required": [
          "totalCount",
          "activeCount",
          "hasPrevious",
          "hasNext",
          "companies"
        ],
        "type": "object",
        "properties": {
          "totalCount": {
            "title": "Totalcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "全件数"
          },
          "activeCount": {
            "title": "Activecount",
            "minimum": 0.0,
            "type": "integer",
            "description": "アクティブ件数"
          },
          "hasPrevious": {
            "title": "Hasprevious",
            "type": "boolean",
            "description": "前データが存在するか"
          },
          "hasNext": {
            "title": "Hasnext",
            "type": "boolean",
            "description": "次データが存在するか"
          },
          "companies": {
            "title": "Companies",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyListDetailOut"
            }
          }
        }
      },
      "CompanyMemberCreateIn": {
        "title": "CompanyMemberCreateIn",
        "required": [
          "name",
          "joinYear"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string",
            "description": "先輩社員名"
          },
          "image": {
            "title": "Image",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "顔写真",
            "default": ""
          },
          "position": {
            "title": "Position",
            "maxLength": 100,
            "type": "string",
            "description": "役職",
            "default": ""
          },
          "joinYear": {
            "title": "Joinyear",
            "type": "string",
            "description": "入社日",
            "format": "date"
          },
          "interview": {
            "title": "Interview",
            "type": "string",
            "description": "インタビュー内容",
            "default": ""
          },
          "word": {
            "title": "Word",
            "type": "string",
            "description": "先輩から一言",
            "default": ""
          }
        }
      },
      "CompanyMemberDetailOut": {
        "title": "CompanyMemberDetailOut",
        "required": [
          "name",
          "image",
          "position",
          "interview",
          "word"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string",
            "description": "先輩社員名"
          },
          "image": {
            "title": "Image",
            "type": "string",
            "description": "顔写真"
          },
          "position": {
            "title": "Position",
            "maxLength": 100,
            "type": "string",
            "description": "役職"
          },
          "joinYear": {
            "title": "Joinyear",
            "type": "string",
            "description": "入社日",
            "format": "date",
            "nullable": true
          },
          "interview": {
            "title": "Interview",
            "type": "string",
            "description": "インタビュー内容"
          },
          "word": {
            "title": "Word",
            "type": "string",
            "description": "先輩から一言"
          }
        }
      },
      "CompanyMemberListOut": {
        "title": "CompanyMemberListOut",
        "required": [
          "id",
          "name",
          "image",
          "position",
          "interview",
          "word"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string",
            "description": "先輩社員名"
          },
          "image": {
            "title": "Image",
            "type": "string",
            "description": "顔写真"
          },
          "position": {
            "title": "Position",
            "maxLength": 100,
            "type": "string",
            "description": "役職"
          },
          "joinYear": {
            "title": "Joinyear",
            "type": "string",
            "description": "入社日",
            "format": "date",
            "nullable": true
          },
          "interview": {
            "title": "Interview",
            "type": "string",
            "description": "インタビュー内容"
          },
          "word": {
            "title": "Word",
            "type": "string",
            "description": "先輩から一言"
          }
        }
      },
      "CompanyMemberUpdateIn": {
        "title": "CompanyMemberUpdateIn",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string",
            "description": "先輩社員名",
            "nullable": true
          },
          "image": {
            "title": "Image",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "顔写真",
            "nullable": true
          },
          "position": {
            "title": "Position",
            "maxLength": 100,
            "type": "string",
            "description": "役職",
            "nullable": true
          },
          "joinYear": {
            "title": "Joinyear",
            "type": "string",
            "description": "入社日",
            "format": "date",
            "nullable": true
          },
          "interview": {
            "title": "Interview",
            "type": "string",
            "description": "インタビュー内容",
            "nullable": true
          },
          "word": {
            "title": "Word",
            "type": "string",
            "description": "先輩から一言",
            "nullable": true
          }
        }
      },
      "CompanyOfficeDetailOut": {
        "title": "CompanyOfficeDetailOut",
        "required": [
          "name",
          "address"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string",
            "description": "事業所名"
          },
          "address": {
            "title": "Address",
            "maxLength": 255,
            "type": "string",
            "description": "事業所住所"
          }
        }
      },
      "CompanyOfficeUpdateIn": {
        "title": "CompanyOfficeUpdateIn",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string",
            "description": "事業所名",
            "nullable": true
          },
          "address": {
            "title": "Address",
            "maxLength": 255,
            "type": "string",
            "description": "事業所住所",
            "nullable": true
          }
        }
      },
      "CompanyPlanStatus": {
        "title": "CompanyPlanStatus",
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "企業プラン加入状況"
      },
      "CompanyPlanStatusChoicesOut": {
        "title": "CompanyPlanStatusChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "CompanyPlanStatusNoTrial": {
        "title": "CompanyPlanStatusNoTrial",
        "enum": [
          1,
          3
        ],
        "type": "integer",
        "description": "企業プラン加入状況(トライアルなし)"
      },
      "CompanyPlanStatusNoTrialChoicesOut": {
        "title": "CompanyPlanStatusNoTrialChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "CompanyScaleChoicesOut": {
        "title": "CompanyScaleChoicesOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 50,
            "type": "string"
          }
        }
      },
      "CompanyScaleDetailOut": {
        "title": "CompanyScaleDetailOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "企業規模ID"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string",
            "description": "企業規模名"
          }
        }
      },
      "CompanyUpdateIn": {
        "title": "CompanyUpdateIn",
        "required": [
          "companyIndustry"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string",
            "nullable": true
          },
          "formalName": {
            "title": "Formalname",
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "logo": {
            "title": "Logo",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "ファイルアップロードAPIで取得(dir:company)",
            "nullable": true
          },
          "url": {
            "title": "Url",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "HPのURL",
            "nullable": true
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "scoutPlanStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyPlanStatus"
              }
            ],
            "description": "1:未加入, 2:トライアル, 3:本申込",
            "nullable": true
          },
          "skillEvaluationPlanStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyPlanStatus"
              }
            ],
            "description": "1:未加入, 2:トライアル, 3:本申込",
            "nullable": true
          },
          "recruitPlanStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyPlanStatusNoTrial"
              }
            ],
            "description": "1:未加入, 3:本申込",
            "nullable": true
          },
          "eventPlanStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyPlanStatusNoTrial"
              }
            ],
            "description": "1:未加入, 3:本申込",
            "nullable": true
          },
          "scoutPlanExpiresDate": {
            "title": "Scoutplanexpiresdate",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "skillEvaluationPlanExpiresDate": {
            "title": "Skillevaluationplanexpiresdate",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "recruitPlanExpiresDate": {
            "title": "Recruitplanexpiresdate",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "eventPlanExpiresDate": {
            "title": "Eventplanexpiresdate",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "companyIndustry": {
            "title": "Companyindustry",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyIndustryUpdateIn"
            }
          }
        }
      },
      "CompanyUserCreateIn": {
        "title": "CompanyUserCreateIn",
        "required": [
          "organizationId",
          "firstName",
          "lastName",
          "username",
          "email",
          "hasScoutPlanPermissions",
          "hasSkillEvaluationPlanPermissions",
          "hasRecruitPlanPermissions",
          "hasEventPlanPermissions"
        ],
        "type": "object",
        "properties": {
          "organizationId": {
            "title": "Organizationid",
            "minimum": 1.0,
            "type": "integer"
          },
          "firstName": {
            "title": "Firstname",
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "title": "Lastname",
            "maxLength": 150,
            "minLength": 1,
            "type": "string"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string",
            "nullable": true
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "mailText": {
            "title": "Mailtext",
            "type": "string",
            "default": "",
            "nullable": true
          },
          "hasScoutPlanPermissions": {
            "title": "Hasscoutplanpermissions",
            "type": "boolean"
          },
          "hasSkillEvaluationPlanPermissions": {
            "title": "Hasskillevaluationplanpermissions",
            "type": "boolean"
          },
          "hasRecruitPlanPermissions": {
            "title": "Hasrecruitplanpermissions",
            "type": "boolean"
          },
          "hasEventPlanPermissions": {
            "title": "Haseventplanpermissions",
            "type": "boolean"
          }
        }
      },
      "CompanyUserDetailOut": {
        "title": "CompanyUserDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "firstName",
          "lastName",
          "username",
          "email",
          "icon",
          "hasScoutPlanPermissions",
          "hasSkillEvaluationPlanPermissions",
          "hasRecruitPlanPermissions",
          "hasEventPlanPermissions"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "firstName": {
            "title": "Firstname",
            "maxLength": 30,
            "type": "string"
          },
          "lastName": {
            "title": "Lastname",
            "maxLength": 150,
            "type": "string"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string"
          },
          "icon": {
            "title": "Icon",
            "maxLength": 150,
            "type": "string"
          },
          "hasScoutPlanPermissions": {
            "title": "Hasscoutplanpermissions",
            "type": "boolean"
          },
          "hasSkillEvaluationPlanPermissions": {
            "title": "Hasskillevaluationplanpermissions",
            "type": "boolean"
          },
          "hasRecruitPlanPermissions": {
            "title": "Hasrecruitplanpermissions",
            "type": "boolean"
          },
          "hasEventPlanPermissions": {
            "title": "Haseventplanpermissions",
            "type": "boolean"
          }
        }
      },
      "CompanyUserListOut": {
        "title": "CompanyUserListOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "firstName",
          "lastName",
          "username",
          "email",
          "lastLogin",
          "hasScoutPlanPermissions",
          "hasSkillEvaluationPlanPermissions",
          "hasRecruitPlanPermissions",
          "hasEventPlanPermissions"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "firstName": {
            "title": "Firstname",
            "maxLength": 30,
            "type": "string"
          },
          "lastName": {
            "title": "Lastname",
            "maxLength": 150,
            "type": "string"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string"
          },
          "email": {
            "title": "Email",
            "maxLength": 254,
            "type": "string"
          },
          "lastLogin": {
            "title": "Lastlogin",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasScoutPlanPermissions": {
            "title": "Hasscoutplanpermissions",
            "type": "boolean"
          },
          "hasSkillEvaluationPlanPermissions": {
            "title": "Hasskillevaluationplanpermissions",
            "type": "boolean"
          },
          "hasRecruitPlanPermissions": {
            "title": "Hasrecruitplanpermissions",
            "type": "boolean"
          },
          "hasEventPlanPermissions": {
            "title": "Haseventplanpermissions",
            "type": "boolean"
          }
        }
      },
      "CompanyUserUpdateIn": {
        "title": "CompanyUserUpdateIn",
        "required": [
          "icon"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "title": "Firstname",
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "title": "Lastname",
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string",
            "nullable": true
          },
          "password": {
            "title": "Password",
            "type": "string",
            "nullable": true
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "icon": {
            "title": "Icon",
            "maxLength": 150,
            "type": "string"
          },
          "hasScoutPlanPermissions": {
            "title": "Hasscoutplanpermissions",
            "type": "boolean",
            "nullable": true
          },
          "hasSkillEvaluationPlanPermissions": {
            "title": "Hasskillevaluationplanpermissions",
            "type": "boolean",
            "nullable": true
          },
          "hasRecruitPlanPermissions": {
            "title": "Hasrecruitplanpermissions",
            "type": "boolean",
            "nullable": true
          },
          "hasEventPlanPermissions": {
            "title": "Haseventplanpermissions",
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ContentCategoryChoicesOut": {
        "title": "ContentCategoryChoicesOut",
        "required": [
          "id",
          "contentCategoryType",
          "nameLc"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "contentCategoryType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContentCategoryType"
              }
            ],
            "description": "コンテンツカテゴリタイプ, 1:一般問題・教材, 2:PRO問題, 3:テックソン"
          },
          "nameLc": {
            "title": "Namelc",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "ContentCategoryCreateIn": {
        "title": "ContentCategoryCreateIn",
        "required": [
          "name",
          "nameEn",
          "contentCategoryType",
          "order"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          },
          "nameEn": {
            "title": "Nameen",
            "maxLength": 63,
            "type": "string"
          },
          "contentCategoryType": {
            "$ref": "#/components/schemas/ContentCategoryType"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer"
          }
        }
      },
      "ContentCategoryDetailOut": {
        "title": "ContentCategoryDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "nameEn",
          "contentCategoryType",
          "order"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          },
          "nameEn": {
            "title": "Nameen",
            "maxLength": 63,
            "type": "string"
          },
          "contentCategoryType": {
            "$ref": "#/components/schemas/ContentCategoryType"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer"
          }
        }
      },
      "ContentCategoryListOut": {
        "title": "ContentCategoryListOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "nameEn",
          "contentCategoryTypeLabel",
          "order"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          },
          "nameEn": {
            "title": "Nameen",
            "maxLength": 63,
            "type": "string"
          },
          "contentCategoryTypeLabel": {
            "title": "Contentcategorytypelabel",
            "type": "string"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer"
          }
        }
      },
      "ContentCategoryType": {
        "title": "ContentCategoryType",
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "コンテンツカテゴリタイプ"
      },
      "ContentCategoryTypeChoicesOut": {
        "title": "ContentCategoryTypeChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "ContentCategoryUpdateIn": {
        "title": "ContentCategoryUpdateIn",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string",
            "nullable": true
          },
          "nameEn": {
            "title": "Nameen",
            "maxLength": 63,
            "type": "string",
            "nullable": true
          },
          "contentCategoryType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContentCategoryType"
              }
            ],
            "nullable": true
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "nullable": true
          }
        }
      },
      "ContentCreatedByOut": {
        "title": "ContentCreatedByOut",
        "required": [
          "createdBy"
        ],
        "type": "object",
        "properties": {
          "createdBy": {
            "title": "Createdby",
            "maxLength": 180,
            "type": "string"
          }
        }
      },
      "ContentDivision": {
        "title": "ContentDivision",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "description": "コンテンツ区分"
      },
      "ContentDivisionChoicesOut": {
        "title": "ContentDivisionChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "ContentOrganizationDivision": {
        "title": "ContentOrganizationDivision",
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "コンテンツ組織別区分"
      },
      "ContentOut": {
        "title": "ContentOut",
        "required": [
          "organizationId",
          "isSharedBetweenSchools"
        ],
        "type": "object",
        "properties": {
          "organizationId": {
            "title": "Organizationid",
            "minimum": 1.0,
            "type": "integer"
          },
          "isSharedBetweenSchools": {
            "title": "Issharedbetweenschools",
            "type": "boolean"
          }
        }
      },
      "ContentPackageContentUpdateIn": {
        "title": "ContentPackageContentUpdateIn",
        "required": [
          "contentId",
          "order"
        ],
        "type": "object",
        "properties": {
          "contentId": {
            "title": "Contentid",
            "minimum": 1.0,
            "type": "integer"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer"
          }
        }
      },
      "ContentPackageCreateIn": {
        "title": "ContentPackageCreateIn",
        "required": [
          "title",
          "description",
          "contentPackageLevel",
          "isCompanyPackage",
          "isSchoolPackage",
          "memo"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "contentPackageLevel": {
            "$ref": "#/components/schemas/ContentPackageLevel"
          },
          "isCompanyPackage": {
            "title": "Iscompanypackage",
            "type": "boolean"
          },
          "isSchoolPackage": {
            "title": "Isschoolpackage",
            "type": "boolean"
          },
          "memo": {
            "title": "Memo",
            "type": "string"
          }
        }
      },
      "ContentPackageDetailContentOut": {
        "title": "ContentPackageDetailContentOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "title",
          "difficulty",
          "contentCategoryName",
          "contentTopicName",
          "contentDivision",
          "contentDivisionLabel",
          "questionType",
          "order"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string"
          },
          "difficulty": {
            "title": "Difficulty",
            "maximum": 10.0,
            "minimum": 1.0,
            "type": "integer"
          },
          "contentCategoryName": {
            "title": "Contentcategoryname",
            "type": "string"
          },
          "contentTopicName": {
            "title": "Contenttopicname",
            "type": "string"
          },
          "contentDivision": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContentDivision"
              }
            ],
            "description": "1:ストック, 2:チャレンジ, 3:プラクティス, 4:未分類, 5:第三者作成, 6:ゴミ箱, 7:ラーニング"
          },
          "contentDivisionLabel": {
            "title": "Contentdivisionlabel",
            "type": "string"
          },
          "questionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionType"
              }
            ],
            "description": "1:コーディング問題, 2:穴埋め問題, 3:バグ取り問題, 4:選択式問題, 5:空欄問題",
            "nullable": true
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer"
          }
        }
      },
      "ContentPackageDetailOut": {
        "title": "ContentPackageDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "title",
          "description",
          "contentPackageLevel",
          "contentPackageLevelLabel",
          "memo",
          "isCompanyPackage",
          "isSchoolPackage",
          "isPublished",
          "questions"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string"
          },
          "description": {
            "title": "Description",
            "maxLength": 100,
            "type": "string"
          },
          "contentPackageLevel": {
            "$ref": "#/components/schemas/ContentPackageLevel"
          },
          "contentPackageLevelLabel": {
            "title": "Contentpackagelevellabel",
            "type": "string"
          },
          "memo": {
            "title": "Memo",
            "type": "string"
          },
          "isCompanyPackage": {
            "title": "Iscompanypackage",
            "type": "boolean"
          },
          "isSchoolPackage": {
            "title": "Isschoolpackage",
            "type": "boolean"
          },
          "isPublished": {
            "title": "Ispublished",
            "type": "boolean"
          },
          "questions": {
            "title": "Questions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentPackageDetailContentOut"
            }
          }
        }
      },
      "ContentPackageLevel": {
        "title": "ContentPackageLevel",
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "コンテンツパッケージレベル"
      },
      "ContentPackageLevelChoicesOut": {
        "title": "ContentPackageLevelChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "ContentPackageListForEventOut": {
        "title": "ContentPackageListForEventOut",
        "required": [
          "id",
          "title",
          "description",
          "contentPackageLevelLabel",
          "contentCount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "contentPackageLevelLabel": {
            "title": "Contentpackagelevellabel",
            "type": "string"
          },
          "contentCount": {
            "title": "Contentcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "問題数"
          }
        }
      },
      "ContentPackageListOut": {
        "title": "ContentPackageListOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "createdBy",
          "updatedBy",
          "title",
          "contentPackageLevelLabel",
          "contentCount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 180,
            "type": "string"
          },
          "updatedBy": {
            "title": "Updatedby",
            "maxLength": 180,
            "type": "string"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string"
          },
          "contentPackageLevelLabel": {
            "title": "Contentpackagelevellabel",
            "type": "string"
          },
          "contentCount": {
            "title": "Contentcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "問題数"
          }
        }
      },
      "ContentPackageUpdateIn": {
        "title": "ContentPackageUpdateIn",
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "description": {
            "title": "Description",
            "type": "string",
            "nullable": true
          },
          "contentPackageLevel": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContentPackageLevel"
              }
            ],
            "nullable": true
          },
          "isCompanyPackage": {
            "title": "Iscompanypackage",
            "type": "boolean",
            "nullable": true
          },
          "isSchoolPackage": {
            "title": "Isschoolpackage",
            "type": "boolean",
            "nullable": true
          },
          "memo": {
            "title": "Memo",
            "type": "string",
            "nullable": true
          },
          "isPublished": {
            "title": "Ispublished",
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ContentTagOut": {
        "title": "ContentTagOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string",
            "description": "タグ名"
          }
        }
      },
      "ContentTopicChoicesOut": {
        "title": "ContentTopicChoicesOut",
        "required": [
          "id",
          "contentCategoryId",
          "nameLc"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "contentCategoryId": {
            "title": "Contentcategoryid",
            "minimum": 1.0,
            "type": "integer"
          },
          "nameLc": {
            "title": "Namelc",
            "maxLength": 35,
            "type": "string"
          }
        }
      },
      "ContentTopicCreateIn": {
        "title": "ContentTopicCreateIn",
        "required": [
          "name",
          "nameEn",
          "order",
          "contentCategoryId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 35,
            "type": "string"
          },
          "nameEn": {
            "title": "Nameen",
            "maxLength": 35,
            "type": "string"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer"
          },
          "contentCategoryId": {
            "title": "Contentcategoryid",
            "minimum": 1.0,
            "type": "integer"
          }
        }
      },
      "ContentTopicDetailOut": {
        "title": "ContentTopicDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "nameEn",
          "order",
          "contentCategoryId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 35,
            "type": "string"
          },
          "nameEn": {
            "title": "Nameen",
            "maxLength": 35,
            "type": "string"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer"
          },
          "contentCategoryId": {
            "title": "Contentcategoryid",
            "minimum": 1.0,
            "type": "integer"
          }
        }
      },
      "ContentTopicListOut": {
        "title": "ContentTopicListOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "contentCategoryName",
          "order"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 35,
            "type": "string"
          },
          "contentCategoryName": {
            "title": "Contentcategoryname",
            "maxLength": 35,
            "type": "string"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer"
          }
        }
      },
      "ContentTopicUpdateIn": {
        "title": "ContentTopicUpdateIn",
        "required": [
          "contentCategoryId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "nameEn": {
            "title": "Nameen",
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "nullable": true
          },
          "contentCategoryId": {
            "title": "Contentcategoryid",
            "minimum": 1.0,
            "type": "integer"
          }
        }
      },
      "ContentType": {
        "title": "ContentType",
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "コンテンツタイプ"
      },
      "CorporateProfileDetailOut": {
        "title": "CorporateProfileDetailOut",
        "required": [
          "id",
          "name",
          "formalName",
          "logo",
          "image",
          "url",
          "email",
          "description",
          "businessDetails",
          "philosophy",
          "recruitmentRecord",
          "address",
          "establishmentDate",
          "capitalStock",
          "numOfEmployees",
          "averageAge",
          "sales",
          "representative",
          "majorShareholder",
          "companyOffices"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string",
            "description": "企業名"
          },
          "formalName": {
            "title": "Formalname",
            "maxLength": 100,
            "type": "string",
            "description": "企業正式名称"
          },
          "logo": {
            "title": "Logo",
            "type": "string",
            "description": "企業ロゴ"
          },
          "image": {
            "title": "Image",
            "type": "string",
            "description": "企業イメージ"
          },
          "url": {
            "title": "Url",
            "maxLength": 200,
            "type": "string",
            "description": "企業HPのURL"
          },
          "email": {
            "title": "Email",
            "maxLength": 100,
            "type": "string",
            "description": "企業メールアドレス"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "企業紹介文(会社概要)"
          },
          "businessDetails": {
            "title": "Businessdetails",
            "type": "string",
            "description": "事業内容"
          },
          "philosophy": {
            "title": "Philosophy",
            "type": "string",
            "description": "企業理念"
          },
          "recruitmentRecord": {
            "title": "Recruitmentrecord",
            "type": "string",
            "description": "採用実績"
          },
          "address": {
            "title": "Address",
            "maxLength": 255,
            "type": "string",
            "description": "企業住所"
          },
          "establishmentDate": {
            "title": "Establishmentdate",
            "maxLength": 125,
            "type": "string",
            "description": "会社設立日"
          },
          "capitalStock": {
            "title": "Capitalstock",
            "maxLength": 255,
            "type": "string",
            "description": "会社資本金"
          },
          "numOfEmployees": {
            "title": "Numofemployees",
            "maxLength": 255,
            "type": "string",
            "description": "従業員数"
          },
          "averageAge": {
            "title": "Averageage",
            "maxLength": 100,
            "type": "string",
            "description": "従業員平均年齢"
          },
          "sales": {
            "title": "Sales",
            "maxLength": 255,
            "type": "string",
            "description": "売上"
          },
          "representative": {
            "title": "Representative",
            "maxLength": 100,
            "type": "string",
            "description": "代表者名"
          },
          "majorShareholder": {
            "title": "Majorshareholder",
            "maxLength": 255,
            "type": "string",
            "description": "主要株主"
          },
          "companyOffices": {
            "title": "Companyoffices",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyOfficeDetailOut"
            }
          }
        }
      },
      "CorporateProfileUpdateIn": {
        "title": "CorporateProfileUpdateIn",
        "required": [
          "companyOffices"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string",
            "description": "企業名",
            "nullable": true
          },
          "formalName": {
            "title": "Formalname",
            "maxLength": 100,
            "type": "string",
            "description": "企業正式名称",
            "nullable": true
          },
          "logo": {
            "title": "Logo",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "企業ロゴ",
            "nullable": true
          },
          "image": {
            "title": "Image",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "企業イメージ",
            "nullable": true
          },
          "url": {
            "title": "Url",
            "maxLength": 200,
            "type": "string",
            "description": "企業HPのURL",
            "nullable": true
          },
          "email": {
            "title": "Email",
            "maxLength": 100,
            "type": "string",
            "description": "企業メールアドレス",
            "nullable": true
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "企業紹介文(会社概要)",
            "nullable": true
          },
          "businessDetails": {
            "title": "Businessdetails",
            "type": "string",
            "description": "事業内容",
            "nullable": true
          },
          "philosophy": {
            "title": "Philosophy",
            "type": "string",
            "description": "企業理念",
            "nullable": true
          },
          "recruitmentRecord": {
            "title": "Recruitmentrecord",
            "type": "string",
            "description": "採用実績",
            "nullable": true
          },
          "address": {
            "title": "Address",
            "maxLength": 255,
            "type": "string",
            "description": "企業住所",
            "nullable": true
          },
          "establishmentDate": {
            "title": "Establishmentdate",
            "maxLength": 125,
            "type": "string",
            "description": "会社設立日",
            "nullable": true
          },
          "capitalStock": {
            "title": "Capitalstock",
            "maxLength": 255,
            "type": "string",
            "description": "会社資本金",
            "nullable": true
          },
          "numOfEmployees": {
            "title": "Numofemployees",
            "maxLength": 255,
            "type": "string",
            "description": "従業員数",
            "nullable": true
          },
          "averageAge": {
            "title": "Averageage",
            "maxLength": 100,
            "type": "string",
            "description": "従業員平均年齢",
            "nullable": true
          },
          "sales": {
            "title": "Sales",
            "maxLength": 255,
            "type": "string",
            "description": "売上",
            "nullable": true
          },
          "representative": {
            "title": "Representative",
            "maxLength": 100,
            "type": "string",
            "description": "代表者名",
            "nullable": true
          },
          "majorShareholder": {
            "title": "Majorshareholder",
            "maxLength": 255,
            "type": "string",
            "description": "主要株主",
            "nullable": true
          },
          "companyOffices": {
            "title": "Companyoffices",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyOfficeUpdateIn"
            }
          }
        }
      },
      "CountryChoicesOut": {
        "title": "CountryChoicesOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "CountryCreateIn": {
        "title": "CountryCreateIn",
        "required": [
          "name",
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          },
          "code": {
            "title": "Code",
            "maxLength": 6,
            "type": "string"
          }
        }
      },
      "CountryDetailOut": {
        "title": "CountryDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "code"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          },
          "code": {
            "title": "Code",
            "maxLength": 6,
            "type": "string"
          }
        }
      },
      "CountryListOut": {
        "title": "CountryListOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "code"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          },
          "code": {
            "title": "Code",
            "maxLength": 6,
            "type": "string"
          }
        }
      },
      "CountryUpdateIn": {
        "title": "CountryUpdateIn",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string",
            "nullable": true
          },
          "code": {
            "title": "Code",
            "maxLength": 6,
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateCompanyUserCsvIn": {
        "title": "CreateCompanyUserCsvIn",
        "required": [
          "organizationId",
          "csvData",
          "hasScoutPlanPermissions",
          "hasSkillEvaluationPlanPermissions",
          "hasRecruitPlanPermissions",
          "hasEventPlanPermissions"
        ],
        "type": "object",
        "properties": {
          "organizationId": {
            "title": "Organizationid",
            "minimum": 1.0,
            "type": "integer"
          },
          "csvData": {
            "title": "Csvdata",
            "type": "string"
          },
          "mailText": {
            "title": "Mailtext",
            "type": "string",
            "default": "",
            "nullable": true
          },
          "hasScoutPlanPermissions": {
            "title": "Hasscoutplanpermissions",
            "type": "boolean"
          },
          "hasSkillEvaluationPlanPermissions": {
            "title": "Hasskillevaluationplanpermissions",
            "type": "boolean"
          },
          "hasRecruitPlanPermissions": {
            "title": "Hasrecruitplanpermissions",
            "type": "boolean"
          },
          "hasEventPlanPermissions": {
            "title": "Haseventplanpermissions",
            "type": "boolean"
          }
        }
      },
      "CreateCompanyUserCsvOut": {
        "title": "CreateCompanyUserCsvOut",
        "required": [
          "submitCount",
          "createCount"
        ],
        "type": "object",
        "properties": {
          "submitCount": {
            "title": "Submitcount",
            "type": "integer",
            "description": "登録した人数"
          },
          "createCount": {
            "title": "Createcount",
            "type": "integer",
            "description": "登録に成功した人数"
          }
        }
      },
      "CreateHeatmapSampleCaseIn": {
        "title": "CreateHeatmapSampleCaseIn",
        "required": [
          "username",
          "managementTitle",
          "displayTitle"
        ],
        "type": "object",
        "properties": {
          "username": {
            "title": "Username",
            "type": "string",
            "description": "ユーザー名"
          },
          "managementTitle": {
            "title": "Managementtitle",
            "type": "string",
            "description": "管理用タイトル"
          },
          "displayTitle": {
            "title": "Displaytitle",
            "type": "string",
            "description": "表示用タイトル"
          },
          "industries": {
            "title": "Industries",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "業界IDリスト",
            "default": []
          },
          "occupations": {
            "title": "Occupations",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "職種IDリスト",
            "default": []
          }
        }
      },
      "CreatePDFManualIn": {
        "title": "CreatePDFManualIn",
        "required": [
          "title",
          "fileUrl",
          "target",
          "order"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "fileUrl": {
            "title": "Fileurl",
            "type": "string",
            "description": "ファイルURL"
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TargetAudienceType"
              }
            ],
            "description": "ターゲット"
          },
          "order": {
            "title": "Order",
            "type": "integer",
            "description": "表示順"
          },
          "isIntegrated": {
            "title": "Isintegrated",
            "type": "boolean",
            "description": "統合版か",
            "default": false
          }
        }
      },
      "CreatePDFManualOut": {
        "title": "CreatePDFManualOut",
        "required": [
          "id",
          "title",
          "fileUrl",
          "order",
          "target"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "id"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "fileUrl": {
            "title": "Fileurl",
            "type": "string",
            "description": "ファイルURL"
          },
          "order": {
            "title": "Order",
            "type": "integer",
            "description": "表示順"
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TargetAudienceType"
              }
            ],
            "description": "ターゲット"
          },
          "isIntegrated": {
            "title": "Isintegrated",
            "type": "boolean",
            "description": "統合版か",
            "default": false
          }
        }
      },
      "CurrentJob": {
        "title": "CurrentJob",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "description": "現在の職業"
      },
      "CurrentJobChoicesOut": {
        "title": "CurrentJobChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "DeleteUserIn": {
        "title": "DeleteUserIn",
        "required": [
          "quitReasonTypes",
          "quitReason"
        ],
        "type": "object",
        "properties": {
          "quitReasonTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuitReasonType"
            },
            "description": "退会理由種別"
          },
          "quitReason": {
            "title": "Quitreason",
            "type": "string",
            "description": "退会理由"
          }
        }
      },
      "DisplayScope": {
        "title": "DisplayScope",
        "enum": [
          "portfolio",
          "own_events",
          "event"
        ],
        "type": "string",
        "description": "表示範囲\nPORTFOLIO: ポートフォリオ対象問題\nEVENT_ALL: 自組織主催全セッションの問題\nEVENT: 該当イベント内の全セッションの問題を表示"
      },
      "DownloadType": {
        "title": "DownloadType",
        "enum": [
          "All",
          "Test",
          "Sample"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "EducationalMaterialCreateIn": {
        "title": "EducationalMaterialCreateIn",
        "required": [
          "title",
          "description",
          "contentTopicId",
          "educationalMaterialType"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "file": {
            "title": "File",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "default": ""
          },
          "contentTopicId": {
            "title": "Contenttopicid",
            "minimum": 1.0,
            "type": "integer"
          },
          "difficulty": {
            "title": "Difficulty",
            "maximum": 10.0,
            "minimum": 1.0,
            "type": "integer",
            "default": 1
          },
          "contentTagNames": {
            "title": "Contenttagnames",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isSharedBetweenSchools": {
            "title": "Issharedbetweenschools",
            "type": "boolean",
            "default": false
          },
          "educationalMaterialType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EducationalMaterialType"
              }
            ],
            "description": "1:テキスト, 2:PDF, 3:動画"
          }
        }
      },
      "EducationalMaterialDetailOut": {
        "title": "EducationalMaterialDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "title",
          "description",
          "createdBy",
          "updatedBy",
          "contentCategoryId",
          "contentCategoryName",
          "contentTopicId",
          "contentTagNames",
          "isSharedBetweenSchools",
          "file",
          "materialType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 180,
            "type": "string"
          },
          "updatedBy": {
            "title": "Updatedby",
            "maxLength": 180,
            "type": "string"
          },
          "contentCategoryId": {
            "title": "Contentcategoryid",
            "minimum": 1.0,
            "type": "integer"
          },
          "contentCategoryName": {
            "title": "Contentcategoryname",
            "type": "string"
          },
          "contentTopicId": {
            "title": "Contenttopicid",
            "minimum": 1.0,
            "type": "integer"
          },
          "difficulty": {
            "title": "Difficulty",
            "maximum": 10.0,
            "minimum": 1.0,
            "type": "integer",
            "default": 1
          },
          "contentTagNames": {
            "title": "Contenttagnames",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isSharedBetweenSchools": {
            "title": "Issharedbetweenschools",
            "type": "boolean"
          },
          "file": {
            "title": "File",
            "type": "string"
          },
          "materialType": {
            "title": "Materialtype",
            "type": "string"
          }
        }
      },
      "EducationalMaterialListDetailOut": {
        "title": "EducationalMaterialListDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "title",
          "createdBy",
          "updatedBy",
          "contentCategoryName",
          "contentTopicName",
          "difficulty",
          "isSharedBetweenSchools",
          "materialType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 180,
            "type": "string"
          },
          "updatedBy": {
            "title": "Updatedby",
            "maxLength": 180,
            "type": "string"
          },
          "contentCategoryName": {
            "title": "Contentcategoryname",
            "type": "string"
          },
          "contentTopicName": {
            "title": "Contenttopicname",
            "type": "string"
          },
          "difficulty": {
            "title": "Difficulty",
            "maximum": 10.0,
            "minimum": 1.0,
            "type": "integer"
          },
          "isSharedBetweenSchools": {
            "title": "Issharedbetweenschools",
            "type": "boolean"
          },
          "materialType": {
            "$ref": "#/components/schemas/EducationalMaterialType"
          }
        }
      },
      "EducationalMaterialListForEventDetailOut": {
        "title": "EducationalMaterialListForEventDetailOut",
        "required": [
          "id",
          "title",
          "createdBy",
          "contentCategoryName",
          "contentTopicName",
          "difficulty",
          "educationalMaterialType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "コンテンツID"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 180,
            "type": "string"
          },
          "contentCategoryName": {
            "title": "Contentcategoryname",
            "type": "string"
          },
          "contentTopicName": {
            "title": "Contenttopicname",
            "type": "string"
          },
          "difficulty": {
            "title": "Difficulty",
            "maximum": 10.0,
            "minimum": 1.0,
            "type": "integer"
          },
          "educationalMaterialType": {
            "$ref": "#/components/schemas/EducationalMaterialType"
          }
        }
      },
      "EducationalMaterialListForEventOut": {
        "title": "EducationalMaterialListForEventOut",
        "required": [
          "totalCount",
          "hasPrevious",
          "hasNext",
          "educationalMaterials"
        ],
        "type": "object",
        "properties": {
          "totalCount": {
            "title": "Totalcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "全件数"
          },
          "hasPrevious": {
            "title": "Hasprevious",
            "type": "boolean",
            "description": "前データが存在するか"
          },
          "hasNext": {
            "title": "Hasnext",
            "type": "boolean",
            "description": "次データが存在するか"
          },
          "educationalMaterials": {
            "title": "Educationalmaterials",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EducationalMaterialListForEventDetailOut"
            }
          }
        }
      },
      "EducationalMaterialListOut": {
        "title": "EducationalMaterialListOut",
        "required": [
          "totalCount",
          "hasPrevious",
          "hasNext",
          "educationalMaterials"
        ],
        "type": "object",
        "properties": {
          "totalCount": {
            "title": "Totalcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "全件数"
          },
          "hasPrevious": {
            "title": "Hasprevious",
            "type": "boolean",
            "description": "前データが存在するか"
          },
          "hasNext": {
            "title": "Hasnext",
            "type": "boolean",
            "description": "次データが存在するか"
          },
          "educationalMaterials": {
            "title": "Educationalmaterials",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EducationalMaterialListDetailOut"
            }
          }
        }
      },
      "EducationalMaterialType": {
        "title": "EducationalMaterialType",
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "教材タイプ"
      },
      "EducationalMaterialTypeChoicesOut": {
        "title": "EducationalMaterialTypeChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "EducationalMaterialUpdateIn": {
        "title": "EducationalMaterialUpdateIn",
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "type": "string",
            "nullable": true
          },
          "description": {
            "title": "Description",
            "type": "string",
            "nullable": true
          },
          "file": {
            "title": "File",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "nullable": true
          },
          "contentTopicId": {
            "title": "Contenttopicid",
            "minimum": 1.0,
            "type": "integer",
            "nullable": true
          },
          "difficulty": {
            "title": "Difficulty",
            "maximum": 10.0,
            "minimum": 1.0,
            "type": "integer",
            "nullable": true
          },
          "contentTagNames": {
            "title": "Contenttagnames",
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isSharedBetweenSchools": {
            "title": "Issharedbetweenschools",
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "EmploymentManagementStatusDetail": {
        "title": "EmploymentManagementStatusDetail",
        "required": [
          "id",
          "item",
          "detail"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmploymentManagementStatusItem"
              }
            ],
            "description": "項目",
            "nullable": true
          },
          "detail": {
            "title": "Detail",
            "type": "string",
            "description": "詳細"
          }
        }
      },
      "EmploymentManagementStatusIn": {
        "title": "EmploymentManagementStatusIn",
        "required": [
          "item"
        ],
        "type": "object",
        "properties": {
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmploymentManagementStatusItem"
              }
            ],
            "description": "企業における雇用管理に関する状況 | 1:前年度の有給休暇の平均取得日数, 2:前年度の育児休業取得対象者数・取得者数（男女別）, 3:役員に占める女性の割合及び管理的地位にある者に占める女性の割合"
          },
          "detail": {
            "title": "Detail",
            "type": "string",
            "description": "企業における雇用管理に関する状況",
            "default": ""
          }
        }
      },
      "EmploymentManagementStatusItem": {
        "title": "EmploymentManagementStatusItem",
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "企業における雇用管理に関する状況"
      },
      "EmploymentManagementStatusItemChoicesOut": {
        "title": "EmploymentManagementStatusItemChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "EmploymentManagementStatusOut": {
        "title": "EmploymentManagementStatusOut",
        "required": [
          "item",
          "itemLabel"
        ],
        "type": "object",
        "properties": {
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmploymentManagementStatusItem"
              }
            ],
            "description": "企業における雇用管理に関する状況 | 1:前年度の有給休暇の平均取得日数, 2:前年度の育児休業取得対象者数・取得者数（男女別）, 3:役員に占める女性の割合及び管理的地位にある者に占める女性の割合"
          },
          "itemLabel": {
            "title": "Itemlabel",
            "type": "string",
            "description": "企業における雇用管理に関する状況ラベル"
          },
          "detail": {
            "title": "Detail",
            "type": "string",
            "description": "企業における雇用管理に関する状況",
            "default": ""
          }
        }
      },
      "EmploymentStatus": {
        "title": "EmploymentStatus",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "description": "雇用形態"
      },
      "EmploymentStatusChoicesOut": {
        "title": "EmploymentStatusChoicesOut",
        "required": [
          "value",
          "label",
          "isNewGraduate"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          },
          "isNewGraduate": {
            "title": "Isnewgraduate",
            "type": "boolean"
          }
        }
      },
      "EnglishLevelChoicesOut": {
        "title": "EnglishLevelChoicesOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 50,
            "type": "string"
          }
        }
      },
      "EnglishSampleCaseUpdateIn": {
        "title": "EnglishSampleCaseUpdateIn",
        "required": [
          "testCaseId",
          "descriptionEn"
        ],
        "type": "object",
        "properties": {
          "testCaseId": {
            "title": "Testcaseid",
            "minimum": 1.0,
            "type": "integer"
          },
          "descriptionEn": {
            "title": "Descriptionen",
            "type": "string",
            "description": "英語説明"
          }
        }
      },
      "EvaluationFunction": {
        "title": "EvaluationFunction",
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "評価関数種類"
      },
      "EventCreateIn": {
        "title": "EventCreateIn",
        "required": [
          "name",
          "purpose"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "theme": {
            "title": "Theme",
            "maxLength": 100,
            "type": "string",
            "default": ""
          },
          "description": {
            "title": "Description",
            "type": "string",
            "default": ""
          },
          "image": {
            "title": "Image",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "default": ""
          },
          "purpose": {
            "$ref": "#/components/schemas/EventPurpose"
          },
          "showRanking": {
            "title": "Showranking",
            "type": "boolean",
            "default": false
          },
          "isPublic": {
            "title": "Ispublic",
            "type": "boolean",
            "default": false
          },
          "hostId": {
            "title": "Hostid",
            "minimum": 1.0,
            "type": "integer",
            "description": "イベントを主催する組織ID",
            "nullable": true
          }
        }
      },
      "EventDetailOut": {
        "title": "EventDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "createdBy",
          "updatedBy",
          "name",
          "theme",
          "description",
          "image",
          "purpose",
          "purposeLabel",
          "hostId",
          "hostName",
          "isPublic",
          "showRanking",
          "organizationType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 180,
            "type": "string"
          },
          "updatedBy": {
            "title": "Updatedby",
            "maxLength": 180,
            "type": "string"
          },
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string"
          },
          "theme": {
            "title": "Theme",
            "maxLength": 100,
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "image": {
            "title": "Image",
            "type": "string"
          },
          "purpose": {
            "$ref": "#/components/schemas/EventPurpose"
          },
          "purposeLabel": {
            "title": "Purposelabel",
            "type": "string",
            "example": "プログラミングコンテスト"
          },
          "hostId": {
            "title": "Hostid",
            "minimum": 1.0,
            "type": "integer"
          },
          "hostName": {
            "title": "Hostname",
            "type": "string"
          },
          "isPublic": {
            "title": "Ispublic",
            "type": "boolean"
          },
          "showRanking": {
            "title": "Showranking",
            "type": "boolean"
          },
          "organizationType": {
            "$ref": "#/components/schemas/OrganizationType"
          },
          "isSponsorUser": {
            "title": "Issponsoruser",
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "EventFilter": {
        "title": "EventFilter",
        "enum": [
          "is_published",
          "is_sponsor"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "EventListDetailOut": {
        "title": "EventListDetailOut",
        "required": [
          "id",
          "createdAt",
          "createdBy",
          "name",
          "description",
          "image",
          "purposeLabel",
          "hostName",
          "sessionCount",
          "isFinished",
          "sessions"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 180,
            "type": "string"
          },
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "image": {
            "title": "Image",
            "type": "string"
          },
          "purposeLabel": {
            "title": "Purposelabel",
            "type": "string"
          },
          "hostName": {
            "title": "Hostname",
            "type": "string",
            "description": "主催者"
          },
          "sessionCount": {
            "title": "Sessioncount",
            "minimum": 0.0,
            "type": "integer",
            "description": "セッション数"
          },
          "isFinished": {
            "title": "Isfinished",
            "type": "boolean",
            "description": "セッションが1つ以上あり、すべてのセッションが終了している"
          },
          "sessions": {
            "title": "Sessions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventListSessionOut"
            }
          }
        }
      },
      "EventListOut": {
        "title": "EventListOut",
        "required": [
          "totalCount",
          "hasNext",
          "hasPrevious",
          "events"
        ],
        "type": "object",
        "properties": {
          "totalCount": {
            "title": "Totalcount",
            "minimum": 0.0,
            "type": "integer"
          },
          "hasNext": {
            "title": "Hasnext",
            "type": "boolean"
          },
          "hasPrevious": {
            "title": "Hasprevious",
            "type": "boolean"
          },
          "events": {
            "title": "Events",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StaffEventListDetailOut"
            }
          }
        }
      },
      "EventListSessionOut": {
        "title": "EventListSessionOut",
        "required": [
          "id",
          "createdAt",
          "sessionCode",
          "name",
          "startsAt",
          "endsAt",
          "userCount",
          "sessionStatus",
          "sessionStatusLabel",
          "isFinished"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "sessionCode": {
            "title": "Sessioncode",
            "type": "string",
            "description": "セッションコード"
          },
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string"
          },
          "startsAt": {
            "title": "Startsat",
            "type": "string",
            "description": "セッション開始日時",
            "format": "date-time"
          },
          "endsAt": {
            "title": "Endsat",
            "type": "string",
            "description": "セッション終了日時",
            "format": "date-time"
          },
          "userCount": {
            "title": "Usercount",
            "minimum": 0.0,
            "type": "integer",
            "description": "イベント参加人数"
          },
          "sessionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SessionStatus"
              }
            ],
            "description": "1:開催前, 2:開催中, 3:終了"
          },
          "sessionStatusLabel": {
            "title": "Sessionstatuslabel",
            "type": "string"
          },
          "isFinished": {
            "title": "Isfinished",
            "type": "boolean",
            "description": "セッションが終了している"
          }
        }
      },
      "EventPortfolioOut": {
        "title": "EventPortfolioOut",
        "required": [
          "userId",
          "icon",
          "username",
          "passedQuestionCount",
          "challengedQuestionCount",
          "sessionList",
          "questionResultList"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "title": "Userid",
            "minimum": 1.0,
            "type": "integer",
            "description": "ユーザーID"
          },
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "ユーザーアイコンURL"
          },
          "username": {
            "title": "Username",
            "type": "string",
            "description": "アカウント名"
          },
          "passedQuestionCount": {
            "title": "Passedquestioncount",
            "type": "integer",
            "description": "合格問題数"
          },
          "challengedQuestionCount": {
            "title": "Challengedquestioncount",
            "type": "integer",
            "description": "挑戦問題数"
          },
          "sessionList": {
            "title": "Sessionlist",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventPortfolioSessionListOut"
            },
            "description": "セッション一覧"
          },
          "questionResultList": {
            "title": "Questionresultlist",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventPortfolioQuestionResultListOut"
            },
            "description": "問題解答成績一覧"
          }
        }
      },
      "EventPortfolioQuestionResultListOut": {
        "title": "EventPortfolioQuestionResultListOut",
        "required": [
          "questionResultId",
          "questionTitle",
          "difficulty",
          "score",
          "sessionId",
          "eventId",
          "contentId",
          "questionResultStatus"
        ],
        "type": "object",
        "properties": {
          "questionResultId": {
            "title": "Questionresultid",
            "minimum": 1.0,
            "type": "integer",
            "description": "問題解答成績ID"
          },
          "questionTitle": {
            "title": "Questiontitle",
            "type": "string",
            "description": "問題名"
          },
          "difficulty": {
            "title": "Difficulty",
            "minimum": 1.0,
            "type": "integer",
            "description": "難易度"
          },
          "score": {
            "title": "Score",
            "type": "integer",
            "description": "獲得した得点"
          },
          "sessionId": {
            "title": "Sessionid",
            "minimum": 1.0,
            "type": "integer",
            "description": "セッションID"
          },
          "eventId": {
            "title": "Eventid",
            "minimum": 1.0,
            "type": "integer",
            "description": "イベントID"
          },
          "contentId": {
            "title": "Contentid",
            "minimum": 1.0,
            "type": "integer",
            "description": "コンテンツID"
          },
          "questionResultStatus": {
            "title": "Questionresultstatus",
            "type": "string",
            "description": "問題解答状況"
          }
        }
      },
      "EventPortfolioSessionListOut": {
        "title": "EventPortfolioSessionListOut",
        "required": [
          "id",
          "name",
          "eventId",
          "sessionCode",
          "startsAt",
          "endsAt",
          "rank",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "セッションID"
          },
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string",
            "description": "セッション名"
          },
          "eventId": {
            "title": "Eventid",
            "minimum": 1.0,
            "type": "integer",
            "description": "イベントID"
          },
          "sessionCode": {
            "title": "Sessioncode",
            "type": "string",
            "description": "セッションコード"
          },
          "startsAt": {
            "title": "Startsat",
            "type": "string",
            "description": "セッション開始日時",
            "format": "date-time"
          },
          "endsAt": {
            "title": "Endsat",
            "type": "string",
            "description": "セッション終了日時",
            "format": "date-time"
          },
          "rank": {
            "title": "Rank",
            "type": "integer",
            "description": "順位"
          },
          "totalCount": {
            "title": "Totalcount",
            "type": "integer",
            "description": "参加者数"
          }
        }
      },
      "EventPurpose": {
        "title": "EventPurpose",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "description": "イベントの目的"
      },
      "EventPurposeChoicesOut": {
        "title": "EventPurposeChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "EventSponsorListOut": {
        "title": "EventSponsorListOut",
        "required": [
          "id",
          "name",
          "sponsoredLimit",
          "isSponsored"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "組織ID"
          },
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string",
            "description": "企業名"
          },
          "sponsoredLimit": {
            "title": "Sponsoredlimit",
            "minimum": 0.0,
            "type": "integer",
            "description": "協賛可能数"
          },
          "isSponsored": {
            "title": "Issponsored",
            "type": "boolean",
            "description": "スポンサー登録済みか"
          }
        }
      },
      "EventSponsorObjectOut": {
        "title": "EventSponsorObjectOut",
        "required": [
          "organizationId",
          "organizationName"
        ],
        "type": "object",
        "properties": {
          "organizationId": {
            "title": "Organizationid",
            "minimum": 1.0,
            "type": "integer",
            "description": "組織ID"
          },
          "organizationName": {
            "title": "Organizationname",
            "type": "string",
            "description": "企業名"
          }
        }
      },
      "EventThreadCreateIn": {
        "title": "EventThreadCreateIn",
        "required": [
          "body"
        ],
        "type": "object",
        "properties": {
          "body": {
            "title": "Body",
            "type": "string"
          }
        }
      },
      "EventThreadDetailOut": {
        "title": "EventThreadDetailOut",
        "required": [
          "id",
          "eventId",
          "body",
          "createdAt",
          "createdBy",
          "updatedAt",
          "updatedBy"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 0.0,
            "type": "integer",
            "description": "スレッドID"
          },
          "eventId": {
            "title": "Eventid",
            "minimum": 0.0,
            "type": "integer",
            "description": "イベントID"
          },
          "body": {
            "title": "Body",
            "type": "string",
            "description": "本文"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "title": "Createdby",
            "type": "string",
            "description": "作成者"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "title": "Updatedby",
            "type": "string",
            "description": "更新者"
          }
        }
      },
      "EventThreadListOut": {
        "title": "EventThreadListOut",
        "required": [
          "id",
          "username",
          "body",
          "createdAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 0.0,
            "type": "integer",
            "description": "スレッドID"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string",
            "description": "投稿者アカウント名"
          },
          "body": {
            "title": "Body",
            "type": "string",
            "description": "本文"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EventUpdateIn": {
        "title": "EventUpdateIn",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "theme": {
            "title": "Theme",
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "description": {
            "title": "Description",
            "type": "string",
            "nullable": true
          },
          "image": {
            "title": "Image",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "nullable": true
          },
          "purpose": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EventPurpose"
              }
            ],
            "nullable": true
          },
          "showRanking": {
            "title": "Showranking",
            "type": "boolean",
            "default": false
          },
          "isPublic": {
            "title": "Ispublic",
            "type": "boolean",
            "default": false
          }
        }
      },
      "ExecuteQuestionTestCaseIn": {
        "title": "ExecuteQuestionTestCaseIn",
        "required": [
          "sourceCode",
          "pgLangId"
        ],
        "type": "object",
        "properties": {
          "sourceCode": {
            "title": "Sourcecode",
            "type": "string",
            "description": "ソースコード"
          },
          "pgLangId": {
            "title": "Pglangid",
            "type": "integer",
            "description": "プログラミング言語ID"
          }
        }
      },
      "ExecuteQuestionTestCaseOut": {
        "title": "ExecuteQuestionTestCaseOut",
        "required": [
          "testResultId"
        ],
        "type": "object",
        "properties": {
          "testResultId": {
            "title": "Testresultid",
            "minimum": 1.0,
            "type": "integer",
            "description": "テスト結果ID"
          }
        }
      },
      "ExecuteSessionQuestionTestCasesIn": {
        "title": "ExecuteSessionQuestionTestCasesIn",
        "required": [
          "pgLangId",
          "sourceCode"
        ],
        "type": "object",
        "properties": {
          "pgLangId": {
            "title": "Pglangid",
            "minimum": 1.0,
            "type": "integer",
            "description": "プログラミング言語ID"
          },
          "sourceCode": {
            "title": "Sourcecode",
            "type": "string",
            "description": "ソースコード"
          }
        }
      },
      "ExecuteSessionQuestionTestCasesOut": {
        "title": "ExecuteSessionQuestionTestCasesOut",
        "required": [
          "testResultId"
        ],
        "type": "object",
        "properties": {
          "testResultId": {
            "title": "Testresultid",
            "minimum": 1.0,
            "type": "integer",
            "description": "テスト結果ID"
          }
        }
      },
      "ExecuteTechthonContentOut": {
        "title": "ExecuteTechthonContentOut",
        "required": [
          "id",
          "order",
          "result",
          "score"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "テストケース番号"
          },
          "result": {
            "title": "Result",
            "type": "string",
            "description": "採点結果"
          },
          "score": {
            "title": "Score",
            "minimum": 1.0,
            "type": "integer",
            "description": "スコア"
          }
        }
      },
      "FaqCategory": {
        "title": "FaqCategory",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "description": "質問カテゴリ"
      },
      "FaqCategoryChoicesOut": {
        "title": "FaqCategoryChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "FaqCreateIn": {
        "title": "FaqCreateIn",
        "required": [
          "title",
          "target",
          "faqCategory",
          "content"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/FaqTarget"
          },
          "faqCategory": {
            "$ref": "#/components/schemas/FaqCategory"
          },
          "content": {
            "title": "Content",
            "type": "string"
          }
        }
      },
      "FaqDetailOut": {
        "title": "FaqDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "title",
          "target",
          "faqCategory",
          "content",
          "createdBy",
          "updatedBy"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/FaqTarget"
          },
          "faqCategory": {
            "$ref": "#/components/schemas/FaqCategory"
          },
          "content": {
            "title": "Content",
            "type": "string"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 31,
            "type": "string"
          },
          "updatedBy": {
            "title": "Updatedby",
            "maxLength": 31,
            "type": "string"
          }
        }
      },
      "FaqItem": {
        "title": "FaqItem",
        "required": [
          "id",
          "title",
          "content"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "FAQ ID"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "content": {
            "title": "Content",
            "type": "string",
            "description": "本文"
          }
        }
      },
      "FaqListOut": {
        "title": "FaqListOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "title",
          "target",
          "faqCategory",
          "content"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/FaqTarget"
          },
          "faqCategory": {
            "$ref": "#/components/schemas/FaqCategory"
          },
          "content": {
            "title": "Content",
            "type": "string"
          }
        }
      },
      "FaqTarget": {
        "title": "FaqTarget",
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "質問ターゲット"
      },
      "FaqTargetChoicesOut": {
        "title": "FaqTargetChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "FaqTargetType": {
        "title": "FaqTargetType",
        "enum": [
          "user",
          "school",
          "company"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "FaqUpdateIn": {
        "title": "FaqUpdateIn",
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "target": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FaqTarget"
              }
            ],
            "nullable": true
          },
          "faqCategory": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FaqCategory"
              }
            ],
            "nullable": true
          },
          "content": {
            "title": "Content",
            "type": "string",
            "nullable": true
          }
        }
      },
      "FileDetailOut": {
        "title": "FileDetailOut",
        "required": [
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "type": "string"
          }
        }
      },
      "FolderConf": {
        "title": "FolderConf",
        "enum": [
          "user",
          "question"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "ForGeneralUserQuestionContentOut": {
        "title": "ForGeneralUserQuestionContentOut",
        "required": [
          "targetTime",
          "passRate",
          "trialUserCount",
          "questionResultStatus"
        ],
        "type": "object",
        "properties": {
          "questionTypeLabel": {
            "title": "Questiontypelabel",
            "type": "string",
            "nullable": true
          },
          "questionType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/QuestionType"
              }
            ],
            "nullable": true
          },
          "targetTime": {
            "title": "Targettime",
            "type": "integer",
            "description": "目標解答時間(分)",
            "nullable": true
          },
          "passRate": {
            "title": "Passrate",
            "maximum": 100.0,
            "minimum": 0.0,
            "type": "integer",
            "description": "合格率"
          },
          "trialUserCount": {
            "title": "Trialusercount",
            "minimum": 0.0,
            "type": "integer",
            "description": "挑戦者数(問題を開いた人数)"
          },
          "questionResultStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionResultStatus"
              }
            ],
            "description": "解答状態 `合格:正解をした問題に表示`, `解答中:正答しておらず、再解答可能な問題に表示`",
            "nullable": true
          }
        }
      },
      "ForSuUserListOut": {
        "title": "ForSuUserListOut",
        "required": [
          "id",
          "username",
          "displayName",
          "email",
          "lastName",
          "firstName",
          "organizationName",
          "lastLogin"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ユーザID"
          },
          "username": {
            "title": "Username",
            "type": "string",
            "description": "アカウント名"
          },
          "displayName": {
            "title": "Displayname",
            "type": "string",
            "description": "ユーザー名(表示名)"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "description": "メールアドレス"
          },
          "lastName": {
            "title": "Lastname",
            "type": "string",
            "description": "姓"
          },
          "firstName": {
            "title": "Firstname",
            "type": "string",
            "description": "名"
          },
          "organizationName": {
            "title": "Organizationname",
            "type": "string",
            "description": "組織名"
          },
          "lastLogin": {
            "title": "Lastlogin",
            "type": "string",
            "description": "最終ログイン日時",
            "format": "date-time"
          }
        }
      },
      "ForSuUserProfileOut": {
        "title": "ForSuUserProfileOut",
        "required": [
          "username",
          "email",
          "lastName",
          "firstName",
          "schoolName",
          "schoolFacultyName",
          "schoolDepartmentName",
          "displayName",
          "extraInfo",
          "graduationDate",
          "prefectureId",
          "birthday",
          "mostUsedPgLangId",
          "currentJob",
          "receiveEmails"
        ],
        "type": "object",
        "properties": {
          "username": {
            "title": "Username",
            "type": "string",
            "description": "ユーザー名"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "description": "メールアドレス"
          },
          "lastName": {
            "title": "Lastname",
            "type": "string",
            "description": "性"
          },
          "firstName": {
            "title": "Firstname",
            "type": "string",
            "description": "名"
          },
          "schoolName": {
            "title": "Schoolname",
            "type": "string",
            "description": "学校名",
            "nullable": true
          },
          "schoolFacultyName": {
            "title": "Schoolfacultyname",
            "type": "string",
            "description": "学部名",
            "nullable": true
          },
          "schoolDepartmentName": {
            "title": "Schooldepartmentname",
            "type": "string",
            "description": "学科名",
            "nullable": true
          },
          "displayName": {
            "title": "Displayname",
            "type": "string",
            "description": "表示名"
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足情報"
          },
          "graduationDate": {
            "title": "Graduationdate",
            "type": "string",
            "description": "卒業年月日",
            "format": "date",
            "nullable": true
          },
          "prefectureId": {
            "title": "Prefectureid",
            "type": "integer",
            "description": "都道府県ID",
            "nullable": true
          },
          "birthday": {
            "title": "Birthday",
            "type": "string",
            "description": "生年月日",
            "format": "date",
            "nullable": true
          },
          "mostUsedPgLangId": {
            "title": "Mostusedpglangid",
            "type": "integer",
            "description": "よく使うプログラミング言語ID",
            "nullable": true
          },
          "currentJob": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrentJob"
              }
            ],
            "description": "現在の職業",
            "nullable": true
          },
          "receiveEmails": {
            "title": "Receiveemails",
            "type": "boolean",
            "description": "メール配信を希望するか"
          }
        }
      },
      "FormatCheckResult": {
        "title": "FormatCheckResult",
        "required": [
          "testCaseId",
          "errorMessage",
          "isPassed"
        ],
        "type": "object",
        "properties": {
          "testCaseId": {
            "title": "Testcaseid",
            "minimum": 1.0,
            "type": "integer"
          },
          "errorMessage": {
            "title": "Errormessage",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "フォーマットチェックエラー"
          },
          "isPassed": {
            "title": "Ispassed",
            "type": "boolean"
          }
        }
      },
      "FrameworkChoicesOut": {
        "title": "FrameworkChoicesOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "FrameworkCreateIn": {
        "title": "FrameworkCreateIn",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 35,
            "type": "string"
          }
        }
      },
      "FrameworkDetailOut": {
        "title": "FrameworkDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 35,
            "type": "string"
          }
        }
      },
      "FrameworkListOut": {
        "title": "FrameworkListOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 35,
            "type": "string"
          }
        }
      },
      "FrameworkOut": {
        "title": "FrameworkOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "フレームワークID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "名前"
          }
        }
      },
      "FrameworkUpdateIn": {
        "title": "FrameworkUpdateIn",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 35,
            "type": "string",
            "nullable": true
          }
        }
      },
      "FullMatchedAnswerSourceCode": {
        "title": "FullMatchedAnswerSourceCode",
        "required": [
          "contentId",
          "questionTitle",
          "sourceCode",
          "pgLangId",
          "pgLangName",
          "matchedUserList"
        ],
        "type": "object",
        "properties": {
          "contentId": {
            "title": "Contentid",
            "minimum": 1.0,
            "type": "integer",
            "description": "問題ID"
          },
          "questionTitle": {
            "title": "Questiontitle",
            "maxLength": 100,
            "type": "string",
            "description": "問題タイトル"
          },
          "sourceCode": {
            "title": "Sourcecode",
            "type": "string",
            "description": "ソースコード"
          },
          "pgLangId": {
            "title": "Pglangid",
            "minimum": 1.0,
            "type": "integer"
          },
          "pgLangName": {
            "title": "Pglangname",
            "maxLength": 35,
            "type": "string"
          },
          "matchedUserList": {
            "title": "Matcheduserlist",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FullMatchedAnswerUser"
            }
          }
        },
        "description": "解答の完全一致 完全一致したコード"
      },
      "FullMatchedAnswerUser": {
        "title": "FullMatchedAnswerUser",
        "required": [
          "userId",
          "username"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "title": "Userid",
            "minimum": 1.0,
            "type": "integer",
            "description": "参加者ID"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string",
            "description": "アカウント名"
          }
        },
        "description": "解答の完全一致 完全一致したコードの該当者"
      },
      "GeneralChatFileListOut": {
        "title": "GeneralChatFileListOut",
        "required": [
          "id",
          "createdAt",
          "fileName",
          "file",
          "expiresAt",
          "sender",
          "icon"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "チャットID"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日時",
            "format": "date-time"
          },
          "fileName": {
            "title": "Filename",
            "maxLength": 100,
            "type": "string",
            "description": "ファイル名"
          },
          "file": {
            "title": "File",
            "type": "string",
            "description": "ファイルURL"
          },
          "expiresAt": {
            "title": "Expiresat",
            "type": "string",
            "description": "有効期限",
            "format": "date-time"
          },
          "sender": {
            "title": "Sender",
            "type": "string",
            "description": "送信者"
          },
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "アイコンURL"
          }
        }
      },
      "GeneralChatListDetailOut": {
        "title": "GeneralChatListDetailOut",
        "required": [
          "id",
          "createdAt",
          "chatType",
          "message",
          "isOwn",
          "sender",
          "icon"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "チャットID"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日時",
            "format": "date-time"
          },
          "chatType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChatType"
              }
            ],
            "description": "1:メッセージ, 2:ファイル"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "メッセージ"
          },
          "isOwn": {
            "title": "Isown",
            "type": "boolean",
            "description": "自身のチャットか"
          },
          "sender": {
            "title": "Sender",
            "type": "string",
            "description": "チャット送信者の名前"
          },
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "チャット送信者のアイコン"
          },
          "file": {
            "title": "GeneralChatListFileOut",
            "anyOf": [
              {
                "$ref": "#/components/schemas/GeneralChatListFileOut"
              }
            ],
            "nullable": true
          }
        }
      },
      "GeneralChatListFileOut": {
        "title": "GeneralChatListFileOut",
        "required": [
          "fileName",
          "file",
          "expiresAt",
          "isExpired",
          "isDeleted"
        ],
        "type": "object",
        "properties": {
          "fileName": {
            "title": "Filename",
            "maxLength": 100,
            "type": "string",
            "description": "ファイル名"
          },
          "file": {
            "title": "File",
            "type": "string",
            "description": "ファイルURL"
          },
          "expiresAt": {
            "title": "Expiresat",
            "type": "string",
            "description": "有効期限",
            "format": "date-time"
          },
          "isExpired": {
            "title": "Isexpired",
            "type": "boolean",
            "description": "有効期限切れか"
          },
          "isDeleted": {
            "title": "Isdeleted",
            "type": "boolean",
            "description": "削除済みか"
          }
        }
      },
      "GeneralChatListOut": {
        "title": "GeneralChatListOut",
        "required": [
          "icon",
          "roomName",
          "subRoomName",
          "receiveScouts",
          "chatRoomType",
          "chats"
        ],
        "type": "object",
        "properties": {
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "ユーザーアイコン画像URL"
          },
          "roomName": {
            "title": "Roomname",
            "type": "string",
            "description": "チャットルーム名(ユーザー名)"
          },
          "subRoomName": {
            "title": "Subroomname",
            "type": "string",
            "description": "サブチャットルーム名(本名)"
          },
          "receiveScouts": {
            "title": "Receivescouts",
            "type": "boolean",
            "description": "スカウトを受け取るユーザーか"
          },
          "chatRoomType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChatRoomType"
              }
            ],
            "description": "1:企業, 2:学校, 3:エージェント"
          },
          "chats": {
            "title": "Chats",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeneralChatListDetailOut"
            }
          }
        }
      },
      "GeneralChatRoomCreateIn": {
        "title": "GeneralChatRoomCreateIn",
        "required": [
          "organizationId"
        ],
        "type": "object",
        "properties": {
          "organizationId": {
            "title": "Organizationid",
            "minimum": 1.0,
            "type": "integer",
            "description": "チャット相手の組織ID"
          },
          "chatRoomType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChatRoomType"
              }
            ],
            "description": "チャットルームタイプ(444だけ使う)",
            "nullable": true
          }
        }
      },
      "GeneralChatRoomCreateOut": {
        "title": "GeneralChatRoomCreateOut",
        "required": [
          "chatRoomId"
        ],
        "type": "object",
        "properties": {
          "chatRoomId": {
            "title": "Chatroomid",
            "type": "integer",
            "description": "チャットルームID"
          }
        }
      },
      "GeneralChatRoomListDetailOut": {
        "title": "GeneralChatRoomListDetailOut",
        "required": [
          "id",
          "icon",
          "roomName",
          "subRoomName",
          "chatPartnerType",
          "unreadCount",
          "lastSendTime",
          "chatRoomType",
          "organizationId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "チャットルームID"
          },
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "ユーザーアイコン画像URL"
          },
          "roomName": {
            "title": "Roomname",
            "type": "string",
            "description": "チャットルーム名"
          },
          "subRoomName": {
            "title": "Subroomname",
            "type": "string",
            "description": "サブチャットルーム名"
          },
          "chatPartnerType": {
            "title": "Chatpartnertype",
            "type": "string",
            "description": "チャット相手の種類"
          },
          "unreadCount": {
            "title": "Unreadcount",
            "type": "integer",
            "description": "未読数"
          },
          "lastSendTime": {
            "title": "Lastsendtime",
            "type": "string",
            "description": "最終更新日時",
            "format": "date-time"
          },
          "chatRoomType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChatRoomType"
              }
            ],
            "description": "チャットルームタイプ"
          },
          "receiveScouts": {
            "title": "Receivescouts",
            "type": "boolean",
            "description": "スカウトを受け取るユーザーか",
            "default": false,
            "nullable": true
          },
          "organizationId": {
            "title": "Organizationid",
            "type": "integer",
            "description": "チャットルーム組織ID"
          }
        }
      },
      "GeneralChatRoomListOut": {
        "title": "GeneralChatRoomListOut",
        "required": [
          "totalCount",
          "hasNext",
          "hasPrevious",
          "chatRooms"
        ],
        "type": "object",
        "properties": {
          "totalCount": {
            "title": "Totalcount",
            "minimum": 0.0,
            "type": "integer"
          },
          "hasNext": {
            "title": "Hasnext",
            "type": "boolean"
          },
          "hasPrevious": {
            "title": "Hasprevious",
            "type": "boolean"
          },
          "chatRooms": {
            "title": "Chatrooms",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeneralChatRoomListDetailOut"
            }
          }
        }
      },
      "GeneralChatSendFileIn": {
        "title": "GeneralChatSendFileIn",
        "required": [
          "fileName",
          "file"
        ],
        "type": "object",
        "properties": {
          "fileName": {
            "title": "Filename",
            "maxLength": 100,
            "type": "string",
            "description": "ファイル名"
          },
          "file": {
            "title": "File",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "ファイルURL"
          }
        }
      },
      "GeneralChatSendIn": {
        "title": "GeneralChatSendIn",
        "required": [
          "chatType"
        ],
        "type": "object",
        "properties": {
          "chatType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChatType"
              }
            ],
            "description": "1:メッセージ, 2:ファイル"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "メッセージ",
            "default": ""
          },
          "file": {
            "title": "GeneralChatSendFileIn",
            "anyOf": [
              {
                "$ref": "#/components/schemas/GeneralChatSendFileIn"
              }
            ],
            "nullable": true
          }
        }
      },
      "GeneralEventDetailOut": {
        "title": "GeneralEventDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "createdBy",
          "updatedBy",
          "name",
          "theme",
          "description",
          "image",
          "purpose",
          "purposeLabel",
          "hostId",
          "hostName",
          "isPublic",
          "showRanking",
          "organizationType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 180,
            "type": "string"
          },
          "updatedBy": {
            "title": "Updatedby",
            "maxLength": 180,
            "type": "string"
          },
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string"
          },
          "theme": {
            "title": "Theme",
            "maxLength": 100,
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "image": {
            "title": "Image",
            "type": "string"
          },
          "purpose": {
            "$ref": "#/components/schemas/EventPurpose"
          },
          "purposeLabel": {
            "title": "Purposelabel",
            "type": "string",
            "example": "プログラミングコンテスト"
          },
          "hostId": {
            "title": "Hostid",
            "minimum": 1.0,
            "type": "integer"
          },
          "hostName": {
            "title": "Hostname",
            "type": "string"
          },
          "isPublic": {
            "title": "Ispublic",
            "type": "boolean"
          },
          "showRanking": {
            "title": "Showranking",
            "type": "boolean"
          },
          "organizationType": {
            "$ref": "#/components/schemas/OrganizationType"
          }
        }
      },
      "GeneralEventListOut": {
        "title": "GeneralEventListOut",
        "required": [
          "totalCount",
          "hasNext",
          "hasPrevious",
          "events"
        ],
        "type": "object",
        "properties": {
          "totalCount": {
            "title": "Totalcount",
            "minimum": 0.0,
            "type": "integer"
          },
          "hasNext": {
            "title": "Hasnext",
            "type": "boolean"
          },
          "hasPrevious": {
            "title": "Hasprevious",
            "type": "boolean"
          },
          "events": {
            "title": "Events",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventListDetailOut"
            }
          }
        }
      },
      "GeneralEventThreadListOut": {
        "title": "GeneralEventThreadListOut",
        "required": [
          "id",
          "username",
          "icon",
          "body",
          "createdAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 0.0,
            "type": "integer",
            "description": "スレッドID"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string",
            "description": "投稿者アカウント名"
          },
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "アイコンURL"
          },
          "body": {
            "title": "Body",
            "type": "string",
            "description": "本文"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "GeneralPgLangDetailOut": {
        "title": "GeneralPgLangDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "monacoName",
          "langCode",
          "template",
          "isSql"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 35,
            "type": "string"
          },
          "monacoName": {
            "title": "Monaconame",
            "maxLength": 35,
            "type": "string"
          },
          "langCode": {
            "title": "Langcode",
            "maxLength": 35,
            "type": "string"
          },
          "template": {
            "title": "Template",
            "type": "string",
            "description": "問題テンプレート"
          },
          "isSql": {
            "title": "Issql",
            "type": "boolean",
            "description": "SQL言語か"
          }
        }
      },
      "GeneralQuestionChallengeListOut": {
        "title": "GeneralQuestionChallengeListOut",
        "required": [
          "id",
          "questionType",
          "questionTypeLabel",
          "challengerCount",
          "passedCount",
          "title",
          "targetTime",
          "difficulty",
          "contentCategoryName",
          "contentTopicName",
          "questionResultStatus",
          "questionResultStatusLabel"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "コンテンツID"
          },
          "questionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionType"
              }
            ],
            "description": "問題形式"
          },
          "questionTypeLabel": {
            "title": "Questiontypelabel",
            "type": "string",
            "description": "問題形式ラベル"
          },
          "challengerCount": {
            "title": "Challengercount",
            "minimum": 0.0,
            "type": "integer",
            "description": "挑戦者数"
          },
          "passedCount": {
            "title": "Passedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "合格者数"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "問題タイトル"
          },
          "targetTime": {
            "title": "Targettime",
            "type": "integer",
            "description": "目標解答時間"
          },
          "difficulty": {
            "title": "Difficulty",
            "type": "integer",
            "description": "難易度"
          },
          "contentCategoryName": {
            "title": "Contentcategoryname",
            "type": "string",
            "description": "カテゴリ名"
          },
          "contentTopicName": {
            "title": "Contenttopicname",
            "type": "string",
            "description": "トピック名"
          },
          "questionResultStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionResultStatusNoFail"
              }
            ],
            "description": "解答状況"
          },
          "questionResultStatusLabel": {
            "title": "Questionresultstatuslabel",
            "type": "string",
            "description": "解答状況ラベル"
          }
        }
      },
      "GeneralQuestionLearningListOut": {
        "title": "GeneralQuestionLearningListOut",
        "required": [
          "topic",
          "questions"
        ],
        "type": "object",
        "properties": {
          "topic": {
            "title": "Topic",
            "type": "string",
            "description": "トピック名"
          },
          "questions": {
            "title": "Questions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LearningQuestion"
            },
            "description": "問題"
          }
        }
      },
      "GeneralQuestionPracticeListOut": {
        "title": "GeneralQuestionPracticeListOut",
        "required": [
          "id",
          "questionType",
          "questionTypeLabel",
          "title",
          "difficulty",
          "contentCategoryName",
          "contentTopicName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "コンテンツID"
          },
          "questionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionType"
              }
            ],
            "description": "問題形式"
          },
          "questionTypeLabel": {
            "title": "Questiontypelabel",
            "type": "string",
            "description": "問題形式ラベル"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "問題タイトル"
          },
          "targetTime": {
            "title": "Targettime",
            "type": "integer",
            "description": "目標解答時間",
            "nullable": true
          },
          "difficulty": {
            "title": "Difficulty",
            "type": "integer",
            "description": "難易度"
          },
          "contentCategoryName": {
            "title": "Contentcategoryname",
            "type": "string",
            "description": "カテゴリ名"
          },
          "contentTopicName": {
            "title": "Contenttopicname",
            "type": "string",
            "description": "トピック名"
          }
        }
      },
      "GeneralRankingChallengeBaseOut": {
        "title": "GeneralRankingChallengeBaseOut",
        "required": [
          "icon",
          "displayName",
          "rank",
          "totalScoreOrTotalAnswer"
        ],
        "type": "object",
        "properties": {
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "アイコンURL"
          },
          "displayName": {
            "title": "Displayname",
            "maxLength": 31,
            "type": "string",
            "description": "ユーザー名(表示名)"
          },
          "rank": {
            "title": "Rank",
            "minimum": 1.0,
            "type": "integer",
            "description": "順位",
            "nullable": true
          },
          "totalScoreOrTotalAnswer": {
            "title": "Totalscoreortotalanswer",
            "minimum": 0.0,
            "type": "integer",
            "description": "獲得した得点もしくは正解した問題数"
          }
        }
      },
      "GeneralRankingChallengeOut": {
        "title": "GeneralRankingChallengeOut",
        "required": [
          "ownUser",
          "totalUserCount",
          "top10Users",
          "scoreForNextRank"
        ],
        "type": "object",
        "properties": {
          "ownUser": {
            "title": "Ownuser",
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralRankingChallengeBaseOut"
              }
            ],
            "description": "該当ユーザーのデータ"
          },
          "totalUserCount": {
            "title": "Totalusercount",
            "minimum": 0.0,
            "type": "integer",
            "description": "合計ユーザー数"
          },
          "top10Users": {
            "title": "Top10Users",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeneralRankingChallengeBaseOut"
            },
            "description": "上位10人のユーザ名とスコア"
          },
          "scoreForNextRank": {
            "title": "Scorefornextrank",
            "minimum": 1.0,
            "type": "integer",
            "description": "次の順位に上がるための残りスコア数",
            "nullable": true
          }
        }
      },
      "GeneralSchoolDepartmentSearchIn": {
        "title": "GeneralSchoolDepartmentSearchIn",
        "required": [
          "schoolMasterId",
          "techfulSchoolDivision"
        ],
        "type": "object",
        "properties": {
          "schoolMasterId": {
            "title": "Schoolmasterid",
            "minimum": 1.0,
            "type": "integer",
            "description": "学校マスタID"
          },
          "techfulSchoolDivision": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TechFulSchoolDivision"
              }
            ],
            "description": "学校区分ID 1:大学院(博士), 2:大学院(修士), 3:大学(学士), 4:高等専門学校, 5:短期大学, 6:専門学校, 7:高校, 8:小・中学校, 9:その他"
          }
        }
      },
      "GeneralSchoolDepartmentSearchOut": {
        "title": "GeneralSchoolDepartmentSearchOut",
        "required": [
          "facultyId",
          "facultyName",
          "facultyIsManual",
          "departmentId",
          "departmentName",
          "departmentIsManual"
        ],
        "type": "object",
        "properties": {
          "facultyId": {
            "title": "Facultyid",
            "type": "integer",
            "description": "学部ID"
          },
          "facultyName": {
            "title": "Facultyname",
            "type": "string",
            "description": "学部名"
          },
          "facultyIsManual": {
            "title": "Facultyismanual",
            "type": "boolean",
            "description": "手入力フラグ（学部）"
          },
          "departmentId": {
            "title": "Departmentid",
            "type": "integer",
            "description": "学科ID"
          },
          "departmentName": {
            "title": "Departmentname",
            "type": "string",
            "description": "学科名"
          },
          "departmentIsManual": {
            "title": "Departmentismanual",
            "type": "boolean",
            "description": "手入力フラグ（学科）"
          }
        },
        "description": "学部・学科マスター検索結果"
      },
      "GeneralSchoolMasterSearchIn": {
        "title": "GeneralSchoolMasterSearchIn",
        "required": [
          "schoolNameInitial",
          "techfulSchoolDivision"
        ],
        "type": "object",
        "properties": {
          "schoolNameInitial": {
            "title": "Schoolnameinitial",
            "type": "string",
            "description": "学校名フリガナ（カタカナ一文字）"
          },
          "techfulSchoolDivision": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TechFulSchoolDivision"
              }
            ],
            "description": "学校区分ID 1:大学院(博士), 2:大学院(修士), 3:大学(学士), 4:高等専門学校, 5:短期大学, 6:専門学校, 7:高校, 8:小・中学校, 9:その他"
          }
        }
      },
      "GeneralSchoolMasterSearchOut": {
        "title": "GeneralSchoolMasterSearchOut",
        "required": [
          "schoolMasterId",
          "schoolName",
          "schoolNameKana",
          "isManual"
        ],
        "type": "object",
        "properties": {
          "schoolMasterId": {
            "title": "Schoolmasterid",
            "type": "integer",
            "description": "学校マスタID"
          },
          "schoolName": {
            "title": "Schoolname",
            "type": "string",
            "description": "学校名"
          },
          "schoolNameKana": {
            "title": "Schoolnamekana",
            "type": "string",
            "description": "学校名カナ"
          },
          "isManual": {
            "title": "Ismanual",
            "type": "boolean",
            "description": "手入力フラグ"
          }
        },
        "description": "学校マスター検索結果"
      },
      "GeneralSessionDetailOut": {
        "title": "GeneralSessionDetailOut",
        "type": "object",
        "properties": {
          "session": {
            "title": "SessionDetailOut",
            "anyOf": [
              {
                "$ref": "#/components/schemas/app__schemas__general__sessions__general_session_detail_out__SessionDetailOut"
              }
            ],
            "nullable": true
          },
          "error": {
            "title": "GeneralSessionViewErrorOut",
            "anyOf": [
              {
                "$ref": "#/components/schemas/GeneralSessionViewErrorOut"
              }
            ],
            "nullable": true
          }
        }
      },
      "GeneralSessionListOut": {
        "title": "GeneralSessionListOut",
        "required": [
          "id",
          "sessionCode",
          "name",
          "startsAt",
          "endsAt",
          "sessionStatus",
          "sessionStatusLabel",
          "sessionUserCount",
          "isActive"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "セッションID"
          },
          "sessionCode": {
            "title": "Sessioncode",
            "type": "string",
            "description": "セッションコード"
          },
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string",
            "description": "セッション名"
          },
          "startsAt": {
            "title": "Startsat",
            "type": "string",
            "description": "セッション開始日時",
            "format": "date-time"
          },
          "endsAt": {
            "title": "Endsat",
            "type": "string",
            "description": "セッション終了日時",
            "format": "date-time"
          },
          "sessionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SessionStatus"
              }
            ],
            "description": "1:開催前, 2:開催中, 3:終了"
          },
          "sessionStatusLabel": {
            "title": "Sessionstatuslabel",
            "type": "string"
          },
          "sessionUserCount": {
            "title": "Sessionusercount",
            "minimum": 0.0,
            "type": "integer",
            "description": "セッション参加人数"
          },
          "isActive": {
            "title": "Isactive",
            "type": "boolean",
            "description": "セッションがアクティブか"
          }
        }
      },
      "GeneralSessionRankingBaseOut": {
        "title": "GeneralSessionRankingBaseOut",
        "required": [
          "order",
          "displayName",
          "score",
          "isHardQuestion"
        ],
        "type": "object",
        "properties": {
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順位"
          },
          "displayName": {
            "title": "Displayname",
            "maxLength": 31,
            "type": "string",
            "description": "表示名"
          },
          "score": {
            "title": "Score",
            "minimum": 0.0,
            "type": "integer",
            "description": "スコア"
          },
          "isHardQuestion": {
            "title": "Ishardquestion",
            "type": "boolean",
            "description": "高難易度の問題に解答しているか"
          },
          "prefecture": {
            "title": "Prefecture",
            "maxLength": 35,
            "type": "string",
            "description": "居住している都道府県",
            "nullable": true
          },
          "totalPass": {
            "title": "Totalpass",
            "minimum": 0.0,
            "type": "integer",
            "description": "合格問題数",
            "nullable": true
          },
          "elapsedTimeToTotalPass": {
            "title": "Elapsedtimetototalpass",
            "type": "integer",
            "description": "合計解答時間",
            "nullable": true
          }
        }
      },
      "GeneralSessionRankingOut": {
        "title": "GeneralSessionRankingOut",
        "required": [
          "userId",
          "order",
          "userCount",
          "rankingList"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "title": "Userid",
            "minimum": 1.0,
            "type": "integer",
            "description": "ユーザID"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順位"
          },
          "userCount": {
            "title": "Usercount",
            "minimum": 0.0,
            "type": "integer",
            "description": "セッション参加人数"
          },
          "rankingList": {
            "title": "Rankinglist",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeneralSessionRankingBaseOut"
            },
            "description": "limitで指定された人数の必要情報"
          }
        }
      },
      "GeneralSessionTermDetailOut": {
        "title": "GeneralSessionTermDetailOut",
        "required": [
          "id",
          "title",
          "content"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string",
            "description": "規約タイトル"
          },
          "content": {
            "title": "Content",
            "type": "string",
            "description": "本文"
          }
        }
      },
      "GeneralSessionViewErrorOut": {
        "title": "GeneralSessionViewErrorOut",
        "required": [
          "sessionName",
          "graduationYearRestrictionMin",
          "graduationYearRestrictionMax"
        ],
        "type": "object",
        "properties": {
          "sessionName": {
            "title": "Sessionname",
            "maxLength": 100,
            "type": "string",
            "description": "セッション名"
          },
          "hasViewPermission": {
            "title": "Hasviewpermission",
            "type": "boolean",
            "description": "一般ユーザ/スキルチェックユーザが通常/スキルチェックセッションを閲覧できるか",
            "default": true
          },
          "isSessionUser": {
            "title": "Issessionuser",
            "type": "boolean",
            "description": "セッション参加者か",
            "default": true
          },
          "isVerifiedSessionPassword": {
            "title": "Isverifiedsessionpassword",
            "type": "boolean",
            "description": "PW認証済み",
            "default": true
          },
          "isVerifiedGraduationYearRestriction": {
            "title": "Isverifiedgraduationyearrestriction",
            "type": "boolean",
            "description": "卒業年度制限を満たしているか",
            "default": true
          },
          "graduationYearRestrictionMin": {
            "title": "Graduationyearrestrictionmin",
            "type": "integer",
            "description": "卒業年度制限min",
            "nullable": true
          },
          "graduationYearRestrictionMax": {
            "title": "Graduationyearrestrictionmax",
            "type": "integer",
            "description": "卒業年度制限max",
            "nullable": true
          },
          "isAgreedSessionTerm": {
            "title": "Isagreedsessionterm",
            "type": "boolean",
            "description": "最新のセッション規約に同意済みか",
            "default": true
          },
          "isAgreedHrTerms": {
            "title": "Isagreedhrterms",
            "type": "boolean",
            "description": "最新の求人利用規約に同意済みか",
            "default": true
          }
        }
      },
      "GeneralTermDetailOut": {
        "title": "GeneralTermDetailOut",
        "required": [
          "hrPersonalIdInfo",
          "hrTermOfUse"
        ],
        "type": "object",
        "properties": {
          "hrPersonalIdInfo": {
            "$ref": "#/components/schemas/PersonalIdInfoTermDetailOut"
          },
          "hrTermOfUse": {
            "$ref": "#/components/schemas/TermOfUseDetailOut"
          }
        }
      },
      "GenerateAccessTokenIn": {
        "title": "GenerateAccessTokenIn",
        "required": [
          "id",
          "lifetime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "id"
          },
          "lifetime": {
            "title": "Lifetime",
            "type": "integer",
            "description": "有効期間[日]"
          }
        }
      },
      "GenerateAccessTokenOut": {
        "title": "GenerateAccessTokenOut",
        "required": [
          "id",
          "expiresAt",
          "token"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "id"
          },
          "expiresAt": {
            "title": "Expiresat",
            "type": "number",
            "description": "有効期限のタイムスタンプ"
          },
          "token": {
            "title": "Token",
            "type": "string",
            "description": "アクセス認証トークン"
          }
        }
      },
      "GetEventScoreStatsOut": {
        "title": "GetEventScoreStatsOut",
        "type": "object",
        "properties": {
          "rank": {
            "title": "Rank",
            "minimum": 0.0,
            "type": "integer",
            "description": "順位",
            "nullable": true
          },
          "participantCount": {
            "title": "Participantcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "参加者数",
            "default": 0
          },
          "passedCount": {
            "title": "Passedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "合格数",
            "nullable": true
          },
          "questionCount": {
            "title": "Questioncount",
            "minimum": 0.0,
            "type": "integer",
            "description": "問題数",
            "default": 0
          },
          "score": {
            "title": "Score",
            "minimum": 0.0,
            "type": "integer",
            "description": "スコア",
            "nullable": true
          }
        }
      },
      "GetEventUserRankingOut": {
        "title": "GetEventUserRankingOut",
        "required": [
          "rank",
          "userId",
          "username",
          "fullName",
          "score"
        ],
        "type": "object",
        "properties": {
          "rank": {
            "title": "Rank",
            "minimum": 1.0,
            "type": "integer",
            "description": "順位"
          },
          "userId": {
            "title": "Userid",
            "minimum": 1.0,
            "type": "integer",
            "description": "ユーザーID"
          },
          "username": {
            "title": "Username",
            "type": "string",
            "description": "ユーザー名"
          },
          "fullName": {
            "title": "Fullname",
            "type": "string",
            "description": "名前(SU, ST, 主催学校)",
            "nullable": true
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足(主催企業、学校)",
            "default": "",
            "nullable": true
          },
          "birthPrefecture": {
            "title": "Birthprefecture",
            "type": "string",
            "description": "出身都道府県",
            "nullable": true
          },
          "graduateAt": {
            "title": "Graduateat",
            "type": "string",
            "description": "卒業予定",
            "format": "date",
            "nullable": true
          },
          "organizationName": {
            "title": "Organizationname",
            "type": "string",
            "description": "学校/企業",
            "nullable": true
          },
          "score": {
            "title": "Score",
            "minimum": 0.0,
            "type": "integer",
            "description": "スコア"
          }
        }
      },
      "GetEventUsersListOut": {
        "title": "GetEventUsersListOut",
        "required": [
          "userId",
          "username"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "title": "Userid",
            "minimum": 1.0,
            "type": "integer",
            "description": "ユーザーID"
          },
          "username": {
            "title": "Username",
            "type": "string",
            "description": "ユーザー名"
          },
          "fullName": {
            "title": "Fullname",
            "type": "string",
            "description": "名前(SU, ST, 学校)",
            "nullable": true
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足(主催企業、学校)",
            "nullable": true
          },
          "prefecture": {
            "title": "Prefecture",
            "type": "string",
            "description": "都道府県(SU, ST, 学校, 主催、共催)",
            "nullable": true
          },
          "graduationDate": {
            "title": "Graduationdate",
            "type": "string",
            "description": "卒業予定・卒業年月(SU, ST, 学校)",
            "format": "date",
            "nullable": true
          },
          "organizationName": {
            "title": "Organizationname",
            "type": "string",
            "description": "所属",
            "nullable": true
          },
          "joinedAt": {
            "title": "Joinedat",
            "type": "string",
            "description": "参加日",
            "format": "date",
            "nullable": true
          }
        }
      },
      "GetFaqOut": {
        "title": "GetFaqOut",
        "required": [
          "faqCategory",
          "faqs"
        ],
        "type": "object",
        "properties": {
          "faqCategory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FaqCategory"
              }
            ],
            "description": "カテゴリ"
          },
          "faqs": {
            "title": "Faqs",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FaqItem"
            },
            "description": "FAQリスト"
          }
        }
      },
      "GetHeatmapSampleCaseListOut": {
        "title": "GetHeatmapSampleCaseListOut",
        "required": [
          "id",
          "displayTitle",
          "order",
          "industries",
          "occupations"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ヒートマップサンプルケースID"
          },
          "displayTitle": {
            "title": "Displaytitle",
            "type": "string",
            "description": "表示用タイトル"
          },
          "order": {
            "title": "Order",
            "minimum": 0.0,
            "type": "integer",
            "description": "並び順"
          },
          "industries": {
            "title": "Industries",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndustryItem"
            },
            "description": "業種"
          },
          "occupations": {
            "title": "Occupations",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OccupationItem"
            },
            "description": "職種"
          }
        }
      },
      "GetPDFManualDetailOut": {
        "title": "GetPDFManualDetailOut",
        "required": [
          "id",
          "title",
          "fileUrl",
          "target",
          "order",
          "createdAt",
          "updatedAt",
          "isIntegrated"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "fileUrl": {
            "title": "Fileurl",
            "type": "string",
            "description": "マニュアルURL"
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TargetAudienceType"
              }
            ],
            "description": "対象ユーザータイプ"
          },
          "order": {
            "title": "Order",
            "type": "integer",
            "description": "表示順"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日(yyyy年mm月dd日)",
            "format": "date"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "description": "最終更新日(yyyy年mm月dd日))",
            "format": "date"
          },
          "isIntegrated": {
            "title": "Isintegrated",
            "type": "boolean",
            "description": "統合版か"
          }
        }
      },
      "GetPDFManualOut": {
        "title": "GetPDFManualOut",
        "required": [
          "pdfs"
        ],
        "type": "object",
        "properties": {
          "integratedPdf": {
            "title": "GetPDFManualListOut",
            "anyOf": [
              {
                "$ref": "#/components/schemas/app__schemas__common__manuals__get_pdf_manual_list_out__GetPDFManualListOut"
              }
            ],
            "nullable": true
          },
          "pdfs": {
            "title": "Pdfs",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__common__manuals__get_pdf_manual_list_out__GetPDFManualListOut"
            }
          }
        },
        "description": "PDFマニュアル一覧取得レスポンス"
      },
      "GetQuestionSampleCaseResultsOut": {
        "title": "GetQuestionSampleCaseResultsOut",
        "required": [
          "resultStatus",
          "sampleCaseResults",
          "originalCaseResults"
        ],
        "type": "object",
        "properties": {
          "resultStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionAnswerResult"
              }
            ],
            "description": "全テストケースの結果取得済かどうか"
          },
          "sampleCaseResults": {
            "title": "Samplecaseresults",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SampleCaseResult"
            },
            "description": "サンプルケース結果"
          },
          "originalCaseResults": {
            "title": "Originalcaseresults",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OriginalCaseResult"
            },
            "description": "オリジナルケース結果"
          }
        }
      },
      "GetQuestionSampleCasesListOut": {
        "title": "GetQuestionSampleCasesListOut",
        "required": [
          "testCaseId",
          "order",
          "stdin",
          "stdout"
        ],
        "type": "object",
        "properties": {
          "testCaseId": {
            "title": "Testcaseid",
            "minimum": 1.0,
            "type": "integer",
            "description": "サンプルケースID"
          },
          "order": {
            "title": "Order",
            "minimum": 0.0,
            "type": "integer",
            "description": "並び順"
          },
          "stdin": {
            "title": "Stdin",
            "type": "string",
            "description": "入力値"
          },
          "stdout": {
            "title": "Stdout",
            "type": "string",
            "description": "出力値"
          }
        }
      },
      "GetSessionTestCaseResultsOut": {
        "title": "GetSessionTestCaseResultsOut",
        "required": [
          "testCaseResults",
          "resultStatus"
        ],
        "type": "object",
        "properties": {
          "testCaseResults": {
            "title": "Testcaseresults",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__general__sessions__get_session_question_test_case_results_out__TestCaseResult"
            },
            "description": "テストケース結果"
          },
          "passedTestCaseCount": {
            "title": "Passedtestcasecount",
            "minimum": 0.0,
            "type": "integer",
            "description": "合格テストケース数",
            "nullable": true
          },
          "totalTestCaseCount": {
            "title": "Totaltestcasecount",
            "minimum": 0.0,
            "type": "integer",
            "description": "全テストケース数",
            "nullable": true
          },
          "resultStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionAnswerResult"
              }
            ],
            "description": "解答結果"
          },
          "scores": {
            "title": "Scores",
            "allOf": [
              {
                "$ref": "#/components/schemas/app__schemas__general__sessions__get_session_question_test_case_results_out__ScoreStats"
              }
            ],
            "description": "得点情報",
            "nullable": true
          }
        }
      },
      "GetTestCaseResultsOut": {
        "title": "GetTestCaseResultsOut",
        "required": [
          "testCaseResults",
          "isDone",
          "recommendQuestions"
        ],
        "type": "object",
        "properties": {
          "testCaseResults": {
            "title": "Testcaseresults",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__general__questions__get_question_test_case_results_out__TestCaseResult"
            },
            "description": "サンプルケース結果"
          },
          "passedTestCaseCount": {
            "title": "Passedtestcasecount",
            "minimum": 0.0,
            "type": "integer",
            "description": "合格テストケース数",
            "nullable": true
          },
          "totalTestCaseCount": {
            "title": "Totaltestcasecount",
            "minimum": 0.0,
            "type": "integer",
            "description": "全テストケース数",
            "nullable": true
          },
          "isDone": {
            "title": "Isdone",
            "type": "boolean",
            "description": "全テストケースの結果取得済かどうか"
          },
          "scores": {
            "title": "Scores",
            "allOf": [
              {
                "$ref": "#/components/schemas/app__schemas__general__questions__get_question_test_case_results_out__ScoreStats"
              }
            ],
            "description": "得点情報",
            "nullable": true
          },
          "recommendQuestions": {
            "title": "Recommendquestions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecommendQuestion"
            },
            "description": "おすすめ問題リスト"
          }
        }
      },
      "GetTokenForm": {
        "title": "GetTokenForm",
        "required": [
          "username",
          "password"
        ],
        "type": "object",
        "properties": {
          "grant_type": {
            "title": "Grant Type",
            "pattern": "password",
            "type": "string"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "scope": {
            "title": "Scope",
            "type": "string",
            "default": ""
          },
          "client_id": {
            "title": "Client Id",
            "type": "string"
          },
          "client_secret": {
            "title": "Client Secret",
            "type": "string"
          }
        }
      },
      "GetVideoManualListOut": {
        "title": "GetVideoManualListOut",
        "required": [
          "id",
          "order",
          "title",
          "fileUrl"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "order": {
            "title": "Order",
            "minimum": 0.0,
            "type": "integer",
            "description": "並び順"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "fileUrl": {
            "title": "Fileurl",
            "type": "string",
            "description": "ファイルURL"
          }
        },
        "description": "ビデオマニュアル一覧取得レスポンス"
      },
      "HeatmapCellGroupByCategory": {
        "title": "HeatmapCellGroupByCategory",
        "required": [
          "categoryId",
          "category",
          "cellResultsByTopic"
        ],
        "type": "object",
        "properties": {
          "categoryId": {
            "title": "Categoryid",
            "minimum": 1.0,
            "type": "integer",
            "description": "カテゴリID"
          },
          "category": {
            "title": "Category",
            "type": "string",
            "description": "カテゴリ名"
          },
          "cellResultsByTopic": {
            "title": "Cellresultsbytopic",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HeatmapCellGroupByTopic"
            },
            "description": "トピック別のセル結果"
          }
        }
      },
      "HeatmapCellGroupByTopic": {
        "title": "HeatmapCellGroupByTopic",
        "required": [
          "topicId",
          "topic",
          "elementaryPassedCount",
          "intermediatePassedCount",
          "advancedPassedCount"
        ],
        "type": "object",
        "properties": {
          "topicId": {
            "title": "Topicid",
            "minimum": 1.0,
            "type": "integer",
            "description": "トピックID"
          },
          "topic": {
            "title": "Topic",
            "type": "string",
            "description": "トピック名"
          },
          "elementaryPassedCount": {
            "title": "Elementarypassedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "初級問題正解数"
          },
          "intermediatePassedCount": {
            "title": "Intermediatepassedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "中級問題正解数"
          },
          "advancedPassedCount": {
            "title": "Advancedpassedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "上級問題正解数"
          }
        }
      },
      "HttpMethodType": {
        "title": "HttpMethodType",
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "HTTPメソッド種類"
      },
      "IndustryChoicesOut": {
        "title": "IndustryChoicesOut",
        "required": [
          "id",
          "industryGroupId",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "industryGroupId": {
            "title": "Industrygroupid",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 50,
            "type": "string"
          }
        }
      },
      "IndustryGroupChoicesOut": {
        "title": "IndustryGroupChoicesOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 50,
            "type": "string"
          }
        }
      },
      "IndustryGroupDetailOut": {
        "title": "IndustryGroupDetailOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "業種ID"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string",
            "description": "業種名"
          }
        }
      },
      "IndustryItem": {
        "title": "IndustryItem",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "業界ID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "業界名"
          }
        }
      },
      "InfoListOut": {
        "title": "InfoListOut",
        "required": [
          "id",
          "title",
          "createdAt",
          "isViewed"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "ID"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日時",
            "format": "date-time"
          },
          "isViewed": {
            "title": "Isviewed",
            "type": "boolean",
            "description": "既読フラグ"
          }
        }
      },
      "InformationCreateIn": {
        "title": "InformationCreateIn",
        "required": [
          "title",
          "informationTarget",
          "body",
          "isUpdateInfo",
          "isPublished"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string"
          },
          "informationTarget": {
            "$ref": "#/components/schemas/InformationTarget"
          },
          "body": {
            "title": "Body",
            "type": "string"
          },
          "isUpdateInfo": {
            "title": "Isupdateinfo",
            "type": "boolean"
          },
          "isPublished": {
            "title": "Ispublished",
            "type": "boolean"
          }
        }
      },
      "InformationDashboardListOut": {
        "title": "InformationDashboardListOut",
        "required": [
          "id",
          "title",
          "body",
          "createdAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "インフォID"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "body": {
            "title": "Body",
            "type": "string",
            "description": "本文"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日時",
            "format": "date-time"
          }
        }
      },
      "InformationListOut": {
        "title": "InformationListOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "title",
          "informationTargetLabel",
          "isUpdateInfo",
          "isPublished"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string"
          },
          "informationTargetLabel": {
            "title": "Informationtargetlabel",
            "type": "string"
          },
          "isUpdateInfo": {
            "title": "Isupdateinfo",
            "type": "boolean"
          },
          "isPublished": {
            "title": "Ispublished",
            "type": "boolean"
          }
        }
      },
      "InformationTarget": {
        "title": "InformationTarget",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "description": "お知らせ表示対象"
      },
      "InformationTargetChoicesOut": {
        "title": "InformationTargetChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "InformationUpdateIn": {
        "title": "InformationUpdateIn",
        "required": [
          "informationTarget"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "informationTarget": {
            "$ref": "#/components/schemas/InformationTarget"
          },
          "body": {
            "title": "Body",
            "type": "string",
            "nullable": true
          },
          "isUpdateInfo": {
            "title": "Isupdateinfo",
            "type": "boolean",
            "nullable": true
          },
          "isPublished": {
            "title": "Ispublished",
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "IntentionalityChoicesOut": {
        "title": "IntentionalityChoicesOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 50,
            "type": "string"
          }
        }
      },
      "IntentionalityDetailOut": {
        "title": "IntentionalityDetailOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "志向性ID"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string",
            "description": "志向性名"
          }
        }
      },
      "IntroduceJobUserIn": {
        "title": "IntroduceJobUserIn",
        "required": [
          "message",
          "userScoutListUrl",
          "agentScoutManagementUrl"
        ],
        "type": "object",
        "properties": {
          "message": {
            "title": "Message",
            "type": "string",
            "description": "メッセージ"
          },
          "userScoutListUrl": {
            "title": "Userscoutlisturl",
            "type": "string",
            "description": "ユーザー選考管理画面URL(通知作成用)"
          },
          "agentScoutManagementUrl": {
            "title": "Agentscoutmanagementurl",
            "type": "string",
            "description": "ユーザー選考管理画面URL(通知作成用)"
          }
        }
      },
      "IntroducedJobListOut": {
        "title": "IntroducedJobListOut",
        "required": [
          "jobList",
          "username",
          "totalCount",
          "hasPrevious",
          "hasNext"
        ],
        "type": "object",
        "properties": {
          "jobList": {
            "title": "Joblist",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntroducedJobsListItem"
            },
            "description": "求人リスト"
          },
          "username": {
            "title": "Username",
            "type": "string",
            "description": "ユーザー名"
          },
          "totalCount": {
            "title": "Totalcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "求人総数"
          },
          "hasPrevious": {
            "title": "Hasprevious",
            "type": "boolean",
            "description": "前ページが存在するか"
          },
          "hasNext": {
            "title": "Hasnext",
            "type": "boolean",
            "description": "次ページが存在するか"
          }
        }
      },
      "IntroducedJobsListItem": {
        "title": "IntroducedJobsListItem",
        "required": [
          "jobId",
          "companyId",
          "companyName",
          "occupation",
          "title",
          "requiredPgLangs",
          "updatedAt",
          "createdAt",
          "jobBrowsingCount",
          "favoriteCount",
          "scoutedCount",
          "inSelectionCount",
          "offeredCount",
          "isPublished",
          "companyJobOrder"
        ],
        "type": "object",
        "properties": {
          "jobId": {
            "title": "Jobid",
            "minimum": 1.0,
            "type": "integer",
            "description": "求人ID(COMMON)"
          },
          "companyId": {
            "title": "Companyid",
            "minimum": 1.0,
            "type": "integer",
            "description": "企業ID(管理番号用)(STAFF)"
          },
          "companyName": {
            "title": "Companyname",
            "type": "string",
            "description": "企業名(COMMON)"
          },
          "occupation": {
            "title": "Occupation",
            "type": "string",
            "description": "職種名(COMMON)"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "求人名(COMMON)"
          },
          "workLocation": {
            "title": "Worklocation",
            "type": "string",
            "description": "勤務場所(HR)",
            "default": ""
          },
          "requiredSkillLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SkillLevel"
              }
            ],
            "description": "必要レベル(HR)",
            "nullable": true
          },
          "requiredPgLangs": {
            "title": "Requiredpglangs",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "必要言語(HR)"
          },
          "employmentStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmploymentStatus"
              }
            ],
            "description": "給与形態(HR)",
            "nullable": true
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "description": "更新日(HR)",
            "format": "date"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日(STAFF)",
            "format": "date"
          },
          "target": {
            "title": "Target",
            "type": "string",
            "description": "応募条件(HR)",
            "default": ""
          },
          "recruitmentNumbers": {
            "title": "Recruitmentnumbers",
            "type": "integer",
            "description": "募集人数(STAFF)",
            "nullable": true
          },
          "jobBrowsingCount": {
            "title": "Jobbrowsingcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "あしあと(STAFF)"
          },
          "favoriteCount": {
            "title": "Favoritecount",
            "minimum": 0.0,
            "type": "integer",
            "description": "お気に入り数(COMMON)"
          },
          "scoutedCount": {
            "title": "Scoutedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "紹介ユーザー数(HR)"
          },
          "inSelectionCount": {
            "title": "Inselectioncount",
            "minimum": 0.0,
            "type": "integer",
            "description": "選考中(HR)"
          },
          "offeredCount": {
            "title": "Offeredcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "内定数(HR)"
          },
          "isPublished": {
            "title": "Ispublished",
            "type": "boolean",
            "description": "公開済みか(STAFF)"
          },
          "companyJobOrder": {
            "title": "Companyjoborder",
            "minimum": 0.0,
            "type": "integer",
            "description": "企業求人順番(管理番号用)(STAFF)"
          },
          "isInSelection": {
            "title": "Isinselection",
            "type": "boolean",
            "description": "選考中か(HR)",
            "nullable": true
          }
        }
      },
      "InvitationSchoolUserIn": {
        "title": "InvitationSchoolUserIn",
        "required": [
          "email",
          "schoolUserType",
          "invitationMail"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "description": "メールアドレス",
            "format": "email"
          },
          "schoolUserType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SchoolUserType"
              }
            ],
            "description": "作成するユーザに付与する権限"
          },
          "invitationMail": {
            "title": "Invitationmail",
            "type": "string",
            "description": "招待メール"
          }
        }
      },
      "InvitationSchoolUserOut": {
        "title": "InvitationSchoolUserOut",
        "required": [
          "email",
          "schoolUserType",
          "invitationMail"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "description": "メールアドレス",
            "format": "email"
          },
          "schoolUserType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SchoolUserType"
              }
            ],
            "description": "作成するユーザに付与する権限"
          },
          "invitationMail": {
            "title": "Invitationmail",
            "type": "string",
            "description": "招待メール"
          }
        }
      },
      "JobAccessLogOut": {
        "title": "JobAccessLogOut",
        "required": [
          "userList",
          "logList"
        ],
        "type": "object",
        "properties": {
          "userList": {
            "title": "Userlist",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__manage__jobs__job_access_log_out__UserListOut"
            },
            "description": "ユーザー一覧"
          },
          "postingStartsAt": {
            "title": "Postingstartsat",
            "type": "string",
            "description": "掲載開始日",
            "format": "date",
            "nullable": true
          },
          "postingEndsAt": {
            "title": "Postingendsat",
            "type": "string",
            "description": "掲載終了日",
            "format": "date",
            "nullable": true
          },
          "logList": {
            "title": "Loglist",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogListOut"
            },
            "description": "週毎のアクセスログリスト"
          }
        }
      },
      "JobChangingStatus": {
        "title": "JobChangingStatus",
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "転職活動状況"
      },
      "JobChangingStatusChoicesOut": {
        "title": "JobChangingStatusChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "JobContentDetail": {
        "title": "JobContentDetail",
        "required": [
          "id",
          "title",
          "text",
          "order"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "text": {
            "title": "Text",
            "type": "string",
            "description": "内容"
          },
          "order": {
            "title": "Order",
            "type": "integer",
            "description": "並び順"
          }
        }
      },
      "JobContentIn": {
        "title": "JobContentIn",
        "required": [
          "title",
          "text",
          "order"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "text": {
            "title": "Text",
            "type": "string",
            "description": "内容"
          },
          "order": {
            "title": "Order",
            "minimum": 0.0,
            "type": "integer",
            "description": "並び順"
          }
        }
      },
      "JobContentOut": {
        "title": "JobContentOut",
        "required": [
          "title",
          "text",
          "order"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "text": {
            "title": "Text",
            "type": "string",
            "description": "内容"
          },
          "order": {
            "title": "Order",
            "type": "integer",
            "description": "並び順"
          }
        }
      },
      "JobCreateWorkingHourIn": {
        "title": "JobCreateWorkingHourIn",
        "required": [
          "startsAt",
          "endsAt"
        ],
        "type": "object",
        "properties": {
          "startsAt": {
            "title": "Startsat",
            "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]",
            "type": "string",
            "description": "開始時間"
          },
          "endsAt": {
            "title": "Endsat",
            "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]",
            "type": "string",
            "description": "終了時間"
          }
        }
      },
      "JobDetail": {
        "title": "JobDetail",
        "required": [
          "id",
          "selectionType",
          "postingStartsAt",
          "postingEndsAt",
          "skillLevel",
          "recruitmentNumbers",
          "passiveSmokingInitiative",
          "employmentStatus",
          "frameworks",
          "graduationYearFrom",
          "graduationYearTo",
          "salarySystem",
          "salaryMin",
          "salaryMax",
          "salaryMemo",
          "workingHourMemo",
          "title",
          "jobImage",
          "jobContent",
          "jobFeatures",
          "target",
          "workLocation",
          "contractPeriod",
          "probation",
          "salaryIncrease",
          "bonus",
          "hasOvertimeWorking",
          "overtimeWorkingDetail",
          "pgLangs",
          "prefectures",
          "holiday",
          "socialInsurance",
          "benefit",
          "trainingSystem",
          "selectionMethod",
          "submittedDocument",
          "contact",
          "companyPr",
          "createdAt",
          "createdBy",
          "updatedAt",
          "updatedBy"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "selectionType": {
            "title": "Selectiontype",
            "minimum": 0.0,
            "type": "integer",
            "description": "選考種別"
          },
          "postingStartsAt": {
            "title": "Postingstartsat",
            "type": "string",
            "description": "掲載開始日",
            "format": "date",
            "nullable": true
          },
          "postingEndsAt": {
            "title": "Postingendsat",
            "type": "string",
            "description": "掲載終了日",
            "format": "date",
            "nullable": true
          },
          "skillLevel": {
            "title": "Skilllevel",
            "type": "integer",
            "description": "スキルレベル",
            "nullable": true
          },
          "recruitmentNumbers": {
            "title": "Recruitmentnumbers",
            "type": "integer",
            "description": "採用人数",
            "nullable": true
          },
          "passiveSmokingInitiative": {
            "title": "Passivesmokinginitiative",
            "type": "integer",
            "description": "集合場所における受動喫煙防止の取り組み",
            "nullable": true
          },
          "employmentStatus": {
            "title": "Employmentstatus",
            "type": "integer",
            "description": "雇用形態",
            "nullable": true
          },
          "frameworks": {
            "title": "Frameworks",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__general__selections__general_get_selections__FrameworkDetail"
            },
            "description": "フレームワーク",
            "nullable": true
          },
          "graduationYearFrom": {
            "title": "Graduationyearfrom",
            "type": "integer",
            "description": "卒業年度開始年",
            "nullable": true
          },
          "graduationYearTo": {
            "title": "Graduationyearto",
            "type": "integer",
            "description": "卒業年度終了年",
            "nullable": true
          },
          "salarySystem": {
            "title": "Salarysystem",
            "type": "integer",
            "description": "給与形態",
            "nullable": true
          },
          "salaryMin": {
            "title": "Salarymin",
            "type": "integer",
            "description": "下限給与額",
            "nullable": true
          },
          "salaryMax": {
            "title": "Salarymax",
            "type": "integer",
            "description": "上限給与額",
            "nullable": true
          },
          "salaryMemo": {
            "title": "Salarymemo",
            "type": "string",
            "description": "給与補足"
          },
          "workingHourMemo": {
            "title": "Workinghourmemo",
            "type": "string",
            "description": "勤務時間補足"
          },
          "title": {
            "title": "Title",
            "maxLength": 63,
            "type": "string",
            "description": "求人タイトル"
          },
          "jobImage": {
            "title": "Jobimage",
            "type": "string",
            "description": "求人トップ画像"
          },
          "jobContent": {
            "title": "Jobcontent",
            "type": "string",
            "description": "仕事内容"
          },
          "jobFeatures": {
            "title": "Jobfeatures",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__general__selections__general_get_selections__JobFeatureDetail"
            },
            "description": "求人特徴",
            "nullable": true
          },
          "target": {
            "title": "Target",
            "type": "string",
            "description": "対象となる方"
          },
          "workLocation": {
            "title": "Worklocation",
            "type": "string",
            "description": "勤務地"
          },
          "contractPeriod": {
            "title": "Contractperiod",
            "maxLength": 127,
            "type": "string",
            "description": "契約期間"
          },
          "probation": {
            "title": "Probation",
            "type": "integer",
            "description": "試用期間"
          },
          "salaryIncrease": {
            "title": "Salaryincrease",
            "maxLength": 127,
            "type": "string",
            "description": "昇給"
          },
          "bonus": {
            "title": "Bonus",
            "type": "string",
            "description": "賞与"
          },
          "hasOvertimeWorking": {
            "title": "Hasovertimeworking",
            "type": "boolean",
            "description": "時間外勤務があるか"
          },
          "overtimeWorkingDetail": {
            "title": "Overtimeworkingdetail",
            "maxLength": 127,
            "type": "string",
            "description": "時間外勤務詳細"
          },
          "pgLangs": {
            "title": "Pglangs",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__general__selections__general_get_selections__PgLangDetail"
            },
            "description": "開発言語",
            "nullable": true
          },
          "prefectures": {
            "title": "Prefectures",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__general__selections__general_get_selections__PrefectureDtail"
            },
            "description": "都道府県",
            "nullable": true
          },
          "holiday": {
            "title": "Holiday",
            "type": "string",
            "description": "休日・休暇"
          },
          "socialInsurance": {
            "title": "Socialinsurance",
            "maxLength": 127,
            "type": "string",
            "description": "社会保険"
          },
          "benefit": {
            "title": "Benefit",
            "type": "string",
            "description": "福利厚生"
          },
          "trainingSystem": {
            "title": "Trainingsystem",
            "type": "string",
            "description": "研修制度"
          },
          "selectionMethod": {
            "title": "Selectionmethod",
            "type": "string",
            "description": "選考方法"
          },
          "submittedDocument": {
            "title": "Submitteddocument",
            "type": "string",
            "description": "提出書類"
          },
          "contact": {
            "title": "Contact",
            "type": "string",
            "description": "問い合わせ先"
          },
          "companyPr": {
            "title": "Companypr",
            "type": "string",
            "description": "企業PR"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日時",
            "format": "date-time"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 180,
            "type": "string",
            "description": "作成者"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "description": "更新日時",
            "format": "date-time"
          },
          "updatedBy": {
            "title": "Updatedby",
            "maxLength": 180,
            "type": "string",
            "description": "更新者"
          }
        }
      },
      "JobDetailDetailOut": {
        "title": "JobDetailDetailOut",
        "required": [
          "id",
          "organization",
          "selectionType",
          "postingStartsAt",
          "postingEndsAt",
          "skillLevel",
          "recruitmentNumbers",
          "passiveSmokingInitiative",
          "employmentStatus",
          "frameworks",
          "graduationYearFrom",
          "graduationYearTo",
          "salarySystem",
          "salaryMin",
          "salaryMax",
          "salaryMemo",
          "workingHourMemo",
          "title",
          "jobImage",
          "jobContent",
          "jobFeatures",
          "target",
          "workLocation",
          "contractPeriod",
          "probation",
          "salaryIncrease",
          "bonus",
          "hasOvertimeWorking",
          "overtimeWorkingDetail",
          "pgLangs",
          "prefectures",
          "holiday",
          "socialInsurance",
          "benefit",
          "trainingSystem",
          "selectionMethod",
          "submittedDocument",
          "contact",
          "companyPr",
          "createdAt",
          "createdBy",
          "updatedAt",
          "updatedBy",
          "isFavorite",
          "occupation",
          "workingHours",
          "selectionFlows",
          "recruitmentAndHiringStatuses",
          "vocationalAbilityStatuses",
          "employmentManagementStatuses",
          "jobContents",
          "isApplied",
          "skillLevelLabel",
          "selectionTypeLabel",
          "passiveSmokingInitiativeLabel"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "organization": {
            "title": "Organization",
            "allOf": [
              {
                "$ref": "#/components/schemas/app__schemas__general__jobs__job_detail_out__OrganizationDetail"
              }
            ],
            "description": "組織"
          },
          "selectionType": {
            "title": "Selectiontype",
            "minimum": 0.0,
            "type": "integer",
            "description": "選考種別"
          },
          "postingStartsAt": {
            "title": "Postingstartsat",
            "type": "string",
            "description": "掲載開始日",
            "format": "date",
            "nullable": true
          },
          "postingEndsAt": {
            "title": "Postingendsat",
            "type": "string",
            "description": "掲載終了日",
            "format": "date",
            "nullable": true
          },
          "skillLevel": {
            "title": "Skilllevel",
            "type": "integer",
            "description": "スキルレベル",
            "nullable": true
          },
          "recruitmentNumbers": {
            "title": "Recruitmentnumbers",
            "type": "integer",
            "description": "採用人数",
            "nullable": true
          },
          "passiveSmokingInitiative": {
            "title": "Passivesmokinginitiative",
            "type": "integer",
            "description": "集合場所における受動喫煙防止の取り組み",
            "nullable": true
          },
          "employmentStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmploymentStatus"
              }
            ],
            "description": "雇用形態",
            "nullable": true
          },
          "frameworks": {
            "title": "Frameworks",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__general__jobs__job_detail_out__FrameworkDetail"
            },
            "description": "フレームワーク",
            "nullable": true
          },
          "graduationYearFrom": {
            "title": "Graduationyearfrom",
            "type": "integer",
            "description": "卒業年度開始年",
            "nullable": true
          },
          "graduationYearTo": {
            "title": "Graduationyearto",
            "type": "integer",
            "description": "卒業年度終了年",
            "nullable": true
          },
          "salarySystem": {
            "title": "Salarysystem",
            "type": "integer",
            "description": "給与形態",
            "nullable": true
          },
          "salaryMin": {
            "title": "Salarymin",
            "type": "integer",
            "description": "下限給与額",
            "nullable": true
          },
          "salaryMax": {
            "title": "Salarymax",
            "type": "integer",
            "description": "上限給与額",
            "nullable": true
          },
          "salaryMemo": {
            "title": "Salarymemo",
            "type": "string",
            "description": "給与補足"
          },
          "workingHourMemo": {
            "title": "Workinghourmemo",
            "type": "string",
            "description": "勤務時間補足"
          },
          "title": {
            "title": "Title",
            "maxLength": 63,
            "type": "string",
            "description": "求人タイトル"
          },
          "jobImage": {
            "title": "Jobimage",
            "type": "string",
            "description": "求人トップ画像"
          },
          "jobContent": {
            "title": "Jobcontent",
            "type": "string",
            "description": "仕事内容"
          },
          "jobFeatures": {
            "title": "Jobfeatures",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__general__jobs__job_detail_out__JobFeatureDetail"
            },
            "description": "求人特徴",
            "nullable": true
          },
          "target": {
            "title": "Target",
            "type": "string",
            "description": "対象となる方"
          },
          "workLocation": {
            "title": "Worklocation",
            "type": "string",
            "description": "勤務地"
          },
          "contractPeriod": {
            "title": "Contractperiod",
            "maxLength": 127,
            "type": "string",
            "description": "契約期間"
          },
          "probation": {
            "title": "Probation",
            "type": "integer",
            "description": "試用期間"
          },
          "salaryIncrease": {
            "title": "Salaryincrease",
            "maxLength": 127,
            "type": "string",
            "description": "昇給"
          },
          "bonus": {
            "title": "Bonus",
            "type": "string",
            "description": "賞与"
          },
          "hasOvertimeWorking": {
            "title": "Hasovertimeworking",
            "type": "boolean",
            "description": "時間外勤務があるか"
          },
          "overtimeWorkingDetail": {
            "title": "Overtimeworkingdetail",
            "maxLength": 127,
            "type": "string",
            "description": "時間外勤務詳細"
          },
          "pgLangs": {
            "title": "Pglangs",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__general__jobs__job_detail_out__PgLangDetail"
            },
            "description": "開発言語",
            "nullable": true
          },
          "prefectures": {
            "title": "Prefectures",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__general__jobs__job_detail_out__PrefectureDtail"
            },
            "description": "都道府県",
            "nullable": true
          },
          "holiday": {
            "title": "Holiday",
            "type": "string",
            "description": "休日・休暇"
          },
          "socialInsurance": {
            "title": "Socialinsurance",
            "maxLength": 127,
            "type": "string",
            "description": "社会保険"
          },
          "benefit": {
            "title": "Benefit",
            "type": "string",
            "description": "福利厚生"
          },
          "trainingSystem": {
            "title": "Trainingsystem",
            "type": "string",
            "description": "研修制度"
          },
          "selectionMethod": {
            "title": "Selectionmethod",
            "type": "string",
            "description": "選考方法"
          },
          "submittedDocument": {
            "title": "Submitteddocument",
            "type": "string",
            "description": "提出書類"
          },
          "contact": {
            "title": "Contact",
            "type": "string",
            "description": "問い合わせ先"
          },
          "companyPr": {
            "title": "Companypr",
            "type": "string",
            "description": "企業PR"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日時",
            "format": "date-time"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 180,
            "type": "string",
            "description": "作成者"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "description": "更新日時",
            "format": "date-time"
          },
          "updatedBy": {
            "title": "Updatedby",
            "maxLength": 180,
            "type": "string",
            "description": "更新者"
          },
          "isFavorite": {
            "title": "Isfavorite",
            "type": "boolean",
            "description": "お気に入り済みかどうか"
          },
          "occupation": {
            "title": "Occupation",
            "allOf": [
              {
                "$ref": "#/components/schemas/OccupationDetail"
              }
            ],
            "description": "職種",
            "nullable": true
          },
          "workingHours": {
            "title": "Workinghours",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkingHourDetail"
            },
            "description": "勤務時間",
            "nullable": true
          },
          "selectionFlows": {
            "title": "Selectionflows",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectionFlowsDetail"
            },
            "description": "選考フロー",
            "nullable": true
          },
          "recruitmentAndHiringStatuses": {
            "title": "Recruitmentandhiringstatuses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecruitmentAndHiringStatusDetail"
            },
            "description": "募集採用に関する状況詳細",
            "nullable": true
          },
          "vocationalAbilityStatuses": {
            "title": "Vocationalabilitystatuses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VocationalAbilityStatusDetail"
            },
            "description": "職業能力開発・向上に関する状況詳細",
            "nullable": true
          },
          "employmentManagementStatuses": {
            "title": "Employmentmanagementstatuses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmploymentManagementStatusDetail"
            },
            "description": "企業における雇用管理に関する状況",
            "nullable": true
          },
          "jobContents": {
            "title": "Jobcontents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobContentDetail"
            },
            "description": "求人オリジナルコンテンツ",
            "nullable": true
          },
          "isApplied": {
            "title": "Isapplied",
            "type": "boolean",
            "description": "応募済みかどうか"
          },
          "skillLevelLabel": {
            "title": "Skilllevellabel",
            "type": "string",
            "description": "スキルラベル"
          },
          "selectionTypeLabel": {
            "title": "Selectiontypelabel",
            "type": "string",
            "description": "選考種別ラベル"
          },
          "passiveSmokingInitiativeLabel": {
            "title": "Passivesmokinginitiativelabel",
            "type": "string",
            "description": "集合場所における受動喫煙防止の取り組みラベル"
          }
        }
      },
      "JobDraftApplyingListOut": {
        "title": "JobDraftApplyingListOut",
        "required": [
          "jobDraftId",
          "title",
          "isReapplied",
          "occupationName",
          "companyName",
          "createdAt"
        ],
        "type": "object",
        "properties": {
          "jobDraftId": {
            "title": "Jobdraftid",
            "minimum": 1.0,
            "type": "integer",
            "description": "求人下書ID"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "isReapplied": {
            "title": "Isreapplied",
            "type": "boolean",
            "description": "再申請かどうか"
          },
          "occupationName": {
            "title": "Occupationname",
            "type": "string",
            "description": "職種"
          },
          "recruitmentNumbers": {
            "title": "Recruitmentnumbers",
            "type": "integer",
            "description": "採用人数",
            "nullable": true
          },
          "companyName": {
            "title": "Companyname",
            "type": "string",
            "description": "企業名"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日",
            "format": "date-time"
          }
        }
      },
      "JobDraftCreateIn": {
        "title": "JobDraftCreateIn",
        "required": [
          "postingStartsAt",
          "postingEndsAt",
          "employmentStatus",
          "occupationId",
          "passiveSmokingInitiative",
          "salarySystem",
          "salaryMin",
          "salaryMax",
          "salaryMemo",
          "workingHourMemo",
          "title",
          "jobContent",
          "workLocation",
          "contractPeriod",
          "probation",
          "hasOvertimeWorking",
          "holiday",
          "socialInsurance",
          "selectionType"
        ],
        "type": "object",
        "properties": {
          "postingStartsAt": {
            "title": "Postingstartsat",
            "type": "string",
            "description": "掲載開始日",
            "format": "date"
          },
          "postingEndsAt": {
            "title": "Postingendsat",
            "type": "string",
            "description": "掲載終了日",
            "format": "date"
          },
          "employmentStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmploymentStatus"
              }
            ],
            "description": "雇用形態 | 1:正社員, 2:インターン, 3:アルバイト･パート, 4:新卒, 5:契約社員, 6:業務委託, 7:嘱託社員"
          },
          "graduationYearFrom": {
            "title": "Graduationyearfrom",
            "minimum": 0.0,
            "type": "integer",
            "description": "卒業年度開始年",
            "nullable": true
          },
          "graduationYearTo": {
            "title": "Graduationyearto",
            "minimum": 0.0,
            "type": "integer",
            "description": "卒業年度終了年",
            "nullable": true
          },
          "occupationId": {
            "title": "Occupationid",
            "minimum": 1.0,
            "type": "integer",
            "description": "職種ID"
          },
          "skillLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SkillLevel"
              }
            ],
            "description": "スキルレベル",
            "nullable": true
          },
          "passiveSmokingInitiative": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PassiveSmokingInitiative"
              }
            ],
            "description": "集合場所における受動喫煙防止の取り組み | 1:なし, 2:敷地内禁煙あり, 3:屋内禁煙あり, 4:屋内原則禁煙あり, 5:屋内喫煙可, 6:屋外喫煙可, 7:その他、取り組みあり"
          },
          "pgLangIds": {
            "title": "Pglangids",
            "minimum": 1.0,
            "type": "array",
            "items": {
              "minimum": 1.0,
              "type": "integer"
            },
            "description": "PG言語ID"
          },
          "frameworkIds": {
            "title": "Frameworkids",
            "minimum": 1.0,
            "type": "array",
            "items": {
              "minimum": 1.0,
              "type": "integer"
            },
            "description": "フレームワークID"
          },
          "skillIds": {
            "title": "Skillids",
            "minimum": 1.0,
            "type": "array",
            "items": {
              "minimum": 1.0,
              "type": "integer"
            },
            "description": "スキルID"
          },
          "jobFeatureIds": {
            "title": "Jobfeatureids",
            "minimum": 1.0,
            "type": "array",
            "items": {
              "minimum": 1.0,
              "type": "integer"
            },
            "description": "求人特徴ID"
          },
          "recruitmentNumbers": {
            "title": "Recruitmentnumbers",
            "minimum": 0.0,
            "type": "integer",
            "description": "採用人数",
            "nullable": true
          },
          "prefectureIds": {
            "title": "Prefectureids",
            "minimum": 1.0,
            "type": "array",
            "items": {
              "minimum": 1.0,
              "type": "integer"
            },
            "description": "都道府県ID"
          },
          "salarySystem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SalarySystem"
              }
            ],
            "description": "給与形態 | 1:年収, 2:月給, 3:時給"
          },
          "salaryMin": {
            "title": "Salarymin",
            "minimum": 0.0,
            "type": "integer",
            "description": "下限給与額"
          },
          "salaryMax": {
            "title": "Salarymax",
            "minimum": 0.0,
            "type": "integer",
            "description": "上限給与額"
          },
          "salaryMemo": {
            "title": "Salarymemo",
            "type": "string",
            "description": "給与補足"
          },
          "workingHours": {
            "title": "Workinghours",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobCreateWorkingHourIn"
            }
          },
          "workingHourMemo": {
            "title": "Workinghourmemo",
            "type": "string",
            "description": "勤務時間補足"
          },
          "title": {
            "title": "Title",
            "maxLength": 63,
            "type": "string",
            "description": "タイトル"
          },
          "jobImage": {
            "title": "Jobimage",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "求人トップ画像",
            "default": ""
          },
          "jobContent": {
            "title": "Jobcontent",
            "minLength": 1,
            "type": "string",
            "description": "仕事内容"
          },
          "target": {
            "title": "Target",
            "type": "string",
            "description": "対象となる方",
            "default": ""
          },
          "workLocation": {
            "title": "Worklocation",
            "minLength": 1,
            "type": "string",
            "description": "勤務地"
          },
          "contractPeriod": {
            "title": "Contractperiod",
            "maxLength": 127,
            "minLength": 1,
            "type": "string",
            "description": "契約期間"
          },
          "probation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Probation"
              }
            ],
            "description": "試用期間 | 1:1ヶ月, 2:2ヶ月, 3:3ヶ月, 4:4ヶ月, 5:5ヶ月, 6:6ヶ月"
          },
          "salaryIncrease": {
            "title": "Salaryincrease",
            "maxLength": 127,
            "type": "string",
            "description": "昇給",
            "default": ""
          },
          "bonus": {
            "title": "Bonus",
            "maxLength": 127,
            "type": "string",
            "description": "賞与",
            "default": ""
          },
          "hasOvertimeWorking": {
            "title": "Hasovertimeworking",
            "type": "boolean",
            "description": "時間外勤務があるか"
          },
          "overtimeWorkingDetail": {
            "title": "Overtimeworkingdetail",
            "maxLength": 127,
            "type": "string",
            "description": "時間外勤務詳細",
            "default": ""
          },
          "holiday": {
            "title": "Holiday",
            "type": "string",
            "description": "休日・休暇"
          },
          "socialInsurance": {
            "title": "Socialinsurance",
            "maxLength": 127,
            "minLength": 1,
            "type": "string",
            "description": "社会保険"
          },
          "benefit": {
            "title": "Benefit",
            "type": "string",
            "description": "福利厚生",
            "default": ""
          },
          "selectionFlows": {
            "title": "Selectionflows",
            "maxLength": 50,
            "type": "array",
            "items": {
              "maxLength": 50,
              "type": "string"
            },
            "description": "選考フロー"
          },
          "trainingSystem": {
            "title": "Trainingsystem",
            "type": "string",
            "description": "研修制度",
            "default": ""
          },
          "selectionMethod": {
            "title": "Selectionmethod",
            "type": "string",
            "description": "選考方法",
            "default": ""
          },
          "submittedDocument": {
            "title": "Submitteddocument",
            "type": "string",
            "description": "提出書類",
            "default": ""
          },
          "contact": {
            "title": "Contact",
            "type": "string",
            "description": "問い合わせ先",
            "default": ""
          },
          "companyPr": {
            "title": "Companypr",
            "type": "string",
            "description": "企業PR",
            "default": ""
          },
          "recruitmentAndHiringStatuses": {
            "title": "Recruitmentandhiringstatuses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecruitmentAndHiringStatusIn"
            },
            "description": "募集採用に関する状況詳細"
          },
          "vocationalAbilityStatuses": {
            "title": "Vocationalabilitystatuses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VocationalAbilityStatusIn"
            },
            "description": "職業能力開発・向上に関する状況詳細"
          },
          "employmentManagementStatuses": {
            "title": "Employmentmanagementstatuses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmploymentManagementStatusIn"
            },
            "description": "企業における雇用管理に関する状況"
          },
          "jobContents": {
            "title": "Jobcontents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobContentIn"
            },
            "description": "求人オリジナルコンテンツ"
          },
          "jobId": {
            "title": "Jobid",
            "minimum": 1.0,
            "type": "integer",
            "description": "求人ID",
            "nullable": true
          },
          "organizationId": {
            "title": "Organizationid",
            "minimum": 1.0,
            "type": "integer",
            "description": "省略時は自組織に設定",
            "nullable": true
          },
          "selectionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobSelectionType"
              }
            ],
            "description": "選考種別 | 1:エージェント経由, 2:自社選考"
          }
        }
      },
      "JobDraftDetailOut": {
        "title": "JobDraftDetailOut",
        "required": [
          "companyName",
          "updatedAt",
          "selectionType",
          "selectionTypeLabel",
          "postingStartsAt",
          "postingEndsAt",
          "employmentStatus",
          "employmentStatusLabel",
          "occupation",
          "passiveSmokingInitiativeLabel",
          "pgLangs",
          "frameworks",
          "skills",
          "jobFeatures",
          "prefectures",
          "salarySystem",
          "salaryMemo",
          "workingHourMemo",
          "title",
          "jobContent",
          "workLocation",
          "contractPeriod",
          "probation",
          "probationLabel",
          "hasOvertimeWorking",
          "holiday",
          "socialInsurance",
          "jobId",
          "jobDraftId"
        ],
        "type": "object",
        "properties": {
          "organizationId": {
            "title": "Organizationid",
            "minimum": 1.0,
            "type": "integer",
            "description": "組織ID",
            "nullable": true
          },
          "companyName": {
            "title": "Companyname",
            "type": "string",
            "description": "会社名"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "description": "更新日時",
            "format": "date-time"
          },
          "selectionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobSelectionType"
              }
            ],
            "description": "選考種別 | 1:エージェント経由, 2:自社選考"
          },
          "selectionTypeLabel": {
            "title": "Selectiontypelabel",
            "type": "string",
            "description": "選考種別ラベル"
          },
          "postingStartsAt": {
            "title": "Postingstartsat",
            "type": "string",
            "description": "掲載開始日",
            "format": "date"
          },
          "postingEndsAt": {
            "title": "Postingendsat",
            "type": "string",
            "description": "掲載終了日",
            "format": "date"
          },
          "employmentStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmploymentStatus"
              }
            ],
            "description": "雇用形態 | 1:正社員, 2:インターン, 3:アルバイト･パート, 4:新卒, 5:契約社員, 6:業務委託, 7:嘱託社員"
          },
          "employmentStatusLabel": {
            "title": "Employmentstatuslabel",
            "type": "string",
            "description": "雇用形態ラベル"
          },
          "graduationYearFrom": {
            "title": "Graduationyearfrom",
            "minimum": 0.0,
            "type": "integer",
            "description": "卒業年度開始年",
            "nullable": true
          },
          "graduationYearTo": {
            "title": "Graduationyearto",
            "minimum": 0.0,
            "type": "integer",
            "description": "卒業年度終了年",
            "nullable": true
          },
          "occupation": {
            "title": "Occupation",
            "allOf": [
              {
                "$ref": "#/components/schemas/OccupationOut"
              }
            ],
            "description": "職種"
          },
          "skillLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SkillLevel"
              }
            ],
            "description": "スキルレベル",
            "nullable": true
          },
          "skillLevelLabel": {
            "title": "Skilllevellabel",
            "type": "string",
            "description": "スキルレベルラベル",
            "default": ""
          },
          "passiveSmokingInitiative": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PassiveSmokingInitiative"
              }
            ],
            "description": "集合場所における受動喫煙防止の取り組み | 1:なし, 2:敷地内禁煙あり, 3:屋内禁煙あり, 4:屋内原則禁煙あり, 5:屋内喫煙可, 6:屋外喫煙可, 7:その他、取り組みあり",
            "nullable": true
          },
          "passiveSmokingInitiativeLabel": {
            "title": "Passivesmokinginitiativelabel",
            "type": "string",
            "description": "集合場所における受動喫煙防止の取り組みラベル"
          },
          "pgLangs": {
            "title": "Pglangs",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PgLangSimpleOut"
            },
            "description": "PG言語"
          },
          "frameworks": {
            "title": "Frameworks",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FrameworkOut"
            },
            "description": "フレームワークID"
          },
          "skills": {
            "title": "Skills",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SkillOut"
            },
            "description": "スキルID"
          },
          "jobFeatures": {
            "title": "Jobfeatures",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobFeatureOut"
            },
            "description": "求人特徴ID"
          },
          "recruitmentNumbers": {
            "title": "Recruitmentnumbers",
            "minimum": 0.0,
            "type": "integer",
            "description": "採用人数",
            "nullable": true
          },
          "prefectures": {
            "title": "Prefectures",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrefectureOut"
            },
            "description": "都道府県"
          },
          "salarySystem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SalarySystem"
              }
            ],
            "description": "給与形態 | 1:年収, 2:月給, 3:時給"
          },
          "salaryMin": {
            "title": "Salarymin",
            "minimum": 0.0,
            "type": "integer",
            "description": "下限給与額",
            "nullable": true
          },
          "salaryMax": {
            "title": "Salarymax",
            "minimum": 0.0,
            "type": "integer",
            "description": "上限給与額",
            "nullable": true
          },
          "salaryMemo": {
            "title": "Salarymemo",
            "type": "string",
            "description": "給与補足"
          },
          "workingHours": {
            "title": "Workinghours",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkingHourOut"
            }
          },
          "workingHourMemo": {
            "title": "Workinghourmemo",
            "type": "string",
            "description": "勤務時間補足"
          },
          "title": {
            "title": "Title",
            "maxLength": 63,
            "type": "string",
            "description": "タイトル"
          },
          "jobImage": {
            "title": "Jobimage",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "求人トップ画像",
            "default": ""
          },
          "jobContent": {
            "title": "Jobcontent",
            "minLength": 0,
            "type": "string",
            "description": "仕事内容"
          },
          "target": {
            "title": "Target",
            "type": "string",
            "description": "対象となる方",
            "default": ""
          },
          "workLocation": {
            "title": "Worklocation",
            "minLength": 0,
            "type": "string",
            "description": "勤務地"
          },
          "contractPeriod": {
            "title": "Contractperiod",
            "maxLength": 127,
            "minLength": 0,
            "type": "string",
            "description": "契約期間"
          },
          "probation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Probation"
              }
            ],
            "description": "試用期間 | 1:1ヶ月, 2:2ヶ月, 3:3ヶ月, 4:4ヶ月, 5:5ヶ月, 6:6ヶ月"
          },
          "probationLabel": {
            "title": "Probationlabel",
            "type": "string",
            "description": "試用期間ラベル"
          },
          "salaryIncrease": {
            "title": "Salaryincrease",
            "maxLength": 127,
            "type": "string",
            "description": "昇給",
            "default": ""
          },
          "bonus": {
            "title": "Bonus",
            "maxLength": 127,
            "type": "string",
            "description": "賞与",
            "default": ""
          },
          "hasOvertimeWorking": {
            "title": "Hasovertimeworking",
            "type": "boolean",
            "description": "時間外勤務があるか"
          },
          "overtimeWorkingDetail": {
            "title": "Overtimeworkingdetail",
            "maxLength": 127,
            "type": "string",
            "description": "時間外勤務詳細",
            "default": ""
          },
          "holiday": {
            "title": "Holiday",
            "type": "string",
            "description": "休日・休暇"
          },
          "socialInsurance": {
            "title": "Socialinsurance",
            "maxLength": 127,
            "minLength": 0,
            "type": "string",
            "description": "社会保険"
          },
          "benefit": {
            "title": "Benefit",
            "type": "string",
            "description": "福利厚生",
            "default": ""
          },
          "selectionFlows": {
            "title": "Selectionflows",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectionFlowOut"
            },
            "description": "選考フロー"
          },
          "trainingSystem": {
            "title": "Trainingsystem",
            "type": "string",
            "description": "研修制度",
            "default": ""
          },
          "selectionMethod": {
            "title": "Selectionmethod",
            "type": "string",
            "description": "選考方法",
            "default": ""
          },
          "submittedDocument": {
            "title": "Submitteddocument",
            "type": "string",
            "description": "提出書類",
            "default": ""
          },
          "contact": {
            "title": "Contact",
            "type": "string",
            "description": "問い合わせ先",
            "default": ""
          },
          "companyPr": {
            "title": "Companypr",
            "type": "string",
            "description": "企業PR",
            "default": ""
          },
          "recruitmentAndHiringStatuses": {
            "title": "Recruitmentandhiringstatuses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecruitmentAndHiringStatusOut"
            },
            "description": "募集採用に関する状況詳細"
          },
          "vocationalAbilityStatuses": {
            "title": "Vocationalabilitystatuses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VocationalAbilityStatusOut"
            },
            "description": "職業能力開発・向上に関する状況詳細"
          },
          "employmentManagementStatuses": {
            "title": "Employmentmanagementstatuses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmploymentManagementStatusOut"
            },
            "description": "企業における雇用管理に関する状況"
          },
          "jobContents": {
            "title": "Jobcontents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobContentOut"
            },
            "description": "求人オリジナルコンテンツ"
          },
          "jobId": {
            "title": "Jobid",
            "minimum": 1.0,
            "type": "integer",
            "description": "求人ID",
            "nullable": true
          },
          "jobDraftId": {
            "title": "Jobdraftid",
            "minimum": 1.0,
            "type": "integer",
            "description": "求人下書ID"
          },
          "rejectedReason": {
            "title": "Rejectedreason",
            "type": "string",
            "description": "却下理由",
            "default": ""
          }
        }
      },
      "JobDraftListOut": {
        "title": "JobDraftListOut",
        "required": [
          "jobDraftId",
          "jobDraftStatus",
          "jobDraftStatusLabel",
          "title",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "jobId": {
            "title": "Jobid",
            "minimum": 1.0,
            "type": "integer",
            "description": "求人ID",
            "nullable": true
          },
          "jobDraftId": {
            "title": "Jobdraftid",
            "minimum": 1.0,
            "type": "integer",
            "description": "求人下書ID"
          },
          "jobDraftStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobDraftStatus"
              }
            ],
            "description": "下書状況 | 1:編集中, 2:申請中, 3:承認済, 9:却下"
          },
          "jobDraftStatusLabel": {
            "title": "Jobdraftstatuslabel",
            "type": "string",
            "description": "下書状況ラベル"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "prefectures": {
            "title": "Prefectures",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "勤務場所"
          },
          "skillLevelLabel": {
            "title": "Skilllevellabel",
            "type": "string",
            "description": "スキルレベルラベル",
            "default": ""
          },
          "employmentStatusLabel": {
            "title": "Employmentstatuslabel",
            "type": "string",
            "description": "雇用形態ラベル",
            "default": ""
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "description": "更新日",
            "format": "date-time"
          }
        }
      },
      "JobDraftRejectIn": {
        "title": "JobDraftRejectIn",
        "required": [
          "rejectedReason"
        ],
        "type": "object",
        "properties": {
          "rejectedReason": {
            "title": "Rejectedreason",
            "type": "string",
            "description": "却下理由"
          }
        }
      },
      "JobDraftStatus": {
        "title": "JobDraftStatus",
        "enum": [
          1,
          2,
          3,
          9
        ],
        "type": "integer",
        "description": "求人下書ステータス"
      },
      "JobDraftStatusChoicesOut": {
        "title": "JobDraftStatusChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "JobDraftUpdateIn": {
        "title": "JobDraftUpdateIn",
        "required": [
          "postingStartsAt",
          "postingEndsAt",
          "employmentStatus",
          "occupationId",
          "passiveSmokingInitiative",
          "salarySystem",
          "salaryMin",
          "salaryMax",
          "salaryMemo",
          "workingHourMemo",
          "title",
          "jobContent",
          "workLocation",
          "contractPeriod",
          "probation",
          "hasOvertimeWorking",
          "holiday",
          "socialInsurance"
        ],
        "type": "object",
        "properties": {
          "postingStartsAt": {
            "title": "Postingstartsat",
            "type": "string",
            "description": "掲載開始日",
            "format": "date"
          },
          "postingEndsAt": {
            "title": "Postingendsat",
            "type": "string",
            "description": "掲載終了日",
            "format": "date"
          },
          "employmentStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmploymentStatus"
              }
            ],
            "description": "雇用形態 | 1:正社員, 2:インターン, 3:アルバイト･パート, 4:新卒, 5:契約社員, 6:業務委託, 7:嘱託社員"
          },
          "graduationYearFrom": {
            "title": "Graduationyearfrom",
            "minimum": 0.0,
            "type": "integer",
            "description": "卒業年度開始年",
            "nullable": true
          },
          "graduationYearTo": {
            "title": "Graduationyearto",
            "minimum": 0.0,
            "type": "integer",
            "description": "卒業年度終了年",
            "nullable": true
          },
          "occupationId": {
            "title": "Occupationid",
            "minimum": 1.0,
            "type": "integer",
            "description": "職種ID"
          },
          "skillLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SkillLevel"
              }
            ],
            "description": "スキルレベル",
            "nullable": true
          },
          "passiveSmokingInitiative": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PassiveSmokingInitiative"
              }
            ],
            "description": "集合場所における受動喫煙防止の取り組み | 1:なし, 2:敷地内禁煙あり, 3:屋内禁煙あり, 4:屋内原則禁煙あり, 5:屋内喫煙可, 6:屋外喫煙可, 7:その他、取り組みあり"
          },
          "pgLangIds": {
            "title": "Pglangids",
            "minimum": 1.0,
            "type": "array",
            "items": {
              "minimum": 1.0,
              "type": "integer"
            },
            "description": "PG言語ID"
          },
          "frameworkIds": {
            "title": "Frameworkids",
            "minimum": 1.0,
            "type": "array",
            "items": {
              "minimum": 1.0,
              "type": "integer"
            },
            "description": "フレームワークID"
          },
          "skillIds": {
            "title": "Skillids",
            "minimum": 1.0,
            "type": "array",
            "items": {
              "minimum": 1.0,
              "type": "integer"
            },
            "description": "スキルID"
          },
          "jobFeatureIds": {
            "title": "Jobfeatureids",
            "minimum": 1.0,
            "type": "array",
            "items": {
              "minimum": 1.0,
              "type": "integer"
            },
            "description": "求人特徴ID"
          },
          "recruitmentNumbers": {
            "title": "Recruitmentnumbers",
            "minimum": 0.0,
            "type": "integer",
            "description": "採用人数",
            "nullable": true
          },
          "prefectureIds": {
            "title": "Prefectureids",
            "minimum": 1.0,
            "type": "array",
            "items": {
              "minimum": 1.0,
              "type": "integer"
            },
            "description": "都道府県ID"
          },
          "salarySystem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SalarySystem"
              }
            ],
            "description": "給与形態 | 1:年収, 2:月給, 3:時給"
          },
          "salaryMin": {
            "title": "Salarymin",
            "minimum": 0.0,
            "type": "integer",
            "description": "下限給与額"
          },
          "salaryMax": {
            "title": "Salarymax",
            "minimum": 0.0,
            "type": "integer",
            "description": "上限給与額"
          },
          "salaryMemo": {
            "title": "Salarymemo",
            "type": "string",
            "description": "給与補足"
          },
          "workingHours": {
            "title": "Workinghours",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobCreateWorkingHourIn"
            }
          },
          "workingHourMemo": {
            "title": "Workinghourmemo",
            "type": "string",
            "description": "勤務時間補足"
          },
          "title": {
            "title": "Title",
            "maxLength": 63,
            "type": "string",
            "description": "タイトル"
          },
          "jobImage": {
            "title": "Jobimage",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "求人トップ画像",
            "default": ""
          },
          "jobContent": {
            "title": "Jobcontent",
            "minLength": 1,
            "type": "string",
            "description": "仕事内容"
          },
          "target": {
            "title": "Target",
            "type": "string",
            "description": "対象となる方",
            "default": ""
          },
          "workLocation": {
            "title": "Worklocation",
            "minLength": 1,
            "type": "string",
            "description": "勤務地"
          },
          "contractPeriod": {
            "title": "Contractperiod",
            "maxLength": 127,
            "minLength": 1,
            "type": "string",
            "description": "契約期間"
          },
          "probation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Probation"
              }
            ],
            "description": "試用期間 | 1:1ヶ月, 2:2ヶ月, 3:3ヶ月, 4:4ヶ月, 5:5ヶ月, 6:6ヶ月"
          },
          "salaryIncrease": {
            "title": "Salaryincrease",
            "maxLength": 127,
            "type": "string",
            "description": "昇給",
            "default": ""
          },
          "bonus": {
            "title": "Bonus",
            "maxLength": 127,
            "type": "string",
            "description": "賞与",
            "default": ""
          },
          "hasOvertimeWorking": {
            "title": "Hasovertimeworking",
            "type": "boolean",
            "description": "時間外勤務があるか"
          },
          "overtimeWorkingDetail": {
            "title": "Overtimeworkingdetail",
            "maxLength": 127,
            "type": "string",
            "description": "時間外勤務詳細",
            "default": ""
          },
          "holiday": {
            "title": "Holiday",
            "type": "string",
            "description": "休日・休暇"
          },
          "socialInsurance": {
            "title": "Socialinsurance",
            "maxLength": 127,
            "minLength": 1,
            "type": "string",
            "description": "社会保険"
          },
          "benefit": {
            "title": "Benefit",
            "type": "string",
            "description": "福利厚生",
            "default": ""
          },
          "selectionFlows": {
            "title": "Selectionflows",
            "maxLength": 50,
            "type": "array",
            "items": {
              "maxLength": 50,
              "type": "string"
            },
            "description": "選考フロー"
          },
          "trainingSystem": {
            "title": "Trainingsystem",
            "type": "string",
            "description": "研修制度",
            "default": ""
          },
          "selectionMethod": {
            "title": "Selectionmethod",
            "type": "string",
            "description": "選考方法",
            "default": ""
          },
          "submittedDocument": {
            "title": "Submitteddocument",
            "type": "string",
            "description": "提出書類",
            "default": ""
          },
          "contact": {
            "title": "Contact",
            "type": "string",
            "description": "問い合わせ先",
            "default": ""
          },
          "companyPr": {
            "title": "Companypr",
            "type": "string",
            "description": "企業PR",
            "default": ""
          },
          "recruitmentAndHiringStatuses": {
            "title": "Recruitmentandhiringstatuses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecruitmentAndHiringStatusIn"
            },
            "description": "募集採用に関する状況詳細"
          },
          "vocationalAbilityStatuses": {
            "title": "Vocationalabilitystatuses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VocationalAbilityStatusIn"
            },
            "description": "職業能力開発・向上に関する状況詳細"
          },
          "employmentManagementStatuses": {
            "title": "Employmentmanagementstatuses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmploymentManagementStatusIn"
            },
            "description": "企業における雇用管理に関する状況"
          },
          "jobContents": {
            "title": "Jobcontents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobContentIn"
            },
            "description": "求人オリジナルコンテンツ"
          }
        }
      },
      "JobFavoriteUserListOut": {
        "title": "JobFavoriteUserListOut",
        "required": [
          "userId",
          "username",
          "companyName",
          "jobTitle",
          "favoriteAt"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "title": "Userid",
            "minimum": 1.0,
            "type": "integer",
            "description": "ユーザーID"
          },
          "username": {
            "title": "Username",
            "type": "string",
            "description": "ユーザー名"
          },
          "companyName": {
            "title": "Companyname",
            "type": "string",
            "description": "企業名"
          },
          "jobTitle": {
            "title": "Jobtitle",
            "type": "string",
            "description": "求人名"
          },
          "favoriteAt": {
            "title": "Favoriteat",
            "type": "string",
            "description": "お気に入り登録日時",
            "format": "date-time"
          }
        }
      },
      "JobFeatureCategory": {
        "title": "JobFeatureCategory",
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "求人特徴カテゴリ"
      },
      "JobFeatureCategoryChoicesOut": {
        "title": "JobFeatureCategoryChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "JobFeatureChoicesOut": {
        "title": "JobFeatureChoicesOut",
        "required": [
          "id",
          "name",
          "jobFeatureCategoryLabel"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          },
          "jobFeatureCategoryLabel": {
            "title": "Jobfeaturecategorylabel",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "JobFeatureCreateIn": {
        "title": "JobFeatureCreateIn",
        "required": [
          "name",
          "isForFullTimeStaff",
          "isForNewGraduate",
          "isForPartTimeJob",
          "isForIntern",
          "jobFeatureCategory"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          },
          "isForFullTimeStaff": {
            "title": "Isforfulltimestaff",
            "type": "boolean"
          },
          "isForNewGraduate": {
            "title": "Isfornewgraduate",
            "type": "boolean"
          },
          "isForPartTimeJob": {
            "title": "Isforparttimejob",
            "type": "boolean"
          },
          "isForIntern": {
            "title": "Isforintern",
            "type": "boolean"
          },
          "jobFeatureCategory": {
            "$ref": "#/components/schemas/JobFeatureCategory"
          }
        }
      },
      "JobFeatureDetailOut": {
        "title": "JobFeatureDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "isForFullTimeStaff",
          "isForNewGraduate",
          "isForPartTimeJob",
          "isForIntern",
          "jobFeatureCategory"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          },
          "isForFullTimeStaff": {
            "title": "Isforfulltimestaff",
            "type": "boolean"
          },
          "isForNewGraduate": {
            "title": "Isfornewgraduate",
            "type": "boolean"
          },
          "isForPartTimeJob": {
            "title": "Isforparttimejob",
            "type": "boolean"
          },
          "isForIntern": {
            "title": "Isforintern",
            "type": "boolean"
          },
          "jobFeatureCategory": {
            "$ref": "#/components/schemas/JobFeatureCategory"
          }
        }
      },
      "JobFeatureListOut": {
        "title": "JobFeatureListOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "isForFullTimeStaff",
          "isForNewGraduate",
          "isForPartTimeJob",
          "isForIntern",
          "jobFeatureCategoryLabel"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          },
          "isForFullTimeStaff": {
            "title": "Isforfulltimestaff",
            "type": "boolean"
          },
          "isForNewGraduate": {
            "title": "Isfornewgraduate",
            "type": "boolean"
          },
          "isForPartTimeJob": {
            "title": "Isforparttimejob",
            "type": "boolean"
          },
          "isForIntern": {
            "title": "Isforintern",
            "type": "boolean"
          },
          "jobFeatureCategoryLabel": {
            "title": "Jobfeaturecategorylabel",
            "type": "string"
          }
        }
      },
      "JobFeatureOut": {
        "title": "JobFeatureOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "求人特徴ID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "名前"
          }
        }
      },
      "JobFeatureUpdateIn": {
        "title": "JobFeatureUpdateIn",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string",
            "nullable": true
          },
          "isForFullTimeStaff": {
            "title": "Isforfulltimestaff",
            "type": "boolean",
            "nullable": true
          },
          "isForNewGraduate": {
            "title": "Isfornewgraduate",
            "type": "boolean",
            "nullable": true
          },
          "isForPartTimeJob": {
            "title": "Isforparttimejob",
            "type": "boolean",
            "nullable": true
          },
          "isForIntern": {
            "title": "Isforintern",
            "type": "boolean",
            "nullable": true
          },
          "jobFeatureCategory": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/JobFeatureCategory"
              }
            ],
            "nullable": true
          }
        }
      },
      "JobHuntingStatus": {
        "title": "JobHuntingStatus",
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "就職活動状況"
      },
      "JobHuntingStatusChoicesOut": {
        "title": "JobHuntingStatusChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "JobHuntingType": {
        "title": "JobHuntingType",
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "求職ステータス"
      },
      "JobHuntingTypeChoicesOut": {
        "title": "JobHuntingTypeChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "JobListOut": {
        "title": "JobListOut",
        "required": [
          "isPublished",
          "title",
          "createdAt",
          "updatedAt",
          "applicationCount",
          "viewCount"
        ],
        "type": "object",
        "properties": {
          "jobId": {
            "title": "Jobid",
            "minimum": 1.0,
            "type": "integer",
            "description": "求人ID",
            "nullable": true
          },
          "isPublished": {
            "title": "Ispublished",
            "type": "boolean",
            "description": "公開済みか"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "prefectures": {
            "title": "Prefectures",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "勤務場所"
          },
          "skillLevelLabel": {
            "title": "Skilllevellabel",
            "type": "string",
            "description": "スキルレベルラベル",
            "default": ""
          },
          "employmentStatusLabel": {
            "title": "Employmentstatuslabel",
            "type": "string",
            "description": "雇用形態ラベル",
            "default": ""
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "description": "更新日",
            "format": "date-time"
          },
          "applicationCount": {
            "title": "Applicationcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "応募数"
          },
          "viewCount": {
            "title": "Viewcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "閲覧数"
          }
        }
      },
      "JobPgLangsList": {
        "title": "JobPgLangsList",
        "required": [
          "id",
          "pgLangName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "id"
          },
          "pgLangName": {
            "title": "Pglangname",
            "type": "string",
            "description": "言語名"
          }
        }
      },
      "JobScoutUserListOut": {
        "title": "JobScoutUserListOut",
        "required": [
          "companyName",
          "occupationName",
          "jobTitle",
          "workLocation",
          "neededLevel",
          "neededPgLangs",
          "scoutUserList"
        ],
        "type": "object",
        "properties": {
          "companyName": {
            "title": "Companyname",
            "type": "string",
            "description": "企業名"
          },
          "occupationName": {
            "title": "Occupationname",
            "type": "string",
            "description": "職種名"
          },
          "jobTitle": {
            "title": "Jobtitle",
            "type": "string",
            "description": "求人名"
          },
          "workLocation": {
            "title": "Worklocation",
            "type": "string",
            "description": "勤務地"
          },
          "neededLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SkillLevel"
              }
            ],
            "description": "必要レベル",
            "nullable": true
          },
          "neededPgLangs": {
            "title": "Neededpglangs",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PgLangOut"
            },
            "description": "必要言語"
          },
          "scoutUserList": {
            "title": "Scoutuserlist",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScoutUserDetail"
            },
            "description": "紹介ユーザーリスト"
          }
        }
      },
      "JobSelectionType": {
        "title": "JobSelectionType",
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "description": "求人選考タイプ\n求人原稿作成に使用する"
      },
      "JobSelectionTypeChoicesOut": {
        "title": "JobSelectionTypeChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "JobUserDetailModalOut": {
        "title": "JobUserDetailModalOut",
        "required": [
          "username",
          "email",
          "firstName",
          "lastName",
          "firstNameKana",
          "lastNameKana",
          "birthday",
          "jobHuntingType",
          "nativeLanguage",
          "desiredOccupationNames",
          "desiredPrefectureNames"
        ],
        "type": "object",
        "properties": {
          "username": {
            "title": "Username",
            "type": "string",
            "description": "ユーザー名"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "description": "メールアドレス"
          },
          "subEmail": {
            "title": "Subemail",
            "type": "string",
            "description": "サブメールアドレス",
            "default": ""
          },
          "firstName": {
            "title": "Firstname",
            "maxLength": 30,
            "type": "string",
            "description": "名"
          },
          "lastName": {
            "title": "Lastname",
            "maxLength": 150,
            "type": "string",
            "description": "姓"
          },
          "firstNameKana": {
            "title": "Firstnamekana",
            "maxLength": 63,
            "type": "string",
            "description": "名カナ"
          },
          "lastNameKana": {
            "title": "Lastnamekana",
            "maxLength": 63,
            "type": "string",
            "description": "姓カナ"
          },
          "birthday": {
            "title": "Birthday",
            "type": "string",
            "description": "生年月日",
            "format": "date",
            "nullable": true
          },
          "currentJob": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrentJob"
              }
            ],
            "description": "現在の職業",
            "nullable": true
          },
          "jobHuntingType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobHuntingType"
              }
            ],
            "description": "求職ステータス"
          },
          "nativeLanguage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NativeLanguage"
              }
            ],
            "description": "得意言語",
            "nullable": true
          },
          "schoolDivisionName": {
            "title": "Schooldivisionname",
            "type": "string",
            "description": "最終学歴の学校種類",
            "default": ""
          },
          "schoolName": {
            "title": "Schoolname",
            "type": "string",
            "description": "最終学歴の学校名",
            "default": ""
          },
          "schoolFacultyName": {
            "title": "Schoolfacultyname",
            "type": "string",
            "description": "最終学歴の学部名",
            "default": ""
          },
          "schoolDepartmentName": {
            "title": "Schooldepartmentname",
            "type": "string",
            "description": "最終学歴の学科名",
            "default": ""
          },
          "schoolDepartmentSystemName": {
            "title": "Schooldepartmentsystemname",
            "type": "string",
            "description": "最終学歴の学科系統名(専攻)",
            "nullable": true
          },
          "graduationDate": {
            "title": "Graduationdate",
            "type": "string",
            "description": "卒業年",
            "format": "date",
            "nullable": true
          },
          "majorCourse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MajorCourse"
              }
            ],
            "description": "文系/理系",
            "nullable": true
          },
          "desiredOccupationNames": {
            "title": "Desiredoccupationnames",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "希望職種"
          },
          "desiredPrefectureNames": {
            "title": "Desiredprefecturenames",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "希望勤務地"
          },
          "currentPostalCode": {
            "title": "Currentpostalcode",
            "maxLength": 31,
            "type": "string",
            "description": "郵便番号",
            "default": ""
          },
          "currentPrefecture": {
            "title": "Currentprefecture",
            "maxLength": 100,
            "type": "string",
            "description": "現住所都道府県",
            "default": ""
          },
          "currentPrefectureCity": {
            "title": "Currentprefecturecity",
            "maxLength": 100,
            "type": "string",
            "description": "現住所都道府県･市区町村",
            "default": ""
          },
          "currentAddress1": {
            "title": "Currentaddress1",
            "maxLength": 100,
            "type": "string",
            "description": "現住所市区町村以降の住所",
            "default": ""
          },
          "currentAddress2": {
            "title": "Currentaddress2",
            "maxLength": 100,
            "type": "string",
            "description": "現住所建物名･部屋番号",
            "default": ""
          },
          "phoneNumber": {
            "title": "Phonenumber",
            "maxLength": 11,
            "type": "string",
            "description": "電話番号",
            "default": ""
          },
          "homePhoneNumber": {
            "title": "Homephonenumber",
            "maxLength": 11,
            "type": "string",
            "description": "自宅電話番号",
            "default": ""
          },
          "postalCodeOnVacation": {
            "title": "Postalcodeonvacation",
            "maxLength": 31,
            "type": "string",
            "description": "郵便番号",
            "default": ""
          },
          "prefectureCityOnVacation": {
            "title": "Prefecturecityonvacation",
            "maxLength": 100,
            "type": "string",
            "description": "休暇中都道府県･市区町村",
            "default": ""
          },
          "address1OnVacation": {
            "title": "Address1Onvacation",
            "maxLength": 100,
            "type": "string",
            "description": "休暇中市区町村以降の住所",
            "default": ""
          },
          "address2OnVacation": {
            "title": "Address2Onvacation",
            "maxLength": 100,
            "type": "string",
            "description": "休暇中建物名･部屋番号",
            "default": ""
          },
          "isSameContactOnVacation": {
            "title": "Issamecontactonvacation",
            "type": "boolean",
            "description": "休暇中は同じ連絡先か",
            "default": true
          },
          "selfPr": {
            "title": "Selfpr",
            "type": "string",
            "description": "自己PR",
            "default": ""
          }
        },
        "description": "ユーザー詳細モーダル\nスカウト承諾済みユーザーのみ表示"
      },
      "JobUserInfoModalOut": {
        "title": "JobUserInfoModalOut",
        "required": [
          "id",
          "desiredOccupationName",
          "desiredPrefectureName",
          "userUsedPgLangs",
          "icon",
          "scoutStatus"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "ユーザID"
          },
          "username": {
            "title": "Username",
            "maxLength": 30,
            "type": "string",
            "description": "アカウント名",
            "nullable": true
          },
          "firstName": {
            "title": "Firstname",
            "maxLength": 30,
            "type": "string",
            "description": "名",
            "nullable": true
          },
          "lastName": {
            "title": "Lastname",
            "maxLength": 150,
            "type": "string",
            "description": "姓",
            "nullable": true
          },
          "skillLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SkillLevel"
              }
            ],
            "description": "スキルレベル",
            "nullable": true
          },
          "currentPrefectureCity": {
            "title": "Currentprefecturecity",
            "maxLength": 35,
            "type": "string",
            "description": "現住所",
            "nullable": true
          },
          "currentJob": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrentJob"
              }
            ],
            "description": "現在の職業",
            "nullable": true
          },
          "jobHuntingType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobHuntingType"
              }
            ],
            "description": "求職ステータス",
            "nullable": true
          },
          "schoolGraduationDate": {
            "title": "Schoolgraduationdate",
            "type": "string",
            "description": "卒業年月",
            "format": "date",
            "nullable": true
          },
          "desiredOccupationName": {
            "title": "Desiredoccupationname",
            "maxLength": 63,
            "type": "array",
            "items": {
              "maxLength": 63,
              "type": "string"
            },
            "description": "希望職種"
          },
          "desiredPrefectureName": {
            "title": "Desiredprefecturename",
            "maxLength": 35,
            "type": "array",
            "items": {
              "maxLength": 35,
              "type": "string"
            },
            "description": "希望勤務地"
          },
          "selfPr": {
            "title": "Selfpr",
            "type": "string",
            "description": "自己PR",
            "default": ""
          },
          "userUsedPgLangs": {
            "title": "Userusedpglangs",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserUsedPgLangs"
            }
          },
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "アイコンURL"
          },
          "scoutStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferableUserStatus"
              }
            ],
            "description": "スカウトステータス"
          }
        },
        "description": "ユーザー情報モーダル\nスカウト承諾済みでないユーザーで表示"
      },
      "JobUserListOut": {
        "title": "JobUserListOut",
        "required": [
          "totalCount",
          "searchResultsCount",
          "hasPrevious",
          "hasNext",
          "userList"
        ],
        "type": "object",
        "properties": {
          "totalCount": {
            "title": "Totalcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "全件数"
          },
          "searchResultsCount": {
            "title": "Searchresultscount",
            "minimum": 0.0,
            "type": "integer",
            "description": "検索結果件数"
          },
          "hasPrevious": {
            "title": "Hasprevious",
            "type": "boolean",
            "description": "前データが存在するか"
          },
          "hasNext": {
            "title": "Hasnext",
            "type": "boolean",
            "description": "次データが存在するか"
          },
          "userList": {
            "title": "Userlist",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__manage__job_users__job_users_list_out__UserListOut"
            },
            "description": "ユーザーリスト"
          }
        }
      },
      "JobUsersMemoUpdateIn": {
        "title": "JobUsersMemoUpdateIn",
        "type": "object",
        "properties": {
          "memo": {
            "title": "Memo",
            "maxLength": 1024,
            "type": "string",
            "description": "求人ユーザーメモ",
            "default": ""
          }
        }
      },
      "JobUsersStatusUpdateIn": {
        "title": "JobUsersStatusUpdateIn",
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferableUserStatus"
              }
            ],
            "description": "紹介可能ユーザーステータス"
          }
        }
      },
      "JobsListOut": {
        "title": "JobsListOut",
        "required": [
          "totalCount",
          "hasNext",
          "hasPrevious",
          "jobs"
        ],
        "type": "object",
        "properties": {
          "totalCount": {
            "title": "Totalcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "総件数"
          },
          "hasNext": {
            "title": "Hasnext",
            "type": "boolean",
            "description": "次ページ有無"
          },
          "hasPrevious": {
            "title": "Hasprevious",
            "type": "boolean",
            "description": "前ページ有無"
          },
          "jobs": {
            "title": "Jobs",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__general__jobs__job_detail_out__JobDetailOut"
            },
            "description": "求人データ"
          }
        }
      },
      "JudgeResultIn": {
        "title": "JudgeResultIn",
        "required": [
          "elapsedTime",
          "execOutput",
          "memoryUsage",
          "execDate",
          "status",
          "testCaseId",
          "judgeType",
          "judgeCode"
        ],
        "type": "object",
        "properties": {
          "elapsedTime": {
            "title": "Elapsedtime",
            "type": "number"
          },
          "execOutput": {
            "title": "Execoutput",
            "type": "string"
          },
          "memoryUsage": {
            "title": "Memoryusage",
            "type": "number"
          },
          "execDate": {
            "title": "Execdate",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "title": "Status",
            "type": "string"
          },
          "testCaseId": {
            "title": "Testcaseid",
            "minimum": 1.0,
            "type": "integer"
          },
          "judgeType": {
            "$ref": "#/components/schemas/JudgeType"
          },
          "judgeCode": {
            "title": "Judgecode",
            "minimum": 1.0,
            "type": "integer",
            "description": "問題: question_test_result_id, 問題テンプレート: question_template_id, 問題検証: question_verification_result_id"
          },
          "isOriginalCase": {
            "title": "Isoriginalcase",
            "type": "boolean",
            "description": "オリジナルケースか",
            "default": false,
            "nullable": true
          }
        }
      },
      "JudgeStatus": {
        "title": "JudgeStatus",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ],
        "type": "integer",
        "description": "ジャッジステータス"
      },
      "JudgeStatusChoicesOut": {
        "title": "JudgeStatusChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "JudgeType": {
        "title": "JudgeType",
        "enum": [
          "question",
          "question_sample",
          "template",
          "verification"
        ],
        "type": "string",
        "description": "ジャッジタイプ\nジャッジシステムから受け取った結果がどこで使用されたものかを判別するためのもの"
      },
      "LearningQuestion": {
        "title": "LearningQuestion",
        "required": [
          "id",
          "questionType",
          "questionTypeLabel",
          "title",
          "targetTime",
          "difficulty",
          "questionResultStatus",
          "challengerCount",
          "passedCount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "コンテンツID"
          },
          "questionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionType"
              }
            ],
            "description": "問題形式"
          },
          "questionTypeLabel": {
            "title": "Questiontypelabel",
            "type": "string",
            "description": "問題形式ラベル"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "問題タイトル"
          },
          "targetTime": {
            "title": "Targettime",
            "type": "integer",
            "description": "目標解答時間"
          },
          "difficulty": {
            "title": "Difficulty",
            "type": "integer",
            "description": "難易度"
          },
          "questionResultStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionResultStatus"
              }
            ],
            "description": "問題解答状況"
          },
          "challengerCount": {
            "title": "Challengercount",
            "minimum": 0.0,
            "type": "integer",
            "description": "挑戦者数"
          },
          "passedCount": {
            "title": "Passedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "合格者数"
          }
        }
      },
      "Locale": {
        "title": "Locale",
        "enum": [
          "ja",
          "en"
        ],
        "type": "string",
        "description": "ロケール"
      },
      "LogListOut": {
        "title": "LogListOut",
        "required": [
          "weekStartsAt",
          "viewedCount",
          "applicationCount"
        ],
        "type": "object",
        "properties": {
          "weekStartsAt": {
            "title": "Weekstartsat",
            "type": "string",
            "description": "週の開始日",
            "format": "date"
          },
          "viewedCount": {
            "title": "Viewedcount",
            "type": "integer",
            "description": "閲覧数",
            "nullable": true
          },
          "applicationCount": {
            "title": "Applicationcount",
            "type": "integer",
            "description": "応募数",
            "nullable": true
          }
        }
      },
      "MajorCourse": {
        "title": "MajorCourse",
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "専攻の種類(文理区分)"
      },
      "ManageChatFileListOut": {
        "title": "ManageChatFileListOut",
        "required": [
          "chatFileId",
          "chatId",
          "createdAt",
          "fileName",
          "file",
          "expiresAt",
          "sender",
          "icon"
        ],
        "type": "object",
        "properties": {
          "chatFileId": {
            "title": "Chatfileid",
            "type": "integer",
            "description": "チャットファイルID"
          },
          "chatId": {
            "title": "Chatid",
            "type": "integer",
            "description": "チャットID"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日時",
            "format": "date-time"
          },
          "fileName": {
            "title": "Filename",
            "maxLength": 100,
            "type": "string",
            "description": "ファイル名"
          },
          "file": {
            "title": "File",
            "type": "string",
            "description": "ファイルURL"
          },
          "expiresAt": {
            "title": "Expiresat",
            "type": "string",
            "description": "有効期限",
            "format": "date-time"
          },
          "sender": {
            "title": "Sender",
            "type": "string",
            "description": "送信者"
          },
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "アイコンURL"
          }
        }
      },
      "ManageChatListDetailOut": {
        "title": "ManageChatListDetailOut",
        "required": [
          "id",
          "createdAt",
          "chatType",
          "message",
          "isRead",
          "isOwn",
          "sender",
          "icon"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "チャットID"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日時",
            "format": "date-time"
          },
          "chatType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChatType"
              }
            ],
            "description": "1:メッセージ, 2:ファイル"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "メッセージ"
          },
          "isRead": {
            "title": "Isread",
            "type": "boolean",
            "description": "既読"
          },
          "isOwn": {
            "title": "Isown",
            "type": "boolean",
            "description": "自身のチャットか"
          },
          "sender": {
            "title": "Sender",
            "type": "string",
            "description": "チャット送信者の名前"
          },
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "チャット送信者のアイコン"
          },
          "file": {
            "title": "ManageChatListFileOut",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ManageChatListFileOut"
              }
            ],
            "nullable": true
          }
        }
      },
      "ManageChatListFileOut": {
        "title": "ManageChatListFileOut",
        "required": [
          "fileName",
          "file",
          "expiresAt",
          "isExpired",
          "isDeleted"
        ],
        "type": "object",
        "properties": {
          "fileName": {
            "title": "Filename",
            "maxLength": 100,
            "type": "string",
            "description": "ファイル名"
          },
          "file": {
            "title": "File",
            "type": "string",
            "description": "ファイルURL"
          },
          "expiresAt": {
            "title": "Expiresat",
            "type": "string",
            "description": "有効期限",
            "format": "date-time"
          },
          "isExpired": {
            "title": "Isexpired",
            "type": "boolean",
            "description": "有効期限切れか"
          },
          "isDeleted": {
            "title": "Isdeleted",
            "type": "boolean",
            "description": "削除済みか"
          }
        }
      },
      "ManageChatListOut": {
        "title": "ManageChatListOut",
        "required": [
          "icon",
          "roomName",
          "subRoomName",
          "chatRoomType",
          "isDeletedAccount",
          "isScoutRefusalAccount",
          "chats"
        ],
        "type": "object",
        "properties": {
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "ユーザーアイコン画像URL"
          },
          "roomName": {
            "title": "Roomname",
            "type": "string",
            "description": "チャットルーム名(ユーザー名)"
          },
          "subRoomName": {
            "title": "Subroomname",
            "type": "string",
            "description": "サブチャットルーム名(本名)"
          },
          "chatRoomType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChatRoomType"
              }
            ],
            "description": "1:企業, 2:学校, 3:エージェント"
          },
          "isDeletedAccount": {
            "title": "Isdeletedaccount",
            "type": "boolean",
            "description": "退会済みか"
          },
          "isScoutRefusalAccount": {
            "title": "Isscoutrefusalaccount",
            "type": "boolean",
            "description": "スカウト拒否しているか"
          },
          "chats": {
            "title": "Chats",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ManageChatListDetailOut"
            }
          }
        }
      },
      "ManageChatRoomCreateIn": {
        "title": "ManageChatRoomCreateIn",
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "title": "Userid",
            "minimum": 1.0,
            "type": "integer",
            "description": "チャット相手の一般ユーザーID"
          },
          "chatRoomType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChatRoomType"
              }
            ],
            "description": "チャットルームタイプ(444だけ使う)",
            "nullable": true
          }
        }
      },
      "ManageChatRoomCreateOut": {
        "title": "ManageChatRoomCreateOut",
        "required": [
          "chatRoomId"
        ],
        "type": "object",
        "properties": {
          "chatRoomId": {
            "title": "Chatroomid",
            "type": "integer",
            "description": "チャットルームID"
          }
        }
      },
      "ManageChatRoomListDetailOut": {
        "title": "ManageChatRoomListDetailOut",
        "required": [
          "id",
          "icon",
          "roomName",
          "subRoomName",
          "chatPartnerType",
          "unreadCount",
          "lastSendTime",
          "isDeletedAccount",
          "isScoutRefusalAccount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "チャットルームID"
          },
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "ユーザーアイコン画像URL"
          },
          "roomName": {
            "title": "Roomname",
            "type": "string",
            "description": "チャットルーム名"
          },
          "subRoomName": {
            "title": "Subroomname",
            "type": "string",
            "description": "サブチャットルーム名(本名)"
          },
          "chatPartnerType": {
            "title": "Chatpartnertype",
            "type": "string",
            "description": "チャット相手の種類"
          },
          "unreadCount": {
            "title": "Unreadcount",
            "type": "integer",
            "description": "未読数"
          },
          "lastSendTime": {
            "title": "Lastsendtime",
            "type": "string",
            "description": "最終更新日時",
            "format": "date-time"
          },
          "isDeletedAccount": {
            "title": "Isdeletedaccount",
            "type": "boolean",
            "description": "退会アカウントか"
          },
          "isScoutRefusalAccount": {
            "title": "Isscoutrefusalaccount",
            "type": "boolean",
            "description": "スカウト拒否アカウントか"
          }
        }
      },
      "ManageChatRoomListOut": {
        "title": "ManageChatRoomListOut",
        "required": [
          "totalCount",
          "hasNext",
          "hasPrevious",
          "chatRooms"
        ],
        "type": "object",
        "properties": {
          "totalCount": {
            "title": "Totalcount",
            "minimum": 0.0,
            "type": "integer"
          },
          "hasNext": {
            "title": "Hasnext",
            "type": "boolean"
          },
          "hasPrevious": {
            "title": "Hasprevious",
            "type": "boolean"
          },
          "chatRooms": {
            "title": "Chatrooms",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ManageChatRoomListDetailOut"
            }
          }
        }
      },
      "ManageChatSendFileIn": {
        "title": "ManageChatSendFileIn",
        "required": [
          "fileName",
          "file"
        ],
        "type": "object",
        "properties": {
          "fileName": {
            "title": "Filename",
            "maxLength": 100,
            "type": "string",
            "description": "ファイル名"
          },
          "file": {
            "title": "File",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "ファイルURL"
          }
        }
      },
      "ManageChatSendIn": {
        "title": "ManageChatSendIn",
        "required": [
          "chatType"
        ],
        "type": "object",
        "properties": {
          "chatType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChatType"
              }
            ],
            "description": "1:メッセージ, 2:ファイル"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "メッセージ",
            "default": ""
          },
          "file": {
            "title": "ManageChatSendFileIn",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ManageChatSendFileIn"
              }
            ],
            "nullable": true
          }
        }
      },
      "ManageProQuestionSubmissionHistoryOut": {
        "title": "ManageProQuestionSubmissionHistoryOut",
        "required": [
          "id",
          "username",
          "submitFileNames",
          "accuracy",
          "judgeStatus",
          "createdAt",
          "isValid"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "PRO問題提出結果ID"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string",
            "description": "ユーザー名"
          },
          "submitFileNames": {
            "title": "Submitfilenames",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "提出ファイル名"
          },
          "accuracy": {
            "title": "Accuracy",
            "maximum": 100.0,
            "minimum": 0.0,
            "type": "number",
            "description": "スコア(精度)"
          },
          "judgeStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProJudgeStatus"
              }
            ],
            "description": "ジャッジ結果"
          },
          "errorMessage": {
            "title": "Errormessage",
            "type": "string",
            "description": "エラーメッセージ",
            "default": ""
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "提出日時",
            "format": "date-time"
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "提出コメント",
            "default": ""
          },
          "isValid": {
            "title": "Isvalid",
            "type": "boolean",
            "description": "有効な提出かどうか"
          }
        }
      },
      "MeOrganizationOut": {
        "title": "MeOrganizationOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "組織ID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "組織名"
          }
        }
      },
      "MeOut": {
        "title": "MeOut",
        "required": [
          "id",
          "username",
          "lastName",
          "firstName",
          "email",
          "icon",
          "userType",
          "unreadChatCount",
          "isEnteredRequiredItems",
          "permissions",
          "userRoles"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "ユーザーID"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string"
          },
          "lastName": {
            "title": "Lastname",
            "type": "string",
            "description": "姓"
          },
          "firstName": {
            "title": "Firstname",
            "type": "string",
            "description": "名"
          },
          "email": {
            "title": "Email",
            "maxLength": 254,
            "type": "string",
            "description": "メールアドレス"
          },
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "アイコンURL"
          },
          "userType": {
            "$ref": "#/components/schemas/UserType"
          },
          "unreadChatCount": {
            "title": "Unreadchatcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "チャット未読件数"
          },
          "isEnteredRequiredItems": {
            "title": "Isenteredrequireditems",
            "type": "boolean",
            "description": "一般ユーザープロフィール必須項目入力済みか",
            "nullable": true
          },
          "organization": {
            "title": "MeOrganizationOut",
            "anyOf": [
              {
                "$ref": "#/components/schemas/MeOrganizationOut"
              }
            ],
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission"
            },
            "description": "ユーザー権限"
          },
          "userRoles": {
            "title": "Userroles",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "ユーザーロール"
          }
        }
      },
      "MoodleLinkCheckIn": {
        "title": "MoodleLinkCheckIn",
        "required": [
          "clientId",
          "moodleUsername"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "title": "Clientid",
            "type": "string",
            "description": "client_key"
          },
          "moodleUsername": {
            "title": "Moodleusername",
            "type": "string",
            "description": "moodle_username"
          }
        }
      },
      "MoodleLinkCheckOut": {
        "title": "MoodleLinkCheckOut",
        "type": "object",
        "properties": {
          "isAutoLogin": {
            "title": "Isautologin",
            "type": "boolean",
            "description": "自動ログイン可能か",
            "default": false
          },
          "encryptionClientId": {
            "title": "Encryptionclientid",
            "type": "string",
            "description": "暗号化したクライアント鍵",
            "nullable": true
          },
          "encryptionAuthTokenOut": {
            "title": "Encryptionauthtokenout",
            "type": "string",
            "description": "暗号化したAuthTokenOut",
            "nullable": true
          }
        }
      },
      "MoodleLinkDetailOut": {
        "title": "MoodleLinkDetailOut",
        "required": [
          "linkedSource",
          "clientId",
          "clientSecret",
          "createdBy",
          "createdAt",
          "schoolId"
        ],
        "type": "object",
        "properties": {
          "linkedSource": {
            "title": "Linkedsource",
            "type": "string",
            "description": "連携元(学校名学部名)"
          },
          "clientId": {
            "title": "Clientid",
            "type": "string",
            "description": "クライアントID(コンシューマー鍵)"
          },
          "clientSecret": {
            "title": "Clientsecret",
            "type": "string",
            "description": "秘密鍵"
          },
          "createdBy": {
            "title": "Createdby",
            "type": "string",
            "description": "作成者"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日時",
            "format": "date-time"
          },
          "schoolId": {
            "title": "Schoolid",
            "minimum": 1.0,
            "type": "integer",
            "description": "学校ID"
          }
        }
      },
      "MoodleLoginForm": {
        "title": "MoodleLoginForm",
        "required": [
          "username",
          "password",
          "encrypted_json"
        ],
        "type": "object",
        "properties": {
          "grant_type": {
            "title": "Grant Type",
            "pattern": "password",
            "type": "string"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "scope": {
            "title": "Scope",
            "type": "string",
            "default": ""
          },
          "client_id": {
            "title": "Client Id",
            "type": "string"
          },
          "client_secret": {
            "title": "Client Secret",
            "type": "string"
          },
          "encrypted_json": {
            "title": "Encrypted Json",
            "type": "string",
            "description": "暗号化されたclient_idとmoodle_usernameを格納しているjson"
          }
        }
      },
      "NativeLanguage": {
        "title": "NativeLanguage",
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "description": "母国語タイプ"
      },
      "NewAccountInfoIn": {
        "title": "NewAccountInfoIn",
        "required": [
          "displayName",
          "lastName",
          "firstName",
          "lastNameKana",
          "firstNameKana",
          "prefectureId",
          "birthday",
          "jobHuntingType",
          "desiredIndustryIds",
          "desiredOccupationIds",
          "desiredPrefectureIds",
          "desiredIntentionalityIds",
          "desiredCompanyScaleIds",
          "userPreferredPgLangIds",
          "graduationDate"
        ],
        "type": "object",
        "properties": {
          "displayName": {
            "title": "Displayname",
            "maxLength": 31,
            "type": "string",
            "description": "表示名"
          },
          "subEmail": {
            "title": "Subemail",
            "maxLength": 254,
            "type": "string",
            "description": "サブメールアドレス",
            "default": ""
          },
          "receiveEmails": {
            "title": "Receiveemails",
            "type": "boolean",
            "description": "メール配信を希望するか",
            "default": true
          },
          "phoneNumberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberType"
              }
            ],
            "description": "電話番号タイプ",
            "nullable": true
          },
          "phoneNumber": {
            "title": "Phonenumber",
            "maxLength": 11,
            "type": "string",
            "description": "電話番号",
            "nullable": true
          },
          "lastName": {
            "title": "Lastname",
            "maxLength": 150,
            "type": "string",
            "description": "姓"
          },
          "firstName": {
            "title": "Firstname",
            "maxLength": 63,
            "type": "string",
            "description": "名"
          },
          "lastNameKana": {
            "title": "Lastnamekana",
            "maxLength": 63,
            "type": "string",
            "description": "姓カナ"
          },
          "firstNameKana": {
            "title": "Firstnamekana",
            "maxLength": 63,
            "type": "string",
            "description": "名カナ"
          },
          "prefectureId": {
            "title": "Prefectureid",
            "minimum": 1.0,
            "type": "integer",
            "description": "都道府県"
          },
          "birthday": {
            "title": "Birthday",
            "type": "string",
            "description": "生年月日",
            "format": "date"
          },
          "currentPostalCode": {
            "title": "Currentpostalcode",
            "maxLength": 7,
            "type": "string",
            "description": "郵便番号",
            "nullable": true
          },
          "currentPrefectureCity": {
            "title": "Currentprefecturecity",
            "maxLength": 100,
            "type": "string",
            "description": "現住所都道府県･市区町村",
            "nullable": true
          },
          "currentAddress1": {
            "title": "Currentaddress1",
            "maxLength": 100,
            "type": "string",
            "description": "現住所市区町村以降の住所",
            "nullable": true
          },
          "currentAddress2": {
            "title": "Currentaddress2",
            "maxLength": 100,
            "type": "string",
            "description": "現住所建物名･部屋番号",
            "nullable": true
          },
          "isSameContactOnVacation": {
            "title": "Issamecontactonvacation",
            "type": "boolean",
            "description": "休暇中連絡先は現住所と同じか",
            "default": false
          },
          "postalCodeOnVacation": {
            "title": "Postalcodeonvacation",
            "maxLength": 7,
            "type": "string",
            "description": "休暇中郵便番号",
            "nullable": true
          },
          "prefectureCityOnVacation": {
            "title": "Prefecturecityonvacation",
            "maxLength": 100,
            "type": "string",
            "description": "休暇中都道府県･市区町村",
            "nullable": true
          },
          "address1OnVacation": {
            "title": "Address1Onvacation",
            "maxLength": 100,
            "type": "string",
            "description": "休暇中市区町村以降の住所",
            "nullable": true
          },
          "address2OnVacation": {
            "title": "Address2Onvacation",
            "maxLength": 100,
            "type": "string",
            "description": "休暇中建物名･部屋番号",
            "nullable": true
          },
          "receiveScouts": {
            "title": "Receivescouts",
            "type": "boolean",
            "description": "スカウトを受け取るか",
            "default": true
          },
          "jobHuntingType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobHuntingType"
              }
            ],
            "description": "求職ステータス"
          },
          "jobHuntingStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobHuntingStatus"
              }
            ],
            "description": "就職活動状況",
            "nullable": true
          },
          "jobChangingStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobChangingStatus"
              }
            ],
            "description": "転職活動状況",
            "nullable": true
          },
          "desiredIndustryIds": {
            "title": "Desiredindustryids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "希望業種ID"
          },
          "desiredOccupationIds": {
            "title": "Desiredoccupationids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "希望職種ID"
          },
          "desiredPrefectureIds": {
            "title": "Desiredprefectureids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "希望勤務地ID"
          },
          "desiredIntentionalityIds": {
            "title": "Desiredintentionalityids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "希望志向性ID"
          },
          "desiredCompanyScaleIds": {
            "title": "Desiredcompanyscaleids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "希望企業規模ID"
          },
          "userPreferredPgLangIds": {
            "title": "Userpreferredpglangids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "得意なプログラミング言語ID"
          },
          "selfPr": {
            "title": "Selfpr",
            "maxLength": 300,
            "type": "string",
            "description": "自己PR",
            "nullable": true
          },
          "currentJob": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrentJob"
              }
            ],
            "description": "現在の職業",
            "nullable": true
          },
          "schoolDivisionId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TechFulSchoolDivision"
              }
            ],
            "description": "学校区分ID,1:大学院(博士), 2:大学院(修士), 3:大学(学士), 4:高等専門学校, 5:短期大学, 6:専門学校, 7:高校, 8:小・中学校, 9:その他",
            "nullable": true
          },
          "schoolName": {
            "title": "Schoolname",
            "maxLength": 128,
            "type": "string",
            "description": "学校名",
            "nullable": true
          },
          "schoolMasterId": {
            "title": "Schoolmasterid",
            "minimum": 1.0,
            "type": "integer",
            "description": "学校マスタID",
            "nullable": true
          },
          "schoolFacultyName": {
            "title": "Schoolfacultyname",
            "maxLength": 128,
            "type": "string",
            "description": "学部名",
            "nullable": true
          },
          "schoolFacultyMasterId": {
            "title": "Schoolfacultymasterid",
            "minimum": 1.0,
            "type": "integer",
            "description": "学部マスタID",
            "nullable": true
          },
          "schoolDepartmentName": {
            "title": "Schooldepartmentname",
            "maxLength": 128,
            "type": "string",
            "description": "学科名",
            "nullable": true
          },
          "schoolDepartmentMasterId": {
            "title": "Schooldepartmentmasterid",
            "minimum": 1.0,
            "type": "integer",
            "description": "学科マスタID",
            "nullable": true
          },
          "graduationDate": {
            "title": "Graduationdate",
            "type": "string",
            "description": "卒業予定・卒業年月",
            "format": "date"
          },
          "studentNumber": {
            "title": "Studentnumber",
            "maxLength": 31,
            "type": "string",
            "description": "学籍番号",
            "default": ""
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足情報",
            "default": ""
          },
          "majorCourse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MajorCourse"
              }
            ],
            "description": "専攻の種類(文理区分)",
            "nullable": true
          }
        }
      },
      "NewAccountInfoOut": {
        "title": "NewAccountInfoOut",
        "required": [
          "username",
          "displayName",
          "receiveEmails",
          "lastName",
          "firstName",
          "lastNameKana",
          "firstNameKana",
          "prefectureId",
          "birthday",
          "jobHuntingType",
          "desiredIndustryIds",
          "desiredOccupationIds",
          "desiredPrefectureIds",
          "desiredIntentionalityIds",
          "desiredCompanyScaleIds",
          "userPreferredPgLangIds"
        ],
        "type": "object",
        "properties": {
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string",
            "description": "アカウント名"
          },
          "displayName": {
            "title": "Displayname",
            "maxLength": 31,
            "type": "string",
            "description": "表示名"
          },
          "subEmail": {
            "title": "Subemail",
            "maxLength": 254,
            "type": "string",
            "description": "サブメールアドレス",
            "default": ""
          },
          "receiveEmails": {
            "title": "Receiveemails",
            "type": "boolean",
            "description": "メール配信を希望するか"
          },
          "phoneNumberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberType"
              }
            ],
            "description": "電話番号タイプ",
            "nullable": true
          },
          "phoneNumber": {
            "title": "Phonenumber",
            "maxLength": 11,
            "type": "string",
            "description": "電話番号",
            "nullable": true
          },
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "アイコンURL",
            "default": ""
          },
          "lastName": {
            "title": "Lastname",
            "maxLength": 150,
            "type": "string",
            "description": "姓"
          },
          "firstName": {
            "title": "Firstname",
            "maxLength": 63,
            "type": "string",
            "description": "名"
          },
          "lastNameKana": {
            "title": "Lastnamekana",
            "maxLength": 63,
            "type": "string",
            "description": "姓カナ"
          },
          "firstNameKana": {
            "title": "Firstnamekana",
            "maxLength": 63,
            "type": "string",
            "description": "名カナ"
          },
          "prefectureId": {
            "title": "Prefectureid",
            "minimum": 1.0,
            "type": "integer",
            "description": "都道府県"
          },
          "birthday": {
            "title": "Birthday",
            "type": "string",
            "description": "生年月日",
            "format": "date"
          },
          "currentPostalCode": {
            "title": "Currentpostalcode",
            "maxLength": 7,
            "type": "string",
            "description": "郵便番号",
            "nullable": true
          },
          "currentPrefectureCity": {
            "title": "Currentprefecturecity",
            "maxLength": 100,
            "type": "string",
            "description": "現住所都道府県･市区町村",
            "nullable": true
          },
          "currentAddress1": {
            "title": "Currentaddress1",
            "maxLength": 100,
            "type": "string",
            "description": "現住所市区町村以降の住所",
            "nullable": true
          },
          "currentAddress2": {
            "title": "Currentaddress2",
            "maxLength": 100,
            "type": "string",
            "description": "現住所建物名･部屋番号",
            "nullable": true
          },
          "isSameContactOnVacation": {
            "title": "Issamecontactonvacation",
            "type": "boolean",
            "description": "休暇中連絡先は現住所と同じか",
            "default": false
          },
          "postalCodeOnVacation": {
            "title": "Postalcodeonvacation",
            "maxLength": 7,
            "type": "string",
            "description": "休暇中郵便番号",
            "nullable": true
          },
          "prefectureCityOnVacation": {
            "title": "Prefecturecityonvacation",
            "maxLength": 100,
            "type": "string",
            "description": "休暇中都道府県･市区町村",
            "nullable": true
          },
          "address1OnVacation": {
            "title": "Address1Onvacation",
            "maxLength": 100,
            "type": "string",
            "description": "休暇中市区町村以降の住所",
            "nullable": true
          },
          "address2OnVacation": {
            "title": "Address2Onvacation",
            "maxLength": 100,
            "type": "string",
            "description": "休暇中建物名･部屋番号",
            "nullable": true
          },
          "receiveScouts": {
            "title": "Receivescouts",
            "type": "boolean",
            "description": "スカウトを受け取るか",
            "default": true
          },
          "jobHuntingType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobHuntingType"
              }
            ],
            "description": "求職ステータス"
          },
          "jobHuntingStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobHuntingStatus"
              }
            ],
            "description": "就職活動状況",
            "nullable": true
          },
          "jobChangingStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobChangingStatus"
              }
            ],
            "description": "転職活動状況",
            "nullable": true
          },
          "desiredIndustryIds": {
            "title": "Desiredindustryids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "希望業種ID"
          },
          "desiredOccupationIds": {
            "title": "Desiredoccupationids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "希望職種ID"
          },
          "desiredPrefectureIds": {
            "title": "Desiredprefectureids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "希望勤務地ID"
          },
          "desiredIntentionalityIds": {
            "title": "Desiredintentionalityids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "希望志向性ID"
          },
          "desiredCompanyScaleIds": {
            "title": "Desiredcompanyscaleids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "希望企業規模ID"
          },
          "userPreferredPgLangIds": {
            "title": "Userpreferredpglangids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "得意なプログラミング言語ID"
          },
          "selfPr": {
            "title": "Selfpr",
            "maxLength": 300,
            "type": "string",
            "description": "自己PR",
            "nullable": true
          },
          "currentJob": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrentJob"
              }
            ],
            "description": "現在の職業",
            "nullable": true
          },
          "schoolDivisionName": {
            "title": "Schooldivisionname",
            "type": "string",
            "description": "学校区分名",
            "nullable": true
          },
          "schoolName": {
            "title": "Schoolname",
            "maxLength": 128,
            "type": "string",
            "description": "学校名",
            "nullable": true
          },
          "schoolMasterDetail": {
            "title": "Schoolmasterdetail",
            "maxLength": 128,
            "type": "string",
            "description": "学校詳細",
            "nullable": true
          },
          "schoolFacultyName": {
            "title": "Schoolfacultyname",
            "maxLength": 128,
            "type": "string",
            "description": "学部名",
            "nullable": true
          },
          "schoolFacultyMasterDetail": {
            "title": "Schoolfacultymasterdetail",
            "maxLength": 128,
            "type": "string",
            "description": "学部詳細",
            "nullable": true
          },
          "schoolDepartmentName": {
            "title": "Schooldepartmentname",
            "maxLength": 128,
            "type": "string",
            "description": "学科名",
            "nullable": true
          },
          "schoolDepartmentMasterDetail": {
            "title": "Schooldepartmentmasterdetail",
            "type": "string",
            "description": "学科詳細",
            "nullable": true
          },
          "graduationDate": {
            "title": "Graduationdate",
            "type": "string",
            "description": "卒業予定・卒業年月",
            "format": "date",
            "nullable": true
          },
          "studentNumber": {
            "title": "Studentnumber",
            "maxLength": 31,
            "type": "string",
            "description": "学籍番号",
            "nullable": true
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足情報",
            "nullable": true
          },
          "majorCourse": {
            "title": "Majorcourse",
            "type": "integer",
            "description": "専攻の種類(文理区分)",
            "nullable": true
          }
        }
      },
      "NotificationDetailOut": {
        "title": "NotificationDetailOut",
        "required": [
          "id",
          "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "通知ID"
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "リンク先URL"
          }
        }
      },
      "NotifyJudgeErrorIn": {
        "title": "NotifyJudgeErrorIn",
        "required": [
          "timestamp",
          "contentId",
          "userAgent"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "title": "Timestamp",
            "type": "string",
            "description": "ジャッジエラー発生時刻",
            "format": "date-time"
          },
          "questionTestResultId": {
            "title": "Questiontestresultid",
            "minimum": 1.0,
            "type": "integer",
            "description": "実行結果ID; タイムアウト等で実行結果が得られなかったらnull",
            "nullable": true
          },
          "contentId": {
            "title": "Contentid",
            "type": "integer",
            "description": "問題ID"
          },
          "sessionId": {
            "title": "Sessionid",
            "type": "integer",
            "description": "セッションID",
            "nullable": true
          },
          "userAgent": {
            "title": "Useragent",
            "type": "string",
            "description": "ブラウザ上で得られたUserAgent"
          }
        }
      },
      "OccupationChoicesOut": {
        "title": "OccupationChoicesOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "OccupationCreateIn": {
        "title": "OccupationCreateIn",
        "required": [
          "name",
          "order"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer"
          }
        }
      },
      "OccupationDetail": {
        "title": "OccupationDetail",
        "required": [
          "id",
          "name",
          "nameEn",
          "order"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "名前"
          },
          "nameEn": {
            "title": "Nameen",
            "type": "string",
            "description": "名前",
            "nullable": true
          },
          "order": {
            "title": "Order",
            "type": "integer",
            "description": "並び順"
          }
        }
      },
      "OccupationItem": {
        "title": "OccupationItem",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "職種ID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "職種名"
          }
        }
      },
      "OccupationListOut": {
        "title": "OccupationListOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "order"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer"
          }
        }
      },
      "OccupationOut": {
        "title": "OccupationOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "職業ID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "名前"
          }
        }
      },
      "OccupationUpdateIn": {
        "title": "OccupationUpdateIn",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string",
            "nullable": true
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "nullable": true
          }
        }
      },
      "OrganizationType": {
        "title": "OrganizationType",
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "description": "組織タイプ"
      },
      "OriginalCaseInfo": {
        "title": "OriginalCaseInfo",
        "required": [
          "order",
          "stdin",
          "expectedStdout"
        ],
        "type": "object",
        "properties": {
          "order": {
            "title": "Order",
            "minimum": 0.0,
            "type": "integer",
            "description": "順番"
          },
          "stdin": {
            "title": "Stdin",
            "type": "string",
            "description": "標準入力"
          },
          "expectedStdout": {
            "title": "Expectedstdout",
            "type": "string",
            "description": "期待出力"
          }
        }
      },
      "OriginalCaseResult": {
        "title": "OriginalCaseResult",
        "required": [
          "order",
          "stdin",
          "expectedStdout",
          "stdout",
          "judgeStatus",
          "elapsedTime",
          "memoryUsage"
        ],
        "type": "object",
        "properties": {
          "order": {
            "title": "Order",
            "type": "integer",
            "description": "オリジナルケースの順番"
          },
          "stdin": {
            "title": "Stdin",
            "type": "string",
            "description": "標準入力"
          },
          "expectedStdout": {
            "title": "Expectedstdout",
            "type": "string",
            "description": "期待される標準出力"
          },
          "stdout": {
            "title": "Stdout",
            "type": "string",
            "description": "ユーザー出力/エラー出力"
          },
          "judgeStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JudgeStatus"
              }
            ],
            "description": "ジャッジ結果"
          },
          "elapsedTime": {
            "title": "Elapsedtime",
            "minimum": 0.0,
            "type": "number",
            "description": "実行時間(s)"
          },
          "memoryUsage": {
            "title": "Memoryusage",
            "minimum": 0.0,
            "type": "integer",
            "description": "メモリ使用量(KB)"
          }
        }
      },
      "OriginalCaseResultHistory": {
        "title": "OriginalCaseResultHistory",
        "required": [
          "id",
          "order",
          "judgeStatus"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "オリジナルサンプルケース実行結果ID"
          },
          "order": {
            "title": "Order",
            "type": "integer",
            "description": "順番"
          },
          "stdin": {
            "title": "Stdin",
            "type": "string",
            "description": "入力",
            "default": ""
          },
          "expectedStdout": {
            "title": "Expectedstdout",
            "type": "string",
            "description": "期待出力",
            "default": ""
          },
          "judgeStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JudgeStatus"
              }
            ],
            "description": "結果"
          }
        }
      },
      "OriginalSampleCaseOut": {
        "title": "OriginalSampleCaseOut",
        "required": [
          "originalCaseId",
          "order",
          "stdin",
          "expectedStdout"
        ],
        "type": "object",
        "properties": {
          "originalCaseId": {
            "title": "Originalcaseid",
            "minimum": 1.0,
            "type": "integer",
            "description": "オリジナルケースID"
          },
          "order": {
            "title": "Order",
            "minimum": 0.0,
            "type": "integer",
            "description": "順番"
          },
          "stdin": {
            "title": "Stdin",
            "type": "string",
            "description": "標準入力"
          },
          "expectedStdout": {
            "title": "Expectedstdout",
            "type": "string",
            "description": "期待出力"
          }
        }
      },
      "OwnEventCreateIn": {
        "title": "OwnEventCreateIn",
        "required": [
          "name",
          "purpose"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "theme": {
            "title": "Theme",
            "maxLength": 100,
            "type": "string",
            "default": ""
          },
          "description": {
            "title": "Description",
            "type": "string",
            "default": ""
          },
          "image": {
            "title": "Image",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "default": ""
          },
          "purpose": {
            "$ref": "#/components/schemas/EventPurpose"
          },
          "showRanking": {
            "title": "Showranking",
            "type": "boolean",
            "default": false
          },
          "isPublic": {
            "title": "Ispublic",
            "type": "boolean",
            "default": false
          }
        }
      },
      "OwnEventListDetailOut": {
        "title": "OwnEventListDetailOut",
        "required": [
          "id",
          "createdAt",
          "createdBy",
          "name",
          "description",
          "image",
          "purposeLabel",
          "hostName",
          "sessionCount",
          "isFinished",
          "sessions"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 180,
            "type": "string"
          },
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "image": {
            "title": "Image",
            "type": "string"
          },
          "purposeLabel": {
            "title": "Purposelabel",
            "type": "string"
          },
          "hostName": {
            "title": "Hostname",
            "type": "string",
            "description": "主催者"
          },
          "sessionCount": {
            "title": "Sessioncount",
            "minimum": 0.0,
            "type": "integer",
            "description": "セッション数"
          },
          "isFinished": {
            "title": "Isfinished",
            "type": "boolean",
            "description": "セッションが1つ以上あり、すべてのセッションが終了している"
          },
          "sessions": {
            "title": "Sessions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OwnEventListSessionOut"
            }
          }
        }
      },
      "OwnEventListOut": {
        "title": "OwnEventListOut",
        "required": [
          "totalCount",
          "hasNext",
          "hasPrevious",
          "events"
        ],
        "type": "object",
        "properties": {
          "totalCount": {
            "title": "Totalcount",
            "minimum": 0.0,
            "type": "integer"
          },
          "hasNext": {
            "title": "Hasnext",
            "type": "boolean"
          },
          "hasPrevious": {
            "title": "Hasprevious",
            "type": "boolean"
          },
          "events": {
            "title": "Events",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OwnEventListDetailOut"
            }
          }
        }
      },
      "OwnEventListSessionOut": {
        "title": "OwnEventListSessionOut",
        "required": [
          "id",
          "createdAt",
          "name",
          "startsAt",
          "endsAt",
          "userCount",
          "sessionStatus",
          "sessionStatusLabel",
          "isFinished"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string"
          },
          "startsAt": {
            "title": "Startsat",
            "type": "string",
            "description": "セッション開始日時",
            "format": "date-time"
          },
          "endsAt": {
            "title": "Endsat",
            "type": "string",
            "description": "セッション終了日時",
            "format": "date-time"
          },
          "userCount": {
            "title": "Usercount",
            "minimum": 0.0,
            "type": "integer",
            "description": "イベント参加人数"
          },
          "sessionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SessionStatus"
              }
            ],
            "description": "1:開催前, 2:開催中, 3:終了"
          },
          "sessionStatusLabel": {
            "title": "Sessionstatuslabel",
            "type": "string"
          },
          "isFinished": {
            "title": "Isfinished",
            "type": "boolean",
            "description": "セッションが終了している"
          }
        }
      },
      "PartTimersCreateIn": {
        "title": "PartTimersCreateIn",
        "required": [
          "firstName",
          "lastName",
          "username",
          "password",
          "email"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "title": "Firstname",
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "title": "Lastname",
            "maxLength": 150,
            "minLength": 1,
            "type": "string"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "pattern": "[a-zA-Z0-9@.+-_]+",
            "type": "string",
            "example": "username"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          }
        }
      },
      "PartTimersDetailOut": {
        "title": "PartTimersDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "firstName",
          "lastName",
          "username"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "firstName": {
            "title": "Firstname",
            "maxLength": 30,
            "type": "string"
          },
          "lastName": {
            "title": "Lastname",
            "maxLength": 150,
            "type": "string"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string"
          }
        }
      },
      "PartTimersListOut": {
        "title": "PartTimersListOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "firstName",
          "lastName",
          "username"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "firstName": {
            "title": "Firstname",
            "maxLength": 30,
            "type": "string"
          },
          "lastName": {
            "title": "Lastname",
            "maxLength": 150,
            "type": "string"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string"
          }
        }
      },
      "ParticipatingSessionsOut": {
        "title": "ParticipatingSessionsOut",
        "required": [
          "id",
          "name",
          "startsAt",
          "endsAt",
          "companyName",
          "eventImage",
          "sessionCode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "セッションID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "セッション名"
          },
          "nameEn": {
            "title": "Nameen",
            "type": "string",
            "description": "セッション名(英語)",
            "default": ""
          },
          "startsAt": {
            "title": "Startsat",
            "type": "string",
            "description": "開始日時",
            "format": "date-time"
          },
          "endsAt": {
            "title": "Endsat",
            "type": "string",
            "description": "終了日時",
            "format": "date-time"
          },
          "companyName": {
            "title": "Companyname",
            "type": "string",
            "description": "企業名"
          },
          "eventImage": {
            "title": "Eventimage",
            "type": "string",
            "description": "イベントイメージ"
          },
          "sessionCode": {
            "title": "Sessioncode",
            "type": "string",
            "description": "セッションコード"
          }
        }
      },
      "PassiveSmokingInitiative": {
        "title": "PassiveSmokingInitiative",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "description": "集合場所における受動喫煙防止の取り組み"
      },
      "PassiveSmokingInitiativeChoicesOut": {
        "title": "PassiveSmokingInitiativeChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "PasswordResetEmailIn": {
        "title": "PasswordResetEmailIn",
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          }
        }
      },
      "Permission": {
        "title": "Permission",
        "enum": [
          "GENERAL_USER",
          "SKILL_CHECK_USER",
          "PROBLEM_VIEW",
          "PROBLEM_EDIT",
          "PROBLEM_DIVISION_ASSIGN",
          "PROBLEM_PUBLISH",
          "PROBLEM_SECRET_DIFFICULTY_ASSIGN",
          "PROBLEM_SECRET_DIFFICULTY_EDIT",
          "MATERIAL_VIEW",
          "MATERIAL_EDIT",
          "PRO_PROBLEM_VIEW",
          "PRO_PROBLEM_EDIT",
          "PRO_PROBLEM_KEY_ASSIGN",
          "TECHTHON_MISSION_PHASE_VIEW",
          "TECHTHON_MISSION_PHASE_EDIT",
          "SCHOOL_PROBLEM_SHARE",
          "PRIVATE_CONTENT_PACKAGE_VIEW",
          "PUBLIC_CONTENT_PACKAGE_VIEW",
          "CONTENT_PACKAGE_EDIT",
          "OWN_EVENT_VIEW",
          "OWN_EVENT_EDIT",
          "ALL_EVENT_AND_SESSION_VIEW",
          "ALL_EVENT_AND_SESSION_EDIT",
          "EVENT_SPONSOR_ASSIGN",
          "OWN_SESSION_VIEW",
          "OWN_SESSION_EDIT",
          "PRO_SESSION_VIEW",
          "PRO_SESSION_EDIT",
          "TECHTHON_SESSION_VIEW",
          "TECHTHON_SESSION_EDIT",
          "OWN_SESSION_PERSONAL_INFORMATION_VIEW",
          "ALL_SESSION_PERSONAL_INFORMATION_VIEW",
          "SESSION_JOIN_USER_LIMIT",
          "EVENT_PUBLISH",
          "OWN_JOB_VIEW",
          "OWN_JOB_EDIT",
          "OWN_JOB_PUBLISH_APPLICATION",
          "ALL_JOB_VIEW",
          "ALL_JOB_EDIT",
          "ALL_JOB_PUBLISH_APPLICATION",
          "JOB_PUBLISH_APPROVAL",
          "JOB_PUBLISH",
          "SCOUT",
          "SCOUT_FROM_EVENT",
          "SELECTION",
          "PORTFOLIO_VIEW",
          "PORTFOLIO_PERSONAL_INFORMATION_VIEW",
          "OWN_COMPANY_VIEW",
          "OWN_COMPANY_EDIT",
          "ALL_COMPANY_VIEW",
          "ALL_COMPANY_EDIT",
          "RECRUITMENT",
          "OWN_ADMIN_VIEW",
          "OWN_ADMIN_EDIT",
          "ALL_ADMIN_VIEW",
          "ALL_ADMIN_EDIT",
          "USER_ACCOUNT_EDIT",
          "SUPER_USER_LOG_VIEW",
          "OWN_SKILL_CHECK_ACCOUNT_VIEW",
          "OWN_SKILL_CHECK_ACCOUNT_EDIT",
          "OWN_SKILL_CHECK_ACCOUNT_SESSION_INVITATION",
          "ALL_SKILL_CHECK_ACCOUNT_VIEW",
          "ALL_SKILL_CHECK_ACCOUNT_EDIT",
          "ALL_SKILL_CHECK_ACCOUNT_SESSION_INVITATION",
          "STAFF_VIEW",
          "STAFF_EDIT",
          "CHAT",
          "CHAT_VIEW",
          "INFORMATION_VIEW",
          "INFORMATION_EDIT",
          "ADVERTISEMENT_VIEW",
          "ADVERTISEMENT_EDIT",
          "ASSETS_EDIT",
          "KPI_VIEW",
          "ANALYTICS_VIEW",
          "ASSETS_VIEW"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "PersonalIdInfoTermDetailOut": {
        "title": "PersonalIdInfoTermDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "termType",
          "content",
          "contentEn",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "termType": {
            "$ref": "#/components/schemas/TermType"
          },
          "content": {
            "title": "Content",
            "type": "string"
          },
          "contentEn": {
            "title": "Contenten",
            "type": "string"
          },
          "version": {
            "title": "Version",
            "type": "integer"
          }
        },
        "description": "人材紹介 個人情報規約"
      },
      "PgLangChoicesOut": {
        "title": "PgLangChoicesOut",
        "required": [
          "id",
          "name",
          "isSql",
          "useForBlankQuestion",
          "useForJudgementLang"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 35,
            "type": "string"
          },
          "isSql": {
            "title": "Issql",
            "type": "boolean"
          },
          "useForBlankQuestion": {
            "title": "Useforblankquestion",
            "type": "boolean",
            "description": "穴埋め問題で使用するか"
          },
          "useForJudgementLang": {
            "title": "Useforjudgementlang",
            "type": "boolean",
            "description": "問題回答に使用するか"
          }
        }
      },
      "PgLangCreateIn": {
        "title": "PgLangCreateIn",
        "required": [
          "name",
          "monacoName",
          "langCode",
          "template",
          "isSql",
          "useForBlankQuestion",
          "useForJudgementLang"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 35,
            "type": "string"
          },
          "monacoName": {
            "title": "Monaconame",
            "maxLength": 35,
            "type": "string"
          },
          "langCode": {
            "title": "Langcode",
            "maxLength": 35,
            "type": "string"
          },
          "template": {
            "title": "Template",
            "type": "string"
          },
          "extension": {
            "title": "Extension",
            "maxLength": 10,
            "type": "string",
            "description": "ファイル拡張子",
            "default": ""
          },
          "isSql": {
            "title": "Issql",
            "type": "boolean"
          },
          "useForBlankQuestion": {
            "title": "Useforblankquestion",
            "type": "boolean"
          },
          "useForJudgementLang": {
            "title": "Useforjudgementlang",
            "type": "boolean"
          }
        }
      },
      "PgLangDetailOut": {
        "title": "PgLangDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "monacoName",
          "langCode",
          "extension",
          "template",
          "isSql",
          "useForBlankQuestion",
          "useForJudgementLang"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 35,
            "type": "string"
          },
          "monacoName": {
            "title": "Monaconame",
            "maxLength": 35,
            "type": "string"
          },
          "langCode": {
            "title": "Langcode",
            "maxLength": 35,
            "type": "string"
          },
          "extension": {
            "title": "Extension",
            "maxLength": 10,
            "type": "string"
          },
          "template": {
            "title": "Template",
            "type": "string"
          },
          "isSql": {
            "title": "Issql",
            "type": "boolean"
          },
          "useForBlankQuestion": {
            "title": "Useforblankquestion",
            "type": "boolean"
          },
          "useForJudgementLang": {
            "title": "Useforjudgementlang",
            "type": "boolean"
          }
        }
      },
      "PgLangInfo": {
        "title": "PgLangInfo",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "プログラミング言語ID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "プログラミング言語名"
          }
        }
      },
      "PgLangListOut": {
        "title": "PgLangListOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "monacoName",
          "langCode",
          "isSql",
          "useForBlankQuestion",
          "useForJudgementLang"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 35,
            "type": "string"
          },
          "monacoName": {
            "title": "Monaconame",
            "maxLength": 35,
            "type": "string"
          },
          "langCode": {
            "title": "Langcode",
            "maxLength": 35,
            "type": "string"
          },
          "isSql": {
            "title": "Issql",
            "type": "boolean"
          },
          "useForBlankQuestion": {
            "title": "Useforblankquestion",
            "type": "boolean"
          },
          "useForJudgementLang": {
            "title": "Useforjudgementlang",
            "type": "boolean"
          }
        }
      },
      "PgLangOut": {
        "title": "PgLangOut",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "description": "言語名",
            "nullable": true
          }
        }
      },
      "PgLangSampleCodeListOut": {
        "title": "PgLangSampleCodeListOut",
        "required": [
          "id",
          "title",
          "sourceCode",
          "stdin",
          "stdout"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "maxLength": 50,
            "type": "string"
          },
          "sourceCode": {
            "title": "Sourcecode",
            "type": "string"
          },
          "stdin": {
            "title": "Stdin",
            "type": "string"
          },
          "stdout": {
            "title": "Stdout",
            "type": "string"
          }
        }
      },
      "PgLangSimpleOut": {
        "title": "PgLangSimpleOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "PG言語ID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "名前"
          }
        }
      },
      "PgLangUpdateIn": {
        "title": "PgLangUpdateIn",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "monacoName": {
            "title": "Monaconame",
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "langCode": {
            "title": "Langcode",
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "template": {
            "title": "Template",
            "type": "string",
            "nullable": true
          },
          "extension": {
            "title": "Extension",
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "isSql": {
            "title": "Issql",
            "type": "boolean",
            "nullable": true
          },
          "useForBlankQuestion": {
            "title": "Useforblankquestion",
            "type": "boolean",
            "nullable": true
          },
          "useForJudgementLang": {
            "title": "Useforjudgementlang",
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "PhoneNumberType": {
        "title": "PhoneNumberType",
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "description": "電話番号タイプ"
      },
      "PhoneNumberTypeChoicesOut": {
        "title": "PhoneNumberTypeChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "PortfolioDetailOut": {
        "title": "PortfolioDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "currentJob",
          "address",
          "graduationDate",
          "isScoutAcceptable"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 150,
            "type": "string",
            "description": "アカウント名／氏名"
          },
          "birthday": {
            "title": "Birthday",
            "type": "string",
            "description": "生年月日",
            "format": "date",
            "nullable": true
          },
          "currentJob": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrentJob"
              }
            ],
            "description": "現在の職業",
            "nullable": true
          },
          "address": {
            "title": "Address",
            "maxLength": 35,
            "type": "string",
            "description": "住所"
          },
          "orgName": {
            "title": "Orgname",
            "maxLength": 63,
            "type": "string",
            "description": "学校名／企業名",
            "nullable": true
          },
          "departmentOrPosition": {
            "title": "Departmentorposition",
            "maxLength": 100,
            "type": "string",
            "description": "学部名／部門・所属・役職",
            "nullable": true
          },
          "graduationDate": {
            "title": "Graduationdate",
            "type": "string",
            "description": "卒業年度",
            "format": "date",
            "nullable": true
          },
          "idealIndustryGroup": {
            "title": "Idealindustrygroup",
            "maxLength": 63,
            "type": "array",
            "items": {
              "maxLength": 63,
              "type": "string"
            },
            "description": "希望業種",
            "default": []
          },
          "idealOccupation": {
            "title": "Idealoccupation",
            "maxLength": 63,
            "type": "array",
            "items": {
              "maxLength": 63,
              "type": "string"
            },
            "description": "希望職種",
            "default": []
          },
          "idealLocation": {
            "title": "Ideallocation",
            "maxLength": 200,
            "type": "array",
            "items": {
              "maxLength": 200,
              "type": "string"
            },
            "description": "希望勤務地",
            "default": []
          },
          "jobHuntingType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobHuntingType"
              }
            ],
            "description": "求職ステータス",
            "nullable": true
          },
          "selfPr": {
            "title": "Selfpr",
            "maxLength": 300,
            "type": "string",
            "description": "自己PR",
            "nullable": true
          },
          "productTitle": {
            "title": "Producttitle",
            "maxLength": 100,
            "type": "string",
            "description": "成果物タイトル",
            "nullable": true
          },
          "productUrl": {
            "title": "Producturl",
            "maxLength": 200,
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "成果物URL",
            "nullable": true
          },
          "productSourceCodeUrl": {
            "title": "Productsourcecodeurl",
            "maxLength": 300,
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "成果物ソースコードURL",
            "nullable": true
          },
          "productImage": {
            "title": "Productimage",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "成果物関連画像",
            "nullable": true
          },
          "productDescription": {
            "title": "Productdescription",
            "maxLength": 300,
            "type": "string",
            "description": "成果物説明",
            "nullable": true
          },
          "qualification": {
            "title": "Qualification",
            "type": "string",
            "description": "資格取得",
            "nullable": true
          },
          "englishLevel": {
            "title": "Englishlevel",
            "type": "string",
            "description": "英語力",
            "default": "",
            "nullable": true
          },
          "overview": {
            "title": "Overview",
            "type": "string",
            "description": "担当者からの一言",
            "nullable": true
          },
          "isScoutAcceptable": {
            "title": "Isscoutacceptable",
            "type": "boolean",
            "description": "スカウト承諾済フラグ"
          }
        }
      },
      "PrefectureChoicesOut": {
        "title": "PrefectureChoicesOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 35,
            "type": "string"
          }
        }
      },
      "PrefectureDetailOut": {
        "title": "PrefectureDetailOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "都道府県ID"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string",
            "description": "都道府県名"
          }
        }
      },
      "PrefectureOut": {
        "title": "PrefectureOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "都道府県ID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "名前"
          }
        }
      },
      "ProJudgeStatus": {
        "title": "ProJudgeStatus",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "description": "PROジャッジステータス"
      },
      "ProQuestionBestResult": {
        "title": "ProQuestionBestResult",
        "required": [
          "id",
          "accuracy",
          "judgeStatus",
          "createdAt",
          "submitFileNames",
          "extraInfo",
          "passLine"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "PRO問題提出結果ID"
          },
          "accuracy": {
            "title": "Accuracy",
            "maximum": 100.0,
            "minimum": 0.0,
            "type": "number",
            "description": "精度"
          },
          "judgeStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProJudgeStatus"
              }
            ],
            "description": "ジャッジ結果"
          },
          "errorMessage": {
            "title": "Errormessage",
            "type": "string",
            "description": "エラーメッセージ",
            "default": ""
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "提出日時",
            "format": "date-time"
          },
          "submitFileNames": {
            "title": "Submitfilenames",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "提出ファイル名"
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "提出コメント"
          },
          "passLine": {
            "title": "Passline",
            "maximum": 100.0,
            "minimum": 0.1,
            "type": "number",
            "description": "合格ライン(0.1~100.0)"
          },
          "rank": {
            "title": "Rank",
            "type": "string",
            "description": "ランク",
            "nullable": true
          },
          "review": {
            "title": "Review",
            "type": "string",
            "description": "総評",
            "nullable": true
          }
        }
      },
      "ProQuestionDetailOut": {
        "title": "ProQuestionDetailOut",
        "required": [
          "id",
          "title",
          "subtitle",
          "trialCount",
          "level",
          "description",
          "tutorial",
          "dataDescription",
          "zipFileName",
          "zipFileSize",
          "providedFiles",
          "evaluation",
          "passLine",
          "evaluationFunction",
          "evaluationValue",
          "submitType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "プロ問題ID"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string",
            "description": "問題タイトル"
          },
          "subtitle": {
            "title": "Subtitle",
            "type": "string",
            "description": "サブタイトル"
          },
          "trialCount": {
            "title": "Trialcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "挑戦数"
          },
          "level": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProSkillLevel"
              }
            ],
            "description": "問題難易度レベル"
          },
          "result": {
            "title": "Result",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProQuestionResultOut"
              }
            ],
            "description": "ユーザーのスコア情報",
            "nullable": true
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "Project概要"
          },
          "tutorial": {
            "title": "Tutorial",
            "type": "string",
            "description": "チュートリアル(進め方)"
          },
          "dataDescription": {
            "title": "Datadescription",
            "type": "string",
            "description": "データ概要"
          },
          "zipFileName": {
            "title": "Zipfilename",
            "type": "string",
            "description": "ZIPファイル名"
          },
          "zipFileSize": {
            "title": "Zipfilesize",
            "type": "string",
            "description": "ZIPファイルサイズ"
          },
          "providedFiles": {
            "title": "Providedfiles",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProQuestionFileOut"
            },
            "description": "提供ファイル一覧"
          },
          "evaluation": {
            "title": "Evaluation",
            "type": "string",
            "description": "評価方法"
          },
          "passLine": {
            "title": "Passline",
            "maximum": 100.0,
            "minimum": 0.0,
            "type": "number",
            "description": "合格ライン(0.1~100.0)"
          },
          "evaluationFunction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EvaluationFunction"
              }
            ],
            "description": "評価関数"
          },
          "evaluationValue": {
            "title": "Evaluationvalue",
            "type": "number",
            "description": "評価に使用する値"
          },
          "submitType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SubmitType"
              }
            ],
            "description": "採点方法(提出内容)"
          },
          "rankDivision": {
            "title": "Rankdivision",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProQuestionRankDivisionOut"
            },
            "description": "ランク分け",
            "nullable": true
          }
        }
      },
      "ProQuestionExtraInfoIn": {
        "title": "ProQuestionExtraInfoIn",
        "required": [
          "extraInfo"
        ],
        "type": "object",
        "properties": {
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足情報(提出コメント)"
          }
        }
      },
      "ProQuestionExtraInfoOut": {
        "title": "ProQuestionExtraInfoOut",
        "required": [
          "id",
          "extraInfo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "PRO問題提出結果ID"
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足情報(提出コメント)"
          }
        }
      },
      "ProQuestionFileOut": {
        "title": "ProQuestionFileOut",
        "required": [
          "order",
          "name"
        ],
        "type": "object",
        "properties": {
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順番"
          },
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string",
            "description": "ファイル名"
          }
        }
      },
      "ProQuestionRankDivisionOut": {
        "title": "ProQuestionRankDivisionOut",
        "required": [
          "accuracy",
          "rank"
        ],
        "type": "object",
        "properties": {
          "accuracy": {
            "title": "Accuracy",
            "minimum": 0.0,
            "type": "integer",
            "description": "精度"
          },
          "rank": {
            "title": "Rank",
            "type": "string",
            "description": "ランク"
          }
        }
      },
      "ProQuestionResultOut": {
        "title": "ProQuestionResultOut",
        "required": [
          "rank",
          "accuracy",
          "score"
        ],
        "type": "object",
        "properties": {
          "rank": {
            "title": "Rank",
            "type": "string",
            "description": "ランク"
          },
          "accuracy": {
            "title": "Accuracy",
            "type": "number",
            "description": "精度"
          },
          "score": {
            "title": "Score",
            "minimum": 0.0,
            "type": "integer",
            "description": "スコア",
            "nullable": true
          }
        }
      },
      "ProQuestionSubmissionHistoryBaseOut": {
        "title": "ProQuestionSubmissionHistoryBaseOut",
        "required": [
          "id",
          "accuracy",
          "judgeStatus",
          "createdAt",
          "submitFileNames",
          "extraInfo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "PRO問題提出結果ID"
          },
          "accuracy": {
            "title": "Accuracy",
            "maximum": 100.0,
            "minimum": 0.0,
            "type": "number",
            "description": "精度"
          },
          "judgeStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProJudgeStatus"
              }
            ],
            "description": "ジャッジ結果"
          },
          "errorMessage": {
            "title": "Errormessage",
            "type": "string",
            "description": "エラーメッセージ",
            "default": ""
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "提出日時",
            "format": "date-time"
          },
          "submitFileNames": {
            "title": "Submitfilenames",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "提出ファイル名"
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "提出コメント"
          }
        }
      },
      "ProQuestionSubmissionResultOut": {
        "title": "ProQuestionSubmissionResultOut",
        "required": [
          "id",
          "accuracy",
          "judgeStatus",
          "createdAt",
          "submitFileNames",
          "extraInfo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "PRO問題提出結果ID"
          },
          "accuracy": {
            "title": "Accuracy",
            "maximum": 100.0,
            "minimum": 0.0,
            "type": "number",
            "description": "精度"
          },
          "judgeStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProJudgeStatus"
              }
            ],
            "description": "ジャッジ結果"
          },
          "errorMessage": {
            "title": "Errormessage",
            "type": "string",
            "description": "エラーメッセージ",
            "default": ""
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "提出日時",
            "format": "date-time"
          },
          "submitFileNames": {
            "title": "Submitfilenames",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "提出ファイル名"
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "提出コメント"
          },
          "isDone": {
            "title": "Isdone",
            "type": "boolean",
            "description": "採点が完了したかどうか",
            "default": false
          }
        }
      },
      "ProQuestionSubmitHistoryListOut": {
        "title": "ProQuestionSubmitHistoryListOut",
        "required": [
          "bestResult",
          "submitHistories"
        ],
        "type": "object",
        "properties": {
          "bestResult": {
            "title": "Bestresult",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProQuestionBestResult"
              }
            ],
            "description": "最高成績情報"
          },
          "submitHistories": {
            "title": "Submithistories",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProQuestionSubmissionHistoryBaseOut"
            },
            "description": "提出履歴一覧"
          }
        }
      },
      "ProQuestionUserResultList": {
        "title": "ProQuestionUserResultList",
        "required": [
          "id",
          "userName",
          "isPassed",
          "score",
          "answerPassedTime",
          "submitCount",
          "failedCount",
          "userRealName",
          "displayName",
          "studentNumber",
          "extraInfo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "参加者ユーザーID"
          },
          "userName": {
            "title": "Username",
            "maxLength": 150,
            "type": "string",
            "description": "参加者アカウント名"
          },
          "isPassed": {
            "title": "Ispassed",
            "type": "boolean",
            "description": "合格したか"
          },
          "score": {
            "title": "Score",
            "minimum": 0.0,
            "type": "integer",
            "description": "スコア"
          },
          "answerPassedTime": {
            "title": "Answerpassedtime",
            "type": "string",
            "description": "解答時間",
            "format": "date-time"
          },
          "submitCount": {
            "title": "Submitcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "提出回数"
          },
          "failedCount": {
            "title": "Failedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "エラー回数"
          },
          "userRealName": {
            "title": "Userrealname",
            "maxLength": 180,
            "type": "string",
            "description": "参加者本名",
            "nullable": true
          },
          "displayName": {
            "title": "Displayname",
            "maxLength": 31,
            "type": "string",
            "description": "参加者表示名",
            "nullable": true
          },
          "studentNumber": {
            "title": "Studentnumber",
            "maxLength": 31,
            "type": "string",
            "description": "学籍番号",
            "nullable": true
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足情報",
            "nullable": true
          }
        },
        "description": "ユーザー毎の成績一覧(PRO問題成績詳細)"
      },
      "ProSessionContentListOut": {
        "title": "ProSessionContentListOut",
        "required": [
          "questionTitle",
          "contentTopic"
        ],
        "type": "object",
        "properties": {
          "questionTitle": {
            "title": "Questiontitle",
            "maxLength": 100,
            "type": "string",
            "description": "問題タイトル"
          },
          "contentTopic": {
            "title": "Contenttopic",
            "maxLength": 35,
            "type": "string",
            "description": "トピック名"
          },
          "proSkillLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProSkillLevel"
              }
            ],
            "description": "Pro問題スキルレベル",
            "nullable": true
          }
        }
      },
      "ProSessionQuestionResultListOut": {
        "title": "ProSessionQuestionResultListOut",
        "required": [
          "sessionQuestionOrder",
          "contentId",
          "questionTitle",
          "questionDifficulty",
          "contentTopicName",
          "questionTrialCount",
          "questionPassedCount",
          "questionUserResultList"
        ],
        "type": "object",
        "properties": {
          "sessionQuestionOrder": {
            "title": "Sessionquestionorder",
            "minimum": 1.0,
            "type": "integer",
            "description": "セッション問題の登録順番"
          },
          "contentId": {
            "title": "Contentid",
            "minimum": 1.0,
            "type": "integer",
            "description": "問題ID"
          },
          "questionTitle": {
            "title": "Questiontitle",
            "type": "string",
            "description": "問題名"
          },
          "questionDifficulty": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProSkillLevel"
              }
            ],
            "description": "PRO問題難易度"
          },
          "contentTopicName": {
            "title": "Contenttopicname",
            "maxLength": 35,
            "type": "string",
            "description": "問題トピック"
          },
          "questionTrialCount": {
            "title": "Questiontrialcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "問題挑戦数"
          },
          "questionPassedCount": {
            "title": "Questionpassedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "問題合格数"
          },
          "questionUserResultList": {
            "title": "Questionuserresultlist",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProQuestionUserResultList"
            },
            "description": "対象問題を解いたユーザーの成績リスト"
          }
        },
        "description": "Proセッション問題成績(問題成績タブに必要な情報)"
      },
      "ProSessionRemaningNumOfParticipantsIn": {
        "title": "ProSessionRemaningNumOfParticipantsIn",
        "required": [
          "additionalNumOfParticipants"
        ],
        "type": "object",
        "properties": {
          "additionalNumOfParticipants": {
            "title": "Additionalnumofparticipants",
            "type": "integer",
            "description": "残り参加可能人数(参加チケット)追加数"
          }
        }
      },
      "ProSessionRemaningNumOfParticipantsOut": {
        "title": "ProSessionRemaningNumOfParticipantsOut",
        "required": [
          "remainingNumOfParticipants"
        ],
        "type": "object",
        "properties": {
          "remainingNumOfParticipants": {
            "title": "Remainingnumofparticipants",
            "type": "integer",
            "description": "残り参加可能人数(参加チケット)"
          }
        }
      },
      "ProSkillLevel": {
        "title": "ProSkillLevel",
        "enum": [
          1,
          4,
          7
        ],
        "type": "integer",
        "description": "スキルレベル(Pro問題)"
      },
      "Probation": {
        "title": "Probation",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "description": "求人試用期間"
      },
      "ProbationChoicesOut": {
        "title": "ProbationChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "ProgrammingLanguageStats": {
        "title": "ProgrammingLanguageStats",
        "required": [
          "name",
          "count"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "description": "言語名"
          },
          "count": {
            "title": "Count",
            "minimum": 0.0,
            "type": "integer",
            "description": "回答回数"
          }
        }
      },
      "ProgrammingProblemCategoryStat": {
        "title": "ProgrammingProblemCategoryStat",
        "required": [
          "id",
          "name",
          "passedCount",
          "highestDifficulty"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "QuestionCategory.id"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "カテゴリ名"
          },
          "topics": {
            "title": "Topics",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgrammingProblemTopicStat"
            },
            "description": "トピック別解答状況",
            "nullable": true
          },
          "passedCount": {
            "title": "Passedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "該当カテゴリ解答数"
          },
          "highestDifficulty": {
            "title": "Highestdifficulty",
            "minimum": 0.0,
            "type": "integer",
            "description": "該当カテゴリ合格した最高難易度"
          },
          "questionCount": {
            "title": "Questioncount",
            "minimum": 1.0,
            "type": "integer",
            "description": "カテゴリ内問題数",
            "nullable": true
          },
          "isAdmin": {
            "title": "Isadmin",
            "type": "boolean",
            "description": "管理者かどうか",
            "default": false
          },
          "averagePassedCount": {
            "title": "Averagepassedcount",
            "type": "number",
            "description": "全体平均解答数",
            "nullable": true
          },
          "averageHighestDifficulty": {
            "title": "Averagehighestdifficulty",
            "type": "number",
            "description": "全体平均難易度",
            "nullable": true
          }
        }
      },
      "ProgrammingProblemDetail": {
        "title": "ProgrammingProblemDetail",
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "QuestionResult.id",
            "nullable": true
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "問題名",
            "nullable": true
          },
          "questionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionType"
              }
            ],
            "description": "問題種別",
            "nullable": true
          },
          "contentOrganizationDivision": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContentOrganizationDivision"
              }
            ],
            "description": "問題組織区分",
            "nullable": true
          },
          "difficulty": {
            "title": "Difficulty",
            "minimum": 1.0,
            "type": "integer",
            "description": "難易度",
            "nullable": true
          },
          "pgLang": {
            "title": "Pglang",
            "type": "string",
            "description": "使用言語",
            "nullable": true
          },
          "elapsedTimeToPass": {
            "title": "Elapsedtimetopass",
            "minimum": 0.0,
            "type": "integer",
            "description": "解答所要時間(xx時xx分xx秒)",
            "nullable": true
          },
          "submissionCount": {
            "title": "Submissioncount",
            "minimum": 0.0,
            "type": "integer",
            "description": "提出回数",
            "nullable": true
          },
          "passedAt": {
            "title": "Passedat",
            "type": "string",
            "description": "合格日時(yyyy/mm/dd)",
            "format": "date-time",
            "nullable": true
          },
          "sourceCode": {
            "title": "Sourcecode",
            "type": "string",
            "description": "コード",
            "nullable": true
          },
          "contentId": {
            "title": "Contentid",
            "minimum": 1.0,
            "type": "integer",
            "description": "コンテンツID",
            "nullable": true
          },
          "sessionId": {
            "title": "Sessionid",
            "minimum": 1.0,
            "type": "integer",
            "description": "セッションID",
            "nullable": true
          }
        }
      },
      "ProgrammingProblemTopicStat": {
        "title": "ProgrammingProblemTopicStat",
        "required": [
          "id",
          "name",
          "order",
          "passedCount",
          "highestDifficulty"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "QuestionTopic.id"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "トピック名"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "表示順"
          },
          "passedCount": {
            "title": "Passedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "合格数"
          },
          "highestDifficulty": {
            "title": "Highestdifficulty",
            "minimum": 0.0,
            "type": "integer",
            "description": "最高難易度"
          },
          "elementaryDetail": {
            "title": "Elementarydetail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgrammingProblemDetail"
            },
            "description": "初級問題詳細",
            "nullable": true
          },
          "intermediateDetail": {
            "title": "Intermediatedetail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgrammingProblemDetail"
            },
            "description": "中級問題詳細",
            "nullable": true
          },
          "advancedDetail": {
            "title": "Advanceddetail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgrammingProblemDetail"
            },
            "description": "上級問題詳細",
            "nullable": true
          },
          "elementaryPassedCount": {
            "title": "Elementarypassedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "初級問題合格数",
            "nullable": true
          },
          "intermediatePassedCount": {
            "title": "Intermediatepassedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "中級問題合格数",
            "nullable": true
          },
          "advancedPassedCount": {
            "title": "Advancedpassedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "上級問題合格数",
            "nullable": true
          }
        }
      },
      "QuestionAnswerResult": {
        "title": "QuestionAnswerResult",
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "問題解答結果"
      },
      "QuestionBlankDetail": {
        "title": "QuestionBlankDetail",
        "required": [
          "id",
          "order",
          "title",
          "answer"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "空欄ID"
          },
          "order": {
            "title": "Order",
            "minimum": 0.0,
            "type": "integer",
            "description": "順番"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "answer": {
            "title": "Answer",
            "type": "string",
            "description": "正解"
          }
        }
      },
      "QuestionBlankDetailOut": {
        "title": "QuestionBlankDetailOut",
        "required": [
          "id",
          "order",
          "title",
          "answer"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順番"
          },
          "title": {
            "title": "Title",
            "maxLength": 63,
            "type": "string",
            "description": "空欄タイトル"
          },
          "answer": {
            "title": "Answer",
            "maxLength": 63,
            "type": "string",
            "description": "答え"
          }
        }
      },
      "QuestionBlankEachResult": {
        "title": "QuestionBlankEachResult",
        "required": [
          "id",
          "questionBlankId",
          "order",
          "answer",
          "isCorrect"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "空欄テストケース解答ID"
          },
          "questionBlankId": {
            "title": "Questionblankid",
            "type": "integer",
            "description": "空欄ID"
          },
          "order": {
            "title": "Order",
            "minimum": 0.0,
            "type": "integer",
            "description": "順番"
          },
          "answer": {
            "title": "Answer",
            "type": "string",
            "description": "回答"
          },
          "isCorrect": {
            "title": "Iscorrect",
            "type": "boolean",
            "description": "正解かどうか"
          }
        }
      },
      "QuestionBlankExecuteIn": {
        "title": "QuestionBlankExecuteIn",
        "required": [
          "userAnswers"
        ],
        "type": "object",
        "properties": {
          "userAnswers": {
            "title": "Useranswers",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "各並び順におけるユーザーの解答"
          }
        }
      },
      "QuestionBlankExecuteOut": {
        "title": "QuestionBlankExecuteOut",
        "required": [
          "totalResult",
          "questionExplanation",
          "blankResults"
        ],
        "type": "object",
        "properties": {
          "totalResult": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionResultStatus"
              }
            ],
            "description": "総合採点結果"
          },
          "questionExplanation": {
            "title": "Questionexplanation",
            "type": "string",
            "description": "解説"
          },
          "blankResults": {
            "title": "Blankresults",
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "description": "各並び順における採点結果"
          }
        }
      },
      "QuestionBlankResultOut": {
        "title": "QuestionBlankResultOut",
        "required": [
          "id",
          "isCorrect",
          "score",
          "submissionDatetime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "空欄解答ID"
          },
          "isCorrect": {
            "title": "Iscorrect",
            "type": "boolean",
            "description": "正解かどうか"
          },
          "score": {
            "title": "Score",
            "type": "number",
            "description": "スコア"
          },
          "questionBlankEachResults": {
            "title": "Questionblankeachresults",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionBlankEachResult"
            },
            "description": "空欄テストケース結果",
            "default": []
          },
          "submissionDatetime": {
            "title": "Submissiondatetime",
            "type": "string",
            "description": "提出日時",
            "format": "date-time"
          }
        }
      },
      "QuestionChoiceDetail": {
        "title": "QuestionChoiceDetail",
        "required": [
          "id",
          "order",
          "isCorrect",
          "text",
          "image"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "選択肢ID"
          },
          "order": {
            "title": "Order",
            "minimum": 0.0,
            "type": "integer",
            "description": "順番"
          },
          "isCorrect": {
            "title": "Iscorrect",
            "type": "boolean",
            "description": "正解選択肢か"
          },
          "text": {
            "title": "Text",
            "type": "string",
            "description": "表示テキスト"
          },
          "image": {
            "title": "Image",
            "type": "string",
            "description": "画像URL"
          }
        }
      },
      "QuestionChoiceDetailOut": {
        "title": "QuestionChoiceDetailOut",
        "required": [
          "id",
          "order",
          "isCorrect",
          "text",
          "image"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順番"
          },
          "isCorrect": {
            "title": "Iscorrect",
            "type": "boolean",
            "description": "正解選択肢"
          },
          "text": {
            "title": "Text",
            "type": "string",
            "description": "表示テキスト"
          },
          "image": {
            "title": "Image",
            "type": "string",
            "description": "選択肢画像"
          }
        }
      },
      "QuestionChoiceResultOut": {
        "title": "QuestionChoiceResultOut",
        "required": [
          "id",
          "isCorrect",
          "score",
          "submissionDatetime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "選択解答ID"
          },
          "isCorrect": {
            "title": "Iscorrect",
            "type": "boolean",
            "description": "正解かどうか"
          },
          "score": {
            "title": "Score",
            "type": "number",
            "description": "スコア"
          },
          "answer": {
            "title": "Answer",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionChoiceDetail"
            },
            "description": "選択結果",
            "default": []
          },
          "submissionDatetime": {
            "title": "Submissiondatetime",
            "type": "string",
            "description": "提出日時",
            "format": "date-time"
          }
        }
      },
      "QuestionContentOut": {
        "title": "QuestionContentOut",
        "type": "object",
        "properties": {
          "questionTypeLabel": {
            "title": "Questiontypelabel",
            "type": "string",
            "nullable": true
          },
          "targetTime": {
            "title": "Targettime",
            "type": "integer",
            "description": "目標時間",
            "nullable": true
          },
          "questionType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/QuestionType"
              }
            ],
            "nullable": true
          }
        }
      },
      "QuestionCreateIn": {
        "title": "QuestionCreateIn",
        "required": [
          "title",
          "text",
          "targetTime",
          "questionType",
          "difficulty",
          "contentTopicId",
          "contentDivision",
          "contentTagNames"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string",
            "description": "問題タイトル"
          },
          "titleEn": {
            "title": "Titleen",
            "maxLength": 100,
            "type": "string",
            "description": "問題タイトル英語",
            "default": ""
          },
          "text": {
            "title": "Text",
            "type": "string",
            "description": "問題文"
          },
          "textEn": {
            "title": "Texten",
            "type": "string",
            "description": "問題文英語",
            "default": ""
          },
          "targetTime": {
            "title": "Targettime",
            "type": "integer",
            "description": "目標回答時間"
          },
          "questionType": {
            "$ref": "#/components/schemas/QuestionType"
          },
          "difficulty": {
            "title": "Difficulty",
            "maximum": 10.0,
            "minimum": 1.0,
            "type": "integer",
            "description": "難易度"
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "問題概要",
            "default": ""
          },
          "sqlSetup": {
            "title": "Sqlsetup",
            "type": "string",
            "description": "SQL問題の初期実行コード",
            "default": ""
          },
          "image": {
            "title": "Image",
            "type": "string",
            "description": "問題画像URL",
            "default": ""
          },
          "contentTopicId": {
            "title": "Contenttopicid",
            "minimum": 1.0,
            "type": "integer"
          },
          "contentDivision": {
            "$ref": "#/components/schemas/ContentDivision"
          },
          "contentTagNames": {
            "title": "Contenttagnames",
            "maxLength": 62,
            "type": "array",
            "items": {
              "maxLength": 62,
              "type": "string"
            },
            "description": "タグ"
          },
          "isRefusedBrowsing": {
            "title": "Isrefusedbrowsing",
            "type": "boolean",
            "description": "企業に閲覧許可",
            "default": false
          },
          "isSharedBetweenSchools": {
            "title": "Issharedbetweenschools",
            "type": "boolean",
            "description": "他学校に問題公開",
            "default": false
          },
          "showTestcaseToAnswerer": {
            "title": "Showtestcasetoanswerer",
            "type": "boolean",
            "description": "解答者にテストケース公開",
            "default": false
          },
          "isSharedTestcase": {
            "title": "Issharedtestcase",
            "type": "boolean",
            "description": "他学校にテストケースを公開するか",
            "default": false
          },
          "questionTestCases": {
            "title": "Questiontestcases",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__manage__questions__quastion_create_in__TestCaseIn"
            },
            "nullable": true
          },
          "questionFiles": {
            "title": "Questionfiles",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__manage__questions__quastion_create_in__QuestionFileIn"
            },
            "nullable": true
          },
          "questionTemplate": {
            "title": "QuestionTemplateIn",
            "anyOf": [
              {
                "$ref": "#/components/schemas/app__schemas__manage__questions__quastion_create_in__QuestionTemplateIn"
              }
            ],
            "nullable": true
          },
          "questionChoices": {
            "title": "Questionchoices",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__manage__questions__quastion_create_in__QuestionChoiceIn"
            },
            "nullable": true
          },
          "questionBlanks": {
            "title": "Questionblanks",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__manage__questions__quastion_create_in__QuestionBlankIn"
            },
            "nullable": true
          },
          "answer": {
            "title": "Answer",
            "type": "string",
            "description": "答えの解説",
            "default": ""
          }
        }
      },
      "QuestionDetail": {
        "title": "QuestionDetail",
        "required": [
          "questionId",
          "title",
          "topic",
          "category",
          "difficulty",
          "questionType",
          "text",
          "contentOrganizationDivision"
        ],
        "type": "object",
        "properties": {
          "questionId": {
            "title": "Questionid",
            "type": "integer",
            "description": "問題ID"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "topic": {
            "title": "Topic",
            "type": "string",
            "description": "トピック"
          },
          "category": {
            "title": "Category",
            "type": "string",
            "description": "カテゴリ"
          },
          "difficulty": {
            "title": "Difficulty",
            "type": "integer",
            "description": "難易度"
          },
          "questionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionType"
              }
            ],
            "description": "問題形式"
          },
          "answer": {
            "title": "Answer",
            "type": "string",
            "description": "解説",
            "default": ""
          },
          "targetTime": {
            "title": "Targettime",
            "type": "integer",
            "description": "目標時間",
            "nullable": true
          },
          "text": {
            "title": "Text",
            "type": "string",
            "description": "問題文"
          },
          "contentOrganizationDivision": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContentOrganizationDivision"
              }
            ],
            "description": "公開設定タグ"
          },
          "questionSampleCases": {
            "title": "Questionsamplecases",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionSampleCaseDetail"
            },
            "description": "問題サンプルケース",
            "default": []
          },
          "questionChoices": {
            "title": "Questionchoices",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionChoiceDetail"
            },
            "description": "選択肢詳細",
            "default": []
          },
          "questionBlanks": {
            "title": "Questionblanks",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionBlankDetail"
            },
            "description": "空欄問題の詳細",
            "default": []
          }
        }
      },
      "QuestionDetailOut": {
        "title": "QuestionDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "title",
          "titleEn",
          "text",
          "textEn",
          "targetTime",
          "difficulty",
          "summary",
          "image",
          "sqlSetup",
          "answer",
          "isSharedTestcase",
          "isRefusedBrowsing",
          "isVerified",
          "showTestcaseToAnswerer",
          "contentTopicId",
          "contentTopicName",
          "contentTopicNameEn",
          "contentCategoryId",
          "contentCategoryName",
          "contentCategoryNameEn",
          "contentTagNames",
          "questionTypeLabel",
          "questionType",
          "contentDivision",
          "contentDivisionLabel",
          "questionChoices",
          "questionBlanks",
          "questionFiles",
          "content"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "問題タイトル"
          },
          "titleEn": {
            "title": "Titleen",
            "type": "string",
            "description": "問題タイトル英語"
          },
          "text": {
            "title": "Text",
            "type": "string",
            "description": "問題文"
          },
          "textEn": {
            "title": "Texten",
            "type": "string",
            "description": "問題文英語"
          },
          "targetTime": {
            "title": "Targettime",
            "type": "integer",
            "description": "目標回答時間"
          },
          "difficulty": {
            "title": "Difficulty",
            "type": "integer",
            "description": "難易度"
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "問題文要約"
          },
          "image": {
            "title": "Image",
            "type": "string",
            "description": "問題画像URL"
          },
          "sqlSetup": {
            "title": "Sqlsetup",
            "type": "string",
            "description": "SQL問題の初期実行コード"
          },
          "answer": {
            "title": "Answer",
            "type": "string",
            "description": "解答の解説"
          },
          "isSharedTestcase": {
            "title": "Issharedtestcase",
            "type": "boolean",
            "description": "他学校にテストケースを公開するか"
          },
          "isRefusedBrowsing": {
            "title": "Isrefusedbrowsing",
            "type": "boolean",
            "description": "問題文の企業閲覧を拒否"
          },
          "isVerified": {
            "title": "Isverified",
            "type": "boolean",
            "description": "検証済みか"
          },
          "showTestcaseToAnswerer": {
            "title": "Showtestcasetoanswerer",
            "type": "boolean",
            "description": "解答者にテストケースを見せるか"
          },
          "contentTopicId": {
            "title": "Contenttopicid",
            "minimum": 1.0,
            "type": "integer"
          },
          "contentTopicName": {
            "title": "Contenttopicname",
            "type": "string",
            "description": "コンテンツトピック名"
          },
          "contentTopicNameEn": {
            "title": "Contenttopicnameen",
            "type": "string",
            "description": "英語コンテンツトピック名"
          },
          "contentCategoryId": {
            "title": "Contentcategoryid",
            "minimum": 1.0,
            "type": "integer"
          },
          "contentCategoryName": {
            "title": "Contentcategoryname",
            "type": "string",
            "description": "コンテンツカテゴリ名"
          },
          "contentCategoryNameEn": {
            "title": "Contentcategorynameen",
            "type": "string",
            "description": "英語コンテンツカテゴリ名"
          },
          "contentTagNames": {
            "title": "Contenttagnames",
            "maxLength": 30,
            "type": "array",
            "items": {
              "maxLength": 30,
              "type": "string"
            },
            "description": "登録タグ"
          },
          "questionTypeLabel": {
            "title": "Questiontypelabel",
            "type": "string"
          },
          "questionType": {
            "$ref": "#/components/schemas/QuestionType"
          },
          "contentDivision": {
            "$ref": "#/components/schemas/ContentDivision"
          },
          "contentDivisionLabel": {
            "title": "Contentdivisionlabel",
            "type": "string"
          },
          "questionChoices": {
            "title": "Questionchoices",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionChoiceDetailOut"
            }
          },
          "questionBlanks": {
            "title": "Questionblanks",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionBlankDetailOut"
            }
          },
          "questionFiles": {
            "title": "Questionfiles",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionFileDetailOut"
            }
          },
          "questionTemplate": {
            "title": "QuestionTemplateDetailOut",
            "anyOf": [
              {
                "$ref": "#/components/schemas/QuestionTemplateDetailOut"
              }
            ],
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/app__schemas__manage__questions__question_detail_out__ContentDetailOut"
          }
        }
      },
      "QuestionEnglishTextUpdateIn": {
        "title": "QuestionEnglishTextUpdateIn",
        "type": "object",
        "properties": {
          "textEn": {
            "title": "Texten",
            "type": "string",
            "description": "英語問題文",
            "nullable": true
          },
          "titleEn": {
            "title": "Titleen",
            "maxLength": 100,
            "type": "string",
            "description": "英語問題タイトル",
            "nullable": true
          },
          "sampleCases": {
            "title": "Samplecases",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnglishSampleCaseUpdateIn"
            }
          }
        }
      },
      "QuestionExecuteSampleCaseIn": {
        "title": "QuestionExecuteSampleCaseIn",
        "required": [
          "pgLangId",
          "sourceCode"
        ],
        "type": "object",
        "properties": {
          "pgLangId": {
            "title": "Pglangid",
            "minimum": 1.0,
            "type": "integer",
            "description": "実行PG言語ID"
          },
          "sourceCode": {
            "title": "Sourcecode",
            "type": "string",
            "description": "ソースコード"
          },
          "originalCases": {
            "title": "Originalcases",
            "maxItems": 5,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OriginalCaseInfo"
            },
            "description": "オリジナルケース",
            "default": []
          }
        }
      },
      "QuestionExecuteSampleCaseOut": {
        "title": "QuestionExecuteSampleCaseOut",
        "required": [
          "testResultId"
        ],
        "type": "object",
        "properties": {
          "testResultId": {
            "title": "Testresultid",
            "minimum": 1.0,
            "type": "integer",
            "description": "テスト結果ID"
          },
          "originalCases": {
            "title": "Originalcases",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OriginalSampleCaseOut"
            },
            "description": "オリジナルケース",
            "default": []
          }
        }
      },
      "QuestionFileDetailOut": {
        "title": "QuestionFileDetailOut",
        "required": [
          "id",
          "filename",
          "url",
          "isDeleted"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "filename": {
            "title": "Filename",
            "maxLength": 100,
            "type": "string",
            "description": "ファイル名"
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "問題画像URL"
          },
          "isDeleted": {
            "title": "Isdeleted",
            "type": "boolean",
            "description": "削除フラグ"
          }
        }
      },
      "QuestionFormatCheckResultOut": {
        "title": "QuestionFormatCheckResultOut",
        "required": [
          "passedFormatCheckCount",
          "failedFormatCheckCount",
          "formatCheckResults"
        ],
        "type": "object",
        "properties": {
          "passedFormatCheckCount": {
            "title": "Passedformatcheckcount",
            "type": "integer",
            "description": "通過したテストケース数"
          },
          "failedFormatCheckCount": {
            "title": "Failedformatcheckcount",
            "type": "integer",
            "description": "非通過のテストケース数"
          },
          "formatCheckResults": {
            "title": "Formatcheckresults",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormatCheckResult"
            }
          }
        }
      },
      "QuestionListDetailForSchoolOut": {
        "title": "QuestionListDetailForSchoolOut",
        "required": [
          "id",
          "contentCategoryName",
          "contentTopicName",
          "contentDivision",
          "contentDivisionLabel",
          "title",
          "difficulty",
          "questionTypeLabel",
          "questionType",
          "isVerified",
          "createdAt",
          "createdBy",
          "updatedAt",
          "updatedBy",
          "isPublished",
          "isTranslated",
          "isFavorite",
          "isRefusedBrowsing",
          "isSharedTestcase",
          "showTestcaseToAnswerer",
          "content"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "contentCategoryName": {
            "title": "Contentcategoryname",
            "maxLength": 63,
            "type": "string"
          },
          "contentTopicName": {
            "title": "Contenttopicname",
            "maxLength": 35,
            "type": "string"
          },
          "contentDivision": {
            "$ref": "#/components/schemas/ContentDivision"
          },
          "contentDivisionLabel": {
            "title": "Contentdivisionlabel",
            "type": "string"
          },
          "contentTagNames": {
            "title": "Contenttagnames",
            "maxLength": 62,
            "type": "array",
            "items": {
              "maxLength": 62,
              "type": "string"
            },
            "nullable": true
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string"
          },
          "difficulty": {
            "title": "Difficulty",
            "type": "integer"
          },
          "questionTypeLabel": {
            "title": "Questiontypelabel",
            "type": "string"
          },
          "questionType": {
            "$ref": "#/components/schemas/QuestionType"
          },
          "templatePgLangName": {
            "title": "Templatepglangname",
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "isVerified": {
            "title": "Isverified",
            "type": "boolean"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 180,
            "type": "string"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "title": "Updatedby",
            "maxLength": 180,
            "type": "string"
          },
          "isPublished": {
            "title": "Ispublished",
            "type": "boolean"
          },
          "isTranslated": {
            "title": "Istranslated",
            "type": "boolean"
          },
          "isFavorite": {
            "title": "Isfavorite",
            "type": "boolean"
          },
          "isRefusedBrowsing": {
            "title": "Isrefusedbrowsing",
            "type": "boolean"
          },
          "isSharedTestcase": {
            "title": "Issharedtestcase",
            "type": "boolean"
          },
          "showTestcaseToAnswerer": {
            "title": "Showtestcasetoanswerer",
            "type": "boolean"
          },
          "content": {
            "$ref": "#/components/schemas/ContentOut"
          }
        }
      },
      "QuestionListDetailOut": {
        "title": "QuestionListDetailOut",
        "required": [
          "id",
          "contentCategoryName",
          "contentTopicName",
          "contentDivision",
          "contentDivisionLabel",
          "title",
          "difficulty",
          "questionTypeLabel",
          "questionType",
          "isVerified",
          "createdAt",
          "createdBy",
          "updatedAt",
          "updatedBy",
          "isPublished",
          "isTranslated",
          "isFavorite"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "contentCategoryName": {
            "title": "Contentcategoryname",
            "maxLength": 63,
            "type": "string"
          },
          "contentTopicName": {
            "title": "Contenttopicname",
            "maxLength": 35,
            "type": "string"
          },
          "contentDivision": {
            "$ref": "#/components/schemas/ContentDivision"
          },
          "contentDivisionLabel": {
            "title": "Contentdivisionlabel",
            "type": "string"
          },
          "contentTagNames": {
            "title": "Contenttagnames",
            "maxLength": 62,
            "type": "array",
            "items": {
              "maxLength": 62,
              "type": "string"
            },
            "nullable": true
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string"
          },
          "difficulty": {
            "title": "Difficulty",
            "type": "integer"
          },
          "questionTypeLabel": {
            "title": "Questiontypelabel",
            "type": "string"
          },
          "questionType": {
            "$ref": "#/components/schemas/QuestionType"
          },
          "templatePgLangName": {
            "title": "Templatepglangname",
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "isVerified": {
            "title": "Isverified",
            "type": "boolean"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 180,
            "type": "string"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "title": "Updatedby",
            "maxLength": 180,
            "type": "string"
          },
          "isPublished": {
            "title": "Ispublished",
            "type": "boolean"
          },
          "isTranslated": {
            "title": "Istranslated",
            "type": "boolean"
          },
          "isFavorite": {
            "title": "Isfavorite",
            "type": "boolean"
          }
        }
      },
      "QuestionListOut": {
        "title": "QuestionListOut",
        "required": [
          "totalCount",
          "publishedCount",
          "hasPrevious",
          "hasNext",
          "questions"
        ],
        "type": "object",
        "properties": {
          "totalCount": {
            "title": "Totalcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "全件数"
          },
          "publishedCount": {
            "title": "Publishedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "公開中件数"
          },
          "hasPrevious": {
            "title": "Hasprevious",
            "type": "boolean",
            "description": "前データが存在するか"
          },
          "hasNext": {
            "title": "Hasnext",
            "type": "boolean",
            "description": "次データが存在するか"
          },
          "questions": {
            "title": "Questions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionListDetailForSchoolOut"
            }
          }
        }
      },
      "QuestionPublishIn": {
        "title": "QuestionPublishIn",
        "required": [
          "id",
          "isPublished"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "content_id"
          },
          "isPublished": {
            "title": "Ispublished",
            "type": "boolean",
            "description": "公開フラグ"
          }
        }
      },
      "QuestionResultStatus": {
        "title": "QuestionResultStatus",
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "問題解答状況"
      },
      "QuestionResultStatusNoFail": {
        "title": "QuestionResultStatusNoFail",
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "問題解答状況(不合格なし)"
      },
      "QuestionResultType": {
        "title": "QuestionResultType",
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "問題解答種別"
      },
      "QuestionResultTypeForDashboard": {
        "title": "QuestionResultTypeForDashboard",
        "enum": [
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "一般ユーザーのダッシュボードの問題解答ヒートマップ取得に使用"
      },
      "QuestionSampleCaseDetail": {
        "title": "QuestionSampleCaseDetail",
        "required": [
          "id",
          "order",
          "title",
          "stdin",
          "stdout",
          "description"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "サンプルケースID"
          },
          "order": {
            "title": "Order",
            "minimum": 0.0,
            "type": "integer",
            "description": "順番"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "stdin": {
            "title": "Stdin",
            "type": "string",
            "description": "標準入力"
          },
          "stdout": {
            "title": "Stdout",
            "type": "string",
            "description": "標準出力"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "説明"
          }
        }
      },
      "QuestionSelectionExecuteIn": {
        "title": "QuestionSelectionExecuteIn",
        "required": [
          "userAnswers"
        ],
        "type": "object",
        "properties": {
          "userAnswers": {
            "title": "Useranswers",
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "description": "各orderにおけるユーザーの解答 (チェック済み:ture,未チェック:false)。 キーは id ではなく order。"
          }
        }
      },
      "QuestionSelectionExecuteOut": {
        "title": "QuestionSelectionExecuteOut",
        "required": [
          "totalResult",
          "questionExplanation",
          "results"
        ],
        "type": "object",
        "properties": {
          "totalResult": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionResultStatus"
              }
            ],
            "description": "総合採点結果"
          },
          "questionExplanation": {
            "title": "Questionexplanation",
            "type": "string",
            "description": "解説"
          },
          "results": {
            "title": "Results",
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "description": "各orderにおける採点結果。キーは id ではなく order。"
          }
        }
      },
      "QuestionTemplateDetailOut": {
        "title": "QuestionTemplateDetailOut",
        "required": [
          "sourceCode",
          "errorOutput",
          "pgLangId",
          "questionTemplateInvalidLines"
        ],
        "type": "object",
        "properties": {
          "sourceCode": {
            "title": "Sourcecode",
            "type": "string",
            "description": "ソースコード"
          },
          "errorOutput": {
            "title": "Erroroutput",
            "type": "string",
            "description": "エラー出力"
          },
          "judgeStatus": {
            "title": "Judgestatus",
            "type": "integer",
            "description": "ジャッジステータス",
            "nullable": true
          },
          "pgLangId": {
            "title": "Pglangid",
            "minimum": 1.0,
            "type": "integer"
          },
          "questionTemplateInvalidLines": {
            "title": "Questiontemplateinvalidlines",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionTemplateInvalidLineDetailOut"
            }
          }
        }
      },
      "QuestionTemplateInvalidLineDetailOut": {
        "title": "QuestionTemplateInvalidLineDetailOut",
        "required": [
          "startLine",
          "endLine"
        ],
        "type": "object",
        "properties": {
          "startLine": {
            "title": "Startline",
            "type": "integer",
            "description": "開始行"
          },
          "endLine": {
            "title": "Endline",
            "type": "integer",
            "description": "終了行"
          }
        }
      },
      "QuestionTestCaseExecuteIn": {
        "title": "QuestionTestCaseExecuteIn",
        "required": [
          "pgLangId",
          "sourceCode"
        ],
        "type": "object",
        "properties": {
          "pgLangId": {
            "title": "Pglangid",
            "minimum": 1.0,
            "type": "integer"
          },
          "sourceCode": {
            "title": "Sourcecode",
            "type": "string"
          }
        }
      },
      "QuestionTestCaseExecuteOut": {
        "title": "QuestionTestCaseExecuteOut",
        "required": [
          "questionVerificationResultId"
        ],
        "type": "object",
        "properties": {
          "questionVerificationResultId": {
            "title": "Questionverificationresultid",
            "minimum": 1.0,
            "type": "integer",
            "description": "問題検証結果ID"
          }
        }
      },
      "QuestionTestCasesListOut": {
        "title": "QuestionTestCasesListOut",
        "required": [
          "id",
          "title",
          "isSampleCase",
          "order",
          "stdin",
          "stdout",
          "stdinLineCount",
          "stdoutLineCount",
          "isOmitted"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "test_case_id"
          },
          "title": {
            "title": "Title",
            "maxLength": 31,
            "type": "string",
            "description": "タイトル"
          },
          "isSampleCase": {
            "title": "Issamplecase",
            "type": "boolean",
            "description": "サンプルケースか"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "説明文",
            "default": ""
          },
          "descriptionEn": {
            "title": "Descriptionen",
            "type": "string",
            "description": "説明英語",
            "default": ""
          },
          "stdin": {
            "title": "Stdin",
            "type": "string",
            "description": "入力値"
          },
          "stdout": {
            "title": "Stdout",
            "type": "string",
            "description": "出力値"
          },
          "shortenStdin": {
            "title": "Shortenstdin",
            "type": "string",
            "description": "省略語入力値",
            "nullable": true
          },
          "shortenStdout": {
            "title": "Shortenstdout",
            "type": "string",
            "description": "省略語出力値",
            "nullable": true
          },
          "stdinLineCount": {
            "title": "Stdinlinecount",
            "type": "integer",
            "description": "入力値_行数"
          },
          "stdoutLineCount": {
            "title": "Stdoutlinecount",
            "type": "integer",
            "description": "入力値_行数"
          },
          "isOmitted": {
            "title": "Isomitted",
            "type": "boolean",
            "description": "省略されているか"
          }
        }
      },
      "QuestionType": {
        "title": "QuestionType",
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "問題形式"
      },
      "QuestionTypeChoicesOut": {
        "title": "QuestionTypeChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "QuestionUpdateIn": {
        "title": "QuestionUpdateIn",
        "required": [
          "targetTime",
          "questionType",
          "difficulty",
          "contentTopicId",
          "contentTagNames",
          "contentDivision"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string",
            "description": "問題タイトル",
            "nullable": true
          },
          "text": {
            "title": "Text",
            "type": "string",
            "description": "問題文",
            "nullable": true
          },
          "targetTime": {
            "title": "Targettime",
            "type": "integer",
            "description": "目標回答時間"
          },
          "questionType": {
            "$ref": "#/components/schemas/QuestionType"
          },
          "difficulty": {
            "title": "Difficulty",
            "type": "integer",
            "description": "難易度"
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "問題文要約",
            "default": ""
          },
          "sqlSetup": {
            "title": "Sqlsetup",
            "type": "string",
            "description": "SQL問題の初期実行コード",
            "default": ""
          },
          "image": {
            "title": "Image",
            "type": "string",
            "description": "問題画像URL",
            "default": ""
          },
          "contentTopicId": {
            "title": "Contenttopicid",
            "minimum": 1.0,
            "type": "integer"
          },
          "contentTagNames": {
            "title": "Contenttagnames",
            "maxLength": 62,
            "type": "array",
            "items": {
              "maxLength": 62,
              "type": "string"
            },
            "description": "登録タグ"
          },
          "contentDivision": {
            "$ref": "#/components/schemas/ContentDivision"
          },
          "isRefusedBrowsing": {
            "title": "Isrefusedbrowsing",
            "type": "boolean",
            "description": "企業に閲覧許可",
            "default": false
          },
          "isSharedBetweenSchools": {
            "title": "Issharedbetweenschools",
            "type": "boolean",
            "description": "他学校に問題公開",
            "default": false
          },
          "showTestcaseToAnswerer": {
            "title": "Showtestcasetoanswerer",
            "type": "boolean",
            "description": "解答者にテストケース公開",
            "default": false
          },
          "isSharedTestcase": {
            "title": "Issharedtestcase",
            "type": "boolean",
            "description": "他学校にテストケースを公開するか",
            "default": false
          },
          "questionChoices": {
            "title": "Questionchoices",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__manage__questions__question_update_in__QuestionChoiceIn"
            },
            "nullable": true
          },
          "answer": {
            "title": "Answer",
            "type": "string",
            "description": "解答",
            "default": ""
          },
          "questionBlanks": {
            "title": "Questionblanks",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__manage__questions__question_update_in__QuestionBlankIn"
            },
            "nullable": true
          },
          "questionFiles": {
            "title": "Questionfiles",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__manage__questions__question_update_in__QuestionFileIn"
            },
            "nullable": true
          },
          "questionTemplate": {
            "title": "QuestionTemplateIn",
            "anyOf": [
              {
                "$ref": "#/components/schemas/app__schemas__manage__questions__question_update_in__QuestionTemplateIn"
              }
            ],
            "nullable": true
          },
          "questionTestCases": {
            "title": "Questiontestcases",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__manage__questions__question_update_in__TestCaseIn"
            },
            "nullable": true
          }
        }
      },
      "QuestionUserResultList": {
        "title": "QuestionUserResultList",
        "required": [
          "id",
          "userName",
          "score",
          "submitCount",
          "failedCount",
          "isPassedInTime",
          "isPassed",
          "answerStartAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "参加者ユーザーID"
          },
          "userName": {
            "title": "Username",
            "maxLength": 150,
            "type": "string",
            "description": "参加者アカウント名"
          },
          "studentNumber": {
            "title": "Studentnumber",
            "maxLength": 31,
            "type": "string",
            "description": "学籍番号",
            "default": ""
          },
          "userRealName": {
            "title": "Userrealname",
            "maxLength": 180,
            "type": "string",
            "description": "参加者本名",
            "default": ""
          },
          "displayName": {
            "title": "Displayname",
            "maxLength": 31,
            "type": "string",
            "description": "参加者表示名",
            "default": ""
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足情報",
            "default": ""
          },
          "score": {
            "title": "Score",
            "minimum": 0.0,
            "type": "integer",
            "description": "スコア"
          },
          "submitCount": {
            "title": "Submitcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "提出回数"
          },
          "failedCount": {
            "title": "Failedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "エラー回数"
          },
          "isPassedInTime": {
            "title": "Ispassedintime",
            "type": "boolean",
            "description": "目標時間内に合格"
          },
          "isPassed": {
            "title": "Ispassed",
            "type": "boolean",
            "description": "合格したか"
          },
          "answerStartAt": {
            "title": "Answerstartat",
            "type": "string",
            "description": "解答開始日時,問題解答成績の作成日時(created_at)",
            "format": "date-time"
          }
        },
        "description": "ユーザー毎の成績一覧(問題成績詳細)"
      },
      "QuestionVerificationListOut": {
        "title": "QuestionVerificationListOut",
        "required": [
          "id",
          "createdAt",
          "username",
          "organizationName",
          "isPassed",
          "pgLangName",
          "verificationSourceCode",
          "monacoName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "検証日時",
            "format": "date-time"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string",
            "description": "ユーザー名"
          },
          "organizationName": {
            "title": "Organizationname",
            "maxLength": 150,
            "type": "string",
            "description": "ユーザが所属している企業名,学校名+組織名(学部/研究室等)"
          },
          "isPassed": {
            "title": "Ispassed",
            "type": "boolean",
            "description": "結果"
          },
          "pgLangName": {
            "title": "Pglangname",
            "type": "string",
            "description": "プログラミング言語名"
          },
          "verificationSourceCode": {
            "title": "Verificationsourcecode",
            "type": "string",
            "description": "検証ソースコード"
          },
          "monacoName": {
            "title": "Monaconame",
            "maxLength": 35,
            "type": "string",
            "description": "モナコ言語名"
          }
        }
      },
      "QuestionVerificationResultOut": {
        "title": "QuestionVerificationResultOut",
        "required": [
          "testCaseResults",
          "resultStatus"
        ],
        "type": "object",
        "properties": {
          "testCaseResults": {
            "title": "Testcaseresults",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VerificationCaseResult"
            },
            "description": "テストケース検証結果"
          },
          "passedTestCaseCount": {
            "title": "Passedtestcasecount",
            "minimum": 0.0,
            "type": "integer",
            "description": "合格テストケース数",
            "nullable": true
          },
          "totalTestCaseCount": {
            "title": "Totaltestcasecount",
            "minimum": 0.0,
            "type": "integer",
            "description": "全テストケース数",
            "nullable": true
          },
          "resultStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionAnswerResult"
              }
            ],
            "description": "解答結果"
          }
        }
      },
      "QuestionsSampleCaseOut": {
        "title": "QuestionsSampleCaseOut",
        "required": [
          "testCaseId",
          "stdinLineCount",
          "stdoutLineCount"
        ],
        "type": "object",
        "properties": {
          "testCaseId": {
            "title": "Testcaseid",
            "minimum": 1.0,
            "type": "integer",
            "description": "サンプルケースID"
          },
          "stdin": {
            "title": "Stdin",
            "type": "string",
            "description": "入力値 (省略表示時はnull)",
            "nullable": true
          },
          "stdout": {
            "title": "Stdout",
            "type": "string",
            "description": "出力値 (省略表示時はnull)",
            "nullable": true
          },
          "shortenStdin": {
            "title": "Shortenstdin",
            "type": "string",
            "description": "省略表示の際の入力値",
            "nullable": true
          },
          "shortenStdout": {
            "title": "Shortenstdout",
            "type": "string",
            "description": "省略表示の際の出力値",
            "nullable": true
          },
          "stdinLineCount": {
            "title": "Stdinlinecount",
            "type": "integer",
            "description": "入力値_行数"
          },
          "stdoutLineCount": {
            "title": "Stdoutlinecount",
            "type": "integer",
            "description": "入力値_行数"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "説明",
            "nullable": true
          }
        }
      },
      "QuestionsStatusOut": {
        "title": "QuestionsStatusOut",
        "required": [
          "isAnswered"
        ],
        "type": "object",
        "properties": {
          "isAnswered": {
            "title": "Isanswered",
            "type": "boolean",
            "description": "問題を1度だけでも開いたことがある"
          }
        }
      },
      "QuitReasonType": {
        "title": "QuitReasonType",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "description": "退会理由種別"
      },
      "RandomAdvertisementDetailOut": {
        "title": "RandomAdvertisementDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "image"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "title": "Image",
            "type": "string",
            "description": "画像"
          }
        }
      },
      "RandomAdvertisementUrlDetailOut": {
        "title": "RandomAdvertisementUrlDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "title": "Url",
            "maxLength": 8196,
            "type": "string",
            "description": "URL"
          }
        }
      },
      "RecommendQuestion": {
        "title": "RecommendQuestion",
        "required": [
          "contentId",
          "questionType",
          "questionTypeLabel",
          "challengerCount",
          "passedCount",
          "title",
          "targetTime",
          "difficulty",
          "contentCategoryName",
          "contentTopicName"
        ],
        "type": "object",
        "properties": {
          "contentId": {
            "title": "Contentid",
            "minimum": 1.0,
            "type": "integer",
            "description": "コンテンツID"
          },
          "questionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionType"
              }
            ],
            "description": "問題形式"
          },
          "questionTypeLabel": {
            "title": "Questiontypelabel",
            "type": "string",
            "description": "問題形式ラベル"
          },
          "challengerCount": {
            "title": "Challengercount",
            "minimum": 0.0,
            "type": "integer",
            "description": "挑戦者数"
          },
          "passedCount": {
            "title": "Passedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "合格者数"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "問題タイトル"
          },
          "targetTime": {
            "title": "Targettime",
            "type": "integer",
            "description": "目標解答時間"
          },
          "difficulty": {
            "title": "Difficulty",
            "type": "integer",
            "description": "難易度"
          },
          "contentCategoryName": {
            "title": "Contentcategoryname",
            "type": "string",
            "description": "カテゴリ名"
          },
          "contentTopicName": {
            "title": "Contenttopicname",
            "type": "string",
            "description": "トピック名"
          }
        }
      },
      "RecruitmentAndHiringStatusDetail": {
        "title": "RecruitmentAndHiringStatusDetail",
        "required": [
          "id",
          "item",
          "detail"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecruitmentAndHiringStatusItem"
              }
            ],
            "description": "項目",
            "nullable": true
          },
          "detail": {
            "title": "Detail",
            "type": "string",
            "description": "詳細"
          }
        }
      },
      "RecruitmentAndHiringStatusIn": {
        "title": "RecruitmentAndHiringStatusIn",
        "required": [
          "item"
        ],
        "type": "object",
        "properties": {
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecruitmentAndHiringStatusItem"
              }
            ],
            "description": "募集採用に関する状況 | 1:過去３年間の新卒採用者数・離職者数, 2:過去３年間の新卒採用者数の男女別人数, 3:平均勤続年数"
          },
          "detail": {
            "title": "Detail",
            "type": "string",
            "description": "募集採用に関する状況詳細",
            "default": ""
          }
        }
      },
      "RecruitmentAndHiringStatusItem": {
        "title": "RecruitmentAndHiringStatusItem",
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "募集採用に関する状況"
      },
      "RecruitmentAndHiringStatusItemChoicesOut": {
        "title": "RecruitmentAndHiringStatusItemChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "RecruitmentAndHiringStatusOut": {
        "title": "RecruitmentAndHiringStatusOut",
        "required": [
          "item",
          "itemLabel"
        ],
        "type": "object",
        "properties": {
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecruitmentAndHiringStatusItem"
              }
            ],
            "description": "募集採用に関する状況 | 1:過去３年間の新卒採用者数・離職者数, 2:過去３年間の新卒採用者数の男女別人数, 3:平均勤続年数"
          },
          "itemLabel": {
            "title": "Itemlabel",
            "type": "string",
            "description": "募集採用に関する状況ラベル"
          },
          "detail": {
            "title": "Detail",
            "type": "string",
            "description": "募集採用に関する状況詳細",
            "default": ""
          }
        }
      },
      "ReferableUserStatus": {
        "title": "ReferableUserStatus",
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "紹介可能ユーザースカウト状況"
      },
      "RefreshTokenForm": {
        "title": "RefreshTokenForm",
        "required": [
          "refresh_token"
        ],
        "type": "object",
        "properties": {
          "grant_type": {
            "title": "Grant Type",
            "pattern": "refresh_token",
            "type": "string"
          },
          "refresh_token": {
            "title": "Refresh Token",
            "type": "string"
          },
          "scope": {
            "title": "Scope",
            "type": "string",
            "default": ""
          }
        }
      },
      "RelatedJobList": {
        "title": "RelatedJobList",
        "required": [
          "id",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "ID"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "skillLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SkillLevel"
              }
            ],
            "description": "スキルレベル",
            "nullable": true
          },
          "salaryMin": {
            "title": "Salarymin",
            "type": "integer",
            "description": "年収下限",
            "nullable": true
          },
          "salaryMax": {
            "title": "Salarymax",
            "type": "integer",
            "description": "年収上限",
            "nullable": true
          },
          "salarySystem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SalarySystem"
              }
            ],
            "description": "年収システム",
            "nullable": true
          },
          "prefectures": {
            "title": "Prefectures",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "勤務地",
            "default": []
          }
        }
      },
      "RequestBodyParameterBase": {
        "title": "RequestBodyParameterBase",
        "required": [
          "id",
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "key": {
            "title": "Key",
            "type": "string",
            "description": "キー"
          },
          "value": {
            "title": "Value",
            "type": "string",
            "description": "バリュー"
          }
        }
      },
      "RequestBodyParameterIn": {
        "title": "RequestBodyParameterIn",
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "title": "Key",
            "type": "string",
            "description": "キー"
          },
          "value": {
            "title": "Value",
            "type": "string",
            "description": "バリュー"
          }
        }
      },
      "RequestBodyParameterOut": {
        "title": "RequestBodyParameterOut",
        "required": [
          "id",
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "key": {
            "title": "Key",
            "type": "string",
            "description": "採点時に必要となるリクエストボディに含めるキー"
          },
          "value": {
            "title": "Value",
            "type": "string",
            "description": "キーに紐づくバリュー"
          }
        }
      },
      "ResetPasswordIn": {
        "title": "ResetPasswordIn",
        "required": [
          "token",
          "newPassword"
        ],
        "type": "object",
        "properties": {
          "token": {
            "title": "Token",
            "type": "string"
          },
          "newPassword": {
            "title": "Newpassword",
            "type": "string"
          }
        }
      },
      "RevokeRefreshTokenIn": {
        "title": "RevokeRefreshTokenIn",
        "required": [
          "refresh_token"
        ],
        "type": "object",
        "properties": {
          "refresh_token": {
            "title": "Refresh Token",
            "type": "string",
            "example": "xxx.xxx.xxx"
          }
        }
      },
      "SalarySystem": {
        "title": "SalarySystem",
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "給与形態"
      },
      "SalarySystemChoicesOut": {
        "title": "SalarySystemChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "SampleCaseResult": {
        "title": "SampleCaseResult",
        "required": [
          "questionTestCaseId",
          "stdin",
          "expectedStdout",
          "stdout",
          "judgeStatus",
          "elapsedTime",
          "memoryUsage"
        ],
        "type": "object",
        "properties": {
          "questionTestCaseId": {
            "title": "Questiontestcaseid",
            "minimum": 1.0,
            "type": "integer",
            "description": "テストケースID"
          },
          "stdin": {
            "title": "Stdin",
            "type": "string",
            "description": "標準入力"
          },
          "expectedStdout": {
            "title": "Expectedstdout",
            "type": "string",
            "description": "期待される標準出力"
          },
          "stdout": {
            "title": "Stdout",
            "type": "string",
            "description": "ユーザー出力/エラー出力"
          },
          "judgeStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JudgeStatus"
              }
            ],
            "description": "ジャッジ結果"
          },
          "elapsedTime": {
            "title": "Elapsedtime",
            "minimum": 0.0,
            "type": "number",
            "description": "実行時間(s)"
          },
          "memoryUsage": {
            "title": "Memoryusage",
            "minimum": 0.0,
            "type": "integer",
            "description": "メモリ使用量(KB)"
          }
        }
      },
      "SampleCodeCreateIn": {
        "title": "SampleCodeCreateIn",
        "required": [
          "pgLangId",
          "sourceCode",
          "stdin",
          "stdout",
          "order"
        ],
        "type": "object",
        "properties": {
          "pgLangId": {
            "title": "Pglangid",
            "minimum": 1.0,
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "maxLength": 50,
            "type": "string",
            "default": ""
          },
          "sourceCode": {
            "title": "Sourcecode",
            "type": "string"
          },
          "stdin": {
            "title": "Stdin",
            "type": "string"
          },
          "stdout": {
            "title": "Stdout",
            "type": "string"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer"
          }
        }
      },
      "SampleCodeDetailOut": {
        "title": "SampleCodeDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "pgLangId",
          "title",
          "sourceCode",
          "stdin",
          "stdout",
          "order"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "pgLangId": {
            "title": "Pglangid",
            "minimum": 1.0,
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "maxLength": 50,
            "type": "string"
          },
          "sourceCode": {
            "title": "Sourcecode",
            "type": "string"
          },
          "stdin": {
            "title": "Stdin",
            "type": "string"
          },
          "stdout": {
            "title": "Stdout",
            "type": "string"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer"
          }
        }
      },
      "SampleCodeListOut": {
        "title": "SampleCodeListOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "title",
          "pgLangName",
          "stdin",
          "order"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "title": "Title",
            "maxLength": 50,
            "type": "string"
          },
          "pgLangName": {
            "title": "Pglangname",
            "maxLength": 35,
            "type": "string"
          },
          "stdin": {
            "title": "Stdin",
            "type": "string"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer"
          }
        }
      },
      "SampleCodeUpdateIn": {
        "title": "SampleCodeUpdateIn",
        "type": "object",
        "properties": {
          "pgLangId": {
            "title": "Pglangid",
            "minimum": 1.0,
            "type": "integer",
            "nullable": true
          },
          "title": {
            "title": "Title",
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "sourceCode": {
            "title": "Sourcecode",
            "type": "string",
            "nullable": true
          },
          "stdin": {
            "title": "Stdin",
            "type": "string",
            "nullable": true
          },
          "stdout": {
            "title": "Stdout",
            "type": "string",
            "nullable": true
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "nullable": true
          }
        }
      },
      "SchoolCountOut": {
        "title": "SchoolCountOut",
        "required": [
          "nationalUniversityCount",
          "publicUniversityCount",
          "privateUniversityCount",
          "technicalSchoolCount",
          "technicalCollegeCount",
          "highSchoolCount",
          "juniorHighSchoolCount",
          "elementarySchoolCount",
          "schoolCount",
          "foreignUniversityCount",
          "foreignHighSchoolCount",
          "foreignJuniorHighSchoolCount",
          "schoolTotalCount"
        ],
        "type": "object",
        "properties": {
          "nationalUniversityCount": {
            "title": "Nationaluniversitycount",
            "minimum": 0.0,
            "type": "integer",
            "description": "国立大学合計数"
          },
          "publicUniversityCount": {
            "title": "Publicuniversitycount",
            "minimum": 0.0,
            "type": "integer",
            "description": "公立大学合計数"
          },
          "privateUniversityCount": {
            "title": "Privateuniversitycount",
            "minimum": 0.0,
            "type": "integer",
            "description": "私立大学合計数"
          },
          "technicalSchoolCount": {
            "title": "Technicalschoolcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "高専合計数"
          },
          "technicalCollegeCount": {
            "title": "Technicalcollegecount",
            "minimum": 0.0,
            "type": "integer",
            "description": "専門学校合計数"
          },
          "highSchoolCount": {
            "title": "Highschoolcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "高校合計数"
          },
          "juniorHighSchoolCount": {
            "title": "Juniorhighschoolcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "中学校合計数"
          },
          "elementarySchoolCount": {
            "title": "Elementaryschoolcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "小学校合計数"
          },
          "schoolCount": {
            "title": "Schoolcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "スクール合計数"
          },
          "foreignUniversityCount": {
            "title": "Foreignuniversitycount",
            "minimum": 0.0,
            "type": "integer",
            "description": "大学（海外）合計数"
          },
          "foreignHighSchoolCount": {
            "title": "Foreignhighschoolcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "高校（海外）合計数"
          },
          "foreignJuniorHighSchoolCount": {
            "title": "Foreignjuniorhighschoolcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "中学校（海外）合計数"
          },
          "schoolTotalCount": {
            "title": "Schooltotalcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "学校登録合計数"
          }
        }
      },
      "SchoolCreateIn": {
        "title": "SchoolCreateIn",
        "required": [
          "name",
          "schoolType"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 35,
            "type": "string"
          },
          "schoolType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SchoolType"
              }
            ],
            "description": "1:国立大学, 2:公立大学, 3:私立大学, 4:高専, 5:専門学校, 6:高校, 7:中学校, 8:小学校, 9:スクール, 10:大学（海外）, 11:高校（海外）, 12:中学校（海外）, 13:職業訓練校, 14:特別支援学校, 15:その他, 16:大学院修士課程, 17:大学院博士課程"
          },
          "image": {
            "title": "Image",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "default": ""
          },
          "hp": {
            "title": "Hp",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "default": ""
          }
        }
      },
      "SchoolDepartmentCreateIn": {
        "title": "SchoolDepartmentCreateIn",
        "required": [
          "schoolId",
          "name",
          "slug"
        ],
        "type": "object",
        "properties": {
          "schoolId": {
            "title": "Schoolid",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 50,
            "type": "string",
            "description": "組織名(学部、研究室)"
          },
          "useSecurityOption": {
            "title": "Usesecurityoption",
            "type": "boolean",
            "default": false
          },
          "customDomain": {
            "title": "Customdomain",
            "maxLength": 256,
            "type": "string",
            "default": ""
          },
          "slug": {
            "title": "Slug",
            "maxLength": 50,
            "type": "string",
            "description": "アカウント名接頭辞"
          }
        }
      },
      "SchoolDepartmentDetailOut": {
        "title": "SchoolDepartmentDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "useSecurityOption",
          "customDomain",
          "slug"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 50,
            "type": "string",
            "description": "組織名(学部、研究室)"
          },
          "useSecurityOption": {
            "title": "Usesecurityoption",
            "type": "boolean"
          },
          "customDomain": {
            "title": "Customdomain",
            "type": "string"
          },
          "slug": {
            "title": "Slug",
            "maxLength": 50,
            "type": "string",
            "description": "アカウント名接頭辞"
          }
        }
      },
      "SchoolDepartmentListOut": {
        "title": "SchoolDepartmentListOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "createdBy",
          "isLinkedToMoodle"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 50,
            "type": "string",
            "description": "組織名(学部、研究室)"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 180,
            "type": "string",
            "description": "ユーザの姓名"
          },
          "isLinkedToMoodle": {
            "title": "Islinkedtomoodle",
            "type": "boolean",
            "description": "Moodle連携状態"
          }
        }
      },
      "SchoolDepartmentUpdateIn": {
        "title": "SchoolDepartmentUpdateIn",
        "required": [
          "slug"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 50,
            "type": "string",
            "description": "組織名(学部、研究室)",
            "nullable": true
          },
          "useSecurityOption": {
            "title": "Usesecurityoption",
            "type": "boolean",
            "nullable": true
          },
          "customDomain": {
            "title": "Customdomain",
            "type": "string",
            "nullable": true
          },
          "slug": {
            "title": "Slug",
            "maxLength": 50,
            "type": "string",
            "description": "アカウント名接頭辞"
          }
        }
      },
      "SchoolDetailOut": {
        "title": "SchoolDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "schoolType",
          "image",
          "hp"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 35,
            "type": "string"
          },
          "schoolType": {
            "$ref": "#/components/schemas/SchoolType"
          },
          "image": {
            "title": "Image",
            "type": "string"
          },
          "hp": {
            "title": "Hp",
            "maxLength": 200,
            "type": "string"
          }
        }
      },
      "SchoolListDetailOut": {
        "title": "SchoolListDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "schoolTypeLabel",
          "organizationId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          },
          "schoolTypeLabel": {
            "title": "Schooltypelabel",
            "maxLength": 63,
            "type": "string"
          },
          "organizationId": {
            "title": "Organizationid",
            "minimum": 1.0,
            "type": "integer",
            "description": "組織ID",
            "nullable": true
          }
        }
      },
      "SchoolListOut": {
        "title": "SchoolListOut",
        "required": [
          "totalCount",
          "hasPrevious",
          "hasNext",
          "schools"
        ],
        "type": "object",
        "properties": {
          "totalCount": {
            "title": "Totalcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "全件数"
          },
          "hasPrevious": {
            "title": "Hasprevious",
            "type": "boolean",
            "description": "前データが存在するか"
          },
          "hasNext": {
            "title": "Hasnext",
            "type": "boolean",
            "description": "次データが存在するか"
          },
          "schools": {
            "title": "Schools",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SchoolListDetailOut"
            }
          }
        }
      },
      "SchoolType": {
        "title": "SchoolType",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17
        ],
        "type": "integer",
        "description": "学校の種類"
      },
      "SchoolTypeChoicesOut": {
        "title": "SchoolTypeChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "SchoolUpdateIn": {
        "title": "SchoolUpdateIn",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "schoolType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SchoolType"
              }
            ],
            "description": "1:国立大学, 2:公立大学, 3:私立大学, 4:高専, 5:専門学校, 6:高校, 7:中学校, 8:小学校, 9:スクール, 10:大学（海外）, 11:高校（海外）, 12:中学校（海外）, 13:職業訓練校, 14:特別支援学校, 15:その他, 16:大学院修士課程, 17:大学院博士課程",
            "nullable": true
          },
          "image": {
            "title": "Image",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "nullable": true
          },
          "hp": {
            "title": "Hp",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "nullable": true
          }
        }
      },
      "SchoolUserCreateIn": {
        "title": "SchoolUserCreateIn",
        "required": [
          "organizationId",
          "firstName",
          "lastName",
          "username",
          "password",
          "email",
          "schoolUserType"
        ],
        "type": "object",
        "properties": {
          "organizationId": {
            "title": "Organizationid",
            "minimum": 1.0,
            "type": "integer"
          },
          "firstName": {
            "title": "Firstname",
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "title": "Lastname",
            "maxLength": 150,
            "minLength": 1,
            "type": "string"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "schoolUserType": {
            "$ref": "#/components/schemas/SchoolUserType"
          }
        }
      },
      "SchoolUserDetailOut": {
        "title": "SchoolUserDetailOut",
        "required": [
          "id",
          "createdAt",
          "createdBy",
          "firstName",
          "lastName",
          "username",
          "email",
          "schoolUserType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 180,
            "type": "string"
          },
          "firstName": {
            "title": "Firstname",
            "maxLength": 30,
            "type": "string"
          },
          "lastName": {
            "title": "Lastname",
            "maxLength": 150,
            "type": "string"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string"
          },
          "email": {
            "title": "Email",
            "maxLength": 254,
            "type": "string"
          },
          "schoolUserType": {
            "$ref": "#/components/schemas/SchoolUserType"
          },
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "アイコンURL",
            "default": "",
            "nullable": true
          }
        }
      },
      "SchoolUserListOut": {
        "title": "SchoolUserListOut",
        "required": [
          "id",
          "createdAt",
          "createdBy",
          "firstName",
          "lastName",
          "username",
          "email",
          "schoolUserType",
          "schoolUserTypeLabel"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 180,
            "type": "string"
          },
          "firstName": {
            "title": "Firstname",
            "maxLength": 30,
            "type": "string"
          },
          "lastName": {
            "title": "Lastname",
            "maxLength": 150,
            "type": "string"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string"
          },
          "email": {
            "title": "Email",
            "maxLength": 150,
            "type": "string"
          },
          "schoolUserType": {
            "$ref": "#/components/schemas/SchoolUserType"
          },
          "schoolUserTypeLabel": {
            "title": "Schoolusertypelabel",
            "type": "string"
          }
        }
      },
      "SchoolUserType": {
        "title": "SchoolUserType",
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "description": "学校管理ユーザータイプ"
      },
      "SchoolUserTypeChoicesOut": {
        "title": "SchoolUserTypeChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "SchoolUserUpdateIn": {
        "title": "SchoolUserUpdateIn",
        "required": [
          "organizationId",
          "userList"
        ],
        "type": "object",
        "properties": {
          "organizationId": {
            "title": "Organizationid",
            "minimum": 1.0,
            "type": "integer"
          },
          "userList": {
            "title": "Userlist",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateUser"
            }
          }
        }
      },
      "ScoringProIn": {
        "title": "ScoringProIn",
        "required": [
          "runFileName"
        ],
        "type": "object",
        "properties": {
          "runFileName": {
            "title": "Runfilename",
            "type": "string",
            "description": "実行するpythonファイル名"
          }
        }
      },
      "ScoringProOut": {
        "title": "ScoringProOut",
        "required": [
          "score",
          "status",
          "errorMessage",
          "judgeType",
          "judgeCode"
        ],
        "type": "object",
        "properties": {
          "score": {
            "title": "Score",
            "minimum": 1.0,
            "type": "number",
            "description": "スコア"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProJudgeStatus"
              }
            ],
            "description": "ジャッジステータス"
          },
          "errorMessage": {
            "title": "Errormessage",
            "type": "string",
            "description": "エラーメッセージ"
          },
          "judgeType": {
            "title": "Judgetype",
            "type": "string",
            "description": "送信側識別用文字列"
          },
          "judgeCode": {
            "title": "Judgecode",
            "type": "string",
            "description": "送信側識別用数値"
          }
        }
      },
      "ScoutAcceptanceIn": {
        "title": "ScoutAcceptanceIn",
        "required": [
          "receiveScouts"
        ],
        "type": "object",
        "properties": {
          "receiveScouts": {
            "title": "Receivescouts",
            "type": "boolean",
            "description": "スカウトを受け取るか"
          }
        }
      },
      "ScoutInvitationIn": {
        "title": "ScoutInvitationIn",
        "required": [
          "message",
          "chatRoomUrlTemplate"
        ],
        "type": "object",
        "properties": {
          "message": {
            "title": "Message",
            "type": "string",
            "description": "メッセージ"
          },
          "chatRoomUrlTemplate": {
            "title": "Chatroomurltemplate",
            "type": "string",
            "description": "チャットルームURLテンプレート(python f-string), 'DOMAIN/techful/{chat_room_id}'"
          }
        }
      },
      "ScoutListOut": {
        "title": "ScoutListOut",
        "required": [
          "jobId",
          "companyName",
          "workLocation",
          "occupation",
          "pgLangs",
          "selectionStep",
          "introducedDate"
        ],
        "type": "object",
        "properties": {
          "jobId": {
            "title": "Jobid",
            "type": "integer",
            "description": "求人ID"
          },
          "companyName": {
            "title": "Companyname",
            "type": "string",
            "description": "企業名"
          },
          "workLocation": {
            "title": "Worklocation",
            "type": "string",
            "description": "勤務地"
          },
          "occupation": {
            "title": "Occupation",
            "type": "string",
            "description": "職種名"
          },
          "skillLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SkillLevel"
              }
            ],
            "description": "スキルレベル",
            "nullable": true
          },
          "pgLangs": {
            "title": "Pglangs",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "使用言語"
          },
          "selectionStep": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelectionStep"
              }
            ],
            "description": "選考ステップ"
          },
          "introducedDate": {
            "title": "Introduceddate",
            "type": "string",
            "description": "紹介日",
            "format": "date"
          }
        }
      },
      "ScoutMailTemplateChoicesOut": {
        "title": "ScoutMailTemplateChoicesOut",
        "required": [
          "id",
          "name",
          "text"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          }
        }
      },
      "ScoutMailTemplateCreateIn": {
        "title": "ScoutMailTemplateCreateIn",
        "required": [
          "name",
          "title",
          "text",
          "order",
          "isPublished"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer"
          },
          "isPublished": {
            "title": "Ispublished",
            "type": "boolean"
          }
        }
      },
      "ScoutMailTemplateDetailOut": {
        "title": "ScoutMailTemplateDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "title",
          "text",
          "order",
          "isPublished",
          "createdBy",
          "updatedBy"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer"
          },
          "isPublished": {
            "title": "Ispublished",
            "type": "boolean"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 31,
            "type": "string"
          },
          "updatedBy": {
            "title": "Updatedby",
            "maxLength": 31,
            "type": "string"
          }
        }
      },
      "ScoutMailTemplateListOut": {
        "title": "ScoutMailTemplateListOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "title",
          "text",
          "isPublished",
          "order",
          "createdBy",
          "updatedBy"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          },
          "isPublished": {
            "title": "Ispublished",
            "type": "boolean"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 31,
            "type": "string"
          },
          "updatedBy": {
            "title": "Updatedby",
            "maxLength": 31,
            "type": "string"
          }
        }
      },
      "ScoutMailTemplateUpdateIn": {
        "title": "ScoutMailTemplateUpdateIn",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "text": {
            "title": "Text",
            "type": "string",
            "nullable": true
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "nullable": true
          },
          "isPublished": {
            "title": "Ispublished",
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ScoutUserDetail": {
        "title": "ScoutUserDetail",
        "required": [
          "username",
          "address",
          "currentJob",
          "skillLevel",
          "usedPgLangs",
          "selectionStatus",
          "scoutedAt"
        ],
        "type": "object",
        "properties": {
          "username": {
            "title": "Username",
            "type": "string",
            "description": "ユーザー名"
          },
          "address": {
            "title": "Address",
            "type": "string",
            "description": "住所"
          },
          "currentJob": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrentJob"
              }
            ],
            "description": "現職",
            "nullable": true
          },
          "skillLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SkillLevel"
              }
            ],
            "description": "スキルレベル",
            "nullable": true
          },
          "usedPgLangs": {
            "title": "Usedpglangs",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PgLangOut"
            },
            "description": "使用言語"
          },
          "selectionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelectionStep"
              }
            ],
            "description": "選考ステータス"
          },
          "scoutedAt": {
            "title": "Scoutedat",
            "type": "string",
            "description": "紹介日",
            "format": "date"
          }
        }
      },
      "SelectionDateTimeUpdateIn": {
        "title": "SelectionDateTimeUpdateIn",
        "type": "object",
        "properties": {
          "startsAt": {
            "title": "Startsat",
            "type": "string",
            "description": "選考開始予定日時",
            "format": "date-time",
            "nullable": true
          },
          "endsAt": {
            "title": "Endsat",
            "type": "string",
            "description": "選考終了予定日時",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "SelectionDetailOut": {
        "title": "SelectionDetailOut",
        "required": [
          "id",
          "chatRoomId",
          "job",
          "organization",
          "selectionType",
          "selectionStep",
          "selectionStepWhenFinished",
          "startsAt",
          "endsAt",
          "memo",
          "createdAt",
          "updatedAt",
          "isFavorite"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "chatRoomId": {
            "title": "Chatroomid",
            "minimum": 1.0,
            "type": "integer",
            "description": "ChatRoomID"
          },
          "job": {
            "title": "Job",
            "allOf": [
              {
                "$ref": "#/components/schemas/JobDetail"
              }
            ],
            "description": "求人",
            "nullable": true
          },
          "organization": {
            "title": "Organization",
            "allOf": [
              {
                "$ref": "#/components/schemas/app__schemas__general__selections__general_get_selections__OrganizationDetail"
              }
            ],
            "description": "組織"
          },
          "selectionType": {
            "title": "Selectiontype",
            "minimum": 0.0,
            "type": "integer",
            "description": "選考タイプ"
          },
          "selectionStep": {
            "title": "Selectionstep",
            "minimum": 0.0,
            "type": "integer",
            "description": "選考ステップ"
          },
          "selectionStepWhenFinished": {
            "title": "Selectionstepwhenfinished",
            "minimum": 0.0,
            "type": "integer",
            "description": "選考終了時の選考ステップ",
            "nullable": true
          },
          "startsAt": {
            "title": "Startsat",
            "type": "string",
            "description": "選考開始予定日時",
            "format": "date-time",
            "nullable": true
          },
          "endsAt": {
            "title": "Endsat",
            "type": "string",
            "description": "選考終了予定日時",
            "format": "date-time",
            "nullable": true
          },
          "memo": {
            "title": "Memo",
            "type": "string",
            "description": "メモ"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日時",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "description": "更新日時",
            "format": "date-time"
          },
          "latestChatDate": {
            "title": "Latestchatdate",
            "type": "string",
            "description": "最終チャット日",
            "format": "date-time",
            "nullable": true
          },
          "isFavorite": {
            "title": "Isfavorite",
            "type": "boolean",
            "description": "お気に入りか"
          }
        }
      },
      "SelectionFlowOut": {
        "title": "SelectionFlowOut",
        "required": [
          "detail"
        ],
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "string",
            "description": "採用フロー"
          }
        }
      },
      "SelectionFlowsDetail": {
        "title": "SelectionFlowsDetail",
        "required": [
          "id",
          "detail"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "detail": {
            "title": "Detail",
            "type": "string",
            "description": "内容"
          }
        }
      },
      "SelectionList": {
        "title": "SelectionList",
        "required": [
          "id",
          "chatRoomId",
          "selectionType",
          "startsAt",
          "endsAt",
          "memo",
          "isFavorite",
          "createdAt",
          "updatedAt",
          "userId",
          "username",
          "realName",
          "prefectureName",
          "age",
          "graduationDate",
          "skillLevel",
          "preferredPgLangs",
          "organizationId",
          "organizationName",
          "jobTitle"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "選考情報ID"
          },
          "chatRoomId": {
            "title": "Chatroomid",
            "minimum": 1.0,
            "type": "integer"
          },
          "selectionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelectionType"
              }
            ],
            "description": "選考種別"
          },
          "selectionStep": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelectionStep"
              }
            ],
            "description": "選考ステップ",
            "nullable": true
          },
          "selectionStepWhenFinished": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelectionStep"
              }
            ],
            "description": "選考終了時の選考ステップ",
            "nullable": true
          },
          "startsAt": {
            "title": "Startsat",
            "type": "string",
            "description": "選考開始予定日時",
            "format": "date-time",
            "nullable": true
          },
          "endsAt": {
            "title": "Endsat",
            "type": "string",
            "description": "選考終了予定日時",
            "format": "date-time",
            "nullable": true
          },
          "memo": {
            "title": "Memo",
            "type": "string",
            "description": "メモ"
          },
          "isFavorite": {
            "title": "Isfavorite",
            "type": "boolean",
            "description": "お気に入り選考か"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "title": "Userid",
            "minimum": 1.0,
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string"
          },
          "realName": {
            "title": "Realname",
            "maxLength": 150,
            "type": "string",
            "nullable": true
          },
          "prefectureName": {
            "title": "Prefecturename",
            "type": "string",
            "description": "出身都道府県",
            "nullable": true
          },
          "age": {
            "title": "Age",
            "minimum": 0.0,
            "type": "integer",
            "description": "年齢",
            "nullable": true
          },
          "graduationDate": {
            "title": "Graduationdate",
            "type": "string",
            "description": "卒業年度",
            "format": "date",
            "nullable": true
          },
          "skillLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SkillLevel"
              }
            ],
            "description": "スキルレベル",
            "nullable": true
          },
          "preferredPgLangs": {
            "title": "Preferredpglangs",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__manage__selections__selection_list_out__UserPreferredPgLanguageListOut"
            }
          },
          "organizationId": {
            "title": "Organizationid",
            "minimum": 1.0,
            "type": "integer"
          },
          "organizationName": {
            "title": "Organizationname",
            "type": "string",
            "description": "企業名"
          },
          "jobId": {
            "title": "Jobid",
            "minimum": 1.0,
            "type": "integer",
            "nullable": true
          },
          "jobTitle": {
            "title": "Jobtitle",
            "maxLength": 100,
            "type": "string"
          },
          "employmentStatus": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EmploymentStatus"
              }
            ],
            "nullable": true
          },
          "jobSelectionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobSelectionType"
              }
            ],
            "description": "求人選考タイプ",
            "nullable": true
          }
        }
      },
      "SelectionListOut": {
        "title": "SelectionListOut",
        "required": [
          "totalCount",
          "filteredCount",
          "jobSelection",
          "hasNext",
          "hasPrevious"
        ],
        "type": "object",
        "properties": {
          "totalCount": {
            "title": "Totalcount",
            "minimum": 0.0,
            "type": "integer"
          },
          "filteredCount": {
            "title": "Filteredcount",
            "minimum": 0.0,
            "type": "integer"
          },
          "jobSelection": {
            "title": "Jobselection",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectionList"
            }
          },
          "hasNext": {
            "title": "Hasnext",
            "type": "boolean",
            "description": "次のページがあるか"
          },
          "hasPrevious": {
            "title": "Hasprevious",
            "type": "boolean",
            "description": "前のページがあるか"
          }
        }
      },
      "SelectionMemoUpdateIn": {
        "title": "SelectionMemoUpdateIn",
        "type": "object",
        "properties": {
          "memo": {
            "title": "Memo",
            "type": "string",
            "description": "選考メモ",
            "default": ""
          }
        }
      },
      "SelectionStep": {
        "title": "SelectionStep",
        "enum": [
          10,
          11,
          20,
          21,
          22,
          23,
          24,
          25,
          30,
          31,
          32,
          40,
          41,
          42,
          49
        ],
        "type": "integer",
        "description": "選考ステップ"
      },
      "SelectionStepChoicesOut": {
        "title": "SelectionStepChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 0.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "SelectionStepUpdateIn": {
        "title": "SelectionStepUpdateIn",
        "required": [
          "selectionStep"
        ],
        "type": "object",
        "properties": {
          "selectionStep": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SelectionStep"
              }
            ],
            "description": "選考ステップ"
          }
        }
      },
      "SelectionType": {
        "title": "SelectionType",
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "description": "選考タイプ"
      },
      "SelectionTypeChoicesOut": {
        "title": "SelectionTypeChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "SelectionsOut": {
        "title": "SelectionsOut",
        "required": [
          "totalCount",
          "hasNext",
          "hasPrevious",
          "selections"
        ],
        "type": "object",
        "properties": {
          "totalCount": {
            "title": "Totalcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "総件数"
          },
          "hasNext": {
            "title": "Hasnext",
            "type": "boolean",
            "description": "次ページ有無"
          },
          "hasPrevious": {
            "title": "Hasprevious",
            "type": "boolean",
            "description": "前ページ有無"
          },
          "selections": {
            "title": "Selections",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectionDetailOut"
            },
            "description": "選考データ"
          }
        }
      },
      "SendJobScoutToUserIn": {
        "title": "SendJobScoutToUserIn",
        "required": [
          "message",
          "userScoutListUrl",
          "agentScoutManagementUrl"
        ],
        "type": "object",
        "properties": {
          "message": {
            "title": "Message",
            "type": "string",
            "description": "メッセージ"
          },
          "userScoutListUrl": {
            "title": "Userscoutlisturl",
            "type": "string",
            "description": "ユーザー選考管理画面URL(通知作成用)"
          },
          "agentScoutManagementUrl": {
            "title": "Agentscoutmanagementurl",
            "type": "string",
            "description": "ユーザー選考管理画面URL(通知作成用)"
          }
        }
      },
      "SendJobScoutToUserOut": {
        "title": "SendJobScoutToUserOut",
        "required": [
          "jobId",
          "companyName",
          "occupationName",
          "jobTitle",
          "jobPrefectureName",
          "requiredSkillLevel",
          "requiredPgLangs",
          "employmentStatus",
          "jobUpdatedAt",
          "jobFavoriteCount",
          "jobScoutCount",
          "inSelectionCount",
          "offeredCount",
          "isInApplying"
        ],
        "type": "object",
        "properties": {
          "jobId": {
            "title": "Jobid",
            "minimum": 1.0,
            "type": "integer",
            "description": "求人ID"
          },
          "companyName": {
            "title": "Companyname",
            "type": "string",
            "description": "企業名"
          },
          "occupationName": {
            "title": "Occupationname",
            "type": "string",
            "description": "職種名"
          },
          "jobTitle": {
            "title": "Jobtitle",
            "type": "string",
            "description": "求人タイトル"
          },
          "jobPrefectureName": {
            "title": "Jobprefecturename",
            "type": "string",
            "description": "勤務地都道府県名"
          },
          "requiredSkillLevel": {
            "title": "Requiredskilllevel",
            "type": "string",
            "description": "必須スキルレベル"
          },
          "requiredPgLangs": {
            "title": "Requiredpglangs",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobPgLangsList"
            },
            "description": "必須言語"
          },
          "employmentStatus": {
            "title": "Employmentstatus",
            "type": "string",
            "description": "雇用形態"
          },
          "jobUpdatedAt": {
            "title": "Jobupdatedat",
            "type": "string",
            "description": "求人更新日(yyyy-mm-dd)",
            "format": "date-time"
          },
          "jobFavoriteCount": {
            "title": "Jobfavoritecount",
            "minimum": 0.0,
            "type": "integer",
            "description": "お気に入り数"
          },
          "jobScoutCount": {
            "title": "Jobscoutcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "紹介ユーザー数"
          },
          "inSelectionCount": {
            "title": "Inselectioncount",
            "minimum": 0.0,
            "type": "integer",
            "description": "選考中ユーザー数"
          },
          "offeredCount": {
            "title": "Offeredcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "内定ユーザー数"
          },
          "isInApplying": {
            "title": "Isinapplying",
            "type": "boolean",
            "description": "応募済か"
          }
        }
      },
      "SessionAnswerStatusOut": {
        "title": "SessionAnswerStatusOut",
        "required": [
          "totalQuestionNumber",
          "passedQuestionNumber",
          "sessionContentResults"
        ],
        "type": "object",
        "properties": {
          "totalQuestionNumber": {
            "title": "Totalquestionnumber",
            "type": "integer",
            "description": "総問題数"
          },
          "passedQuestionNumber": {
            "title": "Passedquestionnumber",
            "type": "integer",
            "description": "合格数"
          },
          "sessionContentResults": {
            "title": "Sessioncontentresults",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionContentAnswerDetail"
            }
          }
        }
      },
      "SessionCheatingCheckUserListOut": {
        "title": "SessionCheatingCheckUserListOut",
        "required": [
          "answerList",
          "count"
        ],
        "type": "object",
        "properties": {
          "answerList": {
            "title": "Answerlist",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/FullMatchedAnswerSourceCode"
                },
                {
                  "$ref": "#/components/schemas/TooEarlyAnswerUserSourceCode"
                },
                {
                  "$ref": "#/components/schemas/SimilarSourceCodeQuestion"
                }
              ]
            }
          },
          "count": {
            "title": "Count",
            "minimum": 0.0,
            "type": "integer",
            "description": "検出数カウント"
          }
        },
        "description": "不正チェックスキーマ"
      },
      "SessionCompanyDocumentListOut": {
        "title": "SessionCompanyDocumentListOut",
        "required": [
          "createdAt",
          "updatedAt",
          "id",
          "title",
          "description",
          "companyDocumentType",
          "file",
          "companyId"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "companyDocumentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyDocumentType"
              }
            ],
            "description": "ドキュメント種別"
          },
          "file": {
            "title": "File",
            "type": "string",
            "description": "動画/PDF"
          },
          "companyId": {
            "title": "Companyid",
            "minimum": 1.0,
            "type": "integer"
          }
        }
      },
      "SessionContentAddIn": {
        "title": "SessionContentAddIn",
        "type": "object",
        "properties": {
          "contentId": {
            "title": "Contentid",
            "minimum": 1.0,
            "type": "integer",
            "nullable": true
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "nullable": true
          }
        }
      },
      "SessionContentAnswerDetail": {
        "title": "SessionContentAnswerDetail",
        "required": [
          "order",
          "contentId",
          "title",
          "contentDivisionLabel",
          "questionResultStatusLabel",
          "score",
          "isPassed"
        ],
        "type": "object",
        "properties": {
          "order": {
            "title": "Order",
            "type": "integer",
            "description": "順番"
          },
          "contentId": {
            "title": "Contentid",
            "type": "integer",
            "description": "問題ID"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "問題名"
          },
          "contentDivisionLabel": {
            "title": "Contentdivisionlabel",
            "type": "string",
            "description": "問題区分名"
          },
          "questionResultStatusLabel": {
            "title": "Questionresultstatuslabel",
            "type": "string",
            "description": "合否ステータス"
          },
          "score": {
            "title": "Score",
            "type": "integer",
            "description": "スコア"
          },
          "isPassed": {
            "title": "Ispassed",
            "type": "boolean",
            "description": "合格済みか"
          }
        }
      },
      "SessionCreateIn": {
        "title": "SessionCreateIn",
        "required": [
          "name",
          "startsAt",
          "endsAt",
          "sessionType",
          "availablePgLangIds"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string",
            "description": "セッション名"
          },
          "startsAt": {
            "title": "Startsat",
            "type": "string",
            "description": "セッション開始日時",
            "format": "date-time"
          },
          "endsAt": {
            "title": "Endsat",
            "type": "string",
            "description": "セッション終了日時",
            "format": "date-time"
          },
          "location": {
            "title": "Location",
            "maxLength": 35,
            "type": "string",
            "description": "開催場所",
            "default": "everywhere"
          },
          "sessionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SessionType"
              }
            ],
            "description": "セッション種別"
          },
          "isLockedSession": {
            "title": "Islockedsession",
            "type": "boolean",
            "description": "パスワード付きセッションか",
            "default": false
          },
          "isPracticeSession": {
            "title": "Ispracticesession",
            "type": "boolean",
            "description": "練習用セッションか",
            "default": false
          },
          "isShortTestSession": {
            "title": "Isshorttestsession",
            "type": "boolean",
            "description": "小テストセッション",
            "default": false
          },
          "isRandomSession": {
            "title": "Israndomsession",
            "type": "boolean",
            "description": "ランダムセッション",
            "default": false
          },
          "numOfQuestionsInRandom": {
            "title": "Numofquestionsinrandom",
            "minimum": 0.0,
            "type": "integer",
            "description": "ランダム出題数",
            "nullable": true
          },
          "minGraduationYearOfRestriction": {
            "title": "Mingraduationyearofrestriction",
            "minimum": 1.0,
            "type": "integer",
            "description": "制限対象の卒業年度(最小値)",
            "nullable": true
          },
          "maxGraduationYearOfRestriction": {
            "title": "Maxgraduationyearofrestriction",
            "minimum": 1.0,
            "type": "integer",
            "description": "制限対象の卒業年度(最大値)",
            "nullable": true
          },
          "isAgreeRecruitRule": {
            "title": "Isagreerecruitrule",
            "type": "boolean",
            "description": "求人紹介規約に同意させるか",
            "default": false
          },
          "maxNumOfRanking": {
            "title": "Maxnumofranking",
            "minimum": 1.0,
            "type": "integer",
            "description": "何位までランキング表示するか",
            "default": 100
          },
          "showRealNameInRanking": {
            "title": "Showrealnameinranking",
            "type": "boolean",
            "description": "ランキング実名表示",
            "default": false
          },
          "showOrganizationInRanking": {
            "title": "Showorganizationinranking",
            "type": "boolean",
            "description": "ランキング学校/会社表示",
            "default": false
          },
          "showDepartmentInRanking": {
            "title": "Showdepartmentinranking",
            "type": "boolean",
            "description": "ランキング学科・学部/部署表示",
            "default": false
          },
          "showInfoInRanking": {
            "title": "Showinfoinranking",
            "type": "boolean",
            "description": "ランキング補足情報表示",
            "default": false
          },
          "showStudentIdInRanking": {
            "title": "Showstudentidinranking",
            "type": "boolean",
            "description": "ランキング学籍番号表示",
            "default": false
          },
          "showChallengeStatus": {
            "title": "Showchallengestatus",
            "type": "boolean",
            "description": "ユーザーに問題ごとの挑戦状況を表示するか",
            "default": false
          },
          "showRankingForUser": {
            "title": "Showrankingforuser",
            "type": "boolean",
            "description": "ユーザー向けランキング表示有無",
            "default": false
          },
          "hasInterview": {
            "title": "Hasinterview",
            "type": "boolean",
            "description": "アンケートを表示有無",
            "default": false
          },
          "editGoogleFormLink": {
            "title": "Editgoogleformlink",
            "maxLength": 256,
            "type": "string",
            "description": "GoogleForm編集ページURL",
            "default": ""
          },
          "interviewDescription": {
            "title": "Interviewdescription",
            "type": "string",
            "description": "アンケート説明文",
            "default": ""
          },
          "answerGoogleFormLink": {
            "title": "Answergoogleformlink",
            "maxLength": 256,
            "type": "string",
            "description": "GoogleForm回答ページURL",
            "default": ""
          },
          "availablePgLangIds": {
            "title": "Availablepglangids",
            "minimum": 1.0,
            "type": "array",
            "items": {
              "minimum": 1.0,
              "type": "integer"
            }
          },
          "timeLimit": {
            "title": "Timelimit",
            "minimum": 0.0,
            "type": "integer",
            "description": "試験時間(分)",
            "nullable": true
          }
        }
      },
      "SessionErrorDetail": {
        "title": "SessionErrorDetail",
        "required": [
          "sourceCode",
          "totalScore",
          "createdAt",
          "questionAnswerResult",
          "pgLang"
        ],
        "type": "object",
        "properties": {
          "sourceCode": {
            "title": "Sourcecode",
            "type": "string",
            "description": "ソースコード"
          },
          "totalScore": {
            "title": "Totalscore",
            "type": "integer",
            "description": "スコア"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "回答日時",
            "format": "date-time"
          },
          "questionAnswerResult": {
            "$ref": "#/components/schemas/QuestionAnswerResult"
          },
          "pgLang": {
            "$ref": "#/components/schemas/PgLangChoicesOut"
          }
        }
      },
      "SessionErrorListOut": {
        "title": "SessionErrorListOut",
        "required": [
          "username",
          "sessionErrorList"
        ],
        "type": "object",
        "properties": {
          "username": {
            "title": "Username",
            "type": "string",
            "description": "ユーザー名"
          },
          "sessionErrorList": {
            "title": "Sessionerrorlist",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionErrorDetail"
            }
          }
        }
      },
      "SessionHeaderListOut": {
        "title": "SessionHeaderListOut",
        "required": [
          "sessionId",
          "sessionName",
          "eventId",
          "eventName",
          "eventTheme",
          "startsAt",
          "endsAt",
          "sessionUserCount",
          "sessionCode",
          "password",
          "location",
          "isPracticeSession",
          "isActive",
          "minGraduationYearOfRestriction",
          "maxGraduationYearOfRestriction"
        ],
        "type": "object",
        "properties": {
          "sessionId": {
            "title": "Sessionid",
            "minimum": 1.0,
            "type": "integer",
            "description": "セッションID"
          },
          "sessionName": {
            "title": "Sessionname",
            "maxLength": 100,
            "type": "string",
            "description": "セッション名"
          },
          "eventId": {
            "title": "Eventid",
            "minimum": 1.0,
            "type": "integer",
            "description": "イベントID"
          },
          "eventName": {
            "title": "Eventname",
            "maxLength": 100,
            "type": "string",
            "description": "イベント名"
          },
          "eventTheme": {
            "title": "Eventtheme",
            "type": "string",
            "description": "イベントテーマ"
          },
          "startsAt": {
            "title": "Startsat",
            "type": "string",
            "description": "セッション開始日時",
            "format": "date-time"
          },
          "endsAt": {
            "title": "Endsat",
            "type": "string",
            "description": "セッション終了日時",
            "format": "date-time"
          },
          "sessionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SessionType"
              }
            ],
            "description": "セッション種別",
            "nullable": true
          },
          "sessionUserCount": {
            "title": "Sessionusercount",
            "type": "integer",
            "description": "参加人数"
          },
          "sessionCode": {
            "title": "Sessioncode",
            "type": "string",
            "description": "セッションコード"
          },
          "password": {
            "title": "Password",
            "type": "string",
            "description": "パスワード"
          },
          "location": {
            "title": "Location",
            "maxLength": 35,
            "type": "string",
            "description": "開催場所"
          },
          "isPracticeSession": {
            "title": "Ispracticesession",
            "type": "boolean",
            "description": "練習用セッションか",
            "nullable": true
          },
          "isActive": {
            "title": "Isactive",
            "type": "boolean",
            "description": "公開中かどうか",
            "nullable": true
          },
          "sessionContentCount": {
            "title": "Sessioncontentcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "問題数",
            "nullable": true
          },
          "minGraduationYearOfRestriction": {
            "title": "Mingraduationyearofrestriction",
            "type": "integer",
            "description": "制限対象の卒業年度(最小値)",
            "nullable": true
          },
          "maxGraduationYearOfRestriction": {
            "title": "Maxgraduationyearofrestriction",
            "type": "integer",
            "description": "制限対象の卒業年度(最大値)",
            "nullable": true
          }
        },
        "description": "セッションヘッダー情報"
      },
      "SessionInfo": {
        "title": "SessionInfo",
        "required": [
          "id",
          "sessionName",
          "eventName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "セッションID"
          },
          "sessionName": {
            "title": "Sessionname",
            "type": "string",
            "description": "セッション名"
          },
          "eventName": {
            "title": "Eventname",
            "type": "string",
            "description": "イベント名"
          }
        }
      },
      "SessionListCountOut": {
        "title": "SessionListCountOut",
        "required": [
          "count",
          "sessions"
        ],
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "minimum": 0.0,
            "type": "integer",
            "description": "総件数"
          },
          "sessions": {
            "title": "Sessions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionListOut"
            }
          }
        }
      },
      "SessionListOut": {
        "title": "SessionListOut",
        "required": [
          "id",
          "name",
          "startsAt",
          "endsAt",
          "sessionStatus",
          "sessionStatusLabel",
          "sessionUserCount",
          "isActive",
          "isPracticeSession",
          "isShortTestSession",
          "eventId",
          "eventName",
          "createdByOrg",
          "createdAt",
          "createdBy"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "セッションID"
          },
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string",
            "description": "セッション名"
          },
          "startsAt": {
            "title": "Startsat",
            "type": "string",
            "description": "セッション開始日時",
            "format": "date-time"
          },
          "endsAt": {
            "title": "Endsat",
            "type": "string",
            "description": "セッション終了日時",
            "format": "date-time"
          },
          "sessionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SessionStatus"
              }
            ],
            "description": "1:開催前, 2:開催中, 3:終了"
          },
          "sessionStatusLabel": {
            "title": "Sessionstatuslabel",
            "type": "string"
          },
          "sessionUserCount": {
            "title": "Sessionusercount",
            "minimum": 0.0,
            "type": "integer",
            "description": "セッション参加人数"
          },
          "isActive": {
            "title": "Isactive",
            "type": "boolean",
            "description": "セッションがアクティブか"
          },
          "isPracticeSession": {
            "title": "Ispracticesession",
            "type": "boolean",
            "description": "セッションが練習用セッションか"
          },
          "isShortTestSession": {
            "title": "Isshorttestsession",
            "type": "boolean",
            "description": "セッションが小テストセッションか"
          },
          "eventId": {
            "title": "Eventid",
            "minimum": 1.0,
            "type": "integer",
            "description": "イベントID"
          },
          "eventName": {
            "title": "Eventname",
            "maxLength": 100,
            "type": "string",
            "description": "イベント名"
          },
          "createdByOrg": {
            "title": "Createdbyorg",
            "maxLength": 100,
            "type": "string",
            "description": "作成組織名"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日時",
            "format": "date-time"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 180,
            "type": "string",
            "description": "作成者"
          }
        }
      },
      "SessionOverviewListOut": {
        "title": "SessionOverviewListOut",
        "required": [
          "sessionDescription",
          "hostName",
          "sessionTheme"
        ],
        "type": "object",
        "properties": {
          "sessionDescription": {
            "title": "Sessiondescription",
            "type": "string",
            "description": "セッション概要"
          },
          "hostName": {
            "title": "Hostname",
            "type": "string",
            "description": "主催者"
          },
          "sessionTheme": {
            "title": "Sessiontheme",
            "type": "string",
            "description": "セッションテーマ"
          }
        },
        "description": "セッション概要"
      },
      "SessionPasswordVerificationIn": {
        "title": "SessionPasswordVerificationIn",
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "title": "Password",
            "type": "string",
            "description": "入力パスワード"
          }
        }
      },
      "SessionPersonalRecordOut": {
        "title": "SessionPersonalRecordOut",
        "required": [
          "questionName",
          "difficulty",
          "pgLang",
          "submitCount",
          "failedCount",
          "code",
          "isPassedInTime",
          "score",
          "maxScore"
        ],
        "type": "object",
        "properties": {
          "questionName": {
            "title": "Questionname",
            "type": "string",
            "description": "問題タイトル"
          },
          "difficulty": {
            "title": "Difficulty",
            "type": "integer",
            "description": "難易度"
          },
          "pgLang": {
            "title": "Pglang",
            "type": "string",
            "description": "PG言語",
            "nullable": true
          },
          "submitCount": {
            "title": "Submitcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "提出回数"
          },
          "failedCount": {
            "title": "Failedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "エラー回数"
          },
          "code": {
            "title": "Code",
            "type": "integer",
            "description": "コード文字数"
          },
          "isPassedInTime": {
            "title": "Ispassedintime",
            "type": "boolean",
            "description": "目標時間内に合格"
          },
          "casePassedAnswerRate": {
            "title": "Casepassedanswerrate",
            "type": "integer",
            "description": "ケース正解率（％）",
            "default": ""
          },
          "score": {
            "title": "Score",
            "type": "integer",
            "description": "取得スコア"
          },
          "maxScore": {
            "title": "Maxscore",
            "type": "integer",
            "description": "最大スコア"
          }
        },
        "description": "問題成績"
      },
      "SessionPortfolioOut": {
        "title": "SessionPortfolioOut",
        "required": [
          "icon",
          "displayName",
          "rank",
          "sessionName",
          "eventHostName",
          "location",
          "startsAt",
          "endsAt",
          "sessionUserCount",
          "evaluation",
          "userScore",
          "avgScore",
          "maxScore",
          "userPassed",
          "avgPassed",
          "maxPassed",
          "userBase",
          "avgBase",
          "maxBase",
          "userTime",
          "avgTime",
          "maxTime",
          "userPass",
          "avgPass",
          "maxPass",
          "questionResultList"
        ],
        "type": "object",
        "properties": {
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "ユーザーアイコンURL"
          },
          "displayName": {
            "title": "Displayname",
            "maxLength": 31,
            "type": "string",
            "description": "表示名"
          },
          "prefectureName": {
            "title": "Prefecturename",
            "type": "string",
            "description": "道府県名",
            "nullable": true
          },
          "birthday": {
            "title": "Birthday",
            "type": "string",
            "description": "生年月日",
            "format": "date",
            "nullable": true
          },
          "graduationDate": {
            "title": "Graduationdate",
            "type": "string",
            "description": "卒業年度",
            "format": "date",
            "nullable": true
          },
          "rank": {
            "title": "Rank",
            "minimum": 0.0,
            "type": "integer",
            "description": "順位"
          },
          "sessionName": {
            "title": "Sessionname",
            "maxLength": 100,
            "type": "string",
            "description": "セッション名"
          },
          "eventHostName": {
            "title": "Eventhostname",
            "type": "string",
            "description": "主催者"
          },
          "location": {
            "title": "Location",
            "maxLength": 35,
            "type": "string",
            "description": "開催場所"
          },
          "startsAt": {
            "title": "Startsat",
            "type": "string",
            "description": "セッション開始日時",
            "format": "date-time"
          },
          "endsAt": {
            "title": "Endsat",
            "type": "string",
            "description": "セッション終了日時",
            "format": "date-time"
          },
          "sessionUserCount": {
            "title": "Sessionusercount",
            "minimum": 0.0,
            "type": "integer",
            "description": "セッション参加人数"
          },
          "sessionContentCount": {
            "title": "Sessioncontentcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "問題数",
            "nullable": true
          },
          "evaluation": {
            "title": "Evaluation",
            "type": "string",
            "description": "評価方式"
          },
          "userScore": {
            "title": "Userscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "ユーザーの獲得合計得点"
          },
          "avgScore": {
            "title": "Avgscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "獲得合計得点の平均値"
          },
          "maxScore": {
            "title": "Maxscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "獲得合計得点の最大値"
          },
          "userPassed": {
            "title": "Userpassed",
            "minimum": 0.0,
            "type": "integer",
            "description": "ユーザーの通過問題数"
          },
          "avgPassed": {
            "title": "Avgpassed",
            "minimum": 0.0,
            "type": "integer",
            "description": "通過問題数の平均値"
          },
          "maxPassed": {
            "title": "Maxpassed",
            "minimum": 0.0,
            "type": "integer",
            "description": "通過問題数の最大値"
          },
          "userBase": {
            "title": "Userbase",
            "minimum": 0.0,
            "type": "integer",
            "description": "ユーザーの基礎得点"
          },
          "avgBase": {
            "title": "Avgbase",
            "minimum": 0.0,
            "type": "integer",
            "description": "基礎得点の平均値"
          },
          "maxBase": {
            "title": "Maxbase",
            "minimum": 0.0,
            "type": "integer",
            "description": "基礎得点の最大値"
          },
          "userTime": {
            "title": "Usertime",
            "minimum": 0.0,
            "type": "integer",
            "description": "ユーザーのタイムボーナス得点"
          },
          "avgTime": {
            "title": "Avgtime",
            "minimum": 0.0,
            "type": "integer",
            "description": "タイムボーナスの平均値"
          },
          "maxTime": {
            "title": "Maxtime",
            "minimum": 0.0,
            "type": "integer",
            "description": "タイムボーナスの最大値"
          },
          "userPass": {
            "title": "Userpass",
            "minimum": 0.0,
            "type": "integer",
            "description": "ユーザーの通過得点"
          },
          "avgPass": {
            "title": "Avgpass",
            "minimum": 0.0,
            "type": "integer",
            "description": "通過得点の平均値"
          },
          "maxPass": {
            "title": "Maxpass",
            "minimum": 0.0,
            "type": "integer",
            "description": "通過得点の最大値"
          },
          "questionResultList": {
            "title": "Questionresultlist",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__manage__sessions__session_portfolio_out__SessionQuestionResultListOut"
            },
            "description": "問題成績リスト"
          }
        }
      },
      "SessionQuestionRecordListOut": {
        "title": "SessionQuestionRecordListOut",
        "required": [
          "userId",
          "userName",
          "order",
          "questionResultId",
          "questionId",
          "questionName",
          "questionType",
          "sessionName",
          "status",
          "submissionCodeCount"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "title": "Userid",
            "minimum": 1.0,
            "type": "integer",
            "description": "ユーザーID"
          },
          "userName": {
            "title": "Username",
            "type": "string",
            "description": "ユーザー名(アカウント名)"
          },
          "userDisplayName": {
            "title": "Userdisplayname",
            "type": "string",
            "description": "ユーザー表示名",
            "nullable": true
          },
          "userRealName": {
            "title": "Userrealname",
            "type": "string",
            "description": "ユーザー本名",
            "nullable": true
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足情報",
            "nullable": true
          },
          "organizationName": {
            "title": "Organizationname",
            "type": "string",
            "description": "所属名",
            "nullable": true
          },
          "studentNumber": {
            "title": "Studentnumber",
            "type": "string",
            "description": "学籍番号",
            "nullable": true
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順位"
          },
          "questionResultId": {
            "title": "Questionresultid",
            "minimum": 1.0,
            "type": "integer",
            "description": "問題回答成績ID"
          },
          "questionId": {
            "title": "Questionid",
            "minimum": 1.0,
            "type": "integer",
            "description": "問題ID"
          },
          "questionName": {
            "title": "Questionname",
            "type": "string",
            "description": "問題名"
          },
          "questionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionType"
              }
            ],
            "description": "問題形式(コーディング・穴埋め・バグ取り)"
          },
          "sessionName": {
            "title": "Sessionname",
            "type": "string",
            "description": "セッション名"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionResultStatus"
              }
            ],
            "description": "ST:合格ステータス"
          },
          "pgLang": {
            "title": "Pglang",
            "minimum": 1.0,
            "type": "integer",
            "description": "PG:プログラミング言語：成績使用提出の言語",
            "nullable": true
          },
          "score": {
            "title": "Score",
            "minimum": 0.0,
            "type": "integer",
            "description": "S : スコア",
            "nullable": true
          },
          "submissionCodeCount": {
            "title": "Submissioncodecount",
            "minimum": 0.0,
            "type": "integer",
            "description": "C : コード提出回数 : 成績使用提出に至るまでのコード提出数"
          },
          "compileErrorCount": {
            "title": "Compileerrorcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "CE : 成績使用提出に至るまでのコンパイルエラー数",
            "nullable": true
          },
          "averageExecutionTime": {
            "title": "Averageexecutiontime",
            "minimum": 0.0,
            "type": "number",
            "description": "AT : 成績使用提出の実行秒数 スタッフ・企業主催イベントのみ表示",
            "nullable": true
          },
          "averagePassedTime": {
            "title": "Averagepassedtime",
            "type": "string",
            "description": "APT : 成績使用提出に至るまでの経過時間",
            "format": "date-time",
            "nullable": true
          },
          "answerStartedAt": {
            "title": "Answerstartedat",
            "type": "string",
            "description": "T : 解答開始時間",
            "format": "date-time",
            "nullable": true
          },
          "answerFinishedAt": {
            "title": "Answerfinishedat",
            "type": "string",
            "description": "E : 解答終了時間",
            "format": "date-time",
            "nullable": true
          },
          "answerPassedTime": {
            "title": "Answerpassedtime",
            "type": "string",
            "description": "PT : 解答経過時間",
            "format": "date-time",
            "nullable": true
          },
          "passedTestCaseCount": {
            "title": "Passedtestcasecount",
            "type": "integer",
            "description": "PTRで使用: 成績使用提出の合格テストケース数",
            "nullable": true
          },
          "allTestCaseCount": {
            "title": "Alltestcasecount",
            "type": "integer",
            "description": "PTRで使用: その問題のテストケース数",
            "nullable": true
          }
        },
        "description": "問題毎のセッション成績\n- 表示条件\n    PG   : 選択式問題のみの場合非表示\n    S    : 選択式問題のみの場合非表示\n    CE   : 選択式問題のみの場合非表示\n    AT(s): スタッフ、企業主催イベント\n    APT  : スタッフ、企業主催イベント\n    T    : 学校イベント\n    E    : 学校イベント\n    PT   : 学校イベント\n    PTR  : 選択式問題のみの場合非表示"
      },
      "SessionQuestionRecordPerUserListOut": {
        "title": "SessionQuestionRecordPerUserListOut",
        "required": [
          "order",
          "studentNumber",
          "userId",
          "userName",
          "userRealName",
          "extraInfo",
          "organizationName",
          "sessionName",
          "questionType",
          "submissionCodeCount"
        ],
        "type": "object",
        "properties": {
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順位"
          },
          "studentNumber": {
            "title": "Studentnumber",
            "type": "string",
            "description": "学籍番号"
          },
          "userId": {
            "title": "Userid",
            "minimum": 1.0,
            "type": "integer",
            "description": "ユーザーID"
          },
          "userName": {
            "title": "Username",
            "type": "string",
            "description": "ユーザー名(アカウント名)"
          },
          "userRealName": {
            "title": "Userrealname",
            "type": "string",
            "description": "ユーザー本名"
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足情報"
          },
          "organizationName": {
            "title": "Organizationname",
            "type": "string",
            "description": "所属名"
          },
          "sessionName": {
            "title": "Sessionname",
            "type": "string",
            "description": "セッション名"
          },
          "questionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionType"
              }
            ],
            "description": "問題形式(コーディング・穴埋め・バグ取り)"
          },
          "score": {
            "title": "Score",
            "minimum": 0.0,
            "type": "integer",
            "description": "S : スコア",
            "nullable": true
          },
          "averageScore": {
            "title": "Averagescore",
            "type": "number",
            "description": "AS 問題ごと平均スコア",
            "nullable": true
          },
          "submissionCodeCount": {
            "title": "Submissioncodecount",
            "minimum": 0.0,
            "type": "integer",
            "description": "C : 問題挑戦回数 : 成績使用提出に至るまでのコード提出数"
          },
          "passedCount": {
            "title": "Passedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "P : 問題正解回数",
            "nullable": true
          },
          "compileErrorCount": {
            "title": "Compileerrorcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "CE : 成績使用提出に至るまでのコンパイルエラー数",
            "nullable": true
          },
          "averageExecutionTime": {
            "title": "Averageexecutiontime",
            "type": "number",
            "description": "AT : 成績使用提出の実行秒数 スタッフ・企業主催イベントのみ表示",
            "nullable": true
          },
          "averagePassedTime": {
            "title": "Averagepassedtime",
            "type": "string",
            "description": "APT : 成績使用提出に至るまでの経過時間",
            "nullable": true
          },
          "answerStartedAt": {
            "title": "Answerstartedat",
            "type": "string",
            "description": "T : 解答開始時間",
            "format": "date-time",
            "nullable": true
          },
          "answerFinishedAt": {
            "title": "Answerfinishedat",
            "type": "string",
            "description": "E : 解答終了時間",
            "format": "date-time",
            "nullable": true
          },
          "passedAnswerRate": {
            "title": "Passedanswerrate",
            "type": "string",
            "description": "PR: 正解率",
            "nullable": true
          },
          "passedTestCaseCount": {
            "title": "Passedtestcasecount",
            "type": "integer",
            "description": "PTRで使用: 成績使用提出の合格テストケース数",
            "nullable": true
          },
          "allTestCaseCount": {
            "title": "Alltestcasecount",
            "type": "integer",
            "description": "PTRで使用: その問題のテストケース数",
            "nullable": true
          }
        },
        "description": "ユーザー毎のセッション成績\n- 表示条件\n    S    : 選択式問題のみの場合非表示\n    AS    : 選択式問題のみの場合非表示\n    CE   : 選択式問題のみの場合非表示\n    AT(s): スタッフ、企業主催イベント\n    APT  : スタッフ、企業主催イベント\n    T    : 学校イベント\n    E    : 学校イベント\n    PT   : 学校イベント\n    PTR  : 選択式問題のみの場合非表示"
      },
      "SessionQuestionnaireListOut": {
        "title": "SessionQuestionnaireListOut",
        "required": [
          "editGoogleFormLink",
          "interviewDescription",
          "answerGoogleFormLink",
          "hasInterview"
        ],
        "type": "object",
        "properties": {
          "editGoogleFormLink": {
            "title": "Editgoogleformlink",
            "maxLength": 256,
            "type": "string",
            "description": "GoogleForm編集ページURL"
          },
          "interviewDescription": {
            "title": "Interviewdescription",
            "type": "string",
            "description": "アンケート説明文"
          },
          "answerGoogleFormLink": {
            "title": "Answergoogleformlink",
            "maxLength": 256,
            "type": "string",
            "description": "GoogleForm回答ページURL"
          },
          "hasInterview": {
            "title": "Hasinterview",
            "type": "boolean",
            "description": "アンケートを表示有無",
            "nullable": true
          }
        },
        "description": "セッションアンケート"
      },
      "SessionRankingListOut": {
        "title": "SessionRankingListOut",
        "required": [
          "userId",
          "userName",
          "order",
          "trialCount",
          "failedCount",
          "passedCount",
          "totalScore",
          "displayName",
          "userRealName",
          "studentNumber",
          "extraInfo"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "title": "Userid",
            "minimum": 1.0,
            "type": "integer",
            "description": "ユーザID"
          },
          "userName": {
            "title": "Username",
            "maxLength": 150,
            "type": "string",
            "description": "投稿者アカウント名"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順位"
          },
          "trialCount": {
            "title": "Trialcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "挑戦数"
          },
          "failedCount": {
            "title": "Failedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "コンパイルエラー数"
          },
          "passedCount": {
            "title": "Passedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "合格数"
          },
          "totalScore": {
            "title": "Totalscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "合計スコア"
          },
          "chatRoomId": {
            "title": "Chatroomid",
            "minimum": 1.0,
            "type": "integer",
            "description": "チャットルームID",
            "nullable": true
          },
          "displayName": {
            "title": "Displayname",
            "maxLength": 31,
            "type": "string",
            "description": "投稿者表示名",
            "nullable": true
          },
          "userRealName": {
            "title": "Userrealname",
            "type": "string",
            "description": "実名(本名表示設定の場合、参加者名から本名へ切り替わる)",
            "nullable": true
          },
          "studentNumber": {
            "title": "Studentnumber",
            "type": "string",
            "description": "学籍番号",
            "nullable": true
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足情報",
            "nullable": true
          }
        }
      },
      "SessionRealTimeRankingListOut": {
        "title": "SessionRealTimeRankingListOut",
        "required": [
          "id",
          "score",
          "order",
          "userName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ユーザーID"
          },
          "score": {
            "title": "Score",
            "minimum": 0.0,
            "type": "integer",
            "description": "スコア"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順位"
          },
          "userName": {
            "title": "Username",
            "maxLength": 150,
            "type": "string",
            "description": "参加者アカウント名"
          },
          "userRealName": {
            "title": "Userrealname",
            "maxLength": 150,
            "type": "string",
            "description": "参加者実名",
            "nullable": true
          },
          "organizationName": {
            "title": "Organizationname",
            "maxLength": 150,
            "type": "string",
            "description": "組織名",
            "nullable": true
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足情報",
            "nullable": true
          },
          "studentNumber": {
            "title": "Studentnumber",
            "type": "string",
            "description": "学籍番号",
            "nullable": true
          }
        }
      },
      "SessionRecordCSVIn": {
        "title": "SessionRecordCSVIn",
        "required": [
          "csvBody"
        ],
        "type": "object",
        "properties": {
          "csvBody": {
            "title": "Csvbody",
            "type": "array",
            "items": {},
            "description": "CSV本文"
          }
        }
      },
      "SessionSearchCodeOut": {
        "title": "SessionSearchCodeOut",
        "required": [
          "contentId",
          "questionTitle",
          "answerTotalCount",
          "userAnswerList"
        ],
        "type": "object",
        "properties": {
          "contentId": {
            "title": "Contentid",
            "minimum": 1.0,
            "type": "integer",
            "description": "問題ID"
          },
          "questionTitle": {
            "title": "Questiontitle",
            "type": "string",
            "description": "問題名"
          },
          "answerTotalCount": {
            "title": "Answertotalcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "解答総件数"
          },
          "userAnswerList": {
            "title": "Useranswerlist",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserAnswerDetailOut"
            }
          }
        }
      },
      "SessionStatus": {
        "title": "SessionStatus",
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "An enumeration."
      },
      "SessionSubmitCodeHistoryOut": {
        "title": "SessionSubmitCodeHistoryOut",
        "required": [
          "contentId",
          "questionTitle",
          "pgLangName",
          "elapsedTimeForExecution",
          "passedTestCaseCount",
          "totalTestCaseCount",
          "isPassedTotalCases",
          "totalScore",
          "basicScore",
          "passBonusScore",
          "timeBonusScore",
          "requiredTimeToAnswer",
          "isUsedForResult",
          "questionTestResultId"
        ],
        "type": "object",
        "properties": {
          "contentId": {
            "title": "Contentid",
            "minimum": 1.0,
            "type": "integer",
            "description": "セッション問題ID"
          },
          "questionTitle": {
            "title": "Questiontitle",
            "type": "string",
            "description": "問題名"
          },
          "pgLangName": {
            "title": "Pglangname",
            "type": "string",
            "description": "解答プログラミング言語"
          },
          "elapsedTimeForExecution": {
            "title": "Elapsedtimeforexecution",
            "type": "number",
            "description": "最長実行時間(ms)"
          },
          "passedTestCaseCount": {
            "title": "Passedtestcasecount",
            "minimum": 0.0,
            "type": "integer",
            "description": "通過したテストケース数"
          },
          "totalTestCaseCount": {
            "title": "Totaltestcasecount",
            "minimum": 0.0,
            "type": "integer",
            "description": "総テストケース数"
          },
          "isPassedTotalCases": {
            "title": "Ispassedtotalcases",
            "type": "boolean",
            "description": "全ケース通過か"
          },
          "totalScore": {
            "title": "Totalscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "合計得点"
          },
          "basicScore": {
            "title": "Basicscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "基礎点"
          },
          "passBonusScore": {
            "title": "Passbonusscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "合格ボーナス点"
          },
          "timeBonusScore": {
            "title": "Timebonusscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "タイムボーナス点"
          },
          "requiredTimeToAnswer": {
            "title": "Requiredtimetoanswer",
            "type": "string",
            "description": "解答所要時間",
            "format": "time"
          },
          "isUsedForResult": {
            "title": "Isusedforresult",
            "type": "boolean",
            "description": "成績使用提出か"
          },
          "questionTestResultId": {
            "title": "Questiontestresultid",
            "minimum": 1.0,
            "type": "integer",
            "description": "問題テスト実行結果ID"
          }
        }
      },
      "SessionTermChoicesOut": {
        "title": "SessionTermChoicesOut",
        "required": [
          "id",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string",
            "description": "規約タイトル"
          }
        }
      },
      "SessionTermCreateIn": {
        "title": "SessionTermCreateIn",
        "required": [
          "title",
          "content"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string",
            "description": "規約タイトル"
          },
          "content": {
            "title": "Content",
            "type": "string",
            "description": "本文"
          }
        }
      },
      "SessionTermDetailOut": {
        "title": "SessionTermDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "title",
          "content",
          "version",
          "createdBy",
          "updatedBy",
          "organizationId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string",
            "description": "規約タイトル"
          },
          "content": {
            "title": "Content",
            "type": "string",
            "description": "本文"
          },
          "version": {
            "title": "Version",
            "minimum": 0.0,
            "type": "integer",
            "description": "バージョン"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 180,
            "type": "string"
          },
          "updatedBy": {
            "title": "Updatedby",
            "maxLength": 180,
            "type": "string"
          },
          "sessions": {
            "title": "Sessions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TermHasSessionOut"
            },
            "nullable": true
          },
          "organizationId": {
            "title": "Organizationid",
            "type": "integer"
          }
        }
      },
      "SessionTermListOut": {
        "title": "SessionTermListOut",
        "required": [
          "id",
          "createdAt",
          "title",
          "content",
          "createdBy"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string",
            "description": "規約タイトル"
          },
          "content": {
            "title": "Content",
            "type": "string",
            "description": "本文"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 180,
            "type": "string"
          }
        }
      },
      "SessionTermOut": {
        "title": "SessionTermOut",
        "required": [
          "id",
          "title",
          "content",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string",
            "description": "規約タイトル"
          },
          "content": {
            "title": "Content",
            "type": "string",
            "description": "本文"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "セッション規約"
      },
      "SessionTermUpdateIn": {
        "title": "SessionTermUpdateIn",
        "required": [
          "title",
          "content"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string",
            "description": "規約タイトル"
          },
          "content": {
            "title": "Content",
            "type": "string",
            "description": "本文"
          }
        }
      },
      "SessionThreadCreateIn": {
        "title": "SessionThreadCreateIn",
        "required": [
          "content"
        ],
        "type": "object",
        "properties": {
          "content": {
            "title": "Content",
            "type": "string"
          }
        }
      },
      "SessionThreadListOut": {
        "title": "SessionThreadListOut",
        "required": [
          "id",
          "username",
          "icon",
          "content",
          "createdAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 0.0,
            "type": "integer",
            "description": "スレッドID"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string",
            "description": "投稿者アカウント名"
          },
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "ユーザーアイコン画像URL"
          },
          "content": {
            "title": "Content",
            "type": "string",
            "description": "本文"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SessionType": {
        "title": "SessionType",
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "セッション種別"
      },
      "SessionUpdateIn": {
        "title": "SessionUpdateIn",
        "required": [
          "name",
          "startsAt",
          "endsAt",
          "maxNumOfRanking",
          "availablePgLangIds"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string",
            "description": "セッション名"
          },
          "startsAt": {
            "title": "Startsat",
            "type": "string",
            "description": "セッション開始日時",
            "format": "date-time"
          },
          "endsAt": {
            "title": "Endsat",
            "type": "string",
            "description": "セッション終了日時",
            "format": "date-time"
          },
          "location": {
            "title": "Location",
            "maxLength": 35,
            "type": "string",
            "description": "開催場所",
            "default": "everywhere"
          },
          "maxNumOfRanking": {
            "title": "Maxnumofranking",
            "minimum": 1.0,
            "type": "integer",
            "description": "何位までリアルタイムランキングを表示するか"
          },
          "showRankingForUser": {
            "title": "Showrankingforuser",
            "type": "boolean",
            "description": "ユーザー向けランキング表示有無",
            "default": false
          },
          "numOfQuestionsInRandom": {
            "title": "Numofquestionsinrandom",
            "minimum": 0.0,
            "type": "integer",
            "description": "ランダム出題数",
            "nullable": true
          },
          "availablePgLangIds": {
            "title": "Availablepglangids",
            "minimum": 1.0,
            "type": "array",
            "items": {
              "minimum": 1.0,
              "type": "integer"
            }
          },
          "isLockedSession": {
            "title": "Islockedsession",
            "type": "boolean",
            "description": "パスワード付きセッションか",
            "default": false
          },
          "isPracticeSession": {
            "title": "Ispracticesession",
            "type": "boolean",
            "description": "練習用セッションか",
            "default": false
          },
          "showRealNameInRanking": {
            "title": "Showrealnameinranking",
            "type": "boolean",
            "description": "ランキング実名表示",
            "default": false
          },
          "showOrganizationInRanking": {
            "title": "Showorganizationinranking",
            "type": "boolean",
            "description": "ランキング学校/会社表示",
            "default": false
          },
          "showDepartmentInRanking": {
            "title": "Showdepartmentinranking",
            "type": "boolean",
            "description": "ランキング学科・学部/部署表示",
            "default": false
          },
          "showChallengeStatus": {
            "title": "Showchallengestatus",
            "type": "boolean",
            "description": "ユーザーに問題ごとの挑戦状況を表示するか",
            "default": false
          },
          "isShortTestSession": {
            "title": "Isshorttestsession",
            "type": "boolean",
            "description": "小テストセッション",
            "default": false
          },
          "isRandomSession": {
            "title": "Israndomsession",
            "type": "boolean",
            "description": "ランダムセッション",
            "default": false
          },
          "showInfoInRanking": {
            "title": "Showinfoinranking",
            "type": "boolean",
            "description": "ランキング補足情報表示",
            "default": false
          },
          "showStudentIdInRanking": {
            "title": "Showstudentidinranking",
            "type": "boolean",
            "description": "ランキング学籍番号表示",
            "default": false
          },
          "minGraduationYearOfRestriction": {
            "title": "Mingraduationyearofrestriction",
            "minimum": 1.0,
            "type": "integer",
            "description": "制限対象の卒業年度(最小値)",
            "nullable": true
          },
          "maxGraduationYearOfRestriction": {
            "title": "Maxgraduationyearofrestriction",
            "minimum": 1.0,
            "type": "integer",
            "description": "制限対象の卒業年度(最大値)",
            "nullable": true
          },
          "hasInterview": {
            "title": "Hasinterview",
            "type": "boolean",
            "description": "アンケートを表示有無",
            "default": false
          },
          "interviewDescription": {
            "title": "Interviewdescription",
            "type": "string",
            "description": "アンケート説明文",
            "default": ""
          },
          "answerGoogleFormLink": {
            "title": "Answergoogleformlink",
            "maxLength": 256,
            "type": "string",
            "description": "GoogleForm回答ページURL",
            "default": ""
          },
          "editGoogleFormLink": {
            "title": "Editgoogleformlink",
            "maxLength": 256,
            "type": "string",
            "description": "GoogleForm編集ページURL",
            "default": ""
          },
          "isAgreeRecruitRule": {
            "title": "Isagreerecruitrule",
            "type": "boolean",
            "description": "求人紹介規約に同意させるか",
            "default": false
          },
          "timeLimit": {
            "title": "Timelimit",
            "minimum": 0.0,
            "type": "integer",
            "description": "試験時間(分)",
            "nullable": true
          }
        }
      },
      "SessionUserAddDetail": {
        "title": "SessionUserAddDetail",
        "required": [
          "userId",
          "username",
          "displayName"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "title": "Userid",
            "minimum": 1.0,
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string",
            "description": "参加者ユーザー名"
          },
          "displayName": {
            "title": "Displayname",
            "type": "string",
            "description": "参加者表示名"
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足情報",
            "default": ""
          },
          "isRegistered": {
            "title": "Isregistered",
            "type": "boolean",
            "description": "セッション登録済みか",
            "default": false
          }
        }
      },
      "SessionUserAddIn": {
        "title": "SessionUserAddIn",
        "required": [
          "sessionUserIds"
        ],
        "type": "object",
        "properties": {
          "sessionUserIds": {
            "title": "Sessionuserids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "セッション参加ユーザーID"
          }
        }
      },
      "SessionUserAddOut": {
        "title": "SessionUserAddOut",
        "required": [
          "addedUserCount",
          "alreadyAddedUserCount",
          "failedUserCount",
          "overAddableUserCount"
        ],
        "type": "object",
        "properties": {
          "addedUserCount": {
            "title": "Addedusercount",
            "type": "integer",
            "description": "登録（追加）成功した人数"
          },
          "alreadyAddedUserCount": {
            "title": "Alreadyaddedusercount",
            "type": "integer",
            "description": "既に追加した人数"
          },
          "failedUserCount": {
            "title": "Failedusercount",
            "type": "integer",
            "description": "登録失敗した人数"
          },
          "overAddableUserCount": {
            "title": "Overaddableusercount",
            "type": "integer",
            "description": "追加可能数を超過した人数"
          }
        }
      },
      "SessionUserResultListOut": {
        "title": "SessionUserResultListOut",
        "required": [
          "userId",
          "username",
          "trialCount",
          "passedCount",
          "score",
          "order"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "title": "Userid",
            "minimum": 0.0,
            "type": "integer",
            "description": "ユーザーID"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string",
            "description": "ユーザーアカウント名"
          },
          "trialCount": {
            "title": "Trialcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "挑戦数"
          },
          "passedCount": {
            "title": "Passedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "合格数"
          },
          "score": {
            "title": "Score",
            "minimum": 0.0,
            "type": "integer",
            "description": "スコア"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順位"
          },
          "userDisplayName": {
            "title": "Userdisplayname",
            "maxLength": 150,
            "type": "string",
            "description": "ユーザー表示名",
            "nullable": true
          },
          "userRealName": {
            "title": "Userrealname",
            "maxLength": 150,
            "type": "string",
            "description": "ユーザー本名",
            "nullable": true
          },
          "prefecture": {
            "title": "Prefecture",
            "maxLength": 100,
            "type": "string",
            "description": "出身都道府県名",
            "nullable": true
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足情報",
            "nullable": true
          }
        }
      },
      "SessionUserStatus": {
        "title": "SessionUserStatus",
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "セッションユーザーステータス"
      },
      "SessionUsersAddListOut": {
        "title": "SessionUsersAddListOut",
        "required": [
          "registrableNumber",
          "usersList"
        ],
        "type": "object",
        "properties": {
          "registrableNumber": {
            "title": "Registrablenumber",
            "type": "integer",
            "description": "スキルチェックアカウント登録可能数"
          },
          "usersList": {
            "title": "Userslist",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionUserAddDetail"
            }
          }
        }
      },
      "SessionUsersDeleteIn": {
        "title": "SessionUsersDeleteIn",
        "required": [
          "sessionUserIds"
        ],
        "type": "object",
        "properties": {
          "sessionUserIds": {
            "title": "Sessionuserids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "セッション参加ユーザーID"
          }
        }
      },
      "SessionUsersListOut": {
        "title": "SessionUsersListOut",
        "required": [
          "id",
          "username",
          "joinedAt",
          "sessionUserStatus"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 0.0,
            "type": "integer",
            "description": "参加者ユーザID"
          },
          "username": {
            "title": "Username",
            "type": "string",
            "description": "参加者名"
          },
          "joinedAt": {
            "title": "Joinedat",
            "type": "string",
            "description": "参加日",
            "format": "date-time"
          },
          "sessionUserStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SessionUserStatus"
              }
            ],
            "description": "セッションユーザーステータス"
          },
          "displayName": {
            "title": "Displayname",
            "type": "string",
            "description": "表示名",
            "nullable": true
          },
          "userRealName": {
            "title": "Userrealname",
            "type": "string",
            "description": "名前(本名)",
            "nullable": true
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足",
            "nullable": true
          },
          "organizationName": {
            "title": "Organizationname",
            "type": "string",
            "description": "所属組織名",
            "nullable": true
          },
          "prefectureName": {
            "title": "Prefecturename",
            "type": "string",
            "description": "都道府県",
            "nullable": true
          },
          "graduationSchedule": {
            "title": "Graduationschedule",
            "type": "string",
            "description": "卒業予定",
            "format": "date",
            "nullable": true
          },
          "studentNumber": {
            "title": "Studentnumber",
            "type": "string",
            "description": "学籍番号",
            "nullable": true
          },
          "certificationExam": {
            "title": "Certificationexam",
            "type": "integer",
            "description": "検定試験",
            "nullable": true
          },
          "sessionStatus": {
            "title": "Sessionstatus",
            "type": "integer",
            "description": "セッションステータス",
            "nullable": true
          }
        }
      },
      "SessionUsersOutListOut": {
        "title": "SessionUsersOutListOut",
        "required": [
          "id",
          "icon",
          "username",
          "joinedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "参加者ユーザーID"
          },
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "ユーザーアイコン画像URL"
          },
          "username": {
            "title": "Username",
            "type": "string",
            "description": "ユーザー名"
          },
          "displayName": {
            "title": "Displayname",
            "type": "string",
            "description": "名前",
            "nullable": true
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足",
            "nullable": true
          },
          "joinedAt": {
            "title": "Joinedat",
            "type": "string",
            "description": "参加日",
            "format": "date-time"
          }
        }
      },
      "SessionsTechthonContentListOut": {
        "title": "SessionsTechthonContentListOut",
        "required": [
          "id",
          "order",
          "content"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "セッションコンテンツID"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順番"
          },
          "content": {
            "title": "Content",
            "allOf": [
              {
                "$ref": "#/components/schemas/app__schemas__general__sessions_techthon__general_sessions_techthon_content_list_out__ContentDetailOut"
              }
            ],
            "description": "コンテンツ情報"
          }
        }
      },
      "SessionsTechthonEnvironmentListOut": {
        "title": "SessionsTechthonEnvironmentListOut",
        "required": [
          "id",
          "environmentName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "テックソン環境ID"
          },
          "environmentName": {
            "title": "Environmentname",
            "maxLength": 100,
            "type": "string",
            "description": "環境名"
          }
        }
      },
      "SignupIn": {
        "title": "SignupIn",
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "title": "Token",
            "type": "string",
            "description": "本登録用トークン"
          }
        }
      },
      "SignupOut": {
        "title": "SignupOut",
        "required": [
          "username",
          "accessToken",
          "tokenType",
          "expiresIn",
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "username": {
            "title": "Username",
            "type": "string",
            "description": "ユーザー名"
          },
          "accessToken": {
            "title": "Accesstoken",
            "type": "string",
            "example": "xxx.xxx.xxx"
          },
          "tokenType": {
            "title": "Tokentype",
            "enum": [
              "Bearer"
            ],
            "type": "string"
          },
          "expiresIn": {
            "title": "Expiresin",
            "type": "string",
            "format": "date-time"
          },
          "refreshToken": {
            "title": "Refreshtoken",
            "type": "string",
            "example": "xxx.xxx.xxx"
          }
        }
      },
      "SignupTemporaryIn": {
        "title": "SignupTemporaryIn",
        "required": [
          "username",
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "username": {
            "title": "Username",
            "type": "string",
            "description": "ユーザー名"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "description": "メールアドレス",
            "format": "email"
          },
          "password": {
            "title": "Password",
            "type": "string",
            "description": "パスワード"
          }
        }
      },
      "SimilarSourceCodeQuestion": {
        "title": "SimilarSourceCodeQuestion",
        "required": [
          "contentId",
          "questionTitle",
          "pgLangId",
          "pgLangName",
          "similarSourceCodeUsers"
        ],
        "type": "object",
        "properties": {
          "contentId": {
            "title": "Contentid",
            "minimum": 1.0,
            "type": "integer",
            "description": "問題ID"
          },
          "questionTitle": {
            "title": "Questiontitle",
            "maxLength": 100,
            "type": "string",
            "description": "問題タイトル"
          },
          "pgLangId": {
            "title": "Pglangid",
            "minimum": 1.0,
            "type": "integer"
          },
          "pgLangName": {
            "title": "Pglangname",
            "maxLength": 35,
            "type": "string"
          },
          "similarSourceCodeUsers": {
            "title": "Similarsourcecodeusers",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimilarSourceCodeUser"
            }
          }
        },
        "description": "類似ソースコード 問題・PG"
      },
      "SimilarSourceCodeUser": {
        "title": "SimilarSourceCodeUser",
        "required": [
          "userId",
          "username",
          "sourceCode"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "title": "Userid",
            "minimum": 1.0,
            "type": "integer",
            "description": "参加者ID"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string",
            "description": "アカウント名"
          },
          "sourceCode": {
            "title": "Sourcecode",
            "type": "string",
            "description": "ソースコード"
          },
          "isMatched": {
            "title": "Ismatched",
            "type": "boolean",
            "description": "完全一致したか",
            "default": false
          }
        },
        "description": "類似ソースコード ユーザー"
      },
      "SkillCheckSessionUsersDeleteIn": {
        "title": "SkillCheckSessionUsersDeleteIn",
        "required": [
          "sessionUserIds"
        ],
        "type": "object",
        "properties": {
          "sessionUserIds": {
            "title": "Sessionuserids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "セッション参加ユーザーID"
          }
        }
      },
      "SkillCheckUserInfoUpdateIn": {
        "title": "SkillCheckUserInfoUpdateIn",
        "required": [
          "displayName",
          "extraInfo"
        ],
        "type": "object",
        "properties": {
          "displayName": {
            "title": "Displayname",
            "type": "string",
            "description": "名前(表示名)"
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足情報"
          }
        }
      },
      "SkillCheckUserInfoUpdateOut": {
        "title": "SkillCheckUserInfoUpdateOut",
        "required": [
          "id",
          "displayName",
          "extraInfo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "displayName": {
            "title": "Displayname",
            "type": "string",
            "description": "名前(表示名)"
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足情報"
          }
        }
      },
      "SkillCheckUserLoginInfoOut": {
        "title": "SkillCheckUserLoginInfoOut",
        "required": [
          "id",
          "username",
          "password"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "username": {
            "title": "Username",
            "type": "string",
            "description": "ユーザ名"
          },
          "password": {
            "title": "Password",
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "パスワード"
          }
        }
      },
      "SkillCheckUsersAddIn": {
        "title": "SkillCheckUsersAddIn",
        "required": [
          "count"
        ],
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "minimum": 1.0,
            "type": "integer",
            "description": "追加(登録)数"
          }
        }
      },
      "SkillCheckUsersAddOut": {
        "title": "SkillCheckUsersAddOut",
        "required": [
          "addedUserCount",
          "alreadyAddedUserCount",
          "failedUserCount",
          "overAddableUserCount"
        ],
        "type": "object",
        "properties": {
          "addedUserCount": {
            "title": "Addedusercount",
            "minimum": 0.0,
            "type": "integer",
            "description": "登録（追加）成功した人数"
          },
          "alreadyAddedUserCount": {
            "title": "Alreadyaddedusercount",
            "minimum": 0.0,
            "type": "integer",
            "description": "既に追加した人数"
          },
          "failedUserCount": {
            "title": "Failedusercount",
            "minimum": 0.0,
            "type": "integer",
            "description": "登録失敗した人数"
          },
          "overAddableUserCount": {
            "title": "Overaddableusercount",
            "minimum": 0.0,
            "type": "integer",
            "description": "追加可能数を超過した人数"
          }
        }
      },
      "SkillCheckUsersBaseOut": {
        "title": "SkillCheckUsersBaseOut",
        "required": [
          "id",
          "username",
          "displayName",
          "extraInfo",
          "createdAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "username": {
            "title": "Username",
            "type": "string",
            "description": "ユーザ名"
          },
          "displayName": {
            "title": "Displayname",
            "type": "string",
            "description": "名前(表示名)"
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足情報"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日",
            "format": "date-time"
          }
        }
      },
      "SkillCheckUsersListOut": {
        "title": "SkillCheckUsersListOut",
        "required": [
          "currentCount",
          "countLimit",
          "accounts"
        ],
        "type": "object",
        "properties": {
          "currentCount": {
            "title": "Currentcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "スキルチェックアカウント登録数"
          },
          "countLimit": {
            "title": "Countlimit",
            "minimum": 0.0,
            "type": "integer",
            "description": "発行可能スキルチェックアカウント数"
          },
          "accounts": {
            "title": "Accounts",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SkillCheckUsersBaseOut"
            }
          }
        }
      },
      "SkillChoicesOut": {
        "title": "SkillChoicesOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "SkillCreateIn": {
        "title": "SkillCreateIn",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "SkillDetailOut": {
        "title": "SkillDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "SkillLevel": {
        "title": "SkillLevel",
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "スキルレベル(求人)"
      },
      "SkillLevelChoicesOut": {
        "title": "SkillLevelChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 0.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "SkillListOut": {
        "title": "SkillListOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "SkillOut": {
        "title": "SkillOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "スキルID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "名前"
          }
        }
      },
      "SkillUpdateIn": {
        "title": "SkillUpdateIn",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string",
            "nullable": true
          }
        }
      },
      "StaffCreateIn": {
        "title": "StaffCreateIn",
        "required": [
          "firstName",
          "lastName",
          "username",
          "password",
          "email"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "title": "Firstname",
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "title": "Lastname",
            "maxLength": 150,
            "minLength": 1,
            "type": "string"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "pattern": "[a-zA-Z0-9@.+-_]+",
            "type": "string",
            "example": "username"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          }
        }
      },
      "StaffDetailOut": {
        "title": "StaffDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "firstName",
          "lastName",
          "username",
          "email"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "firstName": {
            "title": "Firstname",
            "maxLength": 30,
            "type": "string"
          },
          "lastName": {
            "title": "Lastname",
            "maxLength": 150,
            "type": "string"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string"
          },
          "email": {
            "title": "Email",
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "enum": [
                  ""
                ],
                "type": "string"
              }
            ]
          }
        }
      },
      "StaffEventListDetailOut": {
        "title": "StaffEventListDetailOut",
        "required": [
          "id",
          "createdAt",
          "createdBy",
          "name",
          "hostName",
          "isHost",
          "sessionCount",
          "eventUserCount",
          "purpose",
          "purposeLabel"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 180,
            "type": "string"
          },
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string"
          },
          "hostName": {
            "title": "Hostname",
            "type": "string"
          },
          "isHost": {
            "title": "Ishost",
            "type": "boolean",
            "description": "自組織のイベントか"
          },
          "sessionCount": {
            "title": "Sessioncount",
            "minimum": 0.0,
            "type": "integer",
            "description": "イベントに紐づくセッション数"
          },
          "eventUserCount": {
            "title": "Eventusercount",
            "minimum": 0.0,
            "type": "integer",
            "description": "イベント参加人数"
          },
          "purpose": {
            "$ref": "#/components/schemas/EventPurpose"
          },
          "purposeLabel": {
            "title": "Purposelabel",
            "type": "string",
            "example": "プログラミングコンテスト"
          }
        }
      },
      "StaffListOut": {
        "title": "StaffListOut",
        "required": [
          "id",
          "firstName",
          "lastName",
          "username",
          "email",
          "userType",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "firstName": {
            "title": "Firstname",
            "maxLength": 30,
            "type": "string"
          },
          "lastName": {
            "title": "Lastname",
            "maxLength": 150,
            "type": "string"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string"
          },
          "email": {
            "title": "Email",
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "enum": [
                  ""
                ],
                "type": "string"
              }
            ]
          },
          "userType": {
            "title": "Usertype",
            "type": "integer"
          },
          "lastLogin": {
            "title": "Lastlogin",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SubmitType": {
        "title": "SubmitType",
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "description": "採点方法"
      },
      "TargetAudienceType": {
        "title": "TargetAudienceType",
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "チュートリアル目標ユーザータイプ\n1: 一般ユーザー向け, 2: 学校ユーザー向け, 3: 企業ユーザー向け"
      },
      "TechFulSchoolDivision": {
        "title": "TechFulSchoolDivision",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ],
        "type": "integer",
        "description": "TechFul学校区分"
      },
      "TechthonContentDetailIn": {
        "title": "TechthonContentDetailIn",
        "required": [
          "missionNumber",
          "title",
          "contentTopicId",
          "difficulty",
          "description",
          "documents",
          "testCases"
        ],
        "type": "object",
        "properties": {
          "missionNumber": {
            "title": "Missionnumber",
            "minimum": 1.0,
            "type": "integer",
            "description": "ミッション番号"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string",
            "description": "問題タイトル"
          },
          "titleEn": {
            "title": "Titleen",
            "maxLength": 100,
            "type": "string",
            "description": "問題タイトル英語",
            "default": ""
          },
          "contentTopicId": {
            "title": "Contenttopicid",
            "minimum": 1.0,
            "type": "integer",
            "description": "コンテンツトピックID"
          },
          "difficulty": {
            "title": "Difficulty",
            "minimum": 1.0,
            "type": "integer",
            "description": "レベル(難易度)"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "概要(説明)"
          },
          "documents": {
            "title": "Documents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TechthonDocumentIn"
            },
            "description": "問題に登録されている資料"
          },
          "testCases": {
            "title": "Testcases",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TechthonTestCaseIn"
            },
            "description": "テストケースリスト"
          }
        }
      },
      "TechthonContentIdOut": {
        "title": "TechthonContentIdOut",
        "required": [
          "id",
          "contentId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "contentId": {
            "title": "Contentid",
            "minimum": 1.0,
            "type": "integer",
            "description": "コンテンツID"
          }
        }
      },
      "TechthonDocumentBase": {
        "title": "TechthonDocumentBase",
        "required": [
          "id",
          "order",
          "fileUrl"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順番"
          },
          "fileUrl": {
            "title": "Fileurl",
            "maxLength": 100,
            "type": "string",
            "description": "ファイルURL"
          }
        }
      },
      "TechthonDocumentIn": {
        "title": "TechthonDocumentIn",
        "required": [
          "order",
          "fileUrl"
        ],
        "type": "object",
        "properties": {
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順番"
          },
          "fileUrl": {
            "title": "Fileurl",
            "maxLength": 100,
            "type": "string",
            "description": "ファイルURL"
          }
        }
      },
      "TechthonHintBase": {
        "title": "TechthonHintBase",
        "required": [
          "id",
          "order",
          "content",
          "decreaseRate"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順番"
          },
          "content": {
            "title": "Content",
            "type": "string",
            "description": "本文"
          },
          "decreaseRate": {
            "title": "Decreaserate",
            "type": "number",
            "description": "減点率"
          }
        }
      },
      "TechthonHintIn": {
        "title": "TechthonHintIn",
        "required": [
          "order",
          "content",
          "decreaseRate"
        ],
        "type": "object",
        "properties": {
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順番"
          },
          "content": {
            "title": "Content",
            "type": "string",
            "description": "本文"
          },
          "decreaseRate": {
            "title": "Decreaserate",
            "type": "number",
            "description": "減点率"
          }
        }
      },
      "TechthonHintOut": {
        "title": "TechthonHintOut",
        "required": [
          "id",
          "content"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "content": {
            "title": "Content",
            "type": "string",
            "description": "ヒント本文"
          }
        }
      },
      "TechthonJudgeResultOut": {
        "title": "TechthonJudgeResultOut",
        "required": [
          "id",
          "order",
          "status",
          "result",
          "score"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順番(テストケース番号)"
          },
          "status": {
            "title": "Status",
            "type": "integer",
            "description": "レスポンスコード",
            "nullable": true
          },
          "result": {
            "title": "Result",
            "type": "string",
            "description": "レスポンスメッセージ",
            "nullable": true
          },
          "score": {
            "title": "Score",
            "type": "integer",
            "description": "スコア",
            "nullable": true
          }
        }
      },
      "TechthonParticipantListOut": {
        "title": "TechthonParticipantListOut",
        "required": [
          "icon",
          "username",
          "teamName",
          "registrationDate"
        ],
        "type": "object",
        "properties": {
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "アイコン"
          },
          "username": {
            "title": "Username",
            "type": "string",
            "description": "ユーザ名(表示名)"
          },
          "teamName": {
            "title": "Teamname",
            "type": "string",
            "description": "チーム名",
            "nullable": true
          },
          "registrationDate": {
            "title": "Registrationdate",
            "type": "string",
            "description": "参加登録日時",
            "format": "date-time"
          }
        }
      },
      "TechthonPhaseStat": {
        "title": "TechthonPhaseStat",
        "required": [
          "order",
          "middlewareScore",
          "middlewareMaxScore",
          "osScore",
          "osMaxScore",
          "networkScore",
          "networkMaxScore",
          "applicationScore",
          "applicationMaxScore",
          "rank",
          "totalParticipants"
        ],
        "type": "object",
        "properties": {
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "フェーズ順番"
          },
          "middlewareScore": {
            "title": "Middlewarescore",
            "minimum": 0.0,
            "type": "integer",
            "description": "ミドルウェア得点"
          },
          "middlewareMaxScore": {
            "title": "Middlewaremaxscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "ミドルウェア満点"
          },
          "osScore": {
            "title": "Osscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "OS得点"
          },
          "osMaxScore": {
            "title": "Osmaxscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "OS満点"
          },
          "networkScore": {
            "title": "Networkscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "ネットワーク得点"
          },
          "networkMaxScore": {
            "title": "Networkmaxscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "ネットワーク満点"
          },
          "applicationScore": {
            "title": "Applicationscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "アプリケーション得点"
          },
          "applicationMaxScore": {
            "title": "Applicationmaxscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "アプリケーション満点"
          },
          "rank": {
            "title": "Rank",
            "minimum": 0.0,
            "type": "integer",
            "description": "順位"
          },
          "totalParticipants": {
            "title": "Totalparticipants",
            "minimum": 0.0,
            "type": "integer",
            "description": "総計人数/チーム数"
          }
        }
      },
      "TechthonQuestionListOut": {
        "title": "TechthonQuestionListOut",
        "required": [
          "id",
          "missionName",
          "title",
          "contentCategoryName",
          "contentTopicName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "コンテンツID"
          },
          "missionName": {
            "title": "Missionname",
            "type": "string",
            "description": "ミッション番号"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string",
            "description": "問題タイトル"
          },
          "contentCategoryName": {
            "title": "Contentcategoryname",
            "maxLength": 63,
            "type": "string",
            "description": "コンテンツカテゴリ名"
          },
          "contentTopicName": {
            "title": "Contenttopicname",
            "maxLength": 35,
            "type": "string",
            "description": "コンテンツトピック名"
          }
        }
      },
      "TechthonScoreInfo": {
        "title": "TechthonScoreInfo",
        "required": [
          "rank",
          "teamCount"
        ],
        "type": "object",
        "properties": {
          "middlewareScore": {
            "title": "Middlewarescore",
            "type": "integer",
            "description": "獲得したミドルウェアの得点",
            "default": 0
          },
          "middlewareMaxScore": {
            "title": "Middlewaremaxscore",
            "type": "integer",
            "description": "ミドルウェアで獲得可能な最大点数",
            "default": 0
          },
          "osScore": {
            "title": "Osscore",
            "type": "integer",
            "description": "獲得したOSの得点",
            "default": 0
          },
          "osMaxScore": {
            "title": "Osmaxscore",
            "type": "integer",
            "description": "OSで獲得可能な最大点数",
            "default": 0
          },
          "networkScore": {
            "title": "Networkscore",
            "type": "integer",
            "description": "獲得したネットワークの得点",
            "default": 0
          },
          "networkMaxScore": {
            "title": "Networkmaxscore",
            "type": "integer",
            "description": "ネットワークで獲得可能な最大点数",
            "default": 0
          },
          "applicationScore": {
            "title": "Applicationscore",
            "type": "integer",
            "description": "獲得したアプリケーションの得点",
            "default": 0
          },
          "applicationMaxScore": {
            "title": "Applicationmaxscore",
            "type": "integer",
            "description": "アプリケーションで獲得可能な最大点数",
            "default": 0
          },
          "totalScore": {
            "title": "Totalscore",
            "type": "integer",
            "description": "獲得した合計得点",
            "default": 0
          },
          "totalMaxScore": {
            "title": "Totalmaxscore",
            "type": "integer",
            "description": "獲得可能な合計点数",
            "default": 0
          },
          "rank": {
            "title": "Rank",
            "type": "integer",
            "description": "順位"
          },
          "teamCount": {
            "title": "Teamcount",
            "type": "integer",
            "description": "合計参加チーム数"
          }
        }
      },
      "TechthonServerInfoOut": {
        "title": "TechthonServerInfoOut",
        "required": [
          "id",
          "ipAddress",
          "serverId",
          "password"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "ipAddress": {
            "title": "Ipaddress",
            "maxLength": 100,
            "type": "string",
            "description": "貸し出すサーバーのIPアドレス"
          },
          "serverId": {
            "title": "Serverid",
            "maxLength": 100,
            "type": "string",
            "description": "貸し出すサーバーのログインユーザーID"
          },
          "password": {
            "title": "Password",
            "maxLength": 63,
            "type": "string",
            "description": "貸し出すサーバのログインパスワード"
          }
        }
      },
      "TechthonSessionContentAddIn": {
        "title": "TechthonSessionContentAddIn",
        "required": [
          "contentId"
        ],
        "type": "object",
        "properties": {
          "contentId": {
            "title": "Contentid",
            "minimum": 1.0,
            "type": "integer"
          }
        }
      },
      "TechthonSessionIn": {
        "title": "TechthonSessionIn",
        "required": [
          "name",
          "startsAt",
          "endsAt",
          "sessionType"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "maxLength": 100,
            "type": "string",
            "description": "セッション名"
          },
          "startsAt": {
            "title": "Startsat",
            "type": "string",
            "description": "セッション開始日時",
            "format": "date-time"
          },
          "endsAt": {
            "title": "Endsat",
            "type": "string",
            "description": "セッション終了日時",
            "format": "date-time"
          },
          "location": {
            "title": "Location",
            "maxLength": 35,
            "type": "string",
            "description": "開催場所",
            "default": "everywhere"
          },
          "sessionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SessionType"
              }
            ],
            "description": "セッション種別"
          },
          "isLockedSession": {
            "title": "Islockedsession",
            "type": "boolean",
            "description": "パスワード付きセッションか",
            "default": false
          },
          "isPracticeSession": {
            "title": "Ispracticesession",
            "type": "boolean",
            "description": "練習用セッションか",
            "default": false
          },
          "isShortTestSession": {
            "title": "Isshorttestsession",
            "type": "boolean",
            "description": "小テストセッション",
            "default": false
          },
          "maxNumOfRanking": {
            "title": "Maxnumofranking",
            "type": "integer",
            "description": "何位までランキング表示するか",
            "nullable": true
          },
          "minGraduationYearOfRestriction": {
            "title": "Mingraduationyearofrestriction",
            "type": "integer",
            "description": "制限対象の卒業年度(最小値)",
            "nullable": true
          },
          "maxGraduationYearOfRestriction": {
            "title": "Maxgraduationyearofrestriction",
            "type": "integer",
            "description": "制限対象の卒業年度(最大値)",
            "nullable": true
          },
          "showRankingForUser": {
            "title": "Showrankingforuser",
            "type": "boolean",
            "description": "ユーザー向けランキング表示有無",
            "default": false
          },
          "hasInterview": {
            "title": "Hasinterview",
            "type": "boolean",
            "description": "アンケートを表示有無",
            "default": false
          },
          "editGoogleFormLink": {
            "title": "Editgoogleformlink",
            "maxLength": 256,
            "type": "string",
            "description": "GoogleForm編集ページURL",
            "default": ""
          },
          "interviewDescription": {
            "title": "Interviewdescription",
            "type": "string",
            "description": "アンケート説明文",
            "default": ""
          },
          "answerGoogleFormLink": {
            "title": "Answergoogleformlink",
            "maxLength": 256,
            "type": "string",
            "description": "GoogleForm回答ページURL",
            "default": ""
          },
          "isAgreeRecruitRule": {
            "title": "Isagreerecruitrule",
            "type": "boolean",
            "description": "求人紹介規約に同意させるか",
            "default": false
          },
          "isTeamed": {
            "title": "Isteamed",
            "type": "boolean",
            "description": "チーム制度の有無",
            "default": false
          }
        }
      },
      "TechthonSessionInfo": {
        "title": "TechthonSessionInfo",
        "required": [
          "title",
          "startAt",
          "endAt"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "type": "string",
            "description": "セッションタイトル"
          },
          "startAt": {
            "title": "Startat",
            "type": "string",
            "description": "セッション開始日",
            "format": "date"
          },
          "endAt": {
            "title": "Endat",
            "type": "string",
            "description": "セッション終了日",
            "format": "date"
          }
        }
      },
      "TechthonSessionOut": {
        "title": "TechthonSessionOut",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "Techthon Session ID"
          }
        }
      },
      "TechthonSessionTeamOut": {
        "title": "TechthonSessionTeamOut",
        "required": [
          "id",
          "teamName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "チームID"
          },
          "teamName": {
            "title": "Teamname",
            "type": "string",
            "description": "チーム名"
          },
          "ipAddress": {
            "title": "Ipaddress",
            "type": "string",
            "description": "IPアドレス",
            "default": ""
          },
          "serverId": {
            "title": "Serverid",
            "type": "string",
            "description": "サーバーID(ユーザー名)",
            "default": ""
          },
          "password": {
            "title": "Password",
            "type": "string",
            "description": "パスワード",
            "default": ""
          }
        }
      },
      "TechthonSessionTeamUpdateIn": {
        "title": "TechthonSessionTeamUpdateIn",
        "required": [
          "teamName"
        ],
        "type": "object",
        "properties": {
          "teamName": {
            "title": "Teamname",
            "maxLength": 63,
            "type": "string",
            "description": "チーム名"
          }
        }
      },
      "TechthonSessionUserOut": {
        "title": "TechthonSessionUserOut",
        "required": [
          "id",
          "username",
          "organization",
          "joinedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ユーザーID"
          },
          "username": {
            "title": "Username",
            "type": "string",
            "description": "アカウント名"
          },
          "organization": {
            "title": "Organization",
            "type": "string",
            "description": "学校名/企業名"
          },
          "joinedAt": {
            "title": "Joinedat",
            "type": "string",
            "description": "参加日",
            "format": "date-time"
          },
          "teamId": {
            "title": "Teamid",
            "minimum": 1.0,
            "type": "integer",
            "description": "チームID",
            "nullable": true
          },
          "teamName": {
            "title": "Teamname",
            "type": "string",
            "description": "チーム名",
            "nullable": true
          }
        }
      },
      "TechthonSessionUserTeamUpdateIn": {
        "title": "TechthonSessionUserTeamUpdateIn",
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "title": "Userid",
            "minimum": 1.0,
            "type": "integer",
            "description": "ユーザーID"
          }
        }
      },
      "TechthonSkillDataIn": {
        "title": "TechthonSkillDataIn",
        "type": "object",
        "properties": {
          "comment": {
            "title": "Comment",
            "type": "string",
            "description": "コメント(サマリー)",
            "default": ""
          },
          "pgLangs": {
            "title": "Pglangs",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "使用プログラミング言語",
            "default": []
          },
          "frameworks": {
            "title": "Frameworks",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "使用フレームワーク",
            "default": []
          }
        }
      },
      "TechthonSkillDataOut": {
        "title": "TechthonSkillDataOut",
        "type": "object",
        "properties": {
          "comment": {
            "title": "Comment",
            "type": "string",
            "description": "コメント(サマリー)",
            "default": ""
          },
          "pgLangs": {
            "title": "Pglangs",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "使用プログラミング言語",
            "default": []
          },
          "frameworks": {
            "title": "Frameworks",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "使用フレームワーク",
            "default": []
          }
        }
      },
      "TechthonTeamOut": {
        "title": "TechthonTeamOut",
        "required": [
          "teamId",
          "teamName"
        ],
        "type": "object",
        "properties": {
          "teamId": {
            "title": "Teamid",
            "minimum": 1.0,
            "type": "integer",
            "description": "チームID"
          },
          "teamName": {
            "title": "Teamname",
            "type": "string",
            "description": "チーム名"
          },
          "ipAddress": {
            "title": "Ipaddress",
            "type": "string",
            "description": "IPアドレス",
            "default": ""
          },
          "serverId": {
            "title": "Serverid",
            "type": "string",
            "description": "サーバーID(ユーザーID)",
            "default": ""
          },
          "password": {
            "title": "Password",
            "type": "string",
            "description": "パスワード",
            "default": ""
          },
          "member": {
            "title": "Member",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "メンバー",
            "default": []
          }
        }
      },
      "TechthonTestCaseBase": {
        "title": "TechthonTestCaseBase",
        "required": [
          "id",
          "order",
          "middleWareScore",
          "osScore",
          "networkScore",
          "securityScore",
          "applicationScore",
          "description",
          "answer",
          "requestMethod",
          "urlPath",
          "requestParameters",
          "hints"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順番(テストケース番号)"
          },
          "middleWareScore": {
            "title": "Middlewarescore",
            "minimum": 0.0,
            "type": "integer",
            "description": "ミドルウェアスコア"
          },
          "osScore": {
            "title": "Osscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "OSスコア"
          },
          "networkScore": {
            "title": "Networkscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "ネットワークスコア"
          },
          "securityScore": {
            "title": "Securityscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "セキュリティスコア"
          },
          "applicationScore": {
            "title": "Applicationscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "アプリケーションスコア"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "テストケースの説明"
          },
          "answer": {
            "title": "Answer",
            "type": "string",
            "description": "答え"
          },
          "requestMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpMethodType"
              }
            ],
            "description": "リクエストメソッド(POST,GET,PUT,DELETE)"
          },
          "urlPath": {
            "title": "Urlpath",
            "maxLength": 255,
            "type": "string",
            "description": "URLパス"
          },
          "requestParameters": {
            "title": "Requestparameters",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestBodyParameterBase"
            },
            "description": "リクエストボディパラメーター",
            "nullable": true
          },
          "hints": {
            "title": "Hints",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TechthonHintBase"
            },
            "description": "ヒント",
            "nullable": true
          }
        }
      },
      "TechthonTestCaseHintOut": {
        "title": "TechthonTestCaseHintOut",
        "required": [
          "id",
          "order",
          "content"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順番"
          },
          "isOpened": {
            "title": "Isopened",
            "type": "boolean",
            "description": "ヒントを解放したかどうか",
            "default": false
          },
          "content": {
            "title": "Content",
            "type": "string",
            "description": "本文",
            "nullable": true
          }
        }
      },
      "TechthonTestCaseHintStatusOut": {
        "title": "TechthonTestCaseHintStatusOut",
        "required": [
          "id",
          "isOpened"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ヒントID"
          },
          "isOpened": {
            "title": "Isopened",
            "type": "boolean",
            "description": "ヒント解放状況"
          }
        }
      },
      "TechthonTestCaseIn": {
        "title": "TechthonTestCaseIn",
        "required": [
          "order",
          "middleWareScore",
          "osScore",
          "networkScore",
          "securityScore",
          "applicationScore",
          "description",
          "answer",
          "requestMethod",
          "urlPath",
          "requestParameters",
          "hints"
        ],
        "type": "object",
        "properties": {
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順番(テストケース番号)"
          },
          "middleWareScore": {
            "title": "Middlewarescore",
            "minimum": 0.0,
            "type": "integer",
            "description": "ミドルウェアスコア"
          },
          "osScore": {
            "title": "Osscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "OSスコア"
          },
          "networkScore": {
            "title": "Networkscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "ネットワークスコア"
          },
          "securityScore": {
            "title": "Securityscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "セキュリティスコア"
          },
          "applicationScore": {
            "title": "Applicationscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "アプリケーションスコア"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "テストケースの説明"
          },
          "answer": {
            "title": "Answer",
            "type": "string",
            "description": "答え"
          },
          "requestMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpMethodType"
              }
            ],
            "description": "リクエストメソッド(POST,GET,PUT,DELETE)"
          },
          "urlPath": {
            "title": "Urlpath",
            "maxLength": 255,
            "type": "string",
            "description": "URLパス"
          },
          "requestParameters": {
            "title": "Requestparameters",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestBodyParameterIn"
            },
            "description": "リクエストボディパラメーター",
            "nullable": true
          },
          "hints": {
            "title": "Hints",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TechthonHintIn"
            },
            "description": "ヒント",
            "nullable": true
          }
        }
      },
      "TechthonTestCaseOut": {
        "title": "TechthonTestCaseOut",
        "required": [
          "id",
          "order",
          "type",
          "requestMethod",
          "urlPath",
          "description",
          "requestParameters",
          "hints"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順番(テストケース番号)"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "description": "タイプ(リクエストという文字列しか存在しません)"
          },
          "requestMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpMethodType"
              }
            ],
            "description": "リクエストメソッド(POST,GET,PUT,DELETE)"
          },
          "urlPath": {
            "title": "Urlpath",
            "maxLength": 255,
            "type": "string",
            "description": "URLパス"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "テストケースの概要"
          },
          "requestParameters": {
            "title": "Requestparameters",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestBodyParameterOut"
            },
            "description": "採点時に使用するパラメータ",
            "nullable": true
          },
          "hints": {
            "title": "Hints",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TechthonTestCaseHintOut"
            },
            "description": "ヒント",
            "nullable": true
          }
        }
      },
      "TechthonTopicStat": {
        "title": "TechthonTopicStat",
        "required": [
          "id",
          "name",
          "phases"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ContentTopic.id"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "トピック名"
          },
          "phases": {
            "title": "Phases",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TechthonPhaseStat"
            },
            "description": "フェーズ別成績"
          },
          "skillAssessment": {
            "title": "Skillassessment",
            "type": "string",
            "description": "techthon評価",
            "default": ""
          }
        },
        "description": "Techthon成績(第三者)"
      },
      "TechthonUserInfo": {
        "title": "TechthonUserInfo",
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "title": "Username",
            "type": "string",
            "description": "ユーザー名"
          },
          "teamName": {
            "title": "Teamname",
            "type": "string",
            "description": "チーム名",
            "nullable": true
          },
          "userComment": {
            "title": "Usercomment",
            "type": "string",
            "description": "ユーザーコメント",
            "nullable": true
          },
          "pgLang": {
            "title": "Pglang",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "使用言語",
            "default": []
          },
          "framework": {
            "title": "Framework",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "使用フレームワーク",
            "default": []
          }
        }
      },
      "TermCommonDetailOut": {
        "title": "TermCommonDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "termType",
          "contentLc",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "termType": {
            "$ref": "#/components/schemas/TermType"
          },
          "contentLc": {
            "title": "Contentlc",
            "type": "string"
          },
          "version": {
            "title": "Version",
            "type": "integer"
          }
        }
      },
      "TermDetailOut": {
        "title": "TermDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "termType",
          "content",
          "contentEn",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "termType": {
            "$ref": "#/components/schemas/TermType"
          },
          "content": {
            "title": "Content",
            "type": "string"
          },
          "contentEn": {
            "title": "Contenten",
            "type": "string"
          },
          "version": {
            "title": "Version",
            "type": "integer"
          }
        }
      },
      "TermHasSessionOut": {
        "title": "TermHasSessionOut",
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "nullable": true
          }
        }
      },
      "TermListOut": {
        "title": "TermListOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "termTypeLabel",
          "termType",
          "content",
          "contentEn",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "termTypeLabel": {
            "title": "Termtypelabel",
            "type": "string"
          },
          "termType": {
            "$ref": "#/components/schemas/TermType"
          },
          "content": {
            "title": "Content",
            "type": "string"
          },
          "contentEn": {
            "title": "Contenten",
            "type": "string"
          },
          "version": {
            "title": "Version",
            "type": "integer"
          }
        }
      },
      "TermOfUseDetailOut": {
        "title": "TermOfUseDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "termType",
          "content",
          "contentEn",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "termType": {
            "$ref": "#/components/schemas/TermType"
          },
          "content": {
            "title": "Content",
            "type": "string"
          },
          "contentEn": {
            "title": "Contenten",
            "type": "string"
          },
          "version": {
            "title": "Version",
            "type": "integer"
          }
        },
        "description": "人材紹介 利用規約"
      },
      "TermType": {
        "title": "TermType",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "description": "規約種別"
      },
      "TermTypeChoicesOut": {
        "title": "TermTypeChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "TermUpdateIn": {
        "title": "TermUpdateIn",
        "type": "object",
        "properties": {
          "content": {
            "title": "Content",
            "type": "string",
            "nullable": true
          },
          "contentEn": {
            "title": "Contenten",
            "type": "string",
            "nullable": true
          }
        }
      },
      "TestCaseResultHistory": {
        "title": "TestCaseResultHistory",
        "required": [
          "id",
          "judgeStatus"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "問題テストケース実行結果ID"
          },
          "stdin": {
            "title": "Stdin",
            "type": "string",
            "description": "入力",
            "default": ""
          },
          "expectedStdout": {
            "title": "Expectedstdout",
            "type": "string",
            "description": "期待出力",
            "default": ""
          },
          "judgeStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JudgeStatus"
              }
            ],
            "description": "結果"
          }
        }
      },
      "TooEarlyAnswerUserSourceCode": {
        "title": "TooEarlyAnswerUserSourceCode",
        "required": [
          "contentId",
          "questionTitle",
          "userId",
          "username",
          "sourceCode",
          "pgLangId",
          "pgLangName",
          "answeredTime"
        ],
        "type": "object",
        "properties": {
          "contentId": {
            "title": "Contentid",
            "minimum": 1.0,
            "type": "integer",
            "description": "問題ID"
          },
          "questionTitle": {
            "title": "Questiontitle",
            "maxLength": 100,
            "type": "string",
            "description": "問題タイトル"
          },
          "userId": {
            "title": "Userid",
            "minimum": 1.0,
            "type": "integer",
            "description": "参加者ID"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string",
            "description": "アカウント名"
          },
          "sourceCode": {
            "title": "Sourcecode",
            "type": "string",
            "description": "ソースコード"
          },
          "pgLangId": {
            "title": "Pglangid",
            "minimum": 1.0,
            "type": "integer"
          },
          "pgLangName": {
            "title": "Pglangname",
            "maxLength": 35,
            "type": "string"
          },
          "answeredTime": {
            "title": "Answeredtime",
            "minimum": 0.0,
            "type": "integer",
            "description": "解答にかかった時間(s)"
          }
        },
        "description": "早すぎる解答 ユーザー毎のソースコード"
      },
      "UpdateCommentByStaffIn": {
        "title": "UpdateCommentByStaffIn",
        "required": [
          "comment"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "title": "コメント",
            "type": "string"
          }
        }
      },
      "UpdateCommentByStaffOut": {
        "title": "UpdateCommentByStaffOut",
        "required": [
          "userId",
          "comment"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "title": "ユーザーID",
            "type": "integer"
          },
          "comment": {
            "title": "更新したコメント",
            "type": "string"
          }
        }
      },
      "UpdateEmailIn": {
        "title": "UpdateEmailIn",
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "title": "Token",
            "type": "string"
          }
        }
      },
      "UpdateForSuUserProfileIn": {
        "title": "UpdateForSuUserProfileIn",
        "required": [
          "username",
          "email",
          "lastName",
          "firstName",
          "displayName",
          "extraInfo",
          "graduationDate",
          "prefectureId",
          "birthday",
          "mostUsedPgLangId",
          "currentJob"
        ],
        "type": "object",
        "properties": {
          "username": {
            "title": "Username",
            "type": "string",
            "description": "ユーザー名"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "description": "メールアドレス"
          },
          "lastName": {
            "title": "Lastname",
            "type": "string",
            "description": "性"
          },
          "firstName": {
            "title": "Firstname",
            "type": "string",
            "description": "名"
          },
          "displayName": {
            "title": "Displayname",
            "type": "string",
            "description": "表示名"
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足情報"
          },
          "graduationDate": {
            "title": "Graduationdate",
            "type": "string",
            "description": "卒業年月日",
            "format": "date",
            "nullable": true
          },
          "prefectureId": {
            "title": "Prefectureid",
            "type": "integer",
            "description": "都道府県ID",
            "nullable": true
          },
          "birthday": {
            "title": "Birthday",
            "type": "string",
            "description": "生年月日",
            "format": "date",
            "nullable": true
          },
          "mostUsedPgLangId": {
            "title": "Mostusedpglangid",
            "type": "integer",
            "description": "よく使うプログラミング言語ID",
            "nullable": true
          },
          "currentJob": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrentJob"
              }
            ],
            "description": "現在の職業",
            "nullable": true
          }
        }
      },
      "UpdateForSuUserProfileOut": {
        "title": "UpdateForSuUserProfileOut",
        "required": [
          "username",
          "email",
          "lastName",
          "firstName",
          "schoolName",
          "schoolFacultyName",
          "schoolDepartmentName",
          "displayName",
          "extraInfo",
          "graduationDate",
          "prefectureId",
          "birthday",
          "mostUsedPgLangId",
          "currentJob",
          "receiveEmails"
        ],
        "type": "object",
        "properties": {
          "username": {
            "title": "Username",
            "type": "string",
            "description": "ユーザー名"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "description": "メールアドレス"
          },
          "lastName": {
            "title": "Lastname",
            "type": "string",
            "description": "性"
          },
          "firstName": {
            "title": "Firstname",
            "type": "string",
            "description": "名"
          },
          "schoolName": {
            "title": "Schoolname",
            "type": "string",
            "description": "学校名",
            "nullable": true
          },
          "schoolFacultyName": {
            "title": "Schoolfacultyname",
            "type": "string",
            "description": "学部名",
            "nullable": true
          },
          "schoolDepartmentName": {
            "title": "Schooldepartmentname",
            "type": "string",
            "description": "学科名",
            "nullable": true
          },
          "displayName": {
            "title": "Displayname",
            "type": "string",
            "description": "表示名"
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足情報"
          },
          "graduationDate": {
            "title": "Graduationdate",
            "type": "string",
            "description": "卒業年月日",
            "format": "date",
            "nullable": true
          },
          "prefectureId": {
            "title": "Prefectureid",
            "type": "integer",
            "description": "都道府県ID",
            "nullable": true
          },
          "birthday": {
            "title": "Birthday",
            "type": "string",
            "description": "生年月日",
            "format": "date",
            "nullable": true
          },
          "mostUsedPgLangId": {
            "title": "Mostusedpglangid",
            "type": "integer",
            "description": "よく使うプログラミング言語ID",
            "nullable": true
          },
          "currentJob": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrentJob"
              }
            ],
            "description": "現在の職業",
            "nullable": true
          },
          "receiveEmails": {
            "title": "Receiveemails",
            "type": "boolean",
            "description": "メール配信を希望するか"
          },
          "hasDuplicateUsername": {
            "title": "Hasduplicateusername",
            "type": "boolean",
            "description": "同じusernameを持つuserがいるかどうか",
            "default": false
          }
        }
      },
      "UpdatePasswordIn": {
        "title": "UpdatePasswordIn",
        "required": [
          "oldPassword",
          "newPassword",
          "newPasswordConfirm"
        ],
        "type": "object",
        "properties": {
          "oldPassword": {
            "title": "Oldpassword",
            "type": "string",
            "description": "現在のパスワード"
          },
          "newPassword": {
            "title": "Newpassword",
            "type": "string",
            "description": "新しいパスワード"
          },
          "newPasswordConfirm": {
            "title": "Newpasswordconfirm",
            "type": "string",
            "description": "新しいパスワード（確認用）"
          }
        }
      },
      "UpdateSchoolUserProfileIn": {
        "title": "UpdateSchoolUserProfileIn",
        "required": [
          "lastName",
          "firstName"
        ],
        "type": "object",
        "properties": {
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "アイコンURL",
            "default": ""
          },
          "lastName": {
            "title": "Lastname",
            "maxLength": 150,
            "type": "string",
            "description": "姓"
          },
          "firstName": {
            "title": "Firstname",
            "maxLength": 63,
            "type": "string",
            "description": "名"
          }
        }
      },
      "UpdateSchoolUserProfileOut": {
        "title": "UpdateSchoolUserProfileOut",
        "required": [
          "lastName",
          "firstName"
        ],
        "type": "object",
        "properties": {
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "アイコンURL",
            "default": ""
          },
          "lastName": {
            "title": "Lastname",
            "maxLength": 150,
            "type": "string",
            "description": "姓"
          },
          "firstName": {
            "title": "Firstname",
            "maxLength": 63,
            "type": "string",
            "description": "名"
          }
        }
      },
      "UpdateUser": {
        "title": "UpdateUser",
        "required": [
          "userId",
          "schoolUserType"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "title": "Userid",
            "minimum": 1.0,
            "type": "integer"
          },
          "schoolUserType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SchoolUserType"
              }
            ],
            "description": "学校ユーザータイプ"
          }
        }
      },
      "UploadFileForm": {
        "title": "UploadFileForm",
        "required": [
          "files",
          "dir"
        ],
        "type": "object",
        "properties": {
          "files": {
            "title": "Files",
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          },
          "dir": {
            "title": "Dir",
            "type": "string",
            "description": "ファイルの種類別に分類"
          },
          "extension": {
            "title": "Extension",
            "type": "string",
            "description": "ファイルの拡張子別に分類"
          },
          "private": {
            "title": "Private",
            "type": "boolean",
            "description": "GCSプライベートファイル設定",
            "default": false
          }
        }
      },
      "UploadFileJudgeForm": {
        "title": "UploadFileJudgeForm",
        "required": [
          "files"
        ],
        "type": "object",
        "properties": {
          "files": {
            "title": "Files",
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            },
            "description": "事前配置ファイルのリスト"
          },
          "dir": {
            "title": "Dir",
            "type": "string",
            "description": "ファイルの種類別に分類"
          }
        }
      },
      "UserAllSubmissionsOut": {
        "title": "UserAllSubmissionsOut",
        "required": [
          "totalCount",
          "hasNext",
          "hasPrevious",
          "userId",
          "username",
          "submissionList"
        ],
        "type": "object",
        "properties": {
          "totalCount": {
            "title": "Totalcount",
            "type": "integer",
            "description": "総提出数"
          },
          "hasNext": {
            "title": "Hasnext",
            "type": "boolean",
            "description": "次のページがあるか"
          },
          "hasPrevious": {
            "title": "Hasprevious",
            "type": "boolean",
            "description": "前のページがあるか"
          },
          "userId": {
            "title": "Userid",
            "type": "integer",
            "description": "ユーザーID"
          },
          "username": {
            "title": "Username",
            "type": "string",
            "description": "ユーザー名"
          },
          "submissionList": {
            "title": "Submissionlist",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserQuestionResultOut"
            },
            "description": "提出履歴"
          }
        }
      },
      "UserAnswerDetailOut": {
        "title": "UserAnswerDetailOut",
        "required": [
          "id",
          "username",
          "userRealName",
          "submittedAt",
          "isScoringTarget",
          "submittedCode",
          "pgLang",
          "searchResultCount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ユーザーID"
          },
          "username": {
            "title": "Username",
            "type": "string",
            "description": "参加ユーザー名"
          },
          "userRealName": {
            "title": "Userrealname",
            "type": "string",
            "description": "参加者本名"
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足情報",
            "default": ""
          },
          "submittedAt": {
            "title": "Submittedat",
            "type": "string",
            "description": "提出日時",
            "format": "date-time"
          },
          "isScoringTarget": {
            "title": "Isscoringtarget",
            "type": "boolean",
            "description": "成績使用提出か"
          },
          "submittedCode": {
            "title": "Submittedcode",
            "type": "string",
            "description": "提出コード"
          },
          "pgLang": {
            "title": "Pglang",
            "type": "string",
            "description": "提出コード"
          },
          "searchResultCount": {
            "title": "Searchresultcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "指定したキーワードの出現回数"
          }
        },
        "description": "各ユーザー解答"
      },
      "UserAnswerPreferenceOut": {
        "title": "UserAnswerPreferenceOut",
        "required": [
          "challengedTimes",
          "answeredCount",
          "correctCount",
          "highestDifficulty"
        ],
        "type": "object",
        "properties": {
          "challengedTimes": {
            "title": "Challengedtimes",
            "minimum": 0.0,
            "type": "integer",
            "description": "挑戦数"
          },
          "answeredCount": {
            "title": "Answeredcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "解答数"
          },
          "correctCount": {
            "title": "Correctcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "正答数"
          },
          "highestDifficulty": {
            "title": "Highestdifficulty",
            "minimum": 0.0,
            "type": "integer",
            "description": "最高難易度"
          },
          "programmingLanguageStats": {
            "title": "Programminglanguagestats",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgrammingLanguageStats"
            },
            "description": "言語別回答数",
            "default": []
          },
          "isAdmin": {
            "title": "Isadmin",
            "type": "boolean",
            "description": "管理者かどうか",
            "default": false
          },
          "averageCorrectCount": {
            "title": "Averagecorrectcount",
            "minimum": 0.0,
            "type": "number",
            "description": "全体平均正答数",
            "nullable": true
          },
          "averageDifficulty": {
            "title": "Averagedifficulty",
            "minimum": 0.0,
            "type": "number",
            "description": "全体平均難易度",
            "nullable": true
          },
          "skillLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SkillLevel"
              }
            ],
            "description": "スキルレベル",
            "nullable": true
          },
          "highestProDifficulty": {
            "title": "Highestprodifficulty",
            "minimum": 0.0,
            "type": "integer",
            "description": "最高難易度(プロ問題)",
            "default": 0,
            "nullable": true
          },
          "proPassedCount": {
            "title": "Propassedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "合格数(プロ問題)",
            "default": 0,
            "nullable": true
          }
        },
        "description": "解答傾向"
      },
      "UserCareerIn": {
        "title": "UserCareerIn",
        "required": [
          "currentJob",
          "graduationDate",
          "workExperiences"
        ],
        "type": "object",
        "properties": {
          "currentJob": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrentJob"
              }
            ],
            "description": "現在の職業"
          },
          "schoolDivisionId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TechFulSchoolDivision"
              }
            ],
            "description": "学校区分ID,1:大学院(博士), 2:大学院(修士), 3:大学(学士), 4:高等専門学校, 5:短期大学, 6:専門学校, 7:高校, 8:小・中学校, 9:その他",
            "nullable": true
          },
          "schoolName": {
            "title": "Schoolname",
            "maxLength": 128,
            "type": "string",
            "description": "学校名",
            "nullable": true
          },
          "schoolMasterId": {
            "title": "Schoolmasterid",
            "minimum": 1.0,
            "type": "integer",
            "description": "学校マスタID",
            "nullable": true
          },
          "schoolFacultyName": {
            "title": "Schoolfacultyname",
            "maxLength": 128,
            "type": "string",
            "description": "学部名",
            "nullable": true
          },
          "schoolFacultyMasterId": {
            "title": "Schoolfacultymasterid",
            "minimum": 1.0,
            "type": "integer",
            "description": "学部マスタID",
            "nullable": true
          },
          "schoolDepartmentName": {
            "title": "Schooldepartmentname",
            "maxLength": 128,
            "type": "string",
            "description": "学科名",
            "nullable": true
          },
          "schoolDepartmentMasterId": {
            "title": "Schooldepartmentmasterid",
            "minimum": 1.0,
            "type": "integer",
            "description": "学科マスタID",
            "nullable": true
          },
          "graduationDate": {
            "title": "Graduationdate",
            "type": "string",
            "description": "卒業予定・卒業年月",
            "format": "date"
          },
          "studentNumber": {
            "title": "Studentnumber",
            "maxLength": 31,
            "type": "string",
            "description": "学籍番号",
            "nullable": true
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足情報",
            "nullable": true
          },
          "majorCourse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MajorCourse"
              }
            ],
            "description": "専攻の種類(文理区分)",
            "nullable": true
          },
          "workExperiences": {
            "title": "Workexperiences",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkExperienceIn"
            }
          }
        }
      },
      "UserCareerOut": {
        "title": "UserCareerOut",
        "type": "object",
        "properties": {
          "currentJob": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrentJob"
              }
            ],
            "description": "現在の職業",
            "nullable": true
          },
          "schoolDivisionName": {
            "title": "Schooldivisionname",
            "type": "string",
            "description": "学校区分名",
            "nullable": true
          },
          "schoolName": {
            "title": "Schoolname",
            "maxLength": 128,
            "type": "string",
            "description": "学校名",
            "nullable": true
          },
          "schoolMasterDetail": {
            "title": "Schoolmasterdetail",
            "maxLength": 128,
            "type": "string",
            "description": "学校詳細",
            "nullable": true
          },
          "schoolFacultyName": {
            "title": "Schoolfacultyname",
            "maxLength": 128,
            "type": "string",
            "description": "学部名",
            "nullable": true
          },
          "schoolFacultyMasterDetail": {
            "title": "Schoolfacultymasterdetail",
            "maxLength": 128,
            "type": "string",
            "description": "学部詳細",
            "nullable": true
          },
          "schoolDepartmentName": {
            "title": "Schooldepartmentname",
            "maxLength": 128,
            "type": "string",
            "description": "学科名",
            "nullable": true
          },
          "schoolDepartmentMasterDetail": {
            "title": "Schooldepartmentmasterdetail",
            "type": "string",
            "description": "学科詳細",
            "nullable": true
          },
          "graduationDate": {
            "title": "Graduationdate",
            "type": "string",
            "description": "卒業予定・卒業年月",
            "format": "date",
            "nullable": true
          },
          "studentNumber": {
            "title": "Studentnumber",
            "maxLength": 31,
            "type": "string",
            "description": "学籍番号",
            "nullable": true
          },
          "extraInfo": {
            "title": "Extrainfo",
            "type": "string",
            "description": "補足情報",
            "nullable": true
          },
          "majorCourse": {
            "title": "Majorcourse",
            "type": "integer",
            "description": "専攻の種類(文理区分)",
            "nullable": true
          },
          "workExperiences": {
            "title": "Workexperiences",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkExperienceOut"
            },
            "nullable": true
          }
        }
      },
      "UserCodeCheckSubmissionOut": {
        "title": "UserCodeCheckSubmissionOut",
        "required": [
          "id",
          "questionAnswerResult",
          "pgLang",
          "totalScore",
          "sourceCode",
          "submissionDatetime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "QuestionTestResult ID"
          },
          "questionAnswerResult": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionAnswerResult"
              }
            ],
            "description": "結果"
          },
          "pgLang": {
            "title": "Pglang",
            "type": "string",
            "description": "使用言語(name)"
          },
          "totalScore": {
            "title": "Totalscore",
            "type": "integer",
            "description": "スコア"
          },
          "sourceCode": {
            "title": "Sourcecode",
            "type": "string",
            "description": "ソースコード"
          },
          "submissionDatetime": {
            "title": "Submissiondatetime",
            "type": "string",
            "description": "解答日時(QuestionTestResult作成日時)",
            "format": "date-time"
          }
        }
      },
      "UserInfo": {
        "title": "UserInfo",
        "required": [
          "id",
          "username",
          "icon",
          "showChatRoom"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ユーザーID"
          },
          "username": {
            "title": "Username",
            "type": "string",
            "description": "ユーザー名"
          },
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "アイコンURL"
          },
          "chatRoomId": {
            "title": "Chatroomid",
            "minimum": 1.0,
            "type": "integer",
            "description": "チャットルームID",
            "nullable": true
          },
          "showChatRoom": {
            "title": "Showchatroom",
            "type": "boolean",
            "description": "チャットルームを表示するか"
          }
        }
      },
      "UserPortFolioCodeOut": {
        "title": "UserPortFolioCodeOut",
        "required": [
          "questionDetail",
          "userInfo"
        ],
        "type": "object",
        "properties": {
          "codingQuestionResult": {
            "title": "Codingquestionresult",
            "allOf": [
              {
                "$ref": "#/components/schemas/CodingQuestionResultOut"
              }
            ],
            "description": "コーディング、バグ取り、穴埋め問題の合格結果",
            "nullable": true
          },
          "blankQuestionResult": {
            "title": "Blankquestionresult",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionBlankResultOut"
            },
            "description": "空欄問題の合格結果",
            "default": []
          },
          "choiceQuestionResult": {
            "title": "Choicequestionresult",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionChoiceResultOut"
            },
            "description": "選択問題の合格結果",
            "default": []
          },
          "questionDetail": {
            "title": "Questiondetail",
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionDetail"
              }
            ],
            "description": "問題詳細"
          },
          "userInfo": {
            "title": "Userinfo",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserInfo"
              }
            ],
            "description": "ユーザー情報"
          },
          "sessionInfo": {
            "title": "Sessioninfo",
            "allOf": [
              {
                "$ref": "#/components/schemas/SessionInfo"
              }
            ],
            "description": "セッション情報",
            "nullable": true
          }
        }
      },
      "UserPreferredFrameworkListOut": {
        "title": "UserPreferredFrameworkListOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 35,
            "type": "string"
          }
        },
        "description": "得意フレームワーク"
      },
      "UserProfileIn": {
        "title": "UserProfileIn",
        "required": [
          "displayName",
          "lastName",
          "firstName",
          "lastNameKana",
          "firstNameKana",
          "prefectureId",
          "birthday",
          "jobHuntingType",
          "desiredIndustryIds",
          "desiredOccupationIds",
          "desiredPrefectureIds",
          "desiredIntentionalityIds",
          "desiredCompanyScaleIds"
        ],
        "type": "object",
        "properties": {
          "displayName": {
            "title": "Displayname",
            "maxLength": 31,
            "type": "string",
            "description": "表示名"
          },
          "subEmail": {
            "title": "Subemail",
            "maxLength": 254,
            "type": "string",
            "description": "サブメールアドレス",
            "default": ""
          },
          "phoneNumberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberType"
              }
            ],
            "description": "電話番号タイプ",
            "nullable": true
          },
          "phoneNumber": {
            "title": "Phonenumber",
            "maxLength": 11,
            "type": "string",
            "description": "電話番号",
            "nullable": true
          },
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "アイコンURL",
            "default": ""
          },
          "lastName": {
            "title": "Lastname",
            "maxLength": 150,
            "type": "string",
            "description": "姓"
          },
          "firstName": {
            "title": "Firstname",
            "maxLength": 63,
            "type": "string",
            "description": "名"
          },
          "lastNameKana": {
            "title": "Lastnamekana",
            "maxLength": 63,
            "type": "string",
            "description": "姓カナ"
          },
          "firstNameKana": {
            "title": "Firstnamekana",
            "maxLength": 63,
            "type": "string",
            "description": "名カナ"
          },
          "prefectureId": {
            "title": "Prefectureid",
            "minimum": 1.0,
            "type": "integer",
            "description": "都道府県"
          },
          "birthday": {
            "title": "Birthday",
            "type": "string",
            "description": "生年月日",
            "format": "date"
          },
          "currentPostalCode": {
            "title": "Currentpostalcode",
            "maxLength": 7,
            "type": "string",
            "description": "郵便番号",
            "nullable": true
          },
          "currentPrefectureCity": {
            "title": "Currentprefecturecity",
            "maxLength": 100,
            "type": "string",
            "description": "現住所都道府県･市区町村",
            "nullable": true
          },
          "currentAddress1": {
            "title": "Currentaddress1",
            "maxLength": 100,
            "type": "string",
            "description": "現住所市区町村以降の住所",
            "nullable": true
          },
          "currentAddress2": {
            "title": "Currentaddress2",
            "maxLength": 100,
            "type": "string",
            "description": "現住所建物名･部屋番号",
            "nullable": true
          },
          "isSameContactOnVacation": {
            "title": "Issamecontactonvacation",
            "type": "boolean",
            "description": "休暇中連絡先は現住所と同じか",
            "default": false
          },
          "postalCodeOnVacation": {
            "title": "Postalcodeonvacation",
            "maxLength": 7,
            "type": "string",
            "description": "休暇中郵便番号",
            "nullable": true
          },
          "prefectureCityOnVacation": {
            "title": "Prefecturecityonvacation",
            "maxLength": 100,
            "type": "string",
            "description": "休暇中都道府県･市区町村",
            "nullable": true
          },
          "address1OnVacation": {
            "title": "Address1Onvacation",
            "maxLength": 100,
            "type": "string",
            "description": "休暇中市区町村以降の住所",
            "nullable": true
          },
          "address2OnVacation": {
            "title": "Address2Onvacation",
            "maxLength": 100,
            "type": "string",
            "description": "休暇中建物名･部屋番号",
            "nullable": true
          },
          "receiveScouts": {
            "title": "Receivescouts",
            "type": "boolean",
            "description": "スカウトを受け取るか",
            "default": true
          },
          "receiveEmails": {
            "title": "Receiveemails",
            "type": "boolean",
            "description": "メール配信を希望するか",
            "default": true
          },
          "jobHuntingType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobHuntingType"
              }
            ],
            "description": "求職ステータス"
          },
          "jobHuntingStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobHuntingStatus"
              }
            ],
            "description": "就職活動状況",
            "nullable": true
          },
          "jobChangingStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobChangingStatus"
              }
            ],
            "description": "転職活動状況",
            "nullable": true
          },
          "desiredIndustryIds": {
            "title": "Desiredindustryids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "希望業種ID"
          },
          "desiredOccupationIds": {
            "title": "Desiredoccupationids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "希望職種ID"
          },
          "desiredPrefectureIds": {
            "title": "Desiredprefectureids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "希望勤務地ID"
          },
          "desiredIntentionalityIds": {
            "title": "Desiredintentionalityids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "希望志向性ID"
          },
          "desiredCompanyScaleIds": {
            "title": "Desiredcompanyscaleids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "希望企業規模ID"
          }
        }
      },
      "UserProfileOut": {
        "title": "UserProfileOut",
        "required": [
          "username",
          "email",
          "lastName",
          "firstName",
          "lastNameKana",
          "firstNameKana",
          "isEnteredRequiredItems",
          "desiredIndustries",
          "desiredOccupations",
          "desiredPrefectures",
          "desiredIntentionalities",
          "desiredCompanyScales"
        ],
        "type": "object",
        "properties": {
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string",
            "description": "アカウント名"
          },
          "displayName": {
            "title": "Displayname",
            "maxLength": 31,
            "type": "string",
            "description": "表示名",
            "default": ""
          },
          "email": {
            "title": "Email",
            "maxLength": 254,
            "type": "string",
            "description": "メールアドレス"
          },
          "subEmail": {
            "title": "Subemail",
            "maxLength": 254,
            "type": "string",
            "description": "サブメールアドレス",
            "nullable": true
          },
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "アイコン画像URL",
            "nullable": true
          },
          "phoneNumberType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberType"
              }
            ],
            "description": "電話番号タイプ",
            "nullable": true
          },
          "phoneNumber": {
            "title": "Phonenumber",
            "maxLength": 11,
            "type": "string",
            "description": "電話番号",
            "nullable": true
          },
          "lastName": {
            "title": "Lastname",
            "maxLength": 150,
            "type": "string",
            "description": "姓"
          },
          "firstName": {
            "title": "Firstname",
            "maxLength": 63,
            "type": "string",
            "description": "名"
          },
          "lastNameKana": {
            "title": "Lastnamekana",
            "maxLength": 63,
            "type": "string",
            "description": "姓カナ"
          },
          "firstNameKana": {
            "title": "Firstnamekana",
            "maxLength": 63,
            "type": "string",
            "description": "名カナ"
          },
          "prefectureId": {
            "title": "Prefectureid",
            "minimum": 1.0,
            "type": "integer",
            "description": "都道府県",
            "nullable": true
          },
          "birthday": {
            "title": "Birthday",
            "type": "string",
            "description": "生年月日",
            "format": "date",
            "nullable": true
          },
          "currentPostalCode": {
            "title": "Currentpostalcode",
            "maxLength": 7,
            "type": "string",
            "description": "郵便番号",
            "nullable": true
          },
          "currentPrefectureCity": {
            "title": "Currentprefecturecity",
            "maxLength": 100,
            "type": "string",
            "description": "現住所都道府県･市区町村",
            "nullable": true
          },
          "currentAddress1": {
            "title": "Currentaddress1",
            "maxLength": 100,
            "type": "string",
            "description": "現住所市区町村以降の住所",
            "nullable": true
          },
          "currentAddress2": {
            "title": "Currentaddress2",
            "maxLength": 100,
            "type": "string",
            "description": "現住所建物名･部屋番号",
            "nullable": true
          },
          "isSameContactOnVacation": {
            "title": "Issamecontactonvacation",
            "type": "boolean",
            "description": "休暇中連絡先は現住所と同じか",
            "nullable": true
          },
          "postalCodeOnVacation": {
            "title": "Postalcodeonvacation",
            "maxLength": 7,
            "type": "string",
            "description": "休暇中郵便番号",
            "nullable": true
          },
          "prefectureCityOnVacation": {
            "title": "Prefecturecityonvacation",
            "maxLength": 100,
            "type": "string",
            "description": "休暇中都道府県･市区町村",
            "nullable": true
          },
          "address1OnVacation": {
            "title": "Address1Onvacation",
            "maxLength": 100,
            "type": "string",
            "description": "休暇中市区町村以降の住所",
            "nullable": true
          },
          "address2OnVacation": {
            "title": "Address2Onvacation",
            "maxLength": 100,
            "type": "string",
            "description": "休暇中建物名･部屋番号",
            "nullable": true
          },
          "receiveScouts": {
            "title": "Receivescouts",
            "type": "boolean",
            "description": "スカウトを受け取るか",
            "default": true
          },
          "receiveEmails": {
            "title": "Receiveemails",
            "type": "boolean",
            "description": "メール配信を希望するか",
            "default": true
          },
          "jobHuntingType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobHuntingType"
              }
            ],
            "description": "求職ステータス",
            "nullable": true
          },
          "jobHuntingStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobHuntingStatus"
              }
            ],
            "description": "就職活動状況",
            "nullable": true
          },
          "jobChangingStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobChangingStatus"
              }
            ],
            "description": "就職活動状況",
            "nullable": true
          },
          "isEnteredRequiredItems": {
            "title": "Isenteredrequireditems",
            "type": "boolean",
            "description": "必須項目入力済み"
          },
          "desiredIndustries": {
            "title": "Desiredindustries",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndustryGroupDetailOut"
            },
            "description": "希望業種"
          },
          "desiredOccupations": {
            "title": "Desiredoccupations",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__general__users__user_profile_out__OccupationDetailOut"
            },
            "description": "希望職種"
          },
          "desiredPrefectures": {
            "title": "Desiredprefectures",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrefectureDetailOut"
            },
            "description": "希望勤務地"
          },
          "desiredIntentionalities": {
            "title": "Desiredintentionalities",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntentionalityDetailOut"
            },
            "description": "希望志向性"
          },
          "desiredCompanyScales": {
            "title": "Desiredcompanyscales",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyScaleDetailOut"
            },
            "description": "希望企業規模"
          }
        }
      },
      "UserQuestionResultOut": {
        "title": "UserQuestionResultOut",
        "required": [
          "id",
          "contentId",
          "questionTitle",
          "isEventSubmission",
          "contentCategoryName",
          "contentTopicName",
          "difficulty",
          "questionResultStatus",
          "startedAt",
          "contentOrganizationDivision"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "QuestionResult ID"
          },
          "contentId": {
            "title": "Contentid",
            "minimum": 1.0,
            "type": "integer",
            "description": "コンテンツID"
          },
          "questionTitle": {
            "title": "Questiontitle",
            "type": "string",
            "description": "問題名"
          },
          "pgLang": {
            "title": "Pglang",
            "type": "string",
            "description": "言語",
            "nullable": true
          },
          "isEventSubmission": {
            "title": "Iseventsubmission",
            "type": "boolean",
            "description": "イベント問題の提出か"
          },
          "contentCategoryName": {
            "title": "Contentcategoryname",
            "type": "string",
            "description": "カテゴリ名"
          },
          "contentTopicName": {
            "title": "Contenttopicname",
            "type": "string",
            "description": "トピック名"
          },
          "difficulty": {
            "title": "Difficulty",
            "type": "integer",
            "description": "難易度"
          },
          "questionResultStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionResultStatus"
              }
            ],
            "description": "ステータス"
          },
          "startedAt": {
            "title": "Startedat",
            "type": "string",
            "description": "開始日時",
            "format": "date-time"
          },
          "passedAt": {
            "title": "Passedat",
            "type": "string",
            "description": "正解日時",
            "format": "date-time",
            "nullable": true
          },
          "contentOrganizationDivision": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContentOrganizationDivision"
              }
            ],
            "description": "コンテンツの組織区分"
          },
          "sessionId": {
            "title": "Sessionid",
            "type": "integer",
            "description": "セッションID",
            "nullable": true
          },
          "eventName": {
            "title": "Eventname",
            "maxLength": 100,
            "type": "string",
            "description": "イベント名",
            "nullable": true
          }
        }
      },
      "UserResultDetailOut": {
        "title": "UserResultDetailOut",
        "required": [
          "contentId",
          "questionName",
          "questionDifficulty",
          "submitCount",
          "inTargetTime",
          "startAt",
          "answerStatus",
          "score",
          "failedCount"
        ],
        "type": "object",
        "properties": {
          "contentId": {
            "title": "Contentid",
            "type": "integer",
            "description": "コンテンツID"
          },
          "questionName": {
            "title": "Questionname",
            "type": "string",
            "description": "問題名"
          },
          "questionDifficulty": {
            "title": "Questiondifficulty",
            "minimum": 1.0,
            "type": "integer",
            "description": "難易度"
          },
          "submitCount": {
            "title": "Submitcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "提出回数"
          },
          "inTargetTime": {
            "title": "Intargettime",
            "type": "boolean",
            "description": "目標時間内クリアしたか"
          },
          "startAt": {
            "title": "Startat",
            "type": "string",
            "description": "回答開始日時",
            "format": "date-time"
          },
          "answerStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionAnswerResult"
              }
            ],
            "description": "合否ステータス"
          },
          "score": {
            "title": "Score",
            "minimum": 0.0,
            "type": "integer",
            "description": "スコア"
          },
          "failedCount": {
            "title": "Failedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "コンパイルエラー数"
          }
        }
      },
      "UserSkillInfoIn": {
        "title": "UserSkillInfoIn",
        "required": [
          "userPreferredPgLangIds",
          "defaultPgLangId",
          "userPreferredFrameworkIds"
        ],
        "type": "object",
        "properties": {
          "userPreferredPgLangIds": {
            "title": "Userpreferredpglangids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "得意なPG言語ID"
          },
          "defaultPgLangId": {
            "title": "Defaultpglangid",
            "minimum": 1.0,
            "type": "integer",
            "description": "デフォルトPG言語ID"
          },
          "userPreferredFrameworkIds": {
            "title": "Userpreferredframeworkids",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "得意なフレームワークID"
          },
          "englishLevelId": {
            "title": "Englishlevelid",
            "minimum": 1.0,
            "type": "integer",
            "description": "英語レベルID",
            "nullable": true
          },
          "qualification": {
            "title": "Qualification",
            "type": "string",
            "description": "資格取得",
            "nullable": true
          },
          "researchContent": {
            "title": "Researchcontent",
            "maxLength": 300,
            "type": "string",
            "description": "研究内容",
            "nullable": true
          },
          "internExperience": {
            "title": "Internexperience",
            "maxLength": 300,
            "type": "string",
            "description": "インターン経験",
            "nullable": true
          },
          "selfPr": {
            "title": "Selfpr",
            "maxLength": 300,
            "type": "string",
            "description": "自己PR",
            "nullable": true
          },
          "productTitle": {
            "title": "Producttitle",
            "maxLength": 100,
            "type": "string",
            "description": "成果物タイトル",
            "nullable": true
          },
          "productUrl": {
            "title": "Producturl",
            "maxLength": 200,
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "成果物URL",
            "nullable": true
          },
          "productSourceCodeUrl": {
            "title": "Productsourcecodeurl",
            "maxLength": 300,
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "成果物ソースコードURL",
            "nullable": true
          },
          "productImage": {
            "title": "Productimage",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "成果物関連画像",
            "nullable": true
          },
          "productDescription": {
            "title": "Productdescription",
            "maxLength": 300,
            "type": "string",
            "description": "成果物説明",
            "nullable": true
          }
        }
      },
      "UserSkillInfoOut": {
        "title": "UserSkillInfoOut",
        "type": "object",
        "properties": {
          "userPreferredPgLangs": {
            "title": "Userpreferredpglangs",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__general__users__user_skill_info_out__UserPreferredPgLanguageListOut"
            },
            "description": "得意なPG言語",
            "nullable": true
          },
          "defaultPgLangId": {
            "title": "Defaultpglangid",
            "minimum": 1.0,
            "type": "integer",
            "description": "デフォルトPG言語ID",
            "nullable": true
          },
          "userPreferredFrameworks": {
            "title": "Userpreferredframeworks",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPreferredFrameworkListOut"
            },
            "description": "得意なフレームワーク",
            "nullable": true
          },
          "englishLevelId": {
            "title": "Englishlevelid",
            "minimum": 1.0,
            "type": "integer",
            "description": "英語レベルID",
            "nullable": true
          },
          "qualification": {
            "title": "Qualification",
            "type": "string",
            "description": "取得資格",
            "nullable": true
          },
          "researchContent": {
            "title": "Researchcontent",
            "maxLength": 300,
            "type": "string",
            "description": "研究内容",
            "nullable": true
          },
          "internExperience": {
            "title": "Internexperience",
            "maxLength": 300,
            "type": "string",
            "description": "インターン経験",
            "nullable": true
          },
          "selfPr": {
            "title": "Selfpr",
            "maxLength": 300,
            "type": "string",
            "description": "自己PR",
            "nullable": true
          },
          "productTitle": {
            "title": "Producttitle",
            "maxLength": 100,
            "type": "string",
            "description": "成果物タイトル",
            "nullable": true
          },
          "productUrl": {
            "title": "Producturl",
            "maxLength": 200,
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "成果物URL",
            "nullable": true
          },
          "productSourceCodeUrl": {
            "title": "Productsourcecodeurl",
            "maxLength": 300,
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "成果物ソースコードURL",
            "nullable": true
          },
          "productImage": {
            "title": "Productimage",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "成果物関連画像",
            "nullable": true
          },
          "productDescription": {
            "title": "Productdescription",
            "maxLength": 300,
            "type": "string",
            "description": "成果物説明",
            "nullable": true
          }
        }
      },
      "UserType": {
        "title": "UserType",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "description": "ユーザータイプ"
      },
      "UserUsedPgLangs": {
        "title": "UserUsedPgLangs",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "PG言語ID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "名前"
          }
        },
        "description": "使用PG言語\n上位3つまで"
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "errorCode",
          "message",
          "detail"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "title": "Errorcode",
            "type": "string",
            "example": "VALIDATION_ERROR"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "example": "入力値が不正です"
          },
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationErrorDetail"
            }
          }
        }
      },
      "ValidationErrorDetail": {
        "title": "ValidationErrorDetail",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Loc",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Msg",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "type": "string"
          }
        }
      },
      "VerificationCaseResult": {
        "title": "VerificationCaseResult",
        "required": [
          "questionTestCaseId",
          "stdout",
          "judgeStatus",
          "elapsedTime"
        ],
        "type": "object",
        "properties": {
          "questionTestCaseId": {
            "title": "Questiontestcaseid",
            "minimum": 1.0,
            "type": "integer",
            "description": "テストケースID"
          },
          "stdin": {
            "title": "Stdin",
            "type": "string",
            "description": "標準入力",
            "nullable": true
          },
          "expectedStdout": {
            "title": "Expectedstdout",
            "type": "string",
            "description": "想定出力",
            "nullable": true
          },
          "stdout": {
            "title": "Stdout",
            "type": "string",
            "description": "ユーザー出力/エラー出力"
          },
          "judgeStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JudgeStatus"
              }
            ],
            "description": "ジャッジ結果"
          },
          "elapsedTime": {
            "title": "Elapsedtime",
            "minimum": 0.0,
            "type": "number",
            "description": "実行時間(s)"
          }
        }
      },
      "VerifyEmailIn": {
        "title": "VerifyEmailIn",
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          }
        }
      },
      "VideoManualCreateIn": {
        "title": "VideoManualCreateIn",
        "required": [
          "title",
          "fileUrl",
          "target",
          "order"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "fileUrl": {
            "title": "Fileurl",
            "type": "string",
            "description": "動画ファイルURL"
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TargetAudienceType"
              }
            ],
            "description": "チュートリアルタイプ"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順番"
          }
        }
      },
      "VideoManualDetailOut": {
        "title": "VideoManualDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "title",
          "fileUrl",
          "order",
          "target"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日(yyyy年mm月dd日)",
            "format": "date"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "description": "最終更新日(yyyy年mm月dd日)",
            "format": "date"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "fileUrl": {
            "title": "Fileurl",
            "type": "string",
            "description": "動画ファイルURL"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順番"
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TargetAudienceType"
              }
            ],
            "description": "チュートリアルタイプ"
          }
        }
      },
      "VideoManualListOut": {
        "title": "VideoManualListOut",
        "required": [
          "id",
          "createdAt",
          "title",
          "target",
          "order"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日(YYYY.MM.DD)",
            "format": "date"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TargetAudienceType"
              }
            ],
            "description": "チュートリアルタイプ"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順番"
          }
        }
      },
      "VideoManualUpdateIn": {
        "title": "VideoManualUpdateIn",
        "required": [
          "title",
          "fileUrl",
          "target",
          "order"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "fileUrl": {
            "title": "Fileurl",
            "type": "string",
            "description": "動画ファイルURL"
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TargetAudienceType"
              }
            ],
            "description": "チュートリアルタイプ"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順番"
          }
        }
      },
      "VocationalAbilityStatusDetail": {
        "title": "VocationalAbilityStatusDetail",
        "required": [
          "id",
          "item",
          "detail"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VocationalAbilityStatusItem"
              }
            ],
            "description": "項目　",
            "nullable": true
          },
          "detail": {
            "title": "Detail",
            "type": "string",
            "description": "詳細"
          }
        }
      },
      "VocationalAbilityStatusIn": {
        "title": "VocationalAbilityStatusIn",
        "required": [
          "item"
        ],
        "type": "object",
        "properties": {
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VocationalAbilityStatusItem"
              }
            ],
            "description": "職業能力開発・向上に関する状況 | 1:研修の有無及び内容, 2:自己啓発支援の有無及び内容, 3:メンター制度の有無, 4:キャリアコンサルティング制度の有無及び内容, 5:社内検定等の制度の有無及び内容"
          },
          "detail": {
            "title": "Detail",
            "type": "string",
            "description": "職業能力開発・向上に関する状況詳細",
            "default": ""
          }
        }
      },
      "VocationalAbilityStatusItem": {
        "title": "VocationalAbilityStatusItem",
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "職業能力開発・向上に関する状況"
      },
      "VocationalAbilityStatusItemChoicesOut": {
        "title": "VocationalAbilityStatusItemChoicesOut",
        "required": [
          "value",
          "label"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "minimum": 1.0,
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "maxLength": 63,
            "type": "string"
          }
        }
      },
      "VocationalAbilityStatusOut": {
        "title": "VocationalAbilityStatusOut",
        "required": [
          "item",
          "itemLabel"
        ],
        "type": "object",
        "properties": {
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VocationalAbilityStatusItem"
              }
            ],
            "description": "職業能力開発・向上に関する状況 | 1:研修の有無及び内容, 2:自己啓発支援の有無及び内容, 3:メンター制度の有無, 4:キャリアコンサルティング制度の有無及び内容, 5:社内検定等の制度の有無及び内容"
          },
          "itemLabel": {
            "title": "Itemlabel",
            "type": "string",
            "description": "職業能力開発・向上に関する状況ラベル"
          },
          "detail": {
            "title": "Detail",
            "type": "string",
            "description": "職業能力開発・向上に関する状況詳細",
            "default": ""
          }
        }
      },
      "WorkExperienceIn": {
        "title": "WorkExperienceIn",
        "type": "object",
        "properties": {
          "companyName": {
            "title": "Companyname",
            "maxLength": 63,
            "type": "string",
            "description": "企業名",
            "nullable": true
          },
          "department": {
            "title": "Department",
            "maxLength": 63,
            "type": "string",
            "description": "部門･所属･役割",
            "nullable": true
          },
          "occupation": {
            "title": "Occupation",
            "maxLength": 63,
            "type": "string",
            "description": "職種",
            "nullable": true
          },
          "enrollmentPeriodFrom": {
            "title": "Enrollmentperiodfrom",
            "type": "string",
            "description": "在籍期間from(年月のみ使用)",
            "format": "date",
            "nullable": true
          },
          "enrollmentPeriodTo": {
            "title": "Enrollmentperiodto",
            "type": "string",
            "description": "在籍期間to(年月のみ使用)",
            "format": "date",
            "nullable": true
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "概要・PR",
            "nullable": true
          }
        }
      },
      "WorkExperienceOut": {
        "title": "WorkExperienceOut",
        "type": "object",
        "properties": {
          "companyName": {
            "title": "Companyname",
            "maxLength": 63,
            "type": "string",
            "description": "企業名",
            "nullable": true
          },
          "department": {
            "title": "Department",
            "maxLength": 63,
            "type": "string",
            "description": "部門･所属･役割",
            "nullable": true
          },
          "occupation": {
            "title": "Occupation",
            "maxLength": 63,
            "type": "string",
            "description": "職種",
            "nullable": true
          },
          "enrollmentPeriodFrom": {
            "title": "Enrollmentperiodfrom",
            "type": "string",
            "description": "在籍期間from(年月のみ使用)",
            "format": "date",
            "nullable": true
          },
          "enrollmentPeriodTo": {
            "title": "Enrollmentperiodto",
            "type": "string",
            "description": "在籍期間to(年月のみ使用)",
            "format": "date",
            "nullable": true
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "概要・PR",
            "nullable": true
          }
        }
      },
      "WorkingHourDetail": {
        "title": "WorkingHourDetail",
        "required": [
          "id",
          "startsAt",
          "endsAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "startsAt": {
            "title": "Startsat",
            "type": "string",
            "description": "開始時間"
          },
          "endsAt": {
            "title": "Endsat",
            "type": "string",
            "description": "終了時間"
          }
        }
      },
      "WorkingHourOut": {
        "title": "WorkingHourOut",
        "required": [
          "startsAt",
          "endsAt"
        ],
        "type": "object",
        "properties": {
          "startsAt": {
            "title": "Startsat",
            "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]",
            "type": "string",
            "description": "開始時間"
          },
          "endsAt": {
            "title": "Endsat",
            "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]",
            "type": "string",
            "description": "終了時間"
          }
        }
      },
      "app__routers__common__manuals__get_pdf_manual_list__ManualTargetType": {
        "title": "ManualTargetType",
        "enum": [
          "user",
          "school",
          "company"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "app__routers__common__manuals__get_video_manual_list__ManualTargetType": {
        "title": "ManualTargetType",
        "enum": [
          "user",
          "school",
          "company"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "app__routers__general__jobs__get_jobs_list__Ordering": {
        "title": "Ordering",
        "enum": [
          "posting_starts_at",
          "posting_starts_at_desc",
          "favorite_add_at_desc",
          "id_desc"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "app__routers__manage__companies__get_company_list__Ordering": {
        "title": "Ordering",
        "enum": [
          "id",
          "id_desc",
          "created_at",
          "created_at_desc",
          "updated_at",
          "updated_at_desc",
          "name",
          "name_desc",
          "last_login",
          "last_login_desc"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "app__routers__manage__educational_materials__get_educational_material_list__Ordering": {
        "title": "Ordering",
        "enum": [
          "id",
          "id_desc",
          "title",
          "title_desc",
          "created_at",
          "created_at_desc",
          "updated_at",
          "updated_at_desc"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "app__routers__manage__educational_materials__get_educational_material_list_for_event__Ordering": {
        "title": "Ordering",
        "enum": [
          "id",
          "id_desc",
          "difficulty",
          "difficulty_desc"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "app__routers__manage__events__get_event_list__Ordering": {
        "title": "Ordering",
        "enum": [
          "id",
          "id_desc",
          "created_at",
          "created_at_desc",
          "updated_at",
          "updated_at_desc",
          "name",
          "name_desc",
          "host_name",
          "host_name_desc",
          "session_count",
          "session_count_desc",
          "event_user_count",
          "event_user_count_desc"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "app__routers__manage__jobs__get_all_jobs_list__AccessType": {
        "title": "AccessType",
        "enum": [
          "staff",
          "agent"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "app__routers__manage__jobs__get_job_favorite_user_list__AccessType": {
        "title": "AccessType",
        "enum": [
          "staff",
          "agent"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "app__routers__manage__jobs__get_job_scout_user_list__AccessType": {
        "title": "AccessType",
        "enum": [
          "staff",
          "agent"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "app__routers__manage__questions__get_question_list__Ordering": {
        "title": "Ordering",
        "enum": [
          "id",
          "id_desc",
          "created_at",
          "created_at_desc",
          "updated_at",
          "updated_at_desc",
          "title",
          "title_desc"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "app__routers__manage__schools__get_school_list__Ordering": {
        "title": "Ordering",
        "enum": [
          "id",
          "id_desc",
          "created_at",
          "created_at_desc",
          "updated_at",
          "updated_at_desc",
          "name",
          "name_desc",
          "school_type",
          "school_type_desc"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "app__routers__manage__skill_check_users__get_skill_check_users_list__Ordering": {
        "title": "Ordering",
        "enum": [
          "username",
          "username_desc",
          "display_name",
          "display_name_desc",
          "extra_info",
          "extra_info_desc",
          "created_at",
          "created_at_desc"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "app__schemas__common__info__information_detail_out__InformationDetailOut": {
        "title": "InformationDetailOut",
        "required": [
          "id",
          "title",
          "body",
          "createdAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "インフォID"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "body": {
            "title": "Body",
            "type": "string",
            "description": "本文"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日時",
            "format": "date-time"
          }
        }
      },
      "app__schemas__common__manuals__get_pdf_manual_list_out__GetPDFManualListOut": {
        "title": "GetPDFManualListOut",
        "required": [
          "id",
          "order",
          "title",
          "fileUrl"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "order": {
            "title": "Order",
            "minimum": 0.0,
            "type": "integer",
            "description": "並び順"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "fileUrl": {
            "title": "Fileurl",
            "type": "string",
            "description": "ファイルURL"
          }
        },
        "description": "PDFマニュアル一覧取得"
      },
      "app__schemas__common__users__code_check_out__TestCaseResult": {
        "title": "TestCaseResult",
        "required": [
          "testCaseId",
          "title",
          "executionElapsedTime",
          "judgeStatus"
        ],
        "type": "object",
        "properties": {
          "testCaseId": {
            "title": "Testcaseid",
            "type": "integer",
            "description": "テストケースID"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "executionElapsedTime": {
            "title": "Executionelapsedtime",
            "type": "number",
            "description": "実行時間"
          },
          "judgeStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JudgeStatus"
              }
            ],
            "description": "ジャッジステータス"
          }
        }
      },
      "app__schemas__general__jobs__job_detail_out__CompanyDetail": {
        "title": "CompanyDetail",
        "required": [
          "id",
          "name",
          "formalName",
          "logo",
          "image",
          "url",
          "email",
          "address",
          "numOfEmployees",
          "averageAge",
          "establishmentDate",
          "capitalStock",
          "majorShareholder",
          "sales",
          "recruitmentRecord",
          "description",
          "businessDetails",
          "philosophy",
          "representative"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "企業名"
          },
          "formalName": {
            "title": "Formalname",
            "type": "string",
            "description": "企業正式名"
          },
          "logo": {
            "title": "Logo",
            "type": "string",
            "description": "企業ロゴURL"
          },
          "image": {
            "title": "Image",
            "type": "string",
            "description": "企業イメージ写真URL"
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "HPのURL"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "description": "共通メールアドレス"
          },
          "address": {
            "title": "Address",
            "type": "string",
            "description": "住所"
          },
          "numOfEmployees": {
            "title": "Numofemployees",
            "type": "string",
            "description": "従業員数"
          },
          "averageAge": {
            "title": "Averageage",
            "type": "string",
            "description": "従業員平均年齢"
          },
          "establishmentDate": {
            "title": "Establishmentdate",
            "type": "string",
            "description": "会社設立日"
          },
          "capitalStock": {
            "title": "Capitalstock",
            "type": "string",
            "description": "会社資本金"
          },
          "majorShareholder": {
            "title": "Majorshareholder",
            "type": "string",
            "description": "主要株主"
          },
          "sales": {
            "title": "Sales",
            "type": "string",
            "description": "売上"
          },
          "recruitmentRecord": {
            "title": "Recruitmentrecord",
            "type": "string",
            "description": "採用実績"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "企業紹介文"
          },
          "businessDetails": {
            "title": "Businessdetails",
            "type": "string",
            "description": "事業内容"
          },
          "philosophy": {
            "title": "Philosophy",
            "type": "string",
            "description": "企業理念"
          },
          "representative": {
            "title": "Representative",
            "type": "string",
            "description": "代表者名"
          }
        }
      },
      "app__schemas__general__jobs__job_detail_out__FrameworkDetail": {
        "title": "FrameworkDetail",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "名前"
          }
        }
      },
      "app__schemas__general__jobs__job_detail_out__JobDetailOut": {
        "title": "JobDetailOut",
        "required": [
          "id",
          "organization",
          "selectionType",
          "postingStartsAt",
          "postingEndsAt",
          "skillLevel",
          "recruitmentNumbers",
          "passiveSmokingInitiative",
          "employmentStatus",
          "frameworks",
          "graduationYearFrom",
          "graduationYearTo",
          "salarySystem",
          "salaryMin",
          "salaryMax",
          "salaryMemo",
          "workingHourMemo",
          "title",
          "jobImage",
          "jobContent",
          "jobFeatures",
          "target",
          "workLocation",
          "contractPeriod",
          "probation",
          "salaryIncrease",
          "bonus",
          "hasOvertimeWorking",
          "overtimeWorkingDetail",
          "pgLangs",
          "prefectures",
          "holiday",
          "socialInsurance",
          "benefit",
          "trainingSystem",
          "selectionMethod",
          "submittedDocument",
          "contact",
          "companyPr",
          "createdAt",
          "createdBy",
          "updatedAt",
          "updatedBy",
          "isFavorite"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "organization": {
            "title": "Organization",
            "allOf": [
              {
                "$ref": "#/components/schemas/app__schemas__general__jobs__job_detail_out__OrganizationDetail"
              }
            ],
            "description": "組織"
          },
          "selectionType": {
            "title": "Selectiontype",
            "minimum": 0.0,
            "type": "integer",
            "description": "選考種別"
          },
          "postingStartsAt": {
            "title": "Postingstartsat",
            "type": "string",
            "description": "掲載開始日",
            "format": "date",
            "nullable": true
          },
          "postingEndsAt": {
            "title": "Postingendsat",
            "type": "string",
            "description": "掲載終了日",
            "format": "date",
            "nullable": true
          },
          "skillLevel": {
            "title": "Skilllevel",
            "type": "integer",
            "description": "スキルレベル",
            "nullable": true
          },
          "recruitmentNumbers": {
            "title": "Recruitmentnumbers",
            "type": "integer",
            "description": "採用人数",
            "nullable": true
          },
          "passiveSmokingInitiative": {
            "title": "Passivesmokinginitiative",
            "type": "integer",
            "description": "集合場所における受動喫煙防止の取り組み",
            "nullable": true
          },
          "employmentStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmploymentStatus"
              }
            ],
            "description": "雇用形態",
            "nullable": true
          },
          "frameworks": {
            "title": "Frameworks",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__general__jobs__job_detail_out__FrameworkDetail"
            },
            "description": "フレームワーク",
            "nullable": true
          },
          "graduationYearFrom": {
            "title": "Graduationyearfrom",
            "type": "integer",
            "description": "卒業年度開始年",
            "nullable": true
          },
          "graduationYearTo": {
            "title": "Graduationyearto",
            "type": "integer",
            "description": "卒業年度終了年",
            "nullable": true
          },
          "salarySystem": {
            "title": "Salarysystem",
            "type": "integer",
            "description": "給与形態",
            "nullable": true
          },
          "salaryMin": {
            "title": "Salarymin",
            "type": "integer",
            "description": "下限給与額",
            "nullable": true
          },
          "salaryMax": {
            "title": "Salarymax",
            "type": "integer",
            "description": "上限給与額",
            "nullable": true
          },
          "salaryMemo": {
            "title": "Salarymemo",
            "type": "string",
            "description": "給与補足"
          },
          "workingHourMemo": {
            "title": "Workinghourmemo",
            "type": "string",
            "description": "勤務時間補足"
          },
          "title": {
            "title": "Title",
            "maxLength": 63,
            "type": "string",
            "description": "求人タイトル"
          },
          "jobImage": {
            "title": "Jobimage",
            "type": "string",
            "description": "求人トップ画像"
          },
          "jobContent": {
            "title": "Jobcontent",
            "type": "string",
            "description": "仕事内容"
          },
          "jobFeatures": {
            "title": "Jobfeatures",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__general__jobs__job_detail_out__JobFeatureDetail"
            },
            "description": "求人特徴",
            "nullable": true
          },
          "target": {
            "title": "Target",
            "type": "string",
            "description": "対象となる方"
          },
          "workLocation": {
            "title": "Worklocation",
            "type": "string",
            "description": "勤務地"
          },
          "contractPeriod": {
            "title": "Contractperiod",
            "maxLength": 127,
            "type": "string",
            "description": "契約期間"
          },
          "probation": {
            "title": "Probation",
            "type": "integer",
            "description": "試用期間"
          },
          "salaryIncrease": {
            "title": "Salaryincrease",
            "maxLength": 127,
            "type": "string",
            "description": "昇給"
          },
          "bonus": {
            "title": "Bonus",
            "type": "string",
            "description": "賞与"
          },
          "hasOvertimeWorking": {
            "title": "Hasovertimeworking",
            "type": "boolean",
            "description": "時間外勤務があるか"
          },
          "overtimeWorkingDetail": {
            "title": "Overtimeworkingdetail",
            "maxLength": 127,
            "type": "string",
            "description": "時間外勤務詳細"
          },
          "pgLangs": {
            "title": "Pglangs",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__general__jobs__job_detail_out__PgLangDetail"
            },
            "description": "開発言語",
            "nullable": true
          },
          "prefectures": {
            "title": "Prefectures",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__general__jobs__job_detail_out__PrefectureDtail"
            },
            "description": "都道府県",
            "nullable": true
          },
          "holiday": {
            "title": "Holiday",
            "type": "string",
            "description": "休日・休暇"
          },
          "socialInsurance": {
            "title": "Socialinsurance",
            "maxLength": 127,
            "type": "string",
            "description": "社会保険"
          },
          "benefit": {
            "title": "Benefit",
            "type": "string",
            "description": "福利厚生"
          },
          "trainingSystem": {
            "title": "Trainingsystem",
            "type": "string",
            "description": "研修制度"
          },
          "selectionMethod": {
            "title": "Selectionmethod",
            "type": "string",
            "description": "選考方法"
          },
          "submittedDocument": {
            "title": "Submitteddocument",
            "type": "string",
            "description": "提出書類"
          },
          "contact": {
            "title": "Contact",
            "type": "string",
            "description": "問い合わせ先"
          },
          "companyPr": {
            "title": "Companypr",
            "type": "string",
            "description": "企業PR"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日時",
            "format": "date-time"
          },
          "createdBy": {
            "title": "Createdby",
            "maxLength": 180,
            "type": "string",
            "description": "作成者"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "description": "更新日時",
            "format": "date-time"
          },
          "updatedBy": {
            "title": "Updatedby",
            "maxLength": 180,
            "type": "string",
            "description": "更新者"
          },
          "isFavorite": {
            "title": "Isfavorite",
            "type": "boolean",
            "description": "お気に入り済みかどうか"
          }
        }
      },
      "app__schemas__general__jobs__job_detail_out__JobFeatureDetail": {
        "title": "JobFeatureDetail",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "名前"
          }
        }
      },
      "app__schemas__general__jobs__job_detail_out__OrganizationDetail": {
        "title": "OrganizationDetail",
        "required": [
          "id",
          "company"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "company": {
            "title": "Company",
            "allOf": [
              {
                "$ref": "#/components/schemas/app__schemas__general__jobs__job_detail_out__CompanyDetail"
              }
            ],
            "description": "企業"
          }
        }
      },
      "app__schemas__general__jobs__job_detail_out__PgLangDetail": {
        "title": "PgLangDetail",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "名前"
          }
        }
      },
      "app__schemas__general__jobs__job_detail_out__PrefectureDtail": {
        "title": "PrefectureDtail",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "名前"
          }
        }
      },
      "app__schemas__general__questions__get_question_test_case_results_out__ScoreStats": {
        "title": "ScoreStats",
        "required": [
          "basicScore",
          "totalBonusScore",
          "timeBonusScore",
          "totalScore",
          "submissionTimes",
          "elapsedTimeForSolution"
        ],
        "type": "object",
        "properties": {
          "basicScore": {
            "title": "Basicscore",
            "type": "integer",
            "description": "基礎得点"
          },
          "totalBonusScore": {
            "title": "Totalbonusscore",
            "type": "integer",
            "description": "合計タイムボーナス得点"
          },
          "timeBonusScore": {
            "title": "Timebonusscore",
            "type": "integer",
            "description": "タイムボーナス得点"
          },
          "totalScore": {
            "title": "Totalscore",
            "type": "integer",
            "description": "総合得点"
          },
          "submissionTimes": {
            "title": "Submissiontimes",
            "type": "integer",
            "description": "提出回数"
          },
          "elapsedTimeForSolution": {
            "title": "Elapsedtimeforsolution",
            "type": "number",
            "description": "解答時間"
          }
        }
      },
      "app__schemas__general__questions__get_question_test_case_results_out__TestCaseResult": {
        "title": "TestCaseResult",
        "required": [
          "questionTestCaseId",
          "judgeStatus",
          "elapsedTime",
          "stdout"
        ],
        "type": "object",
        "properties": {
          "questionTestCaseId": {
            "title": "Questiontestcaseid",
            "minimum": 1.0,
            "type": "integer",
            "description": "テストケースID"
          },
          "judgeStatus": {
            "title": "Judgestatus",
            "type": "string",
            "description": "ジャッジ結果"
          },
          "elapsedTime": {
            "title": "Elapsedtime",
            "minimum": 0.0,
            "type": "number",
            "description": "実行時間(s)"
          },
          "stdout": {
            "title": "Stdout",
            "type": "string",
            "description": "ユーザー出力/エラー出力",
            "nullable": true
          },
          "stdin": {
            "title": "Stdin",
            "type": "string",
            "description": "標準入力",
            "nullable": true
          },
          "expectedStdout": {
            "title": "Expectedstdout",
            "type": "string",
            "description": "想定出力",
            "nullable": true
          }
        }
      },
      "app__schemas__general__selections__general_get_selections__CompanyDetail": {
        "title": "CompanyDetail",
        "required": [
          "id",
          "name",
          "formalName",
          "logo",
          "image",
          "url",
          "email",
          "address",
          "numOfEmployees",
          "averageAge",
          "establishmentDate",
          "capitalStock",
          "majorShareholder",
          "sales",
          "recruitmentRecord",
          "description",
          "businessDetails",
          "philosophy",
          "representative"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "企業名"
          },
          "formalName": {
            "title": "Formalname",
            "type": "string",
            "description": "企業正式名"
          },
          "logo": {
            "title": "Logo",
            "type": "string",
            "description": "企業ロゴURL"
          },
          "image": {
            "title": "Image",
            "type": "string",
            "description": "企業イメージ写真URL"
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "HPのURL"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "description": "共通メールアドレス"
          },
          "address": {
            "title": "Address",
            "type": "string",
            "description": "住所"
          },
          "numOfEmployees": {
            "title": "Numofemployees",
            "type": "string",
            "description": "従業員数"
          },
          "averageAge": {
            "title": "Averageage",
            "type": "string",
            "description": "従業員平均年齢"
          },
          "establishmentDate": {
            "title": "Establishmentdate",
            "type": "string",
            "description": "会社設立日"
          },
          "capitalStock": {
            "title": "Capitalstock",
            "type": "string",
            "description": "会社資本金"
          },
          "majorShareholder": {
            "title": "Majorshareholder",
            "type": "string",
            "description": "主要株主"
          },
          "sales": {
            "title": "Sales",
            "type": "string",
            "description": "売上"
          },
          "recruitmentRecord": {
            "title": "Recruitmentrecord",
            "type": "string",
            "description": "採用実績"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "企業紹介文"
          },
          "businessDetails": {
            "title": "Businessdetails",
            "type": "string",
            "description": "事業内容"
          },
          "philosophy": {
            "title": "Philosophy",
            "type": "string",
            "description": "企業理念"
          },
          "representative": {
            "title": "Representative",
            "type": "string",
            "description": "代表者名"
          }
        }
      },
      "app__schemas__general__selections__general_get_selections__FrameworkDetail": {
        "title": "FrameworkDetail",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "名前"
          }
        }
      },
      "app__schemas__general__selections__general_get_selections__JobFeatureDetail": {
        "title": "JobFeatureDetail",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "名前"
          }
        }
      },
      "app__schemas__general__selections__general_get_selections__OrganizationDetail": {
        "title": "OrganizationDetail",
        "required": [
          "id",
          "company"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "company": {
            "title": "Company",
            "allOf": [
              {
                "$ref": "#/components/schemas/app__schemas__general__selections__general_get_selections__CompanyDetail"
              }
            ],
            "description": "企業"
          }
        }
      },
      "app__schemas__general__selections__general_get_selections__PgLangDetail": {
        "title": "PgLangDetail",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "名前"
          }
        }
      },
      "app__schemas__general__selections__general_get_selections__PrefectureDtail": {
        "title": "PrefectureDtail",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "名前"
          }
        }
      },
      "app__schemas__general__sessions__general_session_content_list_out__ContentDetailOut": {
        "title": "ContentDetailOut",
        "required": [
          "id",
          "contentCategoryName",
          "contentTopicName",
          "contentDivisionLabel",
          "contentTypeLabel",
          "contentType",
          "title",
          "titleEn",
          "difficulty"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "コンテンツID"
          },
          "contentCategoryName": {
            "title": "Contentcategoryname",
            "maxLength": 63,
            "type": "string"
          },
          "contentTopicName": {
            "title": "Contenttopicname",
            "maxLength": 35,
            "type": "string"
          },
          "contentDivisionLabel": {
            "title": "Contentdivisionlabel",
            "type": "string"
          },
          "contentTypeLabel": {
            "title": "Contenttypelabel",
            "type": "string"
          },
          "contentType": {
            "$ref": "#/components/schemas/ContentType"
          },
          "contentTagNames": {
            "title": "Contenttagnames",
            "maxLength": 62,
            "type": "array",
            "items": {
              "maxLength": 62,
              "type": "string"
            },
            "nullable": true
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string",
            "description": "コンテンツタイトル"
          },
          "titleEn": {
            "title": "Titleen",
            "maxLength": 100,
            "type": "string",
            "description": "英語コンテンツタイトル"
          },
          "difficulty": {
            "title": "Difficulty",
            "type": "integer"
          },
          "question": {
            "title": "ForGeneralUserQuestionContentOut",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ForGeneralUserQuestionContentOut"
              }
            ],
            "nullable": true
          },
          "educationalMaterial": {
            "title": "EducationalMaterialOut",
            "anyOf": [
              {
                "$ref": "#/components/schemas/app__schemas__general__sessions__general_session_content_list_out__EducationalMaterialOut"
              }
            ],
            "nullable": true
          }
        }
      },
      "app__schemas__general__sessions__general_session_content_list_out__EducationalMaterialOut": {
        "title": "EducationalMaterialOut",
        "type": "object",
        "properties": {
          "educationalMaterialTypeLabel": {
            "title": "Educationalmaterialtypelabel",
            "type": "string",
            "nullable": true
          },
          "educationalMaterialType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EducationalMaterialType"
              }
            ],
            "nullable": true
          }
        }
      },
      "app__schemas__general__sessions__general_session_content_list_out__SessionContentListOut": {
        "title": "SessionContentListOut",
        "required": [
          "id",
          "order",
          "content"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "セッションコンテンツID"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順番"
          },
          "content": {
            "$ref": "#/components/schemas/app__schemas__general__sessions__general_session_content_list_out__ContentDetailOut"
          }
        }
      },
      "app__schemas__general__sessions__general_session_detail_out__AvailablePgLanguages": {
        "title": "AvailablePgLanguages",
        "required": [
          "id",
          "name",
          "isSql"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 35,
            "type": "string"
          },
          "isSql": {
            "title": "Issql",
            "type": "boolean"
          }
        },
        "description": "使用可能PG言語"
      },
      "app__schemas__general__sessions__general_session_detail_out__SessionDetailOut": {
        "title": "SessionDetailOut",
        "required": [
          "id",
          "sessionName",
          "startsAt",
          "endsAt",
          "sessionStatus",
          "location",
          "sessionContentCount",
          "numOfQuestionsInRandom",
          "isShortTestSession",
          "isRandomSession",
          "isPracticeSession",
          "isActive",
          "isLockedSession",
          "showRankingForUser",
          "showChallengeStatus",
          "timeLimit",
          "sessionType",
          "sessionCode",
          "password",
          "eventId",
          "eventHostName",
          "eventHostId",
          "eventName",
          "eventTheme",
          "eventPurpose",
          "hasInterview",
          "answerGoogleFormLink",
          "interviewDescription",
          "sessionUserStatus",
          "unreadCount",
          "eventSponsors",
          "availablePgLangs",
          "userStartAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "セッションID"
          },
          "sessionName": {
            "title": "Sessionname",
            "maxLength": 100,
            "type": "string",
            "description": "セッション名"
          },
          "startsAt": {
            "title": "Startsat",
            "type": "string",
            "description": "セッション開始日時",
            "format": "date-time"
          },
          "endsAt": {
            "title": "Endsat",
            "type": "string",
            "description": "セッション終了日時",
            "format": "date-time"
          },
          "sessionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SessionStatus"
              }
            ],
            "description": "セッション開催前/開催中/終了"
          },
          "location": {
            "title": "Location",
            "maxLength": 35,
            "type": "string",
            "description": "開催場所"
          },
          "sessionContentCount": {
            "title": "Sessioncontentcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "問題数"
          },
          "numOfQuestionsInRandom": {
            "title": "Numofquestionsinrandom",
            "minimum": 0.0,
            "type": "integer",
            "description": "ランダム出題数(ランダムセッションの際はこちらを表示)",
            "nullable": true
          },
          "isShortTestSession": {
            "title": "Isshorttestsession",
            "type": "boolean",
            "description": "小テストセッションか",
            "nullable": true
          },
          "isRandomSession": {
            "title": "Israndomsession",
            "type": "boolean",
            "description": "ランダムセッションか",
            "nullable": true
          },
          "isPracticeSession": {
            "title": "Ispracticesession",
            "type": "boolean",
            "description": "練習用セッションか",
            "nullable": true
          },
          "isActive": {
            "title": "Isactive",
            "type": "boolean",
            "description": "公開中かどうか",
            "nullable": true
          },
          "isLockedSession": {
            "title": "Islockedsession",
            "type": "boolean",
            "description": "パスワードをかけるか",
            "nullable": true
          },
          "showRankingForUser": {
            "title": "Showrankingforuser",
            "type": "boolean",
            "description": "ユーザー向けランキング表示有無"
          },
          "showChallengeStatus": {
            "title": "Showchallengestatus",
            "type": "boolean",
            "description": "ユーザーに問題ごとの挑戦状況を表示するか"
          },
          "timeLimit": {
            "title": "Timelimit",
            "type": "integer",
            "description": "試験時間(分)",
            "nullable": true
          },
          "sessionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SessionType"
              }
            ],
            "description": "セッション種別"
          },
          "sessionCode": {
            "title": "Sessioncode",
            "type": "string",
            "description": "セッションコード"
          },
          "password": {
            "title": "Password",
            "type": "string",
            "description": "パスワード"
          },
          "eventId": {
            "title": "Eventid",
            "minimum": 1.0,
            "type": "integer",
            "description": "イベントID"
          },
          "eventHostName": {
            "title": "Eventhostname",
            "type": "string",
            "description": "主催者"
          },
          "eventHostId": {
            "title": "Eventhostid",
            "type": "integer",
            "description": "組織ID"
          },
          "eventName": {
            "title": "Eventname",
            "maxLength": 100,
            "type": "string",
            "description": "イベント名"
          },
          "eventTheme": {
            "title": "Eventtheme",
            "type": "string",
            "description": "イベントテーマ"
          },
          "eventPurpose": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventPurpose"
              }
            ],
            "description": "イベント目的"
          },
          "hasInterview": {
            "title": "Hasinterview",
            "type": "boolean",
            "description": "アンケートを表示有無"
          },
          "answerGoogleFormLink": {
            "title": "Answergoogleformlink",
            "maxLength": 256,
            "type": "string",
            "description": "GoogleForm回答ページURL",
            "nullable": true
          },
          "interviewDescription": {
            "title": "Interviewdescription",
            "type": "string",
            "description": "アンケート説明文",
            "nullable": true
          },
          "sessionUserStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SessionUserStatus"
              }
            ],
            "description": "制限時間付きセッションステータス(解答開始前/解答中/終了/再挑戦中)",
            "nullable": true
          },
          "unreadCount": {
            "title": "Unreadcount",
            "type": "integer",
            "description": "スレッド未読数"
          },
          "eventSponsors": {
            "title": "Eventsponsors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventSponsorObjectOut"
            }
          },
          "availablePgLangs": {
            "title": "Availablepglangs",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__general__sessions__general_session_detail_out__AvailablePgLanguages"
            }
          },
          "userStartAt": {
            "title": "Userstartat",
            "type": "string",
            "description": "タイマー開始時間(JST)",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "app__schemas__general__sessions__get_session_question_test_case_results_out__ScoreStats": {
        "title": "ScoreStats",
        "required": [
          "basicScore",
          "totalBonusScore",
          "timeBonusScore",
          "totalScore",
          "submissionTimes",
          "elapsedTimeForSolution"
        ],
        "type": "object",
        "properties": {
          "basicScore": {
            "title": "Basicscore",
            "type": "integer",
            "description": "基礎得点"
          },
          "totalBonusScore": {
            "title": "Totalbonusscore",
            "type": "integer",
            "description": "合計タイムボーナス得点"
          },
          "timeBonusScore": {
            "title": "Timebonusscore",
            "type": "integer",
            "description": "タイムボーナス得点"
          },
          "totalScore": {
            "title": "Totalscore",
            "type": "integer",
            "description": "総合得点"
          },
          "submissionTimes": {
            "title": "Submissiontimes",
            "type": "integer",
            "description": "提出回数"
          },
          "elapsedTimeForSolution": {
            "title": "Elapsedtimeforsolution",
            "type": "number",
            "description": "解答時間"
          }
        }
      },
      "app__schemas__general__sessions__get_session_question_test_case_results_out__TestCaseResult": {
        "title": "TestCaseResult",
        "required": [
          "questionTestCaseId",
          "judgeStatus",
          "elapsedTime"
        ],
        "type": "object",
        "properties": {
          "questionTestCaseId": {
            "title": "Questiontestcaseid",
            "minimum": 1.0,
            "type": "integer",
            "description": "テストケースID"
          },
          "stdin": {
            "title": "Stdin",
            "type": "string",
            "description": "標準入力",
            "nullable": true
          },
          "expectedStdout": {
            "title": "Expectedstdout",
            "type": "string",
            "description": "想定出力",
            "nullable": true
          },
          "stdout": {
            "title": "Stdout",
            "type": "string",
            "description": "ユーザー出力/エラー出力",
            "nullable": true
          },
          "judgeStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JudgeStatus"
              }
            ],
            "description": "ジャッジ結果"
          },
          "elapsedTime": {
            "title": "Elapsedtime",
            "minimum": 0.0,
            "type": "number",
            "description": "実行時間(s)"
          }
        }
      },
      "app__schemas__general__sessions_techthon__general_sessions_techthon_content_list_out__ContentDetailOut": {
        "title": "ContentDetailOut",
        "required": [
          "id",
          "contentCategoryName",
          "contentTopicName",
          "title",
          "titleEn",
          "missionNumber"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "コンテンツID"
          },
          "contentCategoryName": {
            "title": "Contentcategoryname",
            "maxLength": 63,
            "type": "string",
            "description": "カテゴリ名"
          },
          "contentTopicName": {
            "title": "Contenttopicname",
            "maxLength": 35,
            "type": "string",
            "description": "トピック名"
          },
          "contentTagNames": {
            "title": "Contenttagnames",
            "maxLength": 62,
            "type": "array",
            "items": {
              "maxLength": 62,
              "type": "string"
            },
            "nullable": true
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string",
            "description": "コンテンツタイトル"
          },
          "titleEn": {
            "title": "Titleen",
            "maxLength": 100,
            "type": "string",
            "description": "英語コンテンツタイトル"
          },
          "missionNumber": {
            "title": "Missionnumber",
            "type": "integer",
            "description": "ミッション番号"
          }
        }
      },
      "app__schemas__general__sessions_techthon__general_sessions_techthon_content_out__TechthonContentDetailOut": {
        "title": "TechthonContentDetailOut",
        "required": [
          "id",
          "title",
          "description",
          "missionNumber",
          "judgeResults",
          "testCases"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string",
            "description": "問題タイトル"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "概要(説明)"
          },
          "missionNumber": {
            "title": "Missionnumber",
            "minimum": 1.0,
            "type": "integer",
            "description": "ミッション番号"
          },
          "judgeResults": {
            "title": "Judgeresults",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TechthonJudgeResultOut"
            },
            "description": "採点結果"
          },
          "testCases": {
            "title": "Testcases",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TechthonTestCaseOut"
            },
            "description": "テストケースリスト"
          }
        }
      },
      "app__schemas__general__sessions_techthon__techthon_portfolio_out__TechthonPortfolioOut": {
        "title": "TechthonPortfolioOut",
        "required": [
          "username",
          "displayName",
          "teamName",
          "comment",
          "usedPgLangs",
          "usedFrameworks",
          "totalMiddleWareScore",
          "totalOsScore",
          "totalNetworkScore",
          "totalSecurityScore",
          "totalScore",
          "maxTotalMiddleWareScore",
          "maxTotalOsScore",
          "maxTotalNetworkScore",
          "maxTotalSecurityScore",
          "maxTotalScore"
        ],
        "type": "object",
        "properties": {
          "username": {
            "title": "Username",
            "type": "string",
            "description": "アカウント名"
          },
          "displayName": {
            "title": "Displayname",
            "type": "string",
            "description": "表示名"
          },
          "teamName": {
            "title": "Teamname",
            "type": "string",
            "description": "チーム名(チーム戦の場合のみ)",
            "nullable": true
          },
          "comment": {
            "title": "Comment",
            "type": "string",
            "description": "ユーザコメント"
          },
          "usedPgLangs": {
            "title": "Usedpglangs",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "使用pg言語の名前"
          },
          "usedFrameworks": {
            "title": "Usedframeworks",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "使用フレームワークの名前"
          },
          "totalMiddleWareScore": {
            "title": "Totalmiddlewarescore",
            "minimum": 0.0,
            "type": "integer",
            "description": "合計ミドルウェアスコア"
          },
          "totalOsScore": {
            "title": "Totalosscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "合計OSスコア"
          },
          "totalNetworkScore": {
            "title": "Totalnetworkscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "合計ネットワークスコア"
          },
          "totalSecurityScore": {
            "title": "Totalsecurityscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "合計セキュリティスコア"
          },
          "totalScore": {
            "title": "Totalscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "合計スコア"
          },
          "maxTotalMiddleWareScore": {
            "title": "Maxtotalmiddlewarescore",
            "minimum": 0.0,
            "type": "integer",
            "description": "最大合計ミドルウェアスコア"
          },
          "maxTotalOsScore": {
            "title": "Maxtotalosscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "最大合計OSスコア"
          },
          "maxTotalNetworkScore": {
            "title": "Maxtotalnetworkscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "最大合計ネットワークスコア"
          },
          "maxTotalSecurityScore": {
            "title": "Maxtotalsecurityscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "最大合計セキュリティスコア"
          },
          "maxTotalScore": {
            "title": "Maxtotalscore",
            "minimum": 0.0,
            "type": "integer",
            "description": "最大合計スコア"
          }
        }
      },
      "app__schemas__general__sessions_techthon__techthon_ranking_out__TechthonRankingOut": {
        "title": "TechthonRankingOut",
        "required": [
          "rank",
          "name",
          "score"
        ],
        "type": "object",
        "properties": {
          "rank": {
            "title": "Rank",
            "minimum": 1.0,
            "type": "integer",
            "description": "順位"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "チーム名 or 表示名"
          },
          "score": {
            "title": "Score",
            "minimum": 0.0,
            "type": "integer",
            "description": "スコア"
          }
        }
      },
      "app__schemas__general__users__user_profile_out__OccupationDetailOut": {
        "title": "OccupationDetailOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "職業ID"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string",
            "description": "職業名"
          }
        }
      },
      "app__schemas__general__users__user_skill_info_out__UserPreferredPgLanguageListOut": {
        "title": "UserPreferredPgLanguageListOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 35,
            "type": "string"
          }
        },
        "description": "得意言語"
      },
      "app__schemas__manage__information__information_detail_out__InformationDetailOut": {
        "title": "InformationDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "title",
          "informationTarget",
          "body",
          "isUpdateInfo",
          "isPublished"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string"
          },
          "informationTarget": {
            "$ref": "#/components/schemas/InformationTarget"
          },
          "body": {
            "title": "Body",
            "type": "string"
          },
          "isUpdateInfo": {
            "title": "Isupdateinfo",
            "type": "boolean"
          },
          "isPublished": {
            "title": "Ispublished",
            "type": "boolean"
          }
        }
      },
      "app__schemas__manage__job_users__job_users_list_out__UserListOut": {
        "title": "UserListOut",
        "required": [
          "id",
          "userScoutStatus",
          "createdAt",
          "username",
          "currentPrefectureCity",
          "desiredOccupationName",
          "desiredPrefectureName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ユーザID"
          },
          "chatRoomId": {
            "title": "Chatroomid",
            "minimum": 1.0,
            "type": "integer",
            "description": "チャットルームID",
            "nullable": true
          },
          "userScoutStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferableUserStatus"
              }
            ],
            "description": "スカウト状況(未スカウト/承諾待ち/承諾済み/不承諾/スカウト拒否)"
          },
          "acceptedAt": {
            "title": "Acceptedat",
            "type": "string",
            "description": "スカウト承諾時間",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "本登録時間",
            "format": "date-time"
          },
          "username": {
            "title": "Username",
            "maxLength": 150,
            "type": "string",
            "description": "アカウント名"
          },
          "currentPrefectureCity": {
            "title": "Currentprefecturecity",
            "maxLength": 100,
            "type": "string",
            "description": "現住所の都道府県名"
          },
          "currentJob": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrentJob"
              }
            ],
            "description": "現在の職業",
            "nullable": true
          },
          "schoolDivision": {
            "title": "Schooldivision",
            "type": "string",
            "description": "最終学歴の学校種類",
            "default": ""
          },
          "schoolName": {
            "title": "Schoolname",
            "type": "string",
            "description": "最終学歴の学校名",
            "default": ""
          },
          "schoolDepartmentName": {
            "title": "Schooldepartmentname",
            "type": "string",
            "description": "最終学歴の学科名",
            "default": ""
          },
          "schoolFacultyName": {
            "title": "Schoolfacultyname",
            "type": "string",
            "description": "最終学歴の学部名",
            "default": ""
          },
          "graduationDate": {
            "title": "Graduationdate",
            "type": "string",
            "description": "卒業年",
            "format": "date",
            "nullable": true
          },
          "userSkillLevel": {
            "title": "Userskilllevel",
            "type": "integer",
            "description": "ユーザのスキルレベル",
            "nullable": true
          },
          "desiredOccupationName": {
            "title": "Desiredoccupationname",
            "maxLength": 63,
            "type": "array",
            "items": {
              "maxLength": 63,
              "type": "string"
            },
            "description": "希望職種"
          },
          "desiredPrefectureName": {
            "title": "Desiredprefecturename",
            "maxLength": 35,
            "type": "array",
            "items": {
              "maxLength": 35,
              "type": "string"
            },
            "description": "希望勤務地"
          },
          "memo": {
            "title": "Memo",
            "type": "string",
            "description": "メモ",
            "default": ""
          }
        }
      },
      "app__schemas__manage__jobs__job_access_log_out__UserListOut": {
        "title": "UserListOut",
        "required": [
          "userId",
          "username",
          "lastAccessed"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "title": "Userid",
            "minimum": 1.0,
            "type": "integer",
            "description": "ユーザーID"
          },
          "username": {
            "title": "Username",
            "type": "string",
            "description": "ユーザー名"
          },
          "lastAccessed": {
            "title": "Lastaccessed",
            "type": "string",
            "description": "最終アクセス日",
            "format": "date"
          }
        }
      },
      "app__schemas__manage__jobs__job_detail_out__JobDetailOut": {
        "title": "JobDetailOut",
        "required": [
          "companyName",
          "updatedAt",
          "selectionType",
          "selectionTypeLabel",
          "postingStartsAt",
          "postingEndsAt",
          "employmentStatus",
          "employmentStatusLabel",
          "occupation",
          "passiveSmokingInitiativeLabel",
          "pgLangs",
          "frameworks",
          "skills",
          "jobFeatures",
          "prefectures",
          "salarySystem",
          "salaryMemo",
          "workingHourMemo",
          "title",
          "jobContent",
          "workLocation",
          "contractPeriod",
          "probation",
          "probationLabel",
          "hasOvertimeWorking",
          "holiday",
          "socialInsurance",
          "jobId",
          "jobDraftId",
          "jobDraftIsDeleted"
        ],
        "type": "object",
        "properties": {
          "organizationId": {
            "title": "Organizationid",
            "minimum": 1.0,
            "type": "integer",
            "description": "組織ID",
            "nullable": true
          },
          "companyName": {
            "title": "Companyname",
            "type": "string",
            "description": "会社名"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "description": "更新日時",
            "format": "date-time"
          },
          "selectionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobSelectionType"
              }
            ],
            "description": "選考種別 | 1:エージェント経由, 2:自社選考"
          },
          "selectionTypeLabel": {
            "title": "Selectiontypelabel",
            "type": "string",
            "description": "選考種別ラベル"
          },
          "postingStartsAt": {
            "title": "Postingstartsat",
            "type": "string",
            "description": "掲載開始日",
            "format": "date"
          },
          "postingEndsAt": {
            "title": "Postingendsat",
            "type": "string",
            "description": "掲載終了日",
            "format": "date"
          },
          "employmentStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmploymentStatus"
              }
            ],
            "description": "雇用形態 | 1:正社員, 2:インターン, 3:アルバイト･パート, 4:新卒, 5:契約社員, 6:業務委託, 7:嘱託社員"
          },
          "employmentStatusLabel": {
            "title": "Employmentstatuslabel",
            "type": "string",
            "description": "雇用形態ラベル"
          },
          "graduationYearFrom": {
            "title": "Graduationyearfrom",
            "minimum": 0.0,
            "type": "integer",
            "description": "卒業年度開始年",
            "nullable": true
          },
          "graduationYearTo": {
            "title": "Graduationyearto",
            "minimum": 0.0,
            "type": "integer",
            "description": "卒業年度終了年",
            "nullable": true
          },
          "occupation": {
            "title": "Occupation",
            "allOf": [
              {
                "$ref": "#/components/schemas/OccupationOut"
              }
            ],
            "description": "職種"
          },
          "skillLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SkillLevel"
              }
            ],
            "description": "スキルレベル",
            "nullable": true
          },
          "skillLevelLabel": {
            "title": "Skilllevellabel",
            "type": "string",
            "description": "スキルレベルラベル",
            "default": ""
          },
          "passiveSmokingInitiative": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PassiveSmokingInitiative"
              }
            ],
            "description": "集合場所における受動喫煙防止の取り組み | 1:なし, 2:敷地内禁煙あり, 3:屋内禁煙あり, 4:屋内原則禁煙あり, 5:屋内喫煙可, 6:屋外喫煙可, 7:その他、取り組みあり",
            "nullable": true
          },
          "passiveSmokingInitiativeLabel": {
            "title": "Passivesmokinginitiativelabel",
            "type": "string",
            "description": "集合場所における受動喫煙防止の取り組みラベル"
          },
          "pgLangs": {
            "title": "Pglangs",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PgLangSimpleOut"
            },
            "description": "PG言語"
          },
          "frameworks": {
            "title": "Frameworks",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FrameworkOut"
            },
            "description": "フレームワークID"
          },
          "skills": {
            "title": "Skills",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SkillOut"
            },
            "description": "スキルID"
          },
          "jobFeatures": {
            "title": "Jobfeatures",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobFeatureOut"
            },
            "description": "求人特徴ID"
          },
          "recruitmentNumbers": {
            "title": "Recruitmentnumbers",
            "minimum": 0.0,
            "type": "integer",
            "description": "採用人数",
            "nullable": true
          },
          "prefectures": {
            "title": "Prefectures",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrefectureOut"
            },
            "description": "都道府県"
          },
          "salarySystem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SalarySystem"
              }
            ],
            "description": "給与形態 | 1:年収, 2:月給, 3:時給"
          },
          "salaryMin": {
            "title": "Salarymin",
            "minimum": 0.0,
            "type": "integer",
            "description": "下限給与額",
            "nullable": true
          },
          "salaryMax": {
            "title": "Salarymax",
            "minimum": 0.0,
            "type": "integer",
            "description": "上限給与額",
            "nullable": true
          },
          "salaryMemo": {
            "title": "Salarymemo",
            "type": "string",
            "description": "給与補足"
          },
          "workingHours": {
            "title": "Workinghours",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkingHourOut"
            }
          },
          "workingHourMemo": {
            "title": "Workinghourmemo",
            "type": "string",
            "description": "勤務時間補足"
          },
          "title": {
            "title": "Title",
            "maxLength": 63,
            "type": "string",
            "description": "タイトル"
          },
          "jobImage": {
            "title": "Jobimage",
            "pattern": "(^https?://.+)?$",
            "type": "string",
            "description": "求人トップ画像",
            "default": ""
          },
          "jobContent": {
            "title": "Jobcontent",
            "minLength": 0,
            "type": "string",
            "description": "仕事内容"
          },
          "target": {
            "title": "Target",
            "type": "string",
            "description": "対象となる方",
            "default": ""
          },
          "workLocation": {
            "title": "Worklocation",
            "minLength": 0,
            "type": "string",
            "description": "勤務地"
          },
          "contractPeriod": {
            "title": "Contractperiod",
            "maxLength": 127,
            "minLength": 0,
            "type": "string",
            "description": "契約期間"
          },
          "probation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Probation"
              }
            ],
            "description": "試用期間 | 1:1ヶ月, 2:2ヶ月, 3:3ヶ月, 4:4ヶ月, 5:5ヶ月, 6:6ヶ月"
          },
          "probationLabel": {
            "title": "Probationlabel",
            "type": "string",
            "description": "試用期間ラベル"
          },
          "salaryIncrease": {
            "title": "Salaryincrease",
            "maxLength": 127,
            "type": "string",
            "description": "昇給",
            "default": ""
          },
          "bonus": {
            "title": "Bonus",
            "maxLength": 127,
            "type": "string",
            "description": "賞与",
            "default": ""
          },
          "hasOvertimeWorking": {
            "title": "Hasovertimeworking",
            "type": "boolean",
            "description": "時間外勤務があるか"
          },
          "overtimeWorkingDetail": {
            "title": "Overtimeworkingdetail",
            "maxLength": 127,
            "type": "string",
            "description": "時間外勤務詳細",
            "default": ""
          },
          "holiday": {
            "title": "Holiday",
            "type": "string",
            "description": "休日・休暇"
          },
          "socialInsurance": {
            "title": "Socialinsurance",
            "maxLength": 127,
            "minLength": 0,
            "type": "string",
            "description": "社会保険"
          },
          "benefit": {
            "title": "Benefit",
            "type": "string",
            "description": "福利厚生",
            "default": ""
          },
          "selectionFlows": {
            "title": "Selectionflows",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectionFlowOut"
            },
            "description": "選考フロー"
          },
          "trainingSystem": {
            "title": "Trainingsystem",
            "type": "string",
            "description": "研修制度",
            "default": ""
          },
          "selectionMethod": {
            "title": "Selectionmethod",
            "type": "string",
            "description": "選考方法",
            "default": ""
          },
          "submittedDocument": {
            "title": "Submitteddocument",
            "type": "string",
            "description": "提出書類",
            "default": ""
          },
          "contact": {
            "title": "Contact",
            "type": "string",
            "description": "問い合わせ先",
            "default": ""
          },
          "companyPr": {
            "title": "Companypr",
            "type": "string",
            "description": "企業PR",
            "default": ""
          },
          "recruitmentAndHiringStatuses": {
            "title": "Recruitmentandhiringstatuses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecruitmentAndHiringStatusOut"
            },
            "description": "募集採用に関する状況詳細"
          },
          "vocationalAbilityStatuses": {
            "title": "Vocationalabilitystatuses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VocationalAbilityStatusOut"
            },
            "description": "職業能力開発・向上に関する状況詳細"
          },
          "employmentManagementStatuses": {
            "title": "Employmentmanagementstatuses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmploymentManagementStatusOut"
            },
            "description": "企業における雇用管理に関する状況"
          },
          "jobContents": {
            "title": "Jobcontents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobContentOut"
            },
            "description": "求人オリジナルコンテンツ"
          },
          "jobId": {
            "title": "Jobid",
            "minimum": 1.0,
            "type": "integer",
            "description": "求人ID"
          },
          "jobDraftId": {
            "title": "Jobdraftid",
            "minimum": 1.0,
            "type": "integer",
            "description": "求人下書ID"
          },
          "jobDraftIsDeleted": {
            "title": "Jobdraftisdeleted",
            "type": "boolean",
            "description": "求人下書が削除済みか"
          }
        }
      },
      "app__schemas__manage__manuals__get_pdf_manual_list_out__GetPDFManualListOut": {
        "title": "GetPDFManualListOut",
        "required": [
          "id",
          "title",
          "target",
          "order",
          "isIntegrated",
          "createdAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "タイトル"
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TargetAudienceType"
              }
            ],
            "description": "対象ユーザータイプ"
          },
          "order": {
            "title": "Order",
            "minimum": 0.0,
            "type": "integer",
            "description": "順番"
          },
          "isIntegrated": {
            "title": "Isintegrated",
            "type": "boolean",
            "description": "統合版か"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日(YYYY.MM.DD)",
            "format": "date"
          }
        }
      },
      "app__schemas__manage__occupations__occupation_detail_out__OccupationDetailOut": {
        "title": "OccupationDetailOut",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "order"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "maxLength": 63,
            "type": "string"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer"
          }
        }
      },
      "app__schemas__manage__questions__quastion_create_in__QuestionBlankIn": {
        "title": "QuestionBlankIn",
        "required": [
          "order",
          "title",
          "answer"
        ],
        "type": "object",
        "properties": {
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "maxLength": 63,
            "type": "string",
            "description": "空欄タイトル"
          },
          "answer": {
            "title": "Answer",
            "maxLength": 63,
            "type": "string",
            "description": "答え"
          }
        }
      },
      "app__schemas__manage__questions__quastion_create_in__QuestionChoiceIn": {
        "title": "QuestionChoiceIn",
        "required": [
          "order",
          "isCorrect",
          "text",
          "image"
        ],
        "type": "object",
        "properties": {
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer"
          },
          "isCorrect": {
            "title": "Iscorrect",
            "type": "boolean",
            "description": "正解選択肢"
          },
          "text": {
            "title": "Text",
            "type": "string",
            "description": "表示テキスト"
          },
          "image": {
            "title": "Image",
            "type": "string",
            "description": "選択肢画像"
          }
        }
      },
      "app__schemas__manage__questions__quastion_create_in__QuestionFileIn": {
        "title": "QuestionFileIn",
        "required": [
          "filename",
          "url"
        ],
        "type": "object",
        "properties": {
          "filename": {
            "title": "Filename",
            "maxLength": 100,
            "type": "string"
          },
          "url": {
            "title": "Url",
            "type": "string"
          }
        }
      },
      "app__schemas__manage__questions__quastion_create_in__QuestionTemplateIn": {
        "title": "QuestionTemplateIn",
        "required": [
          "pgLangId"
        ],
        "type": "object",
        "properties": {
          "sourceCode": {
            "title": "Sourcecode",
            "type": "string",
            "description": "ソースコード",
            "nullable": true
          },
          "pgLangId": {
            "title": "Pglangid",
            "minimum": 1.0,
            "type": "integer"
          },
          "questionTemplateInvalidLines": {
            "title": "Questiontemplateinvalidlines",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__manage__questions__quastion_create_in__QuestionTemplateInvalidLineIn"
            },
            "description": "編集不可行",
            "default": []
          }
        }
      },
      "app__schemas__manage__questions__quastion_create_in__QuestionTemplateInvalidLineIn": {
        "title": "QuestionTemplateInvalidLineIn",
        "required": [
          "startLine",
          "endLine"
        ],
        "type": "object",
        "properties": {
          "startLine": {
            "title": "Startline",
            "type": "integer",
            "description": "開始行"
          },
          "endLine": {
            "title": "Endline",
            "type": "integer",
            "description": "終了行"
          }
        }
      },
      "app__schemas__manage__questions__quastion_create_in__TestCaseIn": {
        "title": "TestCaseIn",
        "required": [
          "isSampleCase",
          "order",
          "stdin",
          "stdout"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "maxLength": 31,
            "type": "string",
            "description": "タイトル",
            "default": ""
          },
          "isSampleCase": {
            "title": "Issamplecase",
            "type": "boolean",
            "description": "サンプルケースか"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "説明文",
            "default": ""
          },
          "descriptionEn": {
            "title": "Descriptionen",
            "type": "string",
            "description": "説明英語",
            "default": ""
          },
          "stdin": {
            "title": "Stdin",
            "type": "string",
            "description": "入力値"
          },
          "stdout": {
            "title": "Stdout",
            "type": "string",
            "description": "出力値"
          }
        }
      },
      "app__schemas__manage__questions__question_detail_out__ContentDetailOut": {
        "title": "ContentDetailOut",
        "required": [
          "organizationId",
          "isSharedBetweenSchools"
        ],
        "type": "object",
        "properties": {
          "organizationId": {
            "title": "Organizationid",
            "minimum": 1.0,
            "type": "integer"
          },
          "isSharedBetweenSchools": {
            "title": "Issharedbetweenschools",
            "type": "boolean",
            "description": "学校間で共有するか"
          }
        }
      },
      "app__schemas__manage__questions__question_update_in__QuestionBlankIn": {
        "title": "QuestionBlankIn",
        "required": [
          "order",
          "title",
          "answer"
        ],
        "type": "object",
        "properties": {
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順番"
          },
          "title": {
            "title": "Title",
            "maxLength": 63,
            "type": "string",
            "description": "空欄タイトル"
          },
          "answer": {
            "title": "Answer",
            "maxLength": 63,
            "type": "string",
            "description": "解説"
          }
        }
      },
      "app__schemas__manage__questions__question_update_in__QuestionChoiceIn": {
        "title": "QuestionChoiceIn",
        "required": [
          "order",
          "isCorrect",
          "text",
          "image"
        ],
        "type": "object",
        "properties": {
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順番"
          },
          "isCorrect": {
            "title": "Iscorrect",
            "type": "boolean",
            "description": "正解選択肢"
          },
          "text": {
            "title": "Text",
            "type": "string",
            "description": "表示テキスト"
          },
          "image": {
            "title": "Image",
            "type": "string",
            "description": "選択肢画像"
          }
        }
      },
      "app__schemas__manage__questions__question_update_in__QuestionFileIn": {
        "title": "QuestionFileIn",
        "required": [
          "filename",
          "url"
        ],
        "type": "object",
        "properties": {
          "filename": {
            "title": "Filename",
            "maxLength": 100,
            "type": "string",
            "description": "ファイル名"
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "問題画像URL"
          }
        }
      },
      "app__schemas__manage__questions__question_update_in__QuestionTemplateIn": {
        "title": "QuestionTemplateIn",
        "required": [
          "pgLangId",
          "questionTemplateInvalidLines"
        ],
        "type": "object",
        "properties": {
          "sourceCode": {
            "title": "Sourcecode",
            "type": "string",
            "description": "ソースコード",
            "nullable": true
          },
          "pgLangId": {
            "title": "Pglangid",
            "minimum": 1.0,
            "type": "integer"
          },
          "questionTemplateInvalidLines": {
            "title": "Questiontemplateinvalidlines",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__manage__questions__question_update_in__QuestionTemplateInvalidLineIn"
            }
          }
        }
      },
      "app__schemas__manage__questions__question_update_in__QuestionTemplateInvalidLineIn": {
        "title": "QuestionTemplateInvalidLineIn",
        "required": [
          "startLine",
          "endLine"
        ],
        "type": "object",
        "properties": {
          "startLine": {
            "title": "Startline",
            "type": "integer",
            "description": "開始行"
          },
          "endLine": {
            "title": "Endline",
            "type": "integer",
            "description": "終了行"
          }
        }
      },
      "app__schemas__manage__questions__question_update_in__TestCaseIn": {
        "title": "TestCaseIn",
        "required": [
          "isSampleCase",
          "order",
          "stdin",
          "stdout"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "maxLength": 31,
            "type": "string",
            "description": "タイトル",
            "default": ""
          },
          "isSampleCase": {
            "title": "Issamplecase",
            "type": "boolean",
            "description": "サンプルケースか"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順番"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "説明文",
            "default": ""
          },
          "descriptionEn": {
            "title": "Descriptionen",
            "type": "string",
            "description": "説明英語",
            "default": ""
          },
          "stdin": {
            "title": "Stdin",
            "type": "string",
            "description": "入力値"
          },
          "stdout": {
            "title": "Stdout",
            "type": "string",
            "description": "出力値"
          }
        }
      },
      "app__schemas__manage__selections__selection_list_out__UserPreferredPgLanguageListOut": {
        "title": "UserPreferredPgLanguageListOut",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 35,
            "type": "string"
          }
        },
        "description": "得意言語MAX3個まで"
      },
      "app__schemas__manage__sessions__session_content_list_out__ContentDetailOut": {
        "title": "ContentDetailOut",
        "required": [
          "id",
          "contentCategoryName",
          "contentTopicName",
          "contentDivisionLabel",
          "contentTypeLabel",
          "contentType",
          "title",
          "titleEn",
          "difficulty"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "コンテンツID"
          },
          "contentCategoryName": {
            "title": "Contentcategoryname",
            "maxLength": 63,
            "type": "string"
          },
          "contentTopicName": {
            "title": "Contenttopicname",
            "maxLength": 35,
            "type": "string"
          },
          "contentDivisionLabel": {
            "title": "Contentdivisionlabel",
            "type": "string"
          },
          "contentTypeLabel": {
            "title": "Contenttypelabel",
            "type": "string"
          },
          "contentType": {
            "$ref": "#/components/schemas/ContentType"
          },
          "contentTagNames": {
            "title": "Contenttagnames",
            "maxLength": 62,
            "type": "array",
            "items": {
              "maxLength": 62,
              "type": "string"
            },
            "nullable": true
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string",
            "description": "コンテンツタイトル"
          },
          "titleEn": {
            "title": "Titleen",
            "maxLength": 100,
            "type": "string",
            "description": "英語コンテンツタイトル"
          },
          "difficulty": {
            "title": "Difficulty",
            "type": "integer"
          },
          "question": {
            "title": "QuestionContentOut",
            "anyOf": [
              {
                "$ref": "#/components/schemas/QuestionContentOut"
              }
            ],
            "nullable": true
          },
          "educationalMaterial": {
            "title": "EducationalMaterialOut",
            "anyOf": [
              {
                "$ref": "#/components/schemas/app__schemas__manage__sessions__session_content_list_out__EducationalMaterialOut"
              }
            ],
            "nullable": true
          }
        }
      },
      "app__schemas__manage__sessions__session_content_list_out__EducationalMaterialOut": {
        "title": "EducationalMaterialOut",
        "type": "object",
        "properties": {
          "educationalMaterialTypeLabel": {
            "title": "Educationalmaterialtypelabel",
            "type": "string",
            "nullable": true
          },
          "educationalMaterialType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EducationalMaterialType"
              }
            ],
            "nullable": true
          }
        }
      },
      "app__schemas__manage__sessions__session_content_list_out__SessionContentListOut": {
        "title": "SessionContentListOut",
        "required": [
          "id",
          "order",
          "content"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "order": {
            "title": "Order",
            "minimum": 1.0,
            "type": "integer",
            "description": "順番"
          },
          "content": {
            "$ref": "#/components/schemas/app__schemas__manage__sessions__session_content_list_out__ContentDetailOut"
          }
        }
      },
      "app__schemas__manage__sessions__session_detail_out__AvailablePgLanguages": {
        "title": "AvailablePgLanguages",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "maxLength": 35,
            "type": "string"
          }
        },
        "description": "使用可能PG言語"
      },
      "app__schemas__manage__sessions__session_detail_out__SessionDetailOut": {
        "title": "SessionDetailOut",
        "required": [
          "id",
          "sessionName",
          "eventId",
          "eventName",
          "eventTheme",
          "startsAt",
          "endsAt",
          "sessionUserCount",
          "sessionCode",
          "password",
          "location",
          "isPracticeSession",
          "isActive",
          "sessionContentCount",
          "minGraduationYearOfRestriction",
          "maxGraduationYearOfRestriction",
          "eventHostId",
          "eventHostName",
          "eventSponsors",
          "availablePgLangs",
          "unreadCount",
          "isRandomSession",
          "isShortTestSession",
          "isLockedSession",
          "showRealNameInRanking",
          "showOrganizationInRanking",
          "showDepartmentInRanking",
          "showInfoInRanking",
          "showStudentIdInRanking",
          "showRankingForUser",
          "showChallengeStatus",
          "createdBy",
          "updatedBy",
          "updatedAt",
          "createdAt",
          "isAgreeRecruitRule",
          "timeLimit",
          "numOfQuestionsInRandom",
          "maxNumOfRanking",
          "editGoogleFormLink",
          "interviewDescription",
          "answerGoogleFormLink",
          "hasInterview"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "セッションID"
          },
          "sessionName": {
            "title": "Sessionname",
            "maxLength": 100,
            "type": "string",
            "description": "セッション名"
          },
          "eventId": {
            "title": "Eventid",
            "minimum": 1.0,
            "type": "integer",
            "description": "イベントID"
          },
          "eventName": {
            "title": "Eventname",
            "maxLength": 100,
            "type": "string",
            "description": "イベント名"
          },
          "eventTheme": {
            "title": "Eventtheme",
            "type": "string",
            "description": "イベントテーマ"
          },
          "startsAt": {
            "title": "Startsat",
            "type": "string",
            "description": "セッション開始日時",
            "format": "date-time"
          },
          "endsAt": {
            "title": "Endsat",
            "type": "string",
            "description": "セッション終了日時",
            "format": "date-time"
          },
          "sessionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SessionType"
              }
            ],
            "description": "セッション種別",
            "nullable": true
          },
          "sessionUserCount": {
            "title": "Sessionusercount",
            "type": "integer",
            "description": "参加人数"
          },
          "sessionCode": {
            "title": "Sessioncode",
            "type": "string",
            "description": "セッションコード"
          },
          "password": {
            "title": "Password",
            "type": "string",
            "description": "パスワード"
          },
          "location": {
            "title": "Location",
            "maxLength": 35,
            "type": "string",
            "description": "開催場所"
          },
          "isPracticeSession": {
            "title": "Ispracticesession",
            "type": "boolean",
            "description": "練習用セッションか",
            "nullable": true
          },
          "isActive": {
            "title": "Isactive",
            "type": "boolean",
            "description": "公開中かどうか",
            "nullable": true
          },
          "sessionContentCount": {
            "title": "Sessioncontentcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "問題数"
          },
          "minGraduationYearOfRestriction": {
            "title": "Mingraduationyearofrestriction",
            "type": "integer",
            "description": "制限対象の卒業年度(最小値)",
            "nullable": true
          },
          "maxGraduationYearOfRestriction": {
            "title": "Maxgraduationyearofrestriction",
            "type": "integer",
            "description": "制限対象の卒業年度(最大値)",
            "nullable": true
          },
          "eventHostId": {
            "title": "Eventhostid",
            "type": "integer",
            "description": "組織ID"
          },
          "eventHostName": {
            "title": "Eventhostname",
            "type": "string",
            "description": "主催者"
          },
          "eventSponsors": {
            "title": "Eventsponsors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventSponsorObjectOut"
            }
          },
          "availablePgLangs": {
            "title": "Availablepglangs",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__schemas__manage__sessions__session_detail_out__AvailablePgLanguages"
            }
          },
          "sessionTerm": {
            "title": "SessionTermOut",
            "anyOf": [
              {
                "$ref": "#/components/schemas/SessionTermOut"
              }
            ],
            "nullable": true
          },
          "unreadCount": {
            "title": "Unreadcount",
            "type": "integer",
            "description": "スレッド未読数"
          },
          "isRandomSession": {
            "title": "Israndomsession",
            "type": "boolean",
            "description": "ランダムセッションか",
            "nullable": true
          },
          "isShortTestSession": {
            "title": "Isshorttestsession",
            "type": "boolean",
            "description": "小テストセッションか",
            "nullable": true
          },
          "isLockedSession": {
            "title": "Islockedsession",
            "type": "boolean",
            "description": "パスワード付きセッションか",
            "nullable": true
          },
          "showRealNameInRanking": {
            "title": "Showrealnameinranking",
            "type": "boolean",
            "description": "ランキング実名表示",
            "nullable": true
          },
          "showOrganizationInRanking": {
            "title": "Showorganizationinranking",
            "type": "boolean",
            "description": "ランキング学校/会社表示",
            "nullable": true
          },
          "showDepartmentInRanking": {
            "title": "Showdepartmentinranking",
            "type": "boolean",
            "description": "ランキング学科・学部/部署表示",
            "nullable": true
          },
          "showInfoInRanking": {
            "title": "Showinfoinranking",
            "type": "boolean",
            "description": "ランキング補足情報表示",
            "nullable": true
          },
          "showStudentIdInRanking": {
            "title": "Showstudentidinranking",
            "type": "boolean",
            "description": "ランキング学籍番号表示",
            "nullable": true
          },
          "showRankingForUser": {
            "title": "Showrankingforuser",
            "type": "boolean",
            "description": "ユーザー向けランキング表示有無",
            "nullable": true
          },
          "showChallengeStatus": {
            "title": "Showchallengestatus",
            "type": "boolean",
            "description": "ユーザーに問題ごとの挑戦状況を表示するか",
            "nullable": true
          },
          "createdBy": {
            "title": "Createdby",
            "type": "string",
            "description": "作成者"
          },
          "updatedBy": {
            "title": "Updatedby",
            "type": "string",
            "description": "最終更新者"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "description": "最終更新日",
            "format": "date-time"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "description": "作成日",
            "format": "date-time"
          },
          "isAgreeRecruitRule": {
            "title": "Isagreerecruitrule",
            "type": "boolean",
            "description": "求人紹介規約に同意させるか",
            "nullable": true
          },
          "timeLimit": {
            "title": "Timelimit",
            "minimum": 1.0,
            "type": "integer",
            "description": "試験時間(分)",
            "nullable": true
          },
          "numOfQuestionsInRandom": {
            "title": "Numofquestionsinrandom",
            "minimum": 0.0,
            "type": "integer",
            "description": "ランダム出題数",
            "nullable": true
          },
          "maxNumOfRanking": {
            "title": "Maxnumofranking",
            "minimum": 1.0,
            "type": "integer",
            "description": "何位までランキング表示するか"
          },
          "editGoogleFormLink": {
            "title": "Editgoogleformlink",
            "maxLength": 256,
            "type": "string",
            "description": "GoogleForm編集ページURL"
          },
          "interviewDescription": {
            "title": "Interviewdescription",
            "type": "string",
            "description": "アンケート説明文"
          },
          "answerGoogleFormLink": {
            "title": "Answergoogleformlink",
            "maxLength": 256,
            "type": "string",
            "description": "GoogleForm回答ページURL"
          },
          "hasInterview": {
            "title": "Hasinterview",
            "type": "boolean",
            "description": "アンケートを表示有無",
            "nullable": true
          }
        }
      },
      "app__schemas__manage__sessions__session_portfolio_out__PgLangDetail": {
        "title": "PgLangDetail",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ID"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "名前"
          }
        }
      },
      "app__schemas__manage__sessions__session_portfolio_out__SessionQuestionResultListOut": {
        "title": "SessionQuestionResultListOut",
        "required": [
          "questionResultId",
          "questionTitle",
          "difficulty",
          "submitCount",
          "failedCount",
          "sorcecode",
          "isPassedInTime",
          "casePassedPercent",
          "score"
        ],
        "type": "object",
        "properties": {
          "questionResultId": {
            "title": "Questionresultid",
            "minimum": 1.0,
            "type": "integer",
            "description": "問題成績ID"
          },
          "questionTitle": {
            "title": "Questiontitle",
            "type": "string",
            "description": "問題名"
          },
          "difficulty": {
            "title": "Difficulty",
            "minimum": 1.0,
            "type": "integer",
            "description": "難易度"
          },
          "pgLang": {
            "title": "Pglang",
            "allOf": [
              {
                "$ref": "#/components/schemas/app__schemas__manage__sessions__session_portfolio_out__PgLangDetail"
              }
            ],
            "description": "プログラミング言語",
            "nullable": true
          },
          "submitCount": {
            "title": "Submitcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "提出回数"
          },
          "failedCount": {
            "title": "Failedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "エラー回数"
          },
          "sorcecode": {
            "title": "Sorcecode",
            "minimum": 0.0,
            "type": "integer",
            "description": "コード"
          },
          "isPassedInTime": {
            "title": "Ispassedintime",
            "type": "boolean",
            "description": "目標時間内に合格か"
          },
          "casePassedPercent": {
            "title": "Casepassedpercent",
            "minimum": 0.0,
            "type": "integer",
            "description": "ケース正解率"
          },
          "score": {
            "title": "Score",
            "minimum": 0.0,
            "type": "integer",
            "description": "スコア",
            "nullable": true
          }
        },
        "description": "問題成績"
      },
      "app__schemas__manage__sessions__session_question_result_list_out__SessionQuestionResultListOut": {
        "title": "SessionQuestionResultListOut",
        "required": [
          "sessionQuestionOrder",
          "contentId",
          "questionTitle",
          "questionDifficulty",
          "contentCategoryName",
          "contentTopicName",
          "questionTrialCount",
          "questionPassedCount",
          "questionUserResultList"
        ],
        "type": "object",
        "properties": {
          "sessionQuestionOrder": {
            "title": "Sessionquestionorder",
            "minimum": 1.0,
            "type": "integer",
            "description": "セッション問題の登録順番"
          },
          "contentId": {
            "title": "Contentid",
            "minimum": 1.0,
            "type": "integer",
            "description": "問題ID"
          },
          "questionTitle": {
            "title": "Questiontitle",
            "type": "string",
            "description": "問題名"
          },
          "questionDifficulty": {
            "title": "Questiondifficulty",
            "minimum": 1.0,
            "type": "integer"
          },
          "contentCategoryName": {
            "title": "Contentcategoryname",
            "type": "string"
          },
          "contentTopicName": {
            "title": "Contenttopicname",
            "type": "string"
          },
          "questionTrialCount": {
            "title": "Questiontrialcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "問題挑戦数"
          },
          "questionPassedCount": {
            "title": "Questionpassedcount",
            "minimum": 0.0,
            "type": "integer",
            "description": "問題合格数"
          },
          "questionUserResultList": {
            "title": "Questionuserresultlist",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionUserResultList"
            }
          }
        },
        "description": "問題成績"
      },
      "app__schemas__manage__sessions_techthon__techthon_portfolio_out__TechthonPortfolioOut": {
        "title": "TechthonPortfolioOut",
        "required": [
          "sessionInfo",
          "userInfo",
          "scoreInfo"
        ],
        "type": "object",
        "properties": {
          "sessionInfo": {
            "title": "Sessioninfo",
            "allOf": [
              {
                "$ref": "#/components/schemas/TechthonSessionInfo"
              }
            ],
            "description": "セッション情報"
          },
          "userInfo": {
            "title": "Userinfo",
            "allOf": [
              {
                "$ref": "#/components/schemas/TechthonUserInfo"
              }
            ],
            "description": "ユーザー情報"
          },
          "scoreInfo": {
            "title": "Scoreinfo",
            "allOf": [
              {
                "$ref": "#/components/schemas/TechthonScoreInfo"
              }
            ],
            "description": "スコア情報"
          }
        }
      },
      "app__schemas__manage__sessions_techthon__techthon_ranking_out__TechthonRankingOut": {
        "title": "TechthonRankingOut",
        "required": [
          "id",
          "username",
          "rank"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer",
            "description": "ユーザーID"
          },
          "username": {
            "title": "Username",
            "type": "string",
            "description": "ユーザーネーム"
          },
          "teamName": {
            "title": "Teamname",
            "type": "string",
            "description": "チーム名",
            "nullable": true
          },
          "rank": {
            "title": "Rank",
            "type": "integer",
            "description": "順位"
          },
          "score": {
            "title": "Score",
            "type": "integer",
            "description": "合計スコア",
            "default": 0
          }
        }
      },
      "app__schemas__manage__techthon_questions__techthon_question_out__TechthonContentDetailOut": {
        "title": "TechthonContentDetailOut",
        "required": [
          "id",
          "missionNumber",
          "title",
          "contentTopicId",
          "difficulty",
          "description",
          "documents",
          "testCases",
          "contentCategoryId",
          "contentCategoryName",
          "contentTopicName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "minimum": 1.0,
            "type": "integer"
          },
          "missionNumber": {
            "title": "Missionnumber",
            "minimum": 1.0,
            "type": "integer",
            "description": "ミッション番号"
          },
          "title": {
            "title": "Title",
            "maxLength": 100,
            "type": "string",
            "description": "問題タイトル"
          },
          "contentTopicId": {
            "title": "Contenttopicid",
            "minimum": 1.0,
            "type": "integer",
            "description": "コンテンツトピックID"
          },
          "difficulty": {
            "title": "Difficulty",
            "minimum": 1.0,
            "type": "integer",
            "description": "レベル(難易度)"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "概要(説明)"
          },
          "documents": {
            "title": "Documents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TechthonDocumentBase"
            },
            "description": "問題に登録されている資料"
          },
          "testCases": {
            "title": "Testcases",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TechthonTestCaseBase"
            },
            "description": "テストケースリスト"
          },
          "contentCategoryId": {
            "title": "Contentcategoryid",
            "minimum": 1.0,
            "type": "integer",
            "description": "コンテンツカテゴリID"
          },
          "contentCategoryName": {
            "title": "Contentcategoryname",
            "maxLength": 63,
            "type": "string",
            "description": "コンテンツカテゴリ名"
          },
          "contentTopicName": {
            "title": "Contenttopicname",
            "maxLength": 35,
            "type": "string",
            "description": "コンテンツトピック名"
          },
          "answerStartAt": {
            "title": "Answerstartat",
            "type": "string",
            "description": "開始日時",
            "format": "date-time",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "CustomOAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "common/auth/token"
          }
        }
      },
      "CustomOAuth2PasswordBearerForGuest": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "common/auth/token"
          }
        }
      }
    }
  }
}